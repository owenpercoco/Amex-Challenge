'use strict';
var Vz = Object.create;
var dP = Object.defineProperty;
var Bz = Object.getOwnPropertyDescriptor;
var Wz = Object.getOwnPropertyNames;
var Gz = Object.getPrototypeOf,
  Yz = Object.prototype.hasOwnProperty;
var $ = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports);
var Jz = (e, t, r, n) => {
  if ((t && typeof t == 'object') || typeof t == 'function')
    for (let i of Wz(t))
      !Yz.call(e, i) &&
        i !== r &&
        dP(e, i, {
          get: () => t[i],
          enumerable: !(n = Bz(t, i)) || n.enumerable,
        });
  return e;
};
var Kn = (e, t, r) => (
  (r = e != null ? Vz(Gz(e)) : {}),
  Jz(
    t || !e || !e.__esModule
      ? dP(r, 'default', { value: e, enumerable: !0 })
      : r,
    e,
  )
);
var pP = $((the, hP) => {
  'use strict';
  function Kz(e) {
    var t = new e(),
      r = t;
    function n() {
      var s = t;
      return (
        s.next ? (t = s.next) : ((t = new e()), (r = t)), (s.next = null), s
      );
    }
    function i(s) {
      (r.next = s), (r = s);
    }
    return { get: n, release: i };
  }
  hP.exports = Kz;
});
var yP = $((rhe, A0) => {
  'use strict';
  var Xz = pP();
  function mP(e, t, r) {
    if ((typeof e == 'function' && ((r = t), (t = e), (e = null)), !(r >= 1)))
      throw new Error(
        'fastqueue concurrency must be equal to or greater than 1',
      );
    var n = Xz(Zz),
      i = null,
      s = null,
      o = 0,
      a = null,
      u = {
        push: w,
        drain: Rn,
        saturated: Rn,
        pause: d,
        paused: !1,
        get concurrency() {
          return r;
        },
        set concurrency(j) {
          if (!(j >= 1))
            throw new Error(
              'fastqueue concurrency must be equal to or greater than 1',
            );
          if (((r = j), !u.paused)) for (; i && o < r; ) o++, C();
        },
        running: c,
        resume: v,
        idle: S,
        length: m,
        getQueue: g,
        unshift: T,
        empty: Rn,
        kill: I,
        killAndDrain: x,
        error: E,
      };
    return u;
    function c() {
      return o;
    }
    function d() {
      u.paused = !0;
    }
    function m() {
      for (var j = i, q = 0; j; ) (j = j.next), q++;
      return q;
    }
    function g() {
      for (var j = i, q = []; j; ) q.push(j.value), (j = j.next);
      return q;
    }
    function v() {
      if (u.paused) {
        if (((u.paused = !1), i === null)) {
          o++, C();
          return;
        }
        for (; i && o < r; ) o++, C();
      }
    }
    function S() {
      return o === 0 && u.length() === 0;
    }
    function w(j, q) {
      var O = n.get();
      (O.context = e),
        (O.release = C),
        (O.value = j),
        (O.callback = q || Rn),
        (O.errorHandler = a),
        o >= r || u.paused
          ? s
            ? ((s.next = O), (s = O))
            : ((i = O), (s = O), u.saturated())
          : (o++, t.call(e, O.value, O.worked));
    }
    function T(j, q) {
      var O = n.get();
      (O.context = e),
        (O.release = C),
        (O.value = j),
        (O.callback = q || Rn),
        (O.errorHandler = a),
        o >= r || u.paused
          ? i
            ? ((O.next = i), (i = O))
            : ((i = O), (s = O), u.saturated())
          : (o++, t.call(e, O.value, O.worked));
    }
    function C(j) {
      j && n.release(j);
      var q = i;
      q && o <= r
        ? u.paused
          ? o--
          : (s === i && (s = null),
            (i = q.next),
            (q.next = null),
            t.call(e, q.value, q.worked),
            s === null && u.empty())
        : --o === 0 && u.drain();
    }
    function I() {
      (i = null), (s = null), (u.drain = Rn);
    }
    function x() {
      (i = null), (s = null), u.drain(), (u.drain = Rn);
    }
    function E(j) {
      a = j;
    }
  }
  function Rn() {}
  function Zz() {
    (this.value = null),
      (this.callback = Rn),
      (this.next = null),
      (this.release = Rn),
      (this.context = null),
      (this.errorHandler = null);
    var e = this;
    this.worked = function (r, n) {
      var i = e.callback,
        s = e.errorHandler,
        o = e.value;
      (e.value = null),
        (e.callback = Rn),
        e.errorHandler && s(r, o),
        i.call(e.context, r, n),
        e.release(e);
    };
  }
  function Qz(e, t, r) {
    typeof e == 'function' && ((r = t), (t = e), (e = null));
    function n(d, m) {
      t.call(this, d).then(function (g) {
        m(null, g);
      }, m);
    }
    var i = mP(e, n, r),
      s = i.push,
      o = i.unshift;
    return (i.push = a), (i.unshift = u), (i.drained = c), i;
    function a(d) {
      var m = new Promise(function (g, v) {
        s(d, function (S, w) {
          if (S) {
            v(S);
            return;
          }
          g(w);
        });
      });
      return m.catch(Rn), m;
    }
    function u(d) {
      var m = new Promise(function (g, v) {
        o(d, function (S, w) {
          if (S) {
            v(S);
            return;
          }
          g(w);
        });
      });
      return m.catch(Rn), m;
    }
    function c() {
      if (i.idle())
        return new Promise(function (g) {
          g();
        });
      var d = i.drain,
        m = new Promise(function (g) {
          i.drain = function () {
            d(), g();
          };
        });
      return m;
    }
  }
  A0.exports = mP;
  A0.exports.promise = Qz;
});
var N0 = $((nhe, _p) => {
  'use strict';
  var { format: eU } = require('node:util');
  function tU() {
    return `${this.name} [${this.code}]: ${this.message}`;
  }
  function $0(e, t, r = 500, n = Error) {
    if (!e) throw new Error('Fastify error code must not be empty');
    if (!t) throw new Error('Fastify error message must not be empty');
    (e = e.toUpperCase()), !r && (r = void 0);
    function i(...s) {
      if (!new.target) return new i(...s);
      (this.code = e), (this.name = 'FastifyError'), (this.statusCode = r);
      let o = s.length - 1;
      o !== -1 &&
        s[o] &&
        typeof s[o] == 'object' &&
        'cause' in s[o] &&
        (this.cause = s.pop().cause),
        (this.message = eU(t, ...s)),
        Error.stackTraceLimit !== 0 && Error.captureStackTrace(this, i);
    }
    return (
      (i.prototype = Object.create(n.prototype, {
        constructor: {
          value: i,
          enumerable: !1,
          writable: !0,
          configurable: !0,
        },
      })),
      (i.prototype[Symbol.toStringTag] = 'Error'),
      (i.prototype.toString = tU),
      i
    );
  }
  _p.exports = $0;
  _p.exports.default = $0;
  _p.exports.createError = $0;
});
var wp = $((she, gP) => {
  'use strict';
  var { createError: oo } = N0();
  gP.exports = {
    AVV_ERR_EXPOSE_ALREADY_DEFINED: oo(
      'AVV_ERR_EXPOSE_ALREADY_DEFINED',
      "'%s' is already defined, specify an expose option for '%s'",
    ),
    AVV_ERR_ATTRIBUTE_ALREADY_DEFINED: oo(
      'AVV_ERR_ATTRIBUTE_ALREADY_DEFINED',
      "'%s' is already defined",
    ),
    AVV_ERR_CALLBACK_NOT_FN: oo(
      'AVV_ERR_CALLBACK_NOT_FN',
      "Callback for '%s' hook is not a function. Received: '%s'",
    ),
    AVV_ERR_PLUGIN_NOT_VALID: oo(
      'AVV_ERR_PLUGIN_NOT_VALID',
      "Plugin must be a function or a promise. Received: '%s'",
    ),
    AVV_ERR_ROOT_PLG_BOOTED: oo(
      'AVV_ERR_ROOT_PLG_BOOTED',
      'Root plugin has already booted',
    ),
    AVV_ERR_PARENT_PLG_LOADED: oo(
      'AVV_ERR_PARENT_PLG_LOADED',
      "Impossible to load '%s' plugin because the parent '%s' was already loaded",
    ),
    AVV_ERR_READY_TIMEOUT: oo(
      'AVV_ERR_READY_TIMEOUT',
      "Plugin did not start in time: '%s'. You may have forgotten to call 'done' function or to resolve a Promise",
    ),
    AVV_ERR_PLUGIN_EXEC_TIMEOUT: oo(
      'AVV_ERR_PLUGIN_EXEC_TIMEOUT',
      "Plugin did not start in time: '%s'. You may have forgotten to call 'done' function or to resolve a Promise",
    ),
  };
});
var nu = $((ihe, vP) => {
  'use strict';
  var rU = Symbol('avvio.Boot'),
    nU = Symbol('isOnCloseHandler'),
    sU = Symbol('avvio.ThenifyDoNotWrap'),
    iU = Symbol('avvio.TimeTree.untrackNode'),
    oU = Symbol('avvio.TimeTree.trackNode'),
    aU = Symbol('avvio.TimeTree.getParent'),
    lU = Symbol('avvio.TimeTree.getNode'),
    uU = Symbol('avvio.TimeTree.addNode'),
    cU = Symbol.for('plugin-meta');
  vP.exports = {
    kAvvio: rU,
    kIsOnCloseHandler: nU,
    kThenifyDoNotWrap: sU,
    kUntrackNode: iU,
    kTrackNode: oU,
    kGetParent: aU,
    kGetNode: lU,
    kAddNode: uU,
    kPluginMeta: cU,
  };
});
var TP = $((ohe, RP) => {
  'use strict';
  var {
      kUntrackNode: bP,
      kTrackNode: L0,
      kGetParent: SP,
      kGetNode: _P,
      kAddNode: wP,
    } = nu(),
    D0 = class {
      constructor() {
        (this.root = null),
          (this.tableId = new Map()),
          (this.tableLabel = new Map());
      }
      [L0](t) {
        this.tableId.set(t.id, t),
          this.tableLabel.has(t.label)
            ? this.tableLabel.get(t.label).push(t)
            : this.tableLabel.set(t.label, [t]);
      }
      [bP](t) {
        this.tableId.delete(t.id);
        let r = this.tableLabel.get(t.label);
        r.pop(), r.length === 0 && this.tableLabel.delete(t.label);
      }
      [SP](t) {
        if (t === null) return null;
        if (this.tableLabel.has(t)) {
          let r = this.tableLabel.get(t);
          return r[r.length - 1];
        } else return null;
      }
      [_P](t) {
        return this.tableId.get(t);
      }
      [wP](t, r, n) {
        let i = this[SP](t);
        if (i === null)
          return (
            (this.root = {
              parent: null,
              id: 'root',
              label: r,
              nodes: [],
              start: n,
              stop: null,
              diff: -1,
            }),
            this[L0](this.root),
            this.root.id
          );
        let o = `${r}-${Math.random()}`,
          a = {
            parent: t,
            id: o,
            label: r,
            nodes: [],
            start: n,
            stop: null,
            diff: -1,
          };
        return i.nodes.push(a), this[L0](a), o;
      }
      start(t, r, n = Date.now()) {
        return this[wP](t, r, n);
      }
      stop(t, r = Date.now()) {
        let n = this[_P](t);
        n && ((n.stop = r), (n.diff = n.stop - n.start || 0), this[bP](n));
      }
      toJSON() {
        return Object.assign({}, this.root);
      }
      prettyPrint() {
        return EP(this.toJSON());
      }
    };
  function EP(e, t = '') {
    let r = t,
      n = e.nodes.length,
      i = n - 1;
    r += `${e.label} ${e.diff} ms
`;
    for (let s = 0; s < n; ++s) {
      let o = e.nodes[s],
        a = t + (s === i ? '  ' : '\u2502 ');
      (r += t),
        (r += s === i ? '\u2514\u2500' : '\u251C\u2500'),
        (r += o.nodes.length === 0 ? '\u2500 ' : '\u252C '),
        (r += EP(o, a).slice(t.length + 2));
    }
    return r;
  }
  RP.exports = { TimeTree: D0 };
});
var Ep = $((ahe, PP) => {
  'use strict';
  var { debuglog: fU } = require('node:util'),
    dU = fU('avvio');
  PP.exports = { debug: dU };
});
var xP = $((lhe, kP) => {
  'use strict';
  function hU() {
    let e = { resolve: null, reject: null, promise: null };
    return (
      (e.promise = new Promise((t, r) => {
        (e.resolve = t), (e.reject = r);
      })),
      e
    );
  }
  kP.exports = { createPromise: hU };
});
var OP = $((uhe, CP) => {
  'use strict';
  var { kPluginMeta: j0 } = nu();
  function pU(e, t) {
    return e[j0] && e[j0].name
      ? e[j0].name
      : t && t.name
        ? t.name
        : e.name
          ? e.name
          : e
              .toString()
              .split(
                `
`,
              )
              .slice(0, 2)
              .map((r) => r.trim())
              .join(' -- ');
  }
  CP.exports = { getPluginName: pU };
});
var Rp = $((che, IP) => {
  'use strict';
  function mU(e) {
    return e !== null && typeof e == 'object' && typeof e.then == 'function';
  }
  IP.exports = { isPromiseLike: mU };
});
var $P = $((fhe, AP) => {
  'use strict';
  var { EventEmitter: yU } = require('node:events'),
    { inherits: gU } = require('node:util'),
    { debug: or } = Ep(),
    { createPromise: vU } = xP(),
    { AVV_ERR_PLUGIN_EXEC_TIMEOUT: bU } = wp(),
    { getPluginName: SU } = OP(),
    { isPromiseLike: _U } = Rp();
  function su(e, t, r, n, i) {
    (this.queue = e),
      (this.func = t),
      (this.options = r),
      (this.isAfter = n),
      (this.timeout = i),
      (this.started = !1),
      (this.name = SU(t, r)),
      this.queue.pause(),
      (this._error = null),
      (this.loaded = !1),
      (this._promise = null),
      (this.startTime = null);
  }
  gU(su, yU);
  su.prototype.exec = function (e, t) {
    or('exec', this.name), (this.server = e);
    let r = this.func,
      n = this.name,
      i = !1;
    this.options =
      typeof this.options == 'function'
        ? this.options(this.server)
        : this.options;
    let s = null,
      o = (u) => {
        if (i) {
          or('loading complete', n);
          return;
        }
        (this._error = u),
          or(u ? 'exec errored' : 'exec completed', n),
          (i = !0),
          s && clearTimeout(s),
          t(u);
      };
    this.timeout > 0 &&
      (or('setting up timeout', n, this.timeout),
      (s = setTimeout(function () {
        or('timed out', n), (s = null);
        let u = new bU(n);
        (u.fn = r), o(u);
      }, this.timeout))),
      (this.started = !0),
      (this.startTime = Date.now()),
      this.emit(
        'start',
        this.server ? this.server.name : null,
        this.name,
        Date.now(),
      );
    let a = r(this.server, this.options, o);
    _U(a) &&
      (or('exec: resolving promise', n),
      a.then(
        () => process.nextTick(o),
        (u) => process.nextTick(o, u),
      ));
  };
  su.prototype.loadedSoFar = function () {
    if ((or('loadedSoFar', this.name), this.loaded)) return Promise.resolve();
    let e = () => {
        this.server.after((r, n) => {
          (this._error = r),
            this.queue.pause(),
            this._promise &&
              (r
                ? (or('rejecting promise', this.name, r),
                  this._promise.reject(r))
                : (or('resolving promise', this.name), this._promise.resolve()),
              (this._promise = null)),
            process.nextTick(n, r);
        }),
          this.queue.resume();
      },
      t;
    return (
      this._promise
        ? (t = Promise.resolve())
        : ((this._promise = vU()),
          (t = this._promise.promise),
          this.server ? e() : this.on('start', e)),
      t
    );
  };
  su.prototype.enqueue = function (e, t) {
    or('enqueue', this.name, e.name),
      this.emit(
        'enqueue',
        this.server ? this.server.name : null,
        this.name,
        Date.now(),
      ),
      this.queue.push(e, t);
  };
  su.prototype.finish = function (e, t) {
    or('finish', this.name, e);
    let r = () => {
      this.loaded ||
        (or('loaded', this.name),
        this.emit(
          'loaded',
          this.server ? this.server.name : null,
          this.name,
          Date.now(),
        ),
        (this.loaded = !0),
        t(e));
    };
    if (e) {
      this._promise && (this._promise.reject(e), (this._promise = null)), r();
      return;
    }
    let n = () => {
      if (
        (or(
          'check',
          this.name,
          this.queue.length(),
          this.queue.running(),
          this._promise,
        ),
        this.queue.length() === 0 && this.queue.running() === 0)
      )
        if (this._promise) {
          let i = () => {
            or('wrap'), queueMicrotask(n);
          };
          this._promise.resolve(),
            this._promise.promise.then(i, i),
            (this._promise = null);
        } else r();
      else
        or('delayed', this.name),
          (this.queue.drain = () => {
            or('drain', this.name), (this.queue.drain = wU), queueMicrotask(n);
          });
    };
    queueMicrotask(n), this.queue.resume();
  };
  function wU() {}
  AP.exports = { Plugin: su };
});
var LP = $((dhe, NP) => {
  'use strict';
  var { AVV_ERR_PLUGIN_NOT_VALID: F0 } = wp();
  function EU(e) {
    if (!(e && (typeof e == 'function' || typeof e.then == 'function')))
      throw Array.isArray(e)
        ? new F0('array')
        : e === null
          ? new F0('null')
          : new F0(typeof e);
  }
  NP.exports = { validatePlugin: EU };
});
var jP = $((hhe, DP) => {
  'use strict';
  function RU(e) {
    return e !== null && typeof e == 'object' && typeof e.default == 'function';
  }
  DP.exports = { isBundledOrTypescriptPlugin: RU };
});
var MP = $((phe, qP) => {
  'use strict';
  var { debug: FP } = Ep(),
    { kThenifyDoNotWrap: q0 } = nu();
  function TU() {
    if (this.booted) {
      FP('thenify returning undefined because we are already booted');
      return;
    }
    if (this[q0]) {
      this[q0] = !1;
      return;
    }
    return (
      FP('thenify'),
      (e, t) =>
        this._loadRegistered().then(() => ((this[q0] = !0), e(this._server)), t)
    );
  }
  qP.exports = { thenify: TU };
});
var zP = $((mhe, HP) => {
  'use strict';
  var { isPromiseLike: PU } = Rp(),
    { kAvvio: kU } = nu();
  function xU(e, t, r) {
    let n = e.apply(e, t);
    PU(n) && !n[kU]
      ? n.then(
          () => process.nextTick(r),
          (i) => process.nextTick(r, i),
        )
      : r && process.nextTick(r);
  }
  HP.exports = { executeWithThenable: xU };
});
var KP = $((yhe, H0) => {
  'use strict';
  var Tp = yP(),
    CU = require('node:events').EventEmitter,
    OU = require('node:util').inherits,
    {
      AVV_ERR_EXPOSE_ALREADY_DEFINED: jf,
      AVV_ERR_CALLBACK_NOT_FN: iu,
      AVV_ERR_ROOT_PLG_BOOTED: IU,
      AVV_ERR_READY_TIMEOUT: AU,
      AVV_ERR_ATTRIBUTE_ALREADY_DEFINED: $U,
    } = wp(),
    { kAvvio: BP, kIsOnCloseHandler: WP } = nu(),
    { TimeTree: NU } = TP(),
    { Plugin: GP } = $P(),
    { debug: ou } = Ep(),
    { validatePlugin: LU } = LP(),
    { isBundledOrTypescriptPlugin: DU } = jP(),
    { isPromiseLike: jU } = Rp(),
    { thenify: YP } = MP(),
    { executeWithThenable: UP } = zP();
  function Dt(e, t, r) {
    if (
      (typeof e == 'function' &&
        arguments.length === 1 &&
        ((r = e), (t = {}), (e = null)),
      typeof t == 'function' && ((r = t), (t = {})),
      (t = t || {}),
      (t.autostart = t.autostart !== !1),
      (t.timeout = Number(t.timeout) || 0),
      (t.expose = t.expose || {}),
      !new.target)
    )
      return new Dt(e, t, r);
    (this._server = e || this),
      (this._opts = t),
      e && this._expose(),
      (this._current = []),
      (this._error = null),
      (this._lastUsed = null),
      this.setMaxListeners(0),
      r && this.once('start', r),
      (this.started = !1),
      (this.booted = !1),
      (this.pluginTree = new NU()),
      (this._readyQ = Tp(this, JP, 1)),
      this._readyQ.pause(),
      (this._readyQ.drain = () => {
        this.emit('start'), (this._readyQ.drain = VP);
      }),
      (this._closeQ = Tp(this, qU, 1)),
      this._closeQ.pause(),
      (this._closeQ.drain = () => {
        this.emit('close'), (this._closeQ.drain = VP);
      }),
      (this._doStart = null);
    let n = this;
    (this._root = new GP(
      Tp(this, this._loadPluginNextTick, 1),
      function (s, o, a) {
        (n._doStart = a), o.autostart && n.start();
      },
      t,
      !1,
      0,
    )),
      this._trackPluginLoading(this._root),
      this._loadPlugin(this._root, (i) => {
        ou('root plugin ready');
        try {
          this.emit('preReady'), (this._root = null);
        } catch (s) {
          i = i || this._error || s;
        }
        if (i) {
          if (((this._error = i), this._readyQ.length() === 0)) throw i;
        } else this.booted = !0;
        this._readyQ.resume();
      });
  }
  OU(Dt, CU);
  Dt.prototype.start = function () {
    return (this.started = !0), process.nextTick(this._doStart), this;
  };
  Dt.prototype.override = function (e, t, r) {
    return e;
  };
  Dt.prototype[BP] = !0;
  Dt.prototype.use = function (e, t) {
    return (this._lastUsed = this._addPlugin(e, t, !1)), this;
  };
  Dt.prototype._loadRegistered = function () {
    let e = this._current[0];
    return (
      !this.started &&
        !this.booted &&
        process.nextTick(() => this._root.queue.resume()),
      e ? e.loadedSoFar() : Promise.resolve()
    );
  };
  Object.defineProperty(Dt.prototype, 'then', { get: YP });
  Dt.prototype._addPlugin = function (e, t, r) {
    if ((DU(e) && (e = e.default), LU(e), (t = t || {}), this.booted))
      throw new IU();
    let n = this._current[0],
      i = this._opts.timeout;
    if (!n.loaded && n.timeout > 0) {
      let o = Date.now() - n.startTime;
      i = n.timeout - (o + 3);
    }
    let s = new GP(Tp(this, this._loadPluginNextTick, 1), e, t, r, i);
    if ((this._trackPluginLoading(s), n.loaded))
      throw new Error(s.name, n.name);
    return (
      n.enqueue(s, (o) => {
        o && (this._error = o);
      }),
      s
    );
  };
  Dt.prototype._expose = function () {
    let t = this,
      r = t._server,
      {
        use: n = 'use',
        after: i = 'after',
        ready: s = 'ready',
        onClose: o = 'onClose',
        close: a = 'close',
      } = this._opts.expose;
    if (r[n]) throw new jf(n, 'use');
    if (
      ((r[n] = function (u, c) {
        return t.use(u, c), this;
      }),
      r[i])
    )
      throw new jf(i, 'after');
    if (
      ((r[i] = function (u) {
        return typeof u != 'function'
          ? t._loadRegistered()
          : (t.after(M0(u, this)), this);
      }),
      r[s])
    )
      throw new jf(s, 'ready');
    if (
      ((r[s] = function (u) {
        if (u && typeof u != 'function') throw new iu(s, typeof u);
        return t.ready(u ? M0(u, this) : void 0);
      }),
      r[o])
    )
      throw new jf(o, 'onClose');
    if (
      ((r[o] = function (u) {
        if (typeof u != 'function') throw new iu(o, typeof u);
        return t.onClose(MU(u, this)), this;
      }),
      r[a])
    )
      throw new jf(a, 'close');
    if (
      ((r[a] = function (u) {
        if (u && typeof u != 'function') throw new iu(a, typeof u);
        return u ? (t.close(M0(u, this)), this) : t.close();
      }),
      r.then)
    )
      throw new $U('then');
    Object.defineProperty(r, 'then', { get: YP.bind(t) }), (r[BP] = !0);
  };
  Dt.prototype.after = function (e) {
    if (!e) return this._loadRegistered();
    this._addPlugin(t.bind(this), {}, !0);
    function t(r, n, i) {
      JP.call(this, e, i);
    }
    return this;
  };
  Dt.prototype.onClose = function (e) {
    if (typeof e != 'function') throw new iu('onClose', typeof e);
    return (
      (e[WP] = !0),
      this._closeQ.unshift(e, (t) => {
        t && (this._error = t);
      }),
      this
    );
  };
  Dt.prototype.close = function (e) {
    let t;
    if (e) {
      if (typeof e != 'function') throw new iu('close', typeof e);
    } else
      t = new Promise(function (r, n) {
        e = function (i) {
          if (i) return n(i);
          r();
        };
      });
    return (
      this.ready(() => {
        (this._error = null),
          this._closeQ.push(e),
          process.nextTick(this._closeQ.resume.bind(this._closeQ));
      }),
      t
    );
  };
  Dt.prototype.ready = function (e) {
    if (e) {
      if (typeof e != 'function') throw new iu('ready', typeof e);
      this._readyQ.push(e), queueMicrotask(this.start.bind(this));
      return;
    }
    return new Promise((t, r) => {
      this._readyQ.push(i), this.start();
      let n = this._current[0].server;
      function i(s, o, a) {
        s ? r(s) : t(n), process.nextTick(a);
      }
    });
  };
  Dt.prototype._trackPluginLoading = function (e) {
    let t = this._current[0]?.name || null;
    e.once('start', (r, n, i) => {
      let s = this.pluginTree.start(t || null, n, i);
      e.once('loaded', (o, a, u) => {
        this.pluginTree.stop(s, u);
      });
    });
  };
  Dt.prototype.prettyPrint = function () {
    return this.pluginTree.prettyPrint();
  };
  Dt.prototype.toJSON = function () {
    return this.pluginTree.toJSON();
  };
  Dt.prototype._loadPlugin = function (e, t) {
    let r = this;
    if (jU(e.func)) {
      e.func.then((o) => {
        typeof o.default == 'function' && (o = o.default),
          (e.func = o),
          this._loadPlugin(e, t);
      }, t);
      return;
    }
    let n = r._current[0];
    if ((r._current.unshift(e), r._error && !e.isAfter)) {
      ou(
        'skipping loading of plugin as instance errored and it is not an after',
        e.name,
      ),
        process.nextTick(s);
      return;
    }
    let i = (n && n.server) || r._server;
    if (!e.isAfter)
      try {
        i = r.override(i, e.func, e.options);
      } catch (o) {
        return ou('override errored', e.name), s(o);
      }
    e.exec(i, s);
    function s(o) {
      e.finish(o, (a) => {
        r._current.shift(), t(a);
      });
    }
  };
  Dt.prototype._loadPluginNextTick = function (e, t) {
    process.nextTick(this._loadPlugin.bind(this), e, t);
  };
  function VP() {}
  function JP(e, t) {
    let r = this._server,
      n = this._error;
    if (((this._error = null), e.length === 0)) (this._error = n), UP(e, [], t);
    else if (e.length === 1) UP(e, [n], t);
    else if (this._opts.timeout === 0) {
      let i = (s) => {
        (this._error = s), t(this._error);
      };
      e.length === 2 ? e(n, i) : e(n, r, i);
    } else FU.call(this, e, n, r, t);
  }
  function FU(e, t, r, n) {
    let i = e.name;
    ou('setting up ready timeout', i, this._opts.timeout);
    let s = setTimeout(() => {
      ou('timed out', i), (s = null);
      let a = new AU(i);
      (a.fn = e), (this._error = a), n(a);
    }, this._opts.timeout);
    e.length === 2 ? e(t, o.bind(this)) : e(t, r, o.bind(this));
    function o(a) {
      s && (clearTimeout(s), (this._error = a), n(this._error));
    }
  }
  function qU(e, t) {
    let r = this._server,
      n = e[WP];
    if (e.length === 0 || e.length === 1) {
      let i;
      n ? (i = e(r)) : (i = e(this._error)),
        i && typeof i.then == 'function'
          ? (ou('resolving close/onClose promise'),
            i.then(
              () => process.nextTick(t),
              (s) => process.nextTick(t, s),
            ))
          : process.nextTick(t);
    } else
      e.length === 2
        ? e(n ? r : this._error, t)
        : n
          ? e(r, t)
          : e(this._error, r, t);
  }
  function MU(e, t) {
    return r.bind(t);
    function r(n, i) {
      let s;
      e.length === 0
        ? ((s = e()),
          s && s.then
            ? s.then(function () {
                process.nextTick(i);
              }, i)
            : process.nextTick(i))
        : e.length === 1
          ? ((s = e(this)),
            s && s.then
              ? s.then(function () {
                  process.nextTick(i);
                }, i)
              : process.nextTick(i))
          : e(this, i);
    }
  }
  function M0(e, t) {
    return r.bind(t);
    function r(n, i) {
      let s;
      e
        ? e.length === 0
          ? ((s = e()),
            s && s.then
              ? s.then(function () {
                  process.nextTick(i, n);
                }, i)
              : process.nextTick(i, n))
          : e.length === 1
            ? ((s = e(n)),
              s && s.then
                ? s.then(function () {
                    process.nextTick(i);
                  }, i)
                : process.nextTick(i))
            : e.length === 2
              ? e(n, i)
              : e(n, this, i)
        : process.nextTick(i);
    }
  }
  H0.exports = Dt;
  H0.exports.express = function (e) {
    return Dt(e, { expose: { use: 'load' } });
  };
});
var rr = $((ghe, XP) => {
  'use strict';
  var HU = {
    kAvvioBoot: Symbol('fastify.avvioBoot'),
    kChildren: Symbol('fastify.children'),
    kServerBindings: Symbol('fastify.serverBindings'),
    kBodyLimit: Symbol('fastify.bodyLimit'),
    kRoutePrefix: Symbol('fastify.routePrefix'),
    kLogLevel: Symbol('fastify.logLevel'),
    kLogSerializers: Symbol('fastify.logSerializers'),
    kHooks: Symbol('fastify.hooks'),
    kContentTypeParser: Symbol('fastify.contentTypeParser'),
    kState: Symbol('fastify.state'),
    kOptions: Symbol('fastify.options'),
    kDisableRequestLogging: Symbol('fastify.disableRequestLogging'),
    kPluginNameChain: Symbol('fastify.pluginNameChain'),
    kRouteContext: Symbol('fastify.context'),
    kPublicRouteContext: Symbol('fastify.routeOptions'),
    kGenReqId: Symbol('fastify.genReqId'),
    kSchemaController: Symbol('fastify.schemaController'),
    kSchemaHeaders: Symbol('headers-schema'),
    kSchemaParams: Symbol('params-schema'),
    kSchemaQuerystring: Symbol('querystring-schema'),
    kSchemaBody: Symbol('body-schema'),
    kSchemaResponse: Symbol('response-schema'),
    kSchemaErrorFormatter: Symbol('fastify.schemaErrorFormatter'),
    kSchemaVisited: Symbol('fastify.schemas.visited'),
    kRequest: Symbol('fastify.Request'),
    kRequestPayloadStream: Symbol('fastify.RequestPayloadStream'),
    kRequestAcceptVersion: Symbol('fastify.RequestAcceptVersion'),
    kRequestCacheValidateFns: Symbol('fastify.request.cache.validateFns'),
    kRequestOriginalUrl: Symbol('fastify.request.originalUrl'),
    kFourOhFour: Symbol('fastify.404'),
    kCanSetNotFoundHandler: Symbol('fastify.canSetNotFoundHandler'),
    kFourOhFourLevelInstance: Symbol('fastify.404LogLevelInstance'),
    kFourOhFourContext: Symbol('fastify.404ContextKey'),
    kDefaultJsonParse: Symbol('fastify.defaultJSONParse'),
    kReply: Symbol('fastify.Reply'),
    kReplySerializer: Symbol('fastify.reply.serializer'),
    kReplyIsError: Symbol('fastify.reply.isError'),
    kReplyHeaders: Symbol('fastify.reply.headers'),
    kReplyTrailers: Symbol('fastify.reply.trailers'),
    kReplyHasStatusCode: Symbol('fastify.reply.hasStatusCode'),
    kReplyHijacked: Symbol('fastify.reply.hijacked'),
    kReplyStartTime: Symbol('fastify.reply.startTime'),
    kReplyNextErrorHandler: Symbol('fastify.reply.nextErrorHandler'),
    kReplyEndTime: Symbol('fastify.reply.endTime'),
    kReplyErrorHandlerCalled: Symbol('fastify.reply.errorHandlerCalled'),
    kReplyIsRunningOnErrorHook: Symbol('fastify.reply.isRunningOnErrorHook'),
    kReplySerializerDefault: Symbol('fastify.replySerializerDefault'),
    kReplyCacheSerializeFns: Symbol('fastify.reply.cache.serializeFns'),
    kTestInternals: Symbol('fastify.testInternals'),
    kErrorHandler: Symbol('fastify.errorHandler'),
    kChildLoggerFactory: Symbol('fastify.childLoggerFactory'),
    kHasBeenDecorated: Symbol('fastify.hasBeenDecorated'),
    kKeepAliveConnections: Symbol('fastify.keepAliveConnections'),
    kRouteByFastify: Symbol('fastify.routeByFastify'),
  };
  XP.exports = HU;
});
var V0 = $((vhe, Pp) => {
  'use strict';
  var { format: z0 } = require('node:util');
  function zU(e) {
    return ZP({ ...e, name: 'DeprecationWarning' });
  }
  function ZP({ name: e, code: t, message: r, unlimited: n = !1 } = {}) {
    if (!e) throw new Error('Warning name must not be empty');
    if (!t) throw new Error('Warning code must not be empty');
    if (!r) throw new Error('Warning message must not be empty');
    if (typeof n != 'boolean')
      throw new Error('Warning opts.unlimited must be a boolean');
    t = t.toUpperCase();
    let i = {
      [e]: function (o, a, u) {
        (s.emitted === !0 && s.unlimited !== !0) ||
          ((s.emitted = !0),
          process.emitWarning(s.format(o, a, u), s.name, s.code));
      },
    };
    n &&
      (i = {
        [e]: function (o, a, u) {
          (s.emitted = !0),
            process.emitWarning(s.format(o, a, u), s.name, s.code);
        },
      });
    let s = i[e];
    return (
      (s.emitted = !1),
      (s.message = r),
      (s.unlimited = n),
      (s.code = t),
      (s.format = function (o, a, u) {
        let c;
        return (
          o && a && u
            ? (c = z0(r, o, a, u))
            : o && a
              ? (c = z0(r, o, a))
              : o
                ? (c = z0(r, o))
                : (c = r),
          c
        );
      }),
      s
    );
  }
  var U0 = { createWarning: ZP, createDeprecation: zU };
  Pp.exports = U0;
  Pp.exports.default = U0;
  Pp.exports.processWarning = U0;
});
var Qs = $((bhe, ek) => {
  'use strict';
  var { createDeprecation: ar, createWarning: QP } = V0(),
    UU = ar({
      code: 'FSTDEP005',
      message:
        'You are accessing the deprecated "request.connection" property. Use "request.socket" instead.',
    }),
    VU = ar({
      code: 'FSTDEP006',
      message:
        'You are decorating Request/Reply with a reference type. This reference is shared amongst all requests. Use onRequest hook instead. Property: %s',
    }),
    BU = ar({
      code: 'FSTDEP007',
      message:
        'You are trying to set a HEAD route using "exposeHeadRoute" route flag when a sibling route is already set. See documentation for more info.',
    }),
    WU = ar({
      code: 'FSTDEP008',
      message:
        'You are using route constraints via the route { version: "..." } option, use { constraints: { version: "..." } } option instead.',
    }),
    GU = ar({
      code: 'FSTDEP009',
      message:
        'You are using a custom route versioning strategy via the server { versioning: "..." } option, use { constraints: { version: "..." } } option instead.',
    }),
    YU = ar({
      code: 'FSTDEP010',
      message:
        'Modifying the "reply.sent" property is deprecated. Use the "reply.hijack()" method instead.',
    }),
    JU = ar({
      code: 'FSTDEP011',
      message:
        'Variadic listen method is deprecated. Please use ".listen(optionsObject)" instead. The variadic signature will be removed in `fastify@5`.',
    }),
    KU = ar({
      code: 'FSTDEP012',
      message:
        'request.context property access is deprecated. Please use "request.routeOptions.config" or "request.routeOptions.schema" instead for accessing Route settings. The "request.context" will be removed in `fastify@5`.',
    }),
    XU = ar({
      code: 'FSTDEP013',
      message:
        'Direct return of "trailers" function is deprecated. Please use "callback" or "async-await" for return value. The support of direct return will removed in `fastify@5`.',
    }),
    ZU = ar({
      code: 'FSTDEP014',
      message:
        'You are trying to set/access the default route. This property is deprecated. Please, use setNotFoundHandler if you want to custom a 404 handler or the wildcard (*) to match all routes.',
    }),
    QU = ar({
      code: 'FSTDEP015',
      message:
        'You are accessing the deprecated "request.routeSchema" property. Use "request.routeOptions.schema" instead. Property "req.routeSchema" will be removed in `fastify@5`.',
    }),
    e4 = ar({
      code: 'FSTDEP016',
      message:
        'You are accessing the deprecated "request.routeConfig" property. Use "request.routeOptions.config" instead. Property "req.routeConfig" will be removed in `fastify@5`.',
    }),
    t4 = ar({
      code: 'FSTDEP017',
      message:
        'You are accessing the deprecated "request.routerPath" property. Use "request.routeOptions.url" instead. Property "req.routerPath" will be removed in `fastify@5`.',
    }),
    r4 = ar({
      code: 'FSTDEP018',
      message:
        'You are accessing the deprecated "request.routerMethod" property. Use "request.routeOptions.method" instead. Property "req.routerMethod" will be removed in `fastify@5`.',
    }),
    n4 = ar({
      code: 'FSTDEP019',
      message:
        'reply.context property access is deprecated. Please use "request.routeOptions.config" or "request.routeOptions.schema" instead for accessing Route settings. The "reply.context" will be removed in `fastify@5`.',
    }),
    s4 = ar({
      code: 'FSTDEP020',
      message:
        'You are using the deprecated "reply.getResponseTime()" method. Use the "reply.elapsedTime" property instead. Method "reply.getResponseTime()" will be removed in `fastify@5`.',
    }),
    i4 = ar({
      code: 'FSTDEP021',
      message:
        'The `reply.redirect()` method has a new signature: `reply.redirect(url: string, code?: number)`. It will be enforced in `fastify@v5`',
    }),
    o4 = QP({
      name: 'FastifyWarning',
      code: 'FSTWRN001',
      message:
        'The %s schema for %s: %s is missing. This may indicate the schema is not well specified.',
      unlimited: !0,
    }),
    a4 = QP({
      name: 'FastifyWarning',
      code: 'FSTWRN002',
      message:
        'The %s plugin being registered mixes async and callback styles, which will result in an error in `fastify@5`',
      unlimited: !0,
    });
  ek.exports = {
    FSTDEP005: UU,
    FSTDEP006: VU,
    FSTDEP007: BU,
    FSTDEP008: WU,
    FSTDEP009: GU,
    FSTDEP010: YU,
    FSTDEP011: JU,
    FSTDEP012: KU,
    FSTDEP013: XU,
    FSTDEP014: ZU,
    FSTDEP015: QU,
    FSTDEP016: e4,
    FSTDEP017: t4,
    FSTDEP018: r4,
    FSTDEP019: n4,
    FSTDEP020: s4,
    FSTDEP021: i4,
    FSTWRN001: o4,
    FSTWRN002: a4,
  };
});
var br = $((She, kp) => {
  'use strict';
  var ne = N0(),
    ka = {
      FST_ERR_NOT_FOUND: ne('FST_ERR_NOT_FOUND', 'Not Found', 404),
      FST_ERR_OPTIONS_NOT_OBJ: ne(
        'FST_ERR_OPTIONS_NOT_OBJ',
        'Options must be an object',
        500,
        TypeError,
      ),
      FST_ERR_QSP_NOT_FN: ne(
        'FST_ERR_QSP_NOT_FN',
        "querystringParser option should be a function, instead got '%s'",
        500,
        TypeError,
      ),
      FST_ERR_SCHEMA_CONTROLLER_BUCKET_OPT_NOT_FN: ne(
        'FST_ERR_SCHEMA_CONTROLLER_BUCKET_OPT_NOT_FN',
        "schemaController.bucket option should be a function, instead got '%s'",
        500,
        TypeError,
      ),
      FST_ERR_SCHEMA_ERROR_FORMATTER_NOT_FN: ne(
        'FST_ERR_SCHEMA_ERROR_FORMATTER_NOT_FN',
        "schemaErrorFormatter option should be a non async function. Instead got '%s'.",
        500,
        TypeError,
      ),
      FST_ERR_AJV_CUSTOM_OPTIONS_OPT_NOT_OBJ: ne(
        'FST_ERR_AJV_CUSTOM_OPTIONS_OPT_NOT_OBJ',
        "ajv.customOptions option should be an object, instead got '%s'",
        500,
        TypeError,
      ),
      FST_ERR_AJV_CUSTOM_OPTIONS_OPT_NOT_ARR: ne(
        'FST_ERR_AJV_CUSTOM_OPTIONS_OPT_NOT_ARR',
        "ajv.plugins option should be an array, instead got '%s'",
        500,
        TypeError,
      ),
      FST_ERR_VERSION_CONSTRAINT_NOT_STR: ne(
        'FST_ERR_VERSION_CONSTRAINT_NOT_STR',
        'Version constraint should be a string.',
        500,
        TypeError,
      ),
      FST_ERR_VALIDATION: ne('FST_ERR_VALIDATION', '%s', 400),
      FST_ERR_LISTEN_OPTIONS_INVALID: ne(
        'FST_ERR_LISTEN_OPTIONS_INVALID',
        "Invalid listen options: '%s'",
        500,
        TypeError,
      ),
      FST_ERR_ERROR_HANDLER_NOT_FN: ne(
        'FST_ERR_ERROR_HANDLER_NOT_FN',
        'Error Handler must be a function',
        500,
        TypeError,
      ),
      FST_ERR_CTP_ALREADY_PRESENT: ne(
        'FST_ERR_CTP_ALREADY_PRESENT',
        "Content type parser '%s' already present.",
      ),
      FST_ERR_CTP_INVALID_TYPE: ne(
        'FST_ERR_CTP_INVALID_TYPE',
        'The content type should be a string or a RegExp',
        500,
        TypeError,
      ),
      FST_ERR_CTP_EMPTY_TYPE: ne(
        'FST_ERR_CTP_EMPTY_TYPE',
        'The content type cannot be an empty string',
        500,
        TypeError,
      ),
      FST_ERR_CTP_INVALID_HANDLER: ne(
        'FST_ERR_CTP_INVALID_HANDLER',
        'The content type handler should be a function',
        500,
        TypeError,
      ),
      FST_ERR_CTP_INVALID_PARSE_TYPE: ne(
        'FST_ERR_CTP_INVALID_PARSE_TYPE',
        "The body parser can only parse your data as 'string' or 'buffer', you asked '%s' which is not supported.",
        500,
        TypeError,
      ),
      FST_ERR_CTP_BODY_TOO_LARGE: ne(
        'FST_ERR_CTP_BODY_TOO_LARGE',
        'Request body is too large',
        413,
        RangeError,
      ),
      FST_ERR_CTP_INVALID_MEDIA_TYPE: ne(
        'FST_ERR_CTP_INVALID_MEDIA_TYPE',
        'Unsupported Media Type: %s',
        415,
      ),
      FST_ERR_CTP_INVALID_CONTENT_LENGTH: ne(
        'FST_ERR_CTP_INVALID_CONTENT_LENGTH',
        'Request body size did not match Content-Length',
        400,
        RangeError,
      ),
      FST_ERR_CTP_EMPTY_JSON_BODY: ne(
        'FST_ERR_CTP_EMPTY_JSON_BODY',
        "Body cannot be empty when content-type is set to 'application/json'",
        400,
      ),
      FST_ERR_CTP_INSTANCE_ALREADY_STARTED: ne(
        'FST_ERR_CTP_INSTANCE_ALREADY_STARTED',
        'Cannot call "%s" when fastify instance is already started!',
        400,
      ),
      FST_ERR_DEC_ALREADY_PRESENT: ne(
        'FST_ERR_DEC_ALREADY_PRESENT',
        "The decorator '%s' has already been added!",
      ),
      FST_ERR_DEC_DEPENDENCY_INVALID_TYPE: ne(
        'FST_ERR_DEC_DEPENDENCY_INVALID_TYPE',
        "The dependencies of decorator '%s' must be of type Array.",
        500,
        TypeError,
      ),
      FST_ERR_DEC_MISSING_DEPENDENCY: ne(
        'FST_ERR_DEC_MISSING_DEPENDENCY',
        "The decorator is missing dependency '%s'.",
      ),
      FST_ERR_DEC_AFTER_START: ne(
        'FST_ERR_DEC_AFTER_START',
        "The decorator '%s' has been added after start!",
      ),
      FST_ERR_HOOK_INVALID_TYPE: ne(
        'FST_ERR_HOOK_INVALID_TYPE',
        'The hook name must be a string',
        500,
        TypeError,
      ),
      FST_ERR_HOOK_INVALID_HANDLER: ne(
        'FST_ERR_HOOK_INVALID_HANDLER',
        '%s hook should be a function, instead got %s',
        500,
        TypeError,
      ),
      FST_ERR_HOOK_INVALID_ASYNC_HANDLER: ne(
        'FST_ERR_HOOK_INVALID_ASYNC_HANDLER',
        "Async function has too many arguments. Async hooks should not use the 'done' argument.",
        500,
        TypeError,
      ),
      FST_ERR_HOOK_NOT_SUPPORTED: ne(
        'FST_ERR_HOOK_NOT_SUPPORTED',
        '%s hook not supported!',
        500,
        TypeError,
      ),
      FST_ERR_MISSING_MIDDLEWARE: ne(
        'FST_ERR_MISSING_MIDDLEWARE',
        'You must register a plugin for handling middlewares, visit fastify.dev/docs/latest/Reference/Middleware/ for more info.',
        500,
      ),
      FST_ERR_HOOK_TIMEOUT: ne(
        'FST_ERR_HOOK_TIMEOUT',
        "A callback for '%s' hook timed out. You may have forgotten to call 'done' function or to resolve a Promise",
      ),
      FST_ERR_LOG_INVALID_DESTINATION: ne(
        'FST_ERR_LOG_INVALID_DESTINATION',
        'Cannot specify both logger.stream and logger.file options',
      ),
      FST_ERR_LOG_INVALID_LOGGER: ne(
        'FST_ERR_LOG_INVALID_LOGGER',
        "Invalid logger object provided. The logger instance should have these functions(s): '%s'.",
        500,
        TypeError,
      ),
      FST_ERR_REP_INVALID_PAYLOAD_TYPE: ne(
        'FST_ERR_REP_INVALID_PAYLOAD_TYPE',
        "Attempted to send payload of invalid type '%s'. Expected a string or Buffer.",
        500,
        TypeError,
      ),
      FST_ERR_REP_RESPONSE_BODY_CONSUMED: ne(
        'FST_ERR_REP_RESPONSE_BODY_CONSUMED',
        'Response.body is already consumed.',
      ),
      FST_ERR_REP_ALREADY_SENT: ne(
        'FST_ERR_REP_ALREADY_SENT',
        'Reply was already sent, did you forget to "return reply" in "%s" (%s)?',
      ),
      FST_ERR_REP_SENT_VALUE: ne(
        'FST_ERR_REP_SENT_VALUE',
        'The only possible value for reply.sent is true.',
        500,
        TypeError,
      ),
      FST_ERR_SEND_INSIDE_ONERR: ne(
        'FST_ERR_SEND_INSIDE_ONERR',
        'You cannot use `send` inside the `onError` hook',
      ),
      FST_ERR_SEND_UNDEFINED_ERR: ne(
        'FST_ERR_SEND_UNDEFINED_ERR',
        'Undefined error has occurred',
      ),
      FST_ERR_BAD_STATUS_CODE: ne(
        'FST_ERR_BAD_STATUS_CODE',
        'Called reply with an invalid status code: %s',
      ),
      FST_ERR_BAD_TRAILER_NAME: ne(
        'FST_ERR_BAD_TRAILER_NAME',
        'Called reply.trailer with an invalid header name: %s',
      ),
      FST_ERR_BAD_TRAILER_VALUE: ne(
        'FST_ERR_BAD_TRAILER_VALUE',
        "Called reply.trailer('%s', fn) with an invalid type: %s. Expected a function.",
      ),
      FST_ERR_FAILED_ERROR_SERIALIZATION: ne(
        'FST_ERR_FAILED_ERROR_SERIALIZATION',
        'Failed to serialize an error. Error: %s. Original error: %s',
      ),
      FST_ERR_MISSING_SERIALIZATION_FN: ne(
        'FST_ERR_MISSING_SERIALIZATION_FN',
        'Missing serialization function. Key "%s"',
      ),
      FST_ERR_MISSING_CONTENTTYPE_SERIALIZATION_FN: ne(
        'FST_ERR_MISSING_CONTENTTYPE_SERIALIZATION_FN',
        'Missing serialization function. Key "%s:%s"',
      ),
      FST_ERR_REQ_INVALID_VALIDATION_INVOCATION: ne(
        'FST_ERR_REQ_INVALID_VALIDATION_INVOCATION',
        'Invalid validation invocation. Missing validation function for HTTP part "%s" nor schema provided.',
      ),
      FST_ERR_SCH_MISSING_ID: ne(
        'FST_ERR_SCH_MISSING_ID',
        'Missing schema $id property',
      ),
      FST_ERR_SCH_ALREADY_PRESENT: ne(
        'FST_ERR_SCH_ALREADY_PRESENT',
        "Schema with id '%s' already declared!",
      ),
      FST_ERR_SCH_CONTENT_MISSING_SCHEMA: ne(
        'FST_ERR_SCH_CONTENT_MISSING_SCHEMA',
        "Schema is missing for the content type '%s'",
      ),
      FST_ERR_SCH_DUPLICATE: ne(
        'FST_ERR_SCH_DUPLICATE',
        "Schema with '%s' already present!",
      ),
      FST_ERR_SCH_VALIDATION_BUILD: ne(
        'FST_ERR_SCH_VALIDATION_BUILD',
        'Failed building the validation schema for %s: %s, due to error %s',
      ),
      FST_ERR_SCH_SERIALIZATION_BUILD: ne(
        'FST_ERR_SCH_SERIALIZATION_BUILD',
        'Failed building the serialization schema for %s: %s, due to error %s',
      ),
      FST_ERR_SCH_RESPONSE_SCHEMA_NOT_NESTED_2XX: ne(
        'FST_ERR_SCH_RESPONSE_SCHEMA_NOT_NESTED_2XX',
        'response schemas should be nested under a valid status code, e.g { 2xx: { type: "object" } }',
      ),
      FST_ERR_HTTP2_INVALID_VERSION: ne(
        'FST_ERR_HTTP2_INVALID_VERSION',
        'HTTP2 is available only from node >= 8.8.1',
      ),
      FST_ERR_INIT_OPTS_INVALID: ne(
        'FST_ERR_INIT_OPTS_INVALID',
        "Invalid initialization options: '%s'",
      ),
      FST_ERR_FORCE_CLOSE_CONNECTIONS_IDLE_NOT_AVAILABLE: ne(
        'FST_ERR_FORCE_CLOSE_CONNECTIONS_IDLE_NOT_AVAILABLE',
        "Cannot set forceCloseConnections to 'idle' as your HTTP server does not support closeIdleConnections method",
      ),
      FST_ERR_DUPLICATED_ROUTE: ne(
        'FST_ERR_DUPLICATED_ROUTE',
        "Method '%s' already declared for route '%s'",
      ),
      FST_ERR_BAD_URL: ne(
        'FST_ERR_BAD_URL',
        "'%s' is not a valid url component",
        400,
        URIError,
      ),
      FST_ERR_ASYNC_CONSTRAINT: ne(
        'FST_ERR_ASYNC_CONSTRAINT',
        'Unexpected error from async constraint',
        500,
      ),
      FST_ERR_DEFAULT_ROUTE_INVALID_TYPE: ne(
        'FST_ERR_DEFAULT_ROUTE_INVALID_TYPE',
        'The defaultRoute type should be a function',
        500,
        TypeError,
      ),
      FST_ERR_INVALID_URL: ne(
        'FST_ERR_INVALID_URL',
        "URL must be a string. Received '%s'",
        400,
        TypeError,
      ),
      FST_ERR_ROUTE_OPTIONS_NOT_OBJ: ne(
        'FST_ERR_ROUTE_OPTIONS_NOT_OBJ',
        'Options for "%s:%s" route must be an object',
        500,
        TypeError,
      ),
      FST_ERR_ROUTE_DUPLICATED_HANDLER: ne(
        'FST_ERR_ROUTE_DUPLICATED_HANDLER',
        'Duplicate handler for "%s:%s" route is not allowed!',
        500,
      ),
      FST_ERR_ROUTE_HANDLER_NOT_FN: ne(
        'FST_ERR_ROUTE_HANDLER_NOT_FN',
        'Error Handler for %s:%s route, if defined, must be a function',
        500,
        TypeError,
      ),
      FST_ERR_ROUTE_MISSING_HANDLER: ne(
        'FST_ERR_ROUTE_MISSING_HANDLER',
        'Missing handler function for "%s:%s" route.',
        500,
      ),
      FST_ERR_ROUTE_METHOD_INVALID: ne(
        'FST_ERR_ROUTE_METHOD_INVALID',
        'Provided method is invalid!',
        500,
        TypeError,
      ),
      FST_ERR_ROUTE_METHOD_NOT_SUPPORTED: ne(
        'FST_ERR_ROUTE_METHOD_NOT_SUPPORTED',
        '%s method is not supported.',
        500,
      ),
      FST_ERR_ROUTE_BODY_VALIDATION_SCHEMA_NOT_SUPPORTED: ne(
        'FST_ERR_ROUTE_BODY_VALIDATION_SCHEMA_NOT_SUPPORTED',
        'Body validation schema for %s:%s route is not supported!',
        500,
      ),
      FST_ERR_ROUTE_BODY_LIMIT_OPTION_NOT_INT: ne(
        'FST_ERR_ROUTE_BODY_LIMIT_OPTION_NOT_INT',
        "'bodyLimit' option must be an integer > 0. Got '%s'",
        500,
        TypeError,
      ),
      FST_ERR_ROUTE_REWRITE_NOT_STR: ne(
        'FST_ERR_ROUTE_REWRITE_NOT_STR',
        'Rewrite url for "%s" needs to be of type "string" but received "%s"',
        500,
        TypeError,
      ),
      FST_ERR_REOPENED_CLOSE_SERVER: ne(
        'FST_ERR_REOPENED_CLOSE_SERVER',
        'Fastify has already been closed and cannot be reopened',
      ),
      FST_ERR_REOPENED_SERVER: ne(
        'FST_ERR_REOPENED_SERVER',
        'Fastify is already listening',
      ),
      FST_ERR_INSTANCE_ALREADY_LISTENING: ne(
        'FST_ERR_INSTANCE_ALREADY_LISTENING',
        'Fastify instance is already listening. %s',
      ),
      FST_ERR_PLUGIN_VERSION_MISMATCH: ne(
        'FST_ERR_PLUGIN_VERSION_MISMATCH',
        "fastify-plugin: %s - expected '%s' fastify version, '%s' is installed",
      ),
      FST_ERR_PLUGIN_NOT_PRESENT_IN_INSTANCE: ne(
        'FST_ERR_PLUGIN_NOT_PRESENT_IN_INSTANCE',
        "The decorator '%s'%s is not present in %s",
      ),
      FST_ERR_PLUGIN_CALLBACK_NOT_FN: ne(
        'FST_ERR_PLUGIN_CALLBACK_NOT_FN',
        'fastify-plugin: %s',
        500,
        TypeError,
      ),
      FST_ERR_PLUGIN_NOT_VALID: ne(
        'FST_ERR_PLUGIN_NOT_VALID',
        'fastify-plugin: %s',
      ),
      FST_ERR_ROOT_PLG_BOOTED: ne(
        'FST_ERR_ROOT_PLG_BOOTED',
        'fastify-plugin: %s',
      ),
      FST_ERR_PARENT_PLUGIN_BOOTED: ne(
        'FST_ERR_PARENT_PLUGIN_BOOTED',
        'fastify-plugin: %s',
      ),
      FST_ERR_PLUGIN_TIMEOUT: ne(
        'FST_ERR_PLUGIN_TIMEOUT',
        'fastify-plugin: %s',
      ),
    };
  function l4(e, t) {
    return (t.cause = e), t;
  }
  kp.exports = ka;
  kp.exports.appendStackTrace = l4;
  kp.exports.AVVIO_ERRORS_MAP = {
    AVV_ERR_CALLBACK_NOT_FN: ka.FST_ERR_PLUGIN_CALLBACK_NOT_FN,
    AVV_ERR_PLUGIN_NOT_VALID: ka.FST_ERR_PLUGIN_NOT_VALID,
    AVV_ERR_ROOT_PLG_BOOTED: ka.FST_ERR_ROOT_PLG_BOOTED,
    AVV_ERR_PARENT_PLG_LOADED: ka.FST_ERR_PARENT_PLUGIN_BOOTED,
    AVV_ERR_READY_TIMEOUT: ka.FST_ERR_PLUGIN_TIMEOUT,
    AVV_ERR_PLUGIN_EXEC_TIMEOUT: ka.FST_ERR_PLUGIN_TIMEOUT,
  };
});
var ao = $((_he, uk) => {
  'use strict';
  var u4 = [
      'onRoute',
      'onRegister',
      'onReady',
      'onListen',
      'preClose',
      'onClose',
    ],
    sk = [
      'onTimeout',
      'onRequest',
      'preParsing',
      'preValidation',
      'preSerialization',
      'preHandler',
      'onSend',
      'onResponse',
      'onError',
      'onRequestAbort',
    ],
    c4 = sk.concat(u4),
    {
      FST_ERR_HOOK_INVALID_TYPE: f4,
      FST_ERR_HOOK_INVALID_HANDLER: d4,
      FST_ERR_SEND_UNDEFINED_ERR: xp,
      FST_ERR_HOOK_TIMEOUT: h4,
      FST_ERR_HOOK_NOT_SUPPORTED: p4,
      AVVIO_ERRORS_MAP: tk,
      appendStackTrace: rk,
    } = br(),
    { kChildren: Ff, kHooks: ik, kRequestPayloadStream: nk } = rr();
  function qf() {
    (this.onRequest = []),
      (this.preParsing = []),
      (this.preValidation = []),
      (this.preSerialization = []),
      (this.preHandler = []),
      (this.onResponse = []),
      (this.onSend = []),
      (this.onError = []),
      (this.onRoute = []),
      (this.onRegister = []),
      (this.onReady = []),
      (this.onListen = []),
      (this.onTimeout = []),
      (this.onRequestAbort = []),
      (this.preClose = []);
  }
  qf.prototype = Object.create(null);
  qf.prototype.validate = function (e, t) {
    if (typeof e != 'string') throw new f4();
    if (Array.isArray(this[e]) === !1) throw new p4(e);
    if (typeof t != 'function')
      throw new d4(e, Object.prototype.toString.call(t));
  };
  qf.prototype.add = function (e, t) {
    this.validate(e, t), this[e].push(t);
  };
  function m4(e) {
    let t = new qf();
    return (
      (t.onRequest = e.onRequest.slice()),
      (t.preParsing = e.preParsing.slice()),
      (t.preValidation = e.preValidation.slice()),
      (t.preSerialization = e.preSerialization.slice()),
      (t.preHandler = e.preHandler.slice()),
      (t.onSend = e.onSend.slice()),
      (t.onResponse = e.onResponse.slice()),
      (t.onError = e.onError.slice()),
      (t.onRoute = e.onRoute.slice()),
      (t.onRegister = e.onRegister.slice()),
      (t.onTimeout = e.onTimeout.slice()),
      (t.onRequestAbort = e.onRequestAbort.slice()),
      (t.onReady = []),
      (t.onListen = []),
      (t.preClose = []),
      t
    );
  }
  function ok(e, t, r, n) {
    let i = r[ik][e],
      s = 0,
      o = 0;
    u();
    function a(d) {
      if (d) {
        d.code === 'AVV_ERR_READY_TIMEOUT'
          ? (d = rk(d, new h4(e)))
          : (d = tk[d.code] != null ? rk(d, new tk[d.code](d.message)) : d),
          n(d);
        return;
      }
      n();
    }
    function u(d) {
      if (d) {
        a(d);
        return;
      }
      if (s === i.length && o === r[Ff].length) {
        s === 0 && o === 0
          ? a()
          : t(function (g, v) {
              a(g), v(g);
            });
        return;
      }
      if (s === i.length && o < r[Ff].length) {
        let m = r[Ff][o++];
        ok(e, t, m, u);
        return;
      }
      t(c(i[s++], r)), u();
    }
    function c(d, m) {
      return function (g, v) {
        if (g) {
          v(g);
          return;
        }
        if (d.length === 1) {
          try {
            d.call(m, v);
          } catch (S) {
            v(S);
          }
          return;
        }
        try {
          let S = d.call(m);
          if (S && typeof S.then == 'function') {
            S.then(v, v);
            return;
          }
        } catch (S) {
          g = S;
        }
        v(g);
      };
    }
  }
  function ak(e) {
    let t = e[ik].onListen,
      r = t.length,
      n = 0,
      i = 0;
    s();
    function s(a) {
      if ((a && e.log.error(a), n === r)) {
        for (; i < e[Ff].length; ) {
          let u = e[Ff][i++];
          ak(u);
        }
        return;
      }
      o(t[n++], e, s);
    }
    async function o(a, u, c) {
      if (a.length === 1) {
        try {
          a.call(u, c);
        } catch (d) {
          c(d);
        }
        return;
      }
      try {
        let d = a.call(u);
        if (d && typeof d.then == 'function') {
          d.then(c, c);
          return;
        }
        c();
      } catch (d) {
        c(d);
      }
    }
  }
  function au(e) {
    return function (r, n, i, s) {
      let o = 0;
      function a(d) {
        if (d || o === r.length) {
          s(d, n, i);
          return;
        }
        let m;
        try {
          m = e(r[o++], n, i, a);
        } catch (g) {
          s(g, n, i);
          return;
        }
        m && typeof m.then == 'function' && m.then(u, c);
      }
      function u() {
        a();
      }
      function c(d) {
        d || (d = new xp()), s(d, n, i);
      }
      a();
    };
  }
  function y4(e, t, r, n) {
    return e(t, r, n);
  }
  var g4 = au(y4),
    v4 = au(Mf),
    b4 = au(Mf),
    S4 = au(Mf),
    _4 = au(Mf);
  function lk(e, t, r, n, i) {
    let s = 0;
    function o(c, d) {
      if (c) {
        i(c, t, r, n);
        return;
      }
      if ((d !== void 0 && (n = d), s === e.length)) {
        i(null, t, r, n);
        return;
      }
      let m;
      try {
        m = e[s++](t, r, n, o);
      } catch (g) {
        i(g, t, r);
        return;
      }
      m && typeof m.then == 'function' && m.then(a, u);
    }
    function a(c) {
      o(null, c);
    }
    function u(c) {
      c || (c = new xp()), i(c, t, r, n);
    }
    o();
  }
  var w4 = lk;
  function E4(e, t, r, n) {
    let i = 0;
    function s(u, c) {
      if (r.sent) return;
      if ((c !== void 0 && (t[nk] = c), u || i === e.length)) {
        n(u, t, r);
        return;
      }
      let d;
      try {
        d = e[i++](t, r, t[nk], s);
      } catch (m) {
        n(m, t, r);
        return;
      }
      d && typeof d.then == 'function' && d.then(o, a);
    }
    function o(u) {
      s(null, u);
    }
    function a(u) {
      u || (u = new xp()), n(u, t, r);
    }
    s();
  }
  function R4(e, t, r) {
    let n = 0;
    function i(a) {
      if (a || n === e.length) {
        r(a, t);
        return;
      }
      let u;
      try {
        u = e[n++](t, i);
      } catch (c) {
        r(c, t);
        return;
      }
      u && typeof u.then == 'function' && u.then(s, o);
    }
    function s() {
      i();
    }
    function o(a) {
      a || (a = new xp()), r(a, t);
    }
    i();
  }
  function Mf(e, t, r, n) {
    if (r.sent !== !0) return e(t, r, n);
  }
  uk.exports = {
    Hooks: qf,
    buildHooks: m4,
    hookRunnerGenerator: au,
    preParsingHookRunner: E4,
    onResponseHookRunner: g4,
    onSendHookRunner: lk,
    preSerializationHookRunner: w4,
    onRequestAbortHookRunner: R4,
    hookIterator: Mf,
    hookRunnerApplication: ok,
    onListenHookRunner: ak,
    preHandlerHookRunner: b4,
    preValidationHookRunner: v4,
    onRequestHookRunner: _4,
    onTimeoutHookRunner: S4,
    lifecycleHooks: sk,
    supportedHooks: c4,
  };
});
var bk = $((whe, W0) => {
  'use strict';
  var T4 = require('node:http'),
    P4 = require('node:https'),
    k4 = require('node:dns'),
    { FSTDEP011: ck } = Qs(),
    { kState: Sr, kOptions: x4, kServerBindings: C4 } = rr(),
    { onListenHookRunner: Cp } = ao(),
    {
      FST_ERR_HTTP2_INVALID_VERSION: O4,
      FST_ERR_REOPENED_CLOSE_SERVER: hk,
      FST_ERR_REOPENED_SERVER: pk,
      FST_ERR_LISTEN_OPTIONS_INVALID: I4,
    } = br();
  W0.exports.createServer = A4;
  W0.exports.compileValidateHTTPVersion = N4;
  function mk(e) {
    return `Server listening at ${e}`;
  }
  function A4(e, t) {
    let r = gk(e, t);
    function n(i, ...s) {
      let o = s.slice(-1).pop(),
        a = Object.prototype.toString.call(arguments[0]);
      if (arguments.length === 0) i = B0([]);
      else if (
        arguments.length > 0 &&
        a !== '[object Object]' &&
        a !== '[object Function]'
      )
        ck(), (i = B0(Array.from(arguments))), (o = i.cb);
      else if (s.length > 1) {
        ck();
        let c = i.path ? [i.path] : [i.port ?? 0, i.host ?? 'localhost'];
        Object.assign(i, B0([...c, ...s]));
      } else i.cb = o;
      if (i.signal) {
        if (
          typeof i.signal.on != 'function' &&
          typeof i.signal.addEventListener != 'function'
        )
          throw new I4('Invalid options.signal');
        if (i.signal.aborted) this.close();
        else {
          let c = () => {
            this.close();
          };
          i.signal.addEventListener('abort', c, { once: !0 });
        }
      }
      let u;
      if (
        (i.path == null ? (u = i.host ?? 'localhost') : (u = i.host),
        Object.prototype.hasOwnProperty.call(i, 'host') === !1 && (i.host = u),
        u === 'localhost'
          ? (i.cb = (c, d) => {
              if (c) {
                o(c, d);
                return;
              }
              fk.call(this, r, t, e, i, () => {
                (this[Sr].listening = !0), o(null, d), Cp(this);
              });
            })
          : (i.cb = (c, d) => {
              if (c) {
                o(c, d);
                return;
              }
              (this[Sr].listening = !0), o(null, d), Cp(this);
            }),
        o === void 0)
      )
        return $4.call(this, r, i).then(
          (d) =>
            new Promise((m, g) => {
              u === 'localhost'
                ? fk.call(this, r, t, e, i, () => {
                    (this[Sr].listening = !0), m(d), Cp(this);
                  })
                : (m(d), Cp(this));
            }),
        );
      this.ready(yk.call(this, r, i));
    }
    return { server: r, listen: n };
  }
  function fk(e, t, r, n, i) {
    (this[Sr].listening = !1),
      k4.lookup(n.host, { all: !0 }, (s, o) => {
        if (s) {
          i();
          return;
        }
        let a = e.listening && r.serverFactory,
          u = 0,
          c = 0;
        if (!a) {
          let m = e.address();
          for (let g of o)
            if (g.address !== m.address) {
              u++;
              let v = Object.assign({}, n, {
                  host: g.address,
                  port: m.port,
                  cb: (T) => {
                    c++, T || this[C4].push(S), c === u && i();
                  },
                }),
                S = gk(r, t),
                w = () => {
                  S.close(() => {}),
                    r.forceCloseConnections === 'idle'
                      ? S.closeIdleConnections()
                      : typeof S.closeAllConnections == 'function' &&
                        r.forceCloseConnections &&
                        S.closeAllConnections();
                };
              S.on('upgrade', e.emit.bind(e, 'upgrade')),
                e.on('unref', w),
                e.on('close', w),
                e.on('error', w),
                (this[Sr].listening = !1),
                yk.call(this, S, v)();
            }
        }
        if (u === 0) {
          i();
          return;
        }
        let d = e.unref;
        e.unref = function () {
          d.call(e), e.emit('unref');
        };
      });
  }
  function yk(e, t) {
    let r = (n) => {
      if ((e.removeListener('error', r), e.removeListener('listening', r), n))
        (this[Sr].listening = !1), t.cb(n, null);
      else {
        let i = vk.call(this, e, t.listenTextResolver || mk);
        t.cb(null, i);
      }
    };
    return (n) => {
      if (n != null) return t.cb(n);
      if (this[Sr].listening && this[Sr].closing) return t.cb(new hk(), null);
      if (this[Sr].listening) return t.cb(new pk(), null);
      e.once('error', r),
        this[Sr].closing ||
          (e.once('listening', r), e.listen(t), (this[Sr].listening = !0));
    };
  }
  function $4(e, t) {
    return this[Sr].listening && this[Sr].closing
      ? Promise.reject(new hk())
      : this[Sr].listening
        ? Promise.reject(new pk())
        : this.ready().then(() => {
            let r, n;
            function i() {
              e.removeListener('error', r), e.removeListener('listening', n);
            }
            let s = new Promise((a, u) => {
                (r = (c) => {
                  i(), (this[Sr].listening = !1), u(c);
                }),
                  e.once('error', r);
              }),
              o = new Promise((a, u) => {
                (n = () => {
                  i(),
                    (this[Sr].listening = !0),
                    a(vk.call(this, e, t.listenTextResolver || mk));
                }),
                  e.once('listening', n);
              });
            return e.listen(t), Promise.race([s, o]);
          });
  }
  function N4(e) {
    let t = !1,
      r = new Map();
    return (
      e.serverFactory && (t = !0),
      e.http2
        ? (r.set('2.0', !0),
          e.https &&
            e.https.allowHTTP1 === !0 &&
            (r.set('1.1', !0), r.set('1.0', !0)))
        : (r.set('1.1', !0), r.set('1.0', !0)),
      function (i) {
        return t || r.has(i);
      }
    );
  }
  function gk(e, t) {
    let r = null,
      n = e.https === !0 ? {} : e.https;
    return (
      e.serverFactory
        ? (r = e.serverFactory(t, e))
        : e.http2
          ? (typeof n == 'object'
              ? (r = dk().createSecureServer(n, t))
              : (r = dk().createServer(t)),
            r.on('session', D4(e.http2SessionTimeout)))
          : (n ? (r = P4.createServer(n, t)) : (r = T4.createServer(e.http, t)),
            (r.keepAliveTimeout = e.keepAliveTimeout),
            (r.requestTimeout = e.requestTimeout),
            e.maxRequestsPerSocket > 0 &&
              (r.maxRequestsPerSocket = e.maxRequestsPerSocket)),
      e.serverFactory || r.setTimeout(e.connectionTimeout),
      r
    );
  }
  function B0(e) {
    if (e.length === 0) return { port: 0, host: 'localhost' };
    let r = { cb: typeof e[e.length - 1] == 'function' ? e.pop() : void 0 },
      n = e[0],
      i = e.length,
      s = e[i - 1];
    return (
      typeof n == 'string' && isNaN(n)
        ? ((r.path = n), (r.backlog = i > 1 ? s : void 0))
        : ((r.port = i >= 1 && Number.isInteger(n) ? n : L4(n)),
          (r.host = i >= 2 && e[1] ? e[1] : 'localhost'),
          (r.backlog = i >= 3 ? e[2] : void 0)),
      r
    );
  }
  function L4(e) {
    let t = Number(e);
    return t >= 0 && !Number.isNaN(t) && Number.isInteger(t) ? t : 0;
  }
  function vk(e, t) {
    let r = e.address(),
      n = typeof r == 'string';
    n ||
      (r.address.indexOf(':') === -1
        ? (r = r.address + ':' + r.port)
        : (r = '[' + r.address + ']:' + r.port)),
      (r = (n ? '' : 'http' + (this[x4].https ? 's' : '') + '://') + r);
    let i = t(r);
    return this.log.info(i), r;
  }
  function dk() {
    try {
      return require('node:http2');
    } catch {
      throw new O4();
    }
  }
  function D4(e) {
    return function (t) {
      t.setTimeout(e, j4);
    };
  }
  function j4() {
    this.close();
  }
});
var K0 = $((Ehe, _k) => {
  'use strict';
  var {
      kSchemaHeaders: Ap,
      kSchemaParams: G0,
      kSchemaQuerystring: Y0,
      kSchemaBody: J0,
      kSchemaResponse: Sk,
    } = rr(),
    F4 = /^[1-5]{1}[0-9]{2}$|^[1-5]xx$|^default$/,
    { FST_ERR_SCH_RESPONSE_SCHEMA_NOT_NESTED_2XX: q4 } = br(),
    { FSTWRN001: Op } = Qs();
  function M4(e, t) {
    if (!e.schema || !e.schema.response) return;
    let { method: r, url: n } = e.config || {};
    e[Sk] = Object.keys(e.schema.response).reduce(function (i, s) {
      let o = e.schema.response[s];
      if (((s = s.toLowerCase()), !F4.exec(s))) throw new q4();
      if (o.content) {
        let a = {};
        for (let u of Object.keys(o.content)) {
          let c = o.content[u].schema;
          a[u] = t({
            schema: c,
            url: n,
            method: r,
            httpStatus: s,
            contentType: u,
          });
        }
        i[s] = a;
      } else i[s] = t({ schema: o, url: n, method: r, httpStatus: s });
      return i;
    }, {});
  }
  function H4(e, t, r) {
    let { schema: n } = e;
    if (!n) return;
    let { method: i, url: s } = e.config || {},
      o = n.headers;
    if (o && (r || Object.getPrototypeOf(o) !== Object.prototype))
      e[Ap] = t({ schema: o, method: i, url: s, httpPart: 'headers' });
    else if (o) {
      let a = {};
      Object.keys(o).forEach((u) => {
        a[u] = o[u];
      }),
        a.required instanceof Array &&
          (a.required = a.required.map((u) => u.toLowerCase())),
        o.properties &&
          ((a.properties = {}),
          Object.keys(o.properties).forEach((u) => {
            a.properties[u.toLowerCase()] = o.properties[u];
          })),
        (e[Ap] = t({ schema: a, method: i, url: s, httpPart: 'headers' }));
    } else
      Object.prototype.hasOwnProperty.call(n, 'headers') && Op('headers', i, s);
    n.body
      ? (e[J0] = t({ schema: n.body, method: i, url: s, httpPart: 'body' }))
      : Object.prototype.hasOwnProperty.call(n, 'body') && Op('body', i, s),
      n.querystring
        ? (e[Y0] = t({
            schema: n.querystring,
            method: i,
            url: s,
            httpPart: 'querystring',
          }))
        : Object.prototype.hasOwnProperty.call(n, 'querystring') &&
          Op('querystring', i, s),
      n.params
        ? (e[G0] = t({
            schema: n.params,
            method: i,
            url: s,
            httpPart: 'params',
          }))
        : Object.prototype.hasOwnProperty.call(n, 'params') &&
          Op('params', i, s);
  }
  function Ip(e, t, r) {
    let n = t[r] === void 0,
      i = e && e(n ? null : t[r]);
    if (i?.then) return i.then((o) => s(o)).catch((o) => o);
    return s(i);
    function s(o) {
      return o === !1
        ? e.errors
        : o && o.error
          ? o.error
          : (o && o.value && (t[r] = o.value), !1);
    }
  }
  function $p(e, t, r) {
    let n = r === void 0;
    if (n || !r.skipParams) {
      let s = Ip(e[G0], t, 'params');
      if (s)
        return typeof s.then != 'function'
          ? lo(s, 'params', e.schemaErrorFormatter)
          : z4(s, e, t);
    }
    if (n || !r.skipBody) {
      let s = Ip(e[J0], t, 'body');
      if (s)
        return typeof s.then != 'function'
          ? lo(s, 'body', e.schemaErrorFormatter)
          : U4(s, e, t);
    }
    if (n || !r.skipQuery) {
      let s = Ip(e[Y0], t, 'query');
      if (s)
        return typeof s.then != 'function'
          ? lo(s, 'querystring', e.schemaErrorFormatter)
          : V4(s, e, t);
    }
    let i = Ip(e[Ap], t, 'headers');
    return i
      ? typeof i.then != 'function'
        ? lo(i, 'headers', e.schemaErrorFormatter)
        : B4(i, e, t)
      : !1;
  }
  function z4(e, t, r) {
    return e.then((n) =>
      n
        ? lo(n, 'params', t.schemaErrorFormatter)
        : $p(t, r, { skipParams: !0 }),
    );
  }
  function U4(e, t, r) {
    return e.then((n) =>
      n
        ? lo(n, 'body', t.schemaErrorFormatter)
        : $p(t, r, { skipParams: !0, skipBody: !0 }),
    );
  }
  function V4(e, t, r) {
    return e.then((n) =>
      n
        ? lo(n, 'querystring', t.schemaErrorFormatter)
        : $p(t, r, { skipParams: !0, skipBody: !0, skipQuery: !0 }),
    );
  }
  function B4(e, t, r) {
    return e.then((n) => (n ? lo(n, 'headers', t.schemaErrorFormatter) : !1));
  }
  function lo(e, t, r) {
    if (e instanceof Error)
      return (
        (e.statusCode = e.statusCode || 400),
        (e.code = e.code || 'FST_ERR_VALIDATION'),
        (e.validationContext = e.validationContext || t),
        e
      );
    let n = r(e, t);
    return (
      (n.statusCode = n.statusCode || 400),
      (n.code = n.code || 'FST_ERR_VALIDATION'),
      (n.validation = e),
      (n.validationContext = t),
      n
    );
  }
  _k.exports = {
    symbols: {
      bodySchema: J0,
      querystringSchema: Y0,
      responseSchema: Sk,
      paramsSchema: G0,
      headersSchema: Ap,
    },
    compileSchemasForValidation: H4,
    compileSchemasForSerialization: M4,
    validate: $p,
  };
});
var X0 = $((Rhe, Ek) => {
  'use strict';
  var { kReplyIsError: wk, kReplyHijacked: W4 } = rr();
  function G4(e, t) {
    e.then(
      function (r) {
        if (
          t[W4] !== !0 &&
          (r !== void 0 ||
            (t.sent === !1 &&
              t.raw.headersSent === !1 &&
              t.request.raw.aborted === !1))
        )
          try {
            t.send(r);
          } catch (n) {
            (t[wk] = !0), t.send(n);
          }
      },
      function (r) {
        if (t.sent === !0) {
          t.log.error(
            { err: r },
            'Promise errored, but reply.sent = true was set',
          );
          return;
        }
        t[wk] = !0;
        try {
          t.send(r);
        } catch (n) {
          t.send(n);
        }
      },
    );
  }
  Ek.exports = G4;
});
var tb = $((The, eb) => {
  'use strict';
  var { validate: Y4 } = K0(),
    { preValidationHookRunner: J4, preHandlerHookRunner: K4 } = ao(),
    X4 = X0(),
    { kReplyIsError: Np, kRouteContext: co } = rr();
  function Z4(e, t, r) {
    if (r.sent === !0) return;
    if (e != null) {
      (r[Np] = !0), r.send(e);
      return;
    }
    let n = t.raw.method,
      i = t.headers,
      s = t[co];
    if (n === 'GET' || n === 'HEAD') {
      uo(t, r);
      return;
    }
    let o = i['content-type'];
    if (
      n === 'POST' ||
      n === 'PUT' ||
      n === 'PATCH' ||
      n === 'TRACE' ||
      n === 'SEARCH' ||
      n === 'PROPFIND' ||
      n === 'PROPPATCH' ||
      n === 'LOCK' ||
      n === 'REPORT' ||
      n === 'MKCALENDAR'
    ) {
      o === void 0
        ? i['transfer-encoding'] === void 0 &&
          (i['content-length'] === '0' || i['content-length'] === void 0)
          ? uo(t, r)
          : s.contentTypeParser.run('', uo, t, r)
        : s.contentTypeParser.run(o, uo, t, r);
      return;
    }
    if (n === 'OPTIONS' || n === 'DELETE') {
      o !== void 0 &&
      (i['transfer-encoding'] !== void 0 || i['content-length'] !== void 0)
        ? s.contentTypeParser.run(o, uo, t, r)
        : uo(t, r);
      return;
    }
    uo(t, r);
  }
  function uo(e, t) {
    try {
      e[co].preValidation !== null
        ? J4(e[co].preValidation, e, t, Z0)
        : Z0(null, e, t);
    } catch (r) {
      Z0(r, e, t);
    }
  }
  function Z0(e, t, r) {
    if (r.sent === !0) return;
    if (e != null) {
      (r[Np] = !0), r.send(e);
      return;
    }
    let n = Y4(r[co], t);
    if ((n && typeof n.then == 'function') || !1) {
      let s = Rk.bind(null, t, r);
      n.then(s, s);
    } else Rk(t, r, n);
  }
  function Rk(e, t, r) {
    if (r) {
      if (t[co].attachValidation === !1) {
        t.send(r);
        return;
      }
      t.request.validationError = r;
    }
    e[co].preHandler !== null ? K4(e[co].preHandler, e, t, Q0) : Q0(null, e, t);
  }
  function Q0(e, t, r) {
    if (r.sent) return;
    if (e != null) {
      (r[Np] = !0), r.send(e);
      return;
    }
    let n;
    try {
      n = t[co].handler(t, r);
    } catch (i) {
      (r[Np] = !0), r.send(i);
      return;
    }
    n !== void 0 &&
      (n !== null && typeof n.then == 'function' ? X4(n, r) : r.send(n));
  }
  eb.exports = Z4;
  eb.exports[Symbol.for('internals')] = { handler: uo, preHandlerCallback: Q0 };
});
var Pk = $((Phe, Tk) => {
  'use strict';
  function lu() {}
  var Q4 = { fatal: lu, error: lu, warn: lu, info: lu, debug: lu, trace: lu };
  Object.defineProperty(Tk, 'exports', {
    get() {
      return Object.create(Q4);
    },
  });
});
var nb = $((khe, Ck) => {
  'use strict';
  var Hf = (e) => e && typeof e.message == 'string',
    rb = (e) => {
      if (!e) return;
      let t = e.cause;
      if (typeof t == 'function') {
        let r = e.cause();
        return Hf(r) ? r : void 0;
      } else return Hf(t) ? t : void 0;
    },
    kk = (e, t) => {
      if (!Hf(e)) return '';
      let r = e.stack || '';
      if (t.has(e))
        return (
          r +
          `
causes have become circular...`
        );
      let n = rb(e);
      return n
        ? (t.add(e),
          r +
            `
caused by: ` +
            kk(n, t))
        : r;
    },
    eV = (e) => kk(e, new Set()),
    xk = (e, t, r) => {
      if (!Hf(e)) return '';
      let n = r ? '' : e.message || '';
      if (t.has(e)) return n + ': ...';
      let i = rb(e);
      if (i) {
        t.add(e);
        let s = typeof e.cause == 'function';
        return n + (s ? '' : ': ') + xk(i, t, s);
      } else return n;
    },
    tV = (e) => xk(e, new Set());
  Ck.exports = {
    isErrorLike: Hf,
    getErrorCause: rb,
    stackWithCauses: eV,
    messageWithCauses: tV,
  };
});
var sb = $((xhe, Ik) => {
  'use strict';
  var rV = Symbol('circular-ref-tag'),
    Lp = Symbol('pino-raw-err-ref'),
    Ok = Object.create(
      {},
      {
        type: { enumerable: !0, writable: !0, value: void 0 },
        message: { enumerable: !0, writable: !0, value: void 0 },
        stack: { enumerable: !0, writable: !0, value: void 0 },
        aggregateErrors: { enumerable: !0, writable: !0, value: void 0 },
        raw: {
          enumerable: !1,
          get: function () {
            return this[Lp];
          },
          set: function (e) {
            this[Lp] = e;
          },
        },
      },
    );
  Object.defineProperty(Ok, Lp, { writable: !0, value: {} });
  Ik.exports = {
    pinoErrProto: Ok,
    pinoErrorSymbols: { seen: rV, rawSymbol: Lp },
  };
});
var Nk = $((Che, $k) => {
  'use strict';
  $k.exports = ob;
  var { messageWithCauses: nV, stackWithCauses: sV, isErrorLike: Ak } = nb(),
    { pinoErrProto: iV, pinoErrorSymbols: oV } = sb(),
    { seen: ib } = oV,
    { toString: aV } = Object.prototype;
  function ob(e) {
    if (!Ak(e)) return e;
    e[ib] = void 0;
    let t = Object.create(iV);
    (t.type =
      aV.call(e.constructor) === '[object Function]'
        ? e.constructor.name
        : e.name),
      (t.message = nV(e)),
      (t.stack = sV(e)),
      Array.isArray(e.errors) &&
        (t.aggregateErrors = e.errors.map((r) => ob(r)));
    for (let r in e)
      if (t[r] === void 0) {
        let n = e[r];
        Ak(n)
          ? r !== 'cause' &&
            !Object.prototype.hasOwnProperty.call(n, ib) &&
            (t[r] = ob(n))
          : (t[r] = n);
      }
    return delete e[ib], (t.raw = e), t;
  }
});
var Dk = $((Ohe, Lk) => {
  'use strict';
  Lk.exports = jp;
  var { isErrorLike: ab } = nb(),
    { pinoErrProto: lV, pinoErrorSymbols: uV } = sb(),
    { seen: Dp } = uV,
    { toString: cV } = Object.prototype;
  function jp(e) {
    if (!ab(e)) return e;
    e[Dp] = void 0;
    let t = Object.create(lV);
    (t.type =
      cV.call(e.constructor) === '[object Function]'
        ? e.constructor.name
        : e.name),
      (t.message = e.message),
      (t.stack = e.stack),
      Array.isArray(e.errors) &&
        (t.aggregateErrors = e.errors.map((r) => jp(r))),
      ab(e.cause) &&
        !Object.prototype.hasOwnProperty.call(e.cause, Dp) &&
        (t.cause = jp(e.cause));
    for (let r in e)
      if (t[r] === void 0) {
        let n = e[r];
        ab(n)
          ? Object.prototype.hasOwnProperty.call(n, Dp) || (t[r] = jp(n))
          : (t[r] = n);
      }
    return delete e[Dp], (t.raw = e), t;
  }
});
var Mk = $((Ihe, qk) => {
  'use strict';
  qk.exports = { mapHttpRequest: fV, reqSerializer: Fk };
  var lb = Symbol('pino-raw-req-ref'),
    jk = Object.create(
      {},
      {
        id: { enumerable: !0, writable: !0, value: '' },
        method: { enumerable: !0, writable: !0, value: '' },
        url: { enumerable: !0, writable: !0, value: '' },
        query: { enumerable: !0, writable: !0, value: '' },
        params: { enumerable: !0, writable: !0, value: '' },
        headers: { enumerable: !0, writable: !0, value: {} },
        remoteAddress: { enumerable: !0, writable: !0, value: '' },
        remotePort: { enumerable: !0, writable: !0, value: '' },
        raw: {
          enumerable: !1,
          get: function () {
            return this[lb];
          },
          set: function (e) {
            this[lb] = e;
          },
        },
      },
    );
  Object.defineProperty(jk, lb, { writable: !0, value: {} });
  function Fk(e) {
    let t = e.info || e.socket,
      r = Object.create(jk);
    if (
      ((r.id =
        typeof e.id == 'function'
          ? e.id()
          : e.id || (e.info ? e.info.id : void 0)),
      (r.method = e.method),
      e.originalUrl)
    )
      r.url = e.originalUrl;
    else {
      let n = e.path;
      r.url = typeof n == 'string' ? n : e.url ? e.url.path || e.url : void 0;
    }
    return (
      e.query && (r.query = e.query),
      e.params && (r.params = e.params),
      (r.headers = e.headers),
      (r.remoteAddress = t && t.remoteAddress),
      (r.remotePort = t && t.remotePort),
      (r.raw = e.raw || e),
      r
    );
  }
  function fV(e) {
    return { req: Fk(e) };
  }
});
var Vk = $((Ahe, Uk) => {
  'use strict';
  Uk.exports = { mapHttpResponse: dV, resSerializer: zk };
  var ub = Symbol('pino-raw-res-ref'),
    Hk = Object.create(
      {},
      {
        statusCode: { enumerable: !0, writable: !0, value: 0 },
        headers: { enumerable: !0, writable: !0, value: '' },
        raw: {
          enumerable: !1,
          get: function () {
            return this[ub];
          },
          set: function (e) {
            this[ub] = e;
          },
        },
      },
    );
  Object.defineProperty(Hk, ub, { writable: !0, value: {} });
  function zk(e) {
    let t = Object.create(Hk);
    return (
      (t.statusCode = e.headersSent ? e.statusCode : null),
      (t.headers = e.getHeaders ? e.getHeaders() : e._headers),
      (t.raw = e),
      t
    );
  }
  function dV(e) {
    return { res: zk(e) };
  }
});
var fb = $(($he, Bk) => {
  'use strict';
  var cb = Nk(),
    hV = Dk(),
    Fp = Mk(),
    qp = Vk();
  Bk.exports = {
    err: cb,
    errWithCause: hV,
    mapHttpRequest: Fp.mapHttpRequest,
    mapHttpResponse: qp.mapHttpResponse,
    req: Fp.reqSerializer,
    res: qp.resSerializer,
    wrapErrorSerializer: function (t) {
      return t === cb
        ? t
        : function (n) {
            return t(cb(n));
          };
    },
    wrapRequestSerializer: function (t) {
      return t === Fp.reqSerializer
        ? t
        : function (n) {
            return t(Fp.reqSerializer(n));
          };
    },
    wrapResponseSerializer: function (t) {
      return t === qp.resSerializer
        ? t
        : function (n) {
            return t(qp.resSerializer(n));
          };
    },
  };
});
var db = $((Nhe, Wk) => {
  'use strict';
  function pV(e, t) {
    return t;
  }
  Wk.exports = function () {
    let t = Error.prepareStackTrace;
    Error.prepareStackTrace = pV;
    let r = new Error().stack;
    if (((Error.prepareStackTrace = t), !Array.isArray(r))) return;
    let n = r.slice(2),
      i = [];
    for (let s of n) s && i.push(s.getFileName());
    return i;
  };
});
var Yk = $((Lhe, Gk) => {
  'use strict';
  Gk.exports = mV;
  function mV(e = {}) {
    let {
      ERR_PATHS_MUST_BE_STRINGS: t = () =>
        'fast-redact - Paths must be (non-empty) strings',
      ERR_INVALID_PATH: r = (n) => `fast-redact \u2013 Invalid path (${n})`,
    } = e;
    return function ({ paths: i }) {
      i.forEach((s) => {
        if (typeof s != 'string') throw Error(t());
        try {
          if (/〇/.test(s)) throw Error();
          let o =
            (s[0] === '[' ? '' : '.') +
            s
              .replace(/^\*/, '\u3007')
              .replace(/\.\*/g, '.\u3007')
              .replace(/\[\*\]/g, '[\u3007]');
          if (/\n|\r|;/.test(o) || /\/\*/.test(o)) throw Error();
          Function(`
            'use strict'
            const o = new Proxy({}, { get: () => o, set: () => { throw Error() } });
            const \u3007 = null;
            o${o}
            if ([o${o}].length !== 1) throw Error()`)();
        } catch {
          throw Error(r(s));
        }
      });
    };
  }
});
var Mp = $((Dhe, Jk) => {
  'use strict';
  Jk.exports = /[^.[\]]+|\[((?:.)*?)\]/g;
});
var Xk = $((jhe, Kk) => {
  'use strict';
  var yV = Mp();
  Kk.exports = gV;
  function gV({ paths: e }) {
    let t = [];
    var r = 0;
    let n = e.reduce(function (i, s, o) {
      var a = s.match(yV).map((d) => d.replace(/'|"|`/g, ''));
      let u = s[0] === '[';
      a = a.map((d) => (d[0] === '[' ? d.substr(1, d.length - 2) : d));
      let c = a.indexOf('*');
      if (c > -1) {
        let d = a.slice(0, c),
          m = d.join('.'),
          g = a.slice(c + 1, a.length),
          v = g.length > 0;
        r++, t.push({ before: d, beforeStr: m, after: g, nested: v });
      } else
        i[s] = {
          path: a,
          val: void 0,
          precensored: !1,
          circle: '',
          escPath: JSON.stringify(s),
          leadingBracket: u,
        };
      return i;
    }, {});
    return { wildcards: t, wcLen: r, secret: n };
  }
});
var Qk = $((Fhe, Zk) => {
  'use strict';
  var vV = Mp();
  Zk.exports = bV;
  function bV(
    {
      secret: e,
      serialize: t,
      wcLen: r,
      strict: n,
      isCensorFct: i,
      censorFctTakesPath: s,
    },
    o,
  ) {
    let a = Function(
      'o',
      `
    if (typeof o !== 'object' || o == null) {
      ${EV(n, t)}
    }
    const { censor, secret } = this
    const originalSecret = {}
    const secretKeys = Object.keys(secret)
    for (var i = 0; i < secretKeys.length; i++) {
      originalSecret[secretKeys[i]] = secret[secretKeys[i]]
    }

    ${SV(e, i, s)}
    this.compileRestore()
    ${_V(r > 0, i, s)}
    this.secret = originalSecret
    ${wV(t)}
  `,
    ).bind(o);
    return (a.state = o), t === !1 && (a.restore = (u) => o.restore(u)), a;
  }
  function SV(e, t, r) {
    return Object.keys(e).map((n) => {
      let { escPath: i, leadingBracket: s, path: o } = e[n],
        a = s ? 1 : 0,
        u = s ? '' : '.',
        c = [];
      for (var d; (d = vV.exec(n)) !== null; ) {
        let [, S] = d,
          { index: w, input: T } = d;
        w > a && c.push(T.substring(0, w - (S ? 0 : 1)));
      }
      var m = c.map((S) => `o${u}${S}`).join(' && ');
      m.length === 0
        ? (m += `o${u}${n} != null`)
        : (m += ` && o${u}${n} != null`);
      let g = `
      switch (true) {
        ${c.reverse().map(
          (S) => `
          case o${u}${S} === censor:
            secret[${i}].circle = ${JSON.stringify(S)}
            break
        `,
        ).join(`
`)}
      }
    `,
        v = r ? `val, ${JSON.stringify(o)}` : 'val';
      return `
      if (${m}) {
        const val = o${u}${n}
        if (val === censor) {
          secret[${i}].precensored = true
        } else {
          secret[${i}].val = val
          o${u}${n} = ${t ? `censor(${v})` : 'censor'}
          ${g}
        }
      }
    `;
    }).join(`
`);
  }
  function _V(e, t, r) {
    return e === !0
      ? `
    {
      const { wildcards, wcLen, groupRedact, nestedRedact } = this
      for (var i = 0; i < wcLen; i++) {
        const { before, beforeStr, after, nested } = wildcards[i]
        if (nested === true) {
          secret[beforeStr] = secret[beforeStr] || []
          nestedRedact(secret[beforeStr], o, before, after, censor, ${t}, ${r})
        } else secret[beforeStr] = groupRedact(o, before, censor, ${t}, ${r})
      }
    }
  `
      : '';
  }
  function wV(e) {
    return e === !1
      ? 'return o'
      : `
    var s = this.serialize(o)
    this.restore(o)
    return s
  `;
  }
  function EV(e, t) {
    return e === !0
      ? "throw Error('fast-redact: primitives cannot be redacted')"
      : t === !1
        ? 'return o'
        : 'return this.serialize(o)';
  }
});
var pb = $((qhe, rx) => {
  'use strict';
  rx.exports = {
    groupRedact: TV,
    groupRestore: RV,
    nestedRedact: kV,
    nestedRestore: PV,
  };
  function RV({ keys: e, values: t, target: r }) {
    if (r == null || typeof r == 'string') return;
    let n = e.length;
    for (var i = 0; i < n; i++) {
      let s = e[i];
      r[s] = t[i];
    }
  }
  function TV(e, t, r, n, i) {
    let s = ex(e, t);
    if (s == null || typeof s == 'string')
      return { keys: null, values: null, target: s, flat: !0 };
    let o = Object.keys(s),
      a = o.length,
      u = t.length,
      c = i ? [...t] : void 0,
      d = new Array(a);
    for (var m = 0; m < a; m++) {
      let g = o[m];
      (d[m] = s[g]),
        i
          ? ((c[u] = g), (s[g] = r(s[g], c)))
          : n
            ? (s[g] = r(s[g]))
            : (s[g] = r);
    }
    return { keys: o, values: d, target: s, flat: !0 };
  }
  function PV(e) {
    for (let t = 0; t < e.length; t++) {
      let { target: r, path: n, value: i } = e[t],
        s = r;
      for (let o = n.length - 1; o > 0; o--) s = s[n[o]];
      s[n[0]] = i;
    }
  }
  function kV(e, t, r, n, i, s, o) {
    let a = ex(t, r);
    if (a == null) return;
    let u = Object.keys(a),
      c = u.length;
    for (var d = 0; d < c; d++) {
      let m = u[d];
      xV(e, a, m, r, n, i, s, o);
    }
    return e;
  }
  function hb(e, t) {
    return e != null
      ? 'hasOwn' in Object
        ? Object.hasOwn(e, t)
        : Object.prototype.hasOwnProperty.call(e, t)
      : !1;
  }
  function xV(e, t, r, n, i, s, o, a) {
    let u = i.length,
      c = u - 1,
      d = r;
    var m = -1,
      g,
      v,
      S,
      w = null,
      T = null,
      C,
      I,
      x = !1,
      E = 0,
      j = 0,
      q = CV();
    if (((S = g = t[r]), typeof g == 'object')) {
      for (
        ;
        g != null &&
        ++m < u &&
        ((j += 1),
        (r = i[m]),
        (w = S),
        !(r !== '*' && !T && !(typeof g == 'object' && r in g)));

      )
        if (!(r === '*' && (T === '*' && (x = !0), (T = r), m !== c))) {
          if (T) {
            let F = Object.keys(g);
            for (var O = 0; O < F.length; O++) {
              let U = F[O];
              if (((I = g[U]), (C = r === '*'), x))
                (q = ei(q, U, j)),
                  (E = m),
                  (S = tx(
                    I,
                    E - 1,
                    r,
                    n,
                    i,
                    s,
                    o,
                    a,
                    d,
                    g,
                    v,
                    S,
                    C,
                    U,
                    m,
                    c,
                    q,
                    e,
                    t[d],
                    j + 1,
                  ));
              else if (C || (typeof I == 'object' && I !== null && r in I)) {
                if (
                  (C ? (S = I) : (S = I[r]),
                  (v =
                    m !== c ? S : o ? (a ? s(S, [...n, d, ...i]) : s(S)) : s),
                  C)
                ) {
                  let D = zf(ei(q, U, j), S, t[d]);
                  e.push(D), (g[U] = v);
                } else if (I[r] !== v)
                  if ((v === void 0 && s !== void 0) || (hb(I, r) && v === S))
                    q = ei(q, U, j);
                  else {
                    q = ei(q, U, j);
                    let D = zf(ei(q, r, j + 1), S, t[d]);
                    e.push(D), (I[r] = v);
                  }
              }
            }
            T = null;
          } else {
            if (
              ((S = g[r]),
              (q = ei(q, r, j)),
              (v = m !== c ? S : o ? (a ? s(S, [...n, d, ...i]) : s(S)) : s),
              !((hb(g, r) && v === S) || (v === void 0 && s !== void 0)))
            ) {
              let F = zf(q, S, t[d]);
              e.push(F), (g[r] = v);
            }
            g = g[r];
          }
          if (typeof g != 'object') break;
        }
    }
  }
  function ex(e, t) {
    for (var r = -1, n = t.length, i = e; i != null && ++r < n; ) i = i[t[r]];
    return i;
  }
  function tx(e, t, r, n, i, s, o, a, u, c, d, m, g, v, S, w, T, C, I, x) {
    if (t === 0 && (g || (typeof e == 'object' && e !== null && r in e))) {
      if (
        (g ? (m = e) : (m = e[r]),
        (d = S !== w ? m : o ? (a ? s(m, [...n, u, ...i]) : s(m)) : s),
        g)
      ) {
        let E = zf(T, m, I);
        C.push(E), (c[v] = d);
      } else if (e[r] !== d) {
        if (!((d === void 0 && s !== void 0) || (hb(e, r) && d === m))) {
          let E = zf(ei(T, r, x + 1), m, I);
          C.push(E), (e[r] = d);
        }
      }
    }
    for (let E in e)
      typeof e[E] == 'object' &&
        ((T = ei(T, E, x)),
        tx(
          e[E],
          t - 1,
          r,
          n,
          i,
          s,
          o,
          a,
          u,
          c,
          d,
          m,
          g,
          v,
          S,
          w,
          T,
          C,
          I,
          x + 1,
        ));
  }
  function CV() {
    return { parent: null, key: null, children: [], depth: 0 };
  }
  function ei(e, t, r) {
    if (e.depth === r) return ei(e.parent, t, r);
    var n = { parent: e, key: t, depth: r, children: [] };
    return e.children.push(n), n;
  }
  function zf(e, t, r) {
    let n = e,
      i = [];
    do i.push(n.key), (n = n.parent);
    while (n.parent != null);
    return { path: i, value: t, target: r };
  }
});
var sx = $((Mhe, nx) => {
  'use strict';
  var { groupRestore: OV, nestedRestore: IV } = pb();
  nx.exports = AV;
  function AV() {
    return function () {
      if (this.restore) {
        this.restore.state.secret = this.secret;
        return;
      }
      let { secret: t, wcLen: r } = this,
        n = Object.keys(t),
        i = $V(t, n),
        s = r > 0,
        o = s
          ? { secret: t, groupRestore: OV, nestedRestore: IV }
          : { secret: t };
      (this.restore = Function('o', NV(i, n, s)).bind(o)),
        (this.restore.state = o);
    };
  }
  function $V(e, t) {
    return t
      .map((r) => {
        let { circle: n, escPath: i, leadingBracket: s } = e[r],
          a = n
            ? `o.${n} = secret[${i}].val`
            : `o${s ? '' : '.'}${r} = secret[${i}].val`,
          u = `secret[${i}].val = undefined`;
        return `
      if (secret[${i}].val !== undefined) {
        try { ${a} } catch (e) {}
        ${u}
      }
    `;
      })
      .join('');
  }
  function NV(e, t, r) {
    return `
    const secret = this.secret
    ${
      r === !0
        ? `
    const keys = Object.keys(secret)
    const len = keys.length
    for (var i = len - 1; i >= ${t.length}; i--) {
      const k = keys[i]
      const o = secret[k]
      if (o) {
        if (o.flat === true) this.groupRestore(o)
        else this.nestedRestore(o)
        secret[k] = null
      }
    }
  `
        : ''
    }
    ${e}
    return o
  `;
  }
});
var ox = $((Hhe, ix) => {
  'use strict';
  ix.exports = LV;
  function LV(e) {
    let {
        secret: t,
        censor: r,
        compileRestore: n,
        serialize: i,
        groupRedact: s,
        nestedRedact: o,
        wildcards: a,
        wcLen: u,
      } = e,
      c = [{ secret: t, censor: r, compileRestore: n }];
    return (
      i !== !1 && c.push({ serialize: i }),
      u > 0 &&
        c.push({ groupRedact: s, nestedRedact: o, wildcards: a, wcLen: u }),
      Object.assign(...c)
    );
  }
});
var ux = $((zhe, lx) => {
  'use strict';
  var ax = Yk(),
    DV = Xk(),
    jV = Qk(),
    FV = sx(),
    { groupRedact: qV, nestedRedact: MV } = pb(),
    HV = ox(),
    zV = Mp(),
    UV = ax(),
    mb = (e) => e;
  mb.restore = mb;
  var VV = '[REDACTED]';
  yb.rx = zV;
  yb.validator = ax;
  lx.exports = yb;
  function yb(e = {}) {
    let t = Array.from(new Set(e.paths || [])),
      r =
        'serialize' in e &&
        (e.serialize === !1 || typeof e.serialize == 'function')
          ? e.serialize
          : JSON.stringify,
      n = e.remove;
    if (n === !0 && r !== JSON.stringify)
      throw Error(
        'fast-redact \u2013 remove option may only be set when serializer is JSON.stringify',
      );
    let i = n === !0 ? void 0 : 'censor' in e ? e.censor : VV,
      s = typeof i == 'function',
      o = s && i.length > 1;
    if (t.length === 0) return r || mb;
    UV({ paths: t, serialize: r, censor: i });
    let { wildcards: a, wcLen: u, secret: c } = DV({ paths: t, censor: i }),
      d = FV(),
      m = 'strict' in e ? e.strict : !0;
    return jV(
      {
        secret: c,
        wcLen: u,
        serialize: r,
        strict: m,
        isCensorFct: s,
        censorFctTakesPath: o,
      },
      HV({
        secret: c,
        censor: i,
        compileRestore: d,
        serialize: r,
        groupRedact: qV,
        nestedRedact: MV,
        wildcards: a,
        wcLen: u,
      }),
    );
  }
});
var uu = $((Uhe, cx) => {
  'use strict';
  var BV = Symbol('pino.setLevel'),
    WV = Symbol('pino.getLevel'),
    GV = Symbol('pino.levelVal'),
    YV = Symbol('pino.levelComp'),
    JV = Symbol('pino.useLevelLabels'),
    KV = Symbol('pino.useOnlyCustomLevels'),
    XV = Symbol('pino.mixin'),
    ZV = Symbol('pino.lsCache'),
    QV = Symbol('pino.chindings'),
    eB = Symbol('pino.asJson'),
    tB = Symbol('pino.write'),
    rB = Symbol('pino.redactFmt'),
    nB = Symbol('pino.time'),
    sB = Symbol('pino.timeSliceIndex'),
    iB = Symbol('pino.stream'),
    oB = Symbol('pino.stringify'),
    aB = Symbol('pino.stringifySafe'),
    lB = Symbol('pino.stringifiers'),
    uB = Symbol('pino.end'),
    cB = Symbol('pino.formatOpts'),
    fB = Symbol('pino.messageKey'),
    dB = Symbol('pino.errorKey'),
    hB = Symbol('pino.nestedKey'),
    pB = Symbol('pino.nestedKeyStr'),
    mB = Symbol('pino.mixinMergeStrategy'),
    yB = Symbol('pino.msgPrefix'),
    gB = Symbol('pino.wildcardFirst'),
    vB = Symbol.for('pino.serializers'),
    bB = Symbol.for('pino.formatters'),
    SB = Symbol.for('pino.hooks'),
    _B = Symbol.for('pino.metadata');
  cx.exports = {
    setLevelSym: BV,
    getLevelSym: WV,
    levelValSym: GV,
    levelCompSym: YV,
    useLevelLabelsSym: JV,
    mixinSym: XV,
    lsCacheSym: ZV,
    chindingsSym: QV,
    asJsonSym: eB,
    writeSym: tB,
    serializersSym: vB,
    redactFmtSym: rB,
    timeSym: nB,
    timeSliceIndexSym: sB,
    streamSym: iB,
    stringifySym: oB,
    stringifySafeSym: aB,
    stringifiersSym: lB,
    endSym: uB,
    formatOptsSym: cB,
    messageKeySym: fB,
    errorKeySym: dB,
    nestedKeySym: hB,
    wildcardFirstSym: gB,
    needsMetadataGsym: _B,
    useOnlyCustomLevelsSym: KV,
    formattersSym: bB,
    hooksSym: SB,
    nestedKeyStrSym: pB,
    mixinMergeStrategySym: mB,
    msgPrefixSym: yB,
  };
});
var bb = $((Vhe, px) => {
  'use strict';
  var vb = ux(),
    { redactFmtSym: wB, wildcardFirstSym: Hp } = uu(),
    { rx: gb, validator: EB } = vb,
    fx = EB({
      ERR_PATHS_MUST_BE_STRINGS: () =>
        'pino \u2013 redacted paths must be strings',
      ERR_INVALID_PATH: (e) =>
        `pino \u2013 redact paths array contains an invalid path (${e})`,
    }),
    dx = '[Redacted]',
    hx = !1;
  function RB(e, t) {
    let { paths: r, censor: n } = TB(e),
      i = r.reduce((a, u) => {
        gb.lastIndex = 0;
        let c = gb.exec(u),
          d = gb.exec(u),
          m =
            c[1] !== void 0
              ? c[1].replace(/^(?:"|'|`)(.*)(?:"|'|`)$/, '$1')
              : c[0];
        if ((m === '*' && (m = Hp), d === null)) return (a[m] = null), a;
        if (a[m] === null) return a;
        let { index: g } = d,
          v = `${u.substr(g, u.length - 1)}`;
        return (
          (a[m] = a[m] || []),
          m !== Hp && a[m].length === 0 && a[m].push(...(a[Hp] || [])),
          m === Hp &&
            Object.keys(a).forEach(function (S) {
              a[S] && a[S].push(v);
            }),
          a[m].push(v),
          a
        );
      }, {}),
      s = { [wB]: vb({ paths: r, censor: n, serialize: t, strict: hx }) },
      o = (...a) => t(typeof n == 'function' ? n(...a) : n);
    return [...Object.keys(i), ...Object.getOwnPropertySymbols(i)].reduce(
      (a, u) => {
        if (i[u] === null) a[u] = (c) => o(c, [u]);
        else {
          let c = typeof n == 'function' ? (d, m) => n(d, [u, ...m]) : n;
          a[u] = vb({ paths: i[u], censor: c, serialize: t, strict: hx });
        }
        return a;
      },
      s,
    );
  }
  function TB(e) {
    if (Array.isArray(e)) return (e = { paths: e, censor: dx }), fx(e), e;
    let { paths: t, censor: r = dx, remove: n } = e;
    if (Array.isArray(t) === !1)
      throw Error('pino \u2013 redact must contain an array of strings');
    return (
      n === !0 && (r = void 0),
      fx({ paths: t, censor: r }),
      { paths: t, censor: r }
    );
  }
  px.exports = RB;
});
var yx = $((Bhe, mx) => {
  'use strict';
  var PB = () => '',
    kB = () => `,"time":${Date.now()}`,
    xB = () => `,"time":${Math.round(Date.now() / 1e3)}`,
    CB = () => `,"time":"${new Date(Date.now()).toISOString()}"`;
  mx.exports = { nullTime: PB, epochTime: kB, unixTime: xB, isoTime: CB };
});
var vx = $((Whe, gx) => {
  'use strict';
  function OB(e) {
    try {
      return JSON.stringify(e);
    } catch {
      return '"[Circular]"';
    }
  }
  gx.exports = IB;
  function IB(e, t, r) {
    var n = (r && r.stringify) || OB,
      i = 1;
    if (typeof e == 'object' && e !== null) {
      var s = t.length + i;
      if (s === 1) return e;
      var o = new Array(s);
      o[0] = n(e);
      for (var a = 1; a < s; a++) o[a] = n(t[a]);
      return o.join(' ');
    }
    if (typeof e != 'string') return e;
    var u = t.length;
    if (u === 0) return e;
    for (
      var c = '', d = 1 - i, m = -1, g = (e && e.length) || 0, v = 0;
      v < g;

    ) {
      if (e.charCodeAt(v) === 37 && v + 1 < g) {
        switch (((m = m > -1 ? m : 0), e.charCodeAt(v + 1))) {
          case 100:
          case 102:
            if (d >= u || t[d] == null) break;
            m < v && (c += e.slice(m, v)),
              (c += Number(t[d])),
              (m = v + 2),
              v++;
            break;
          case 105:
            if (d >= u || t[d] == null) break;
            m < v && (c += e.slice(m, v)),
              (c += Math.floor(Number(t[d]))),
              (m = v + 2),
              v++;
            break;
          case 79:
          case 111:
          case 106:
            if (d >= u || t[d] === void 0) break;
            m < v && (c += e.slice(m, v));
            var S = typeof t[d];
            if (S === 'string') {
              (c += "'" + t[d] + "'"), (m = v + 2), v++;
              break;
            }
            if (S === 'function') {
              (c += t[d].name || '<anonymous>'), (m = v + 2), v++;
              break;
            }
            (c += n(t[d])), (m = v + 2), v++;
            break;
          case 115:
            if (d >= u) break;
            m < v && (c += e.slice(m, v)),
              (c += String(t[d])),
              (m = v + 2),
              v++;
            break;
          case 37:
            m < v && (c += e.slice(m, v)), (c += '%'), (m = v + 2), v++, d--;
            break;
        }
        ++d;
      }
      ++v;
    }
    return m === -1 ? e : (m < g && (c += e.slice(m)), c);
  }
});
var _b = $((Ghe, Sb) => {
  'use strict';
  if (typeof SharedArrayBuffer < 'u' && typeof Atomics < 'u') {
    let t = function (r) {
        if ((r > 0 && r < 1 / 0) === !1)
          throw typeof r != 'number' && typeof r != 'bigint'
            ? TypeError('sleep: ms must be a number')
            : RangeError(
                'sleep: ms must be a number that is greater than 0 but less than Infinity',
              );
        Atomics.wait(e, 0, 0, Number(r));
      },
      e = new Int32Array(new SharedArrayBuffer(4));
    Sb.exports = t;
  } else {
    let e = function (t) {
      if ((t > 0 && t < 1 / 0) === !1)
        throw typeof t != 'number' && typeof t != 'bigint'
          ? TypeError('sleep: ms must be a number')
          : RangeError(
              'sleep: ms must be a number that is greater than 0 but less than Infinity',
            );
      let n = Date.now() + Number(t);
      for (; n > Date.now(); );
    };
    Sb.exports = e;
  }
});
var Px = $((Yhe, Tx) => {
  'use strict';
  var jt = require('fs'),
    AB = require('events'),
    $B = require('util').inherits,
    bx = require('path'),
    Eb = _b(),
    zp = 100,
    Up = Buffer.allocUnsafe(0),
    NB = 16 * 1024,
    Sx = 'buffer',
    _x = 'utf8';
  function wx(e, t) {
    (t._opening = !0), (t._writing = !0), (t._asyncDrainScheduled = !1);
    function r(s, o) {
      if (s) {
        (t._reopening = !1),
          (t._writing = !1),
          (t._opening = !1),
          t.sync
            ? process.nextTick(() => {
                t.listenerCount('error') > 0 && t.emit('error', s);
              })
            : t.emit('error', s);
        return;
      }
      let a = t._reopening;
      (t.fd = o),
        (t.file = e),
        (t._reopening = !1),
        (t._opening = !1),
        (t._writing = !1),
        t.sync ? process.nextTick(() => t.emit('ready')) : t.emit('ready'),
        !t.destroyed &&
          ((!t._writing && t._len > t.minLength) || t._flushPending
            ? t._actualWrite()
            : a && process.nextTick(() => t.emit('drain')));
    }
    let n = t.append ? 'a' : 'w',
      i = t.mode;
    if (t.sync)
      try {
        t.mkdir && jt.mkdirSync(bx.dirname(e), { recursive: !0 });
        let s = jt.openSync(e, n, i);
        r(null, s);
      } catch (s) {
        throw (r(s), s);
      }
    else
      t.mkdir
        ? jt.mkdir(bx.dirname(e), { recursive: !0 }, (s) => {
            if (s) return r(s);
            jt.open(e, n, i, r);
          })
        : jt.open(e, n, i, r);
  }
  function Xn(e) {
    if (!(this instanceof Xn)) return new Xn(e);
    let {
      fd: t,
      dest: r,
      minLength: n,
      maxLength: i,
      maxWrite: s,
      sync: o,
      append: a = !0,
      mkdir: u,
      retryEAGAIN: c,
      fsync: d,
      contentMode: m,
      mode: g,
    } = e || {};
    (t = t || r),
      (this._len = 0),
      (this.fd = -1),
      (this._bufs = []),
      (this._lens = []),
      (this._writing = !1),
      (this._ending = !1),
      (this._reopening = !1),
      (this._asyncDrainScheduled = !1),
      (this._flushPending = !1),
      (this._hwm = Math.max(n || 0, 16387)),
      (this.file = null),
      (this.destroyed = !1),
      (this.minLength = n || 0),
      (this.maxLength = i || 0),
      (this.maxWrite = s || NB),
      (this.sync = o || !1),
      (this.writable = !0),
      (this._fsync = d || !1),
      (this.append = a || !1),
      (this.mode = g),
      (this.retryEAGAIN = c || (() => !0)),
      (this.mkdir = u || !1);
    let v, S;
    if (m === Sx)
      (this._writingBuf = Up),
        (this.write = jB),
        (this.flush = qB),
        (this.flushSync = HB),
        (this._actualWrite = UB),
        (v = () => jt.writeSync(this.fd, this._writingBuf)),
        (S = () => jt.write(this.fd, this._writingBuf, this.release));
    else if (m === void 0 || m === _x)
      (this._writingBuf = ''),
        (this.write = DB),
        (this.flush = FB),
        (this.flushSync = MB),
        (this._actualWrite = zB),
        (v = () => jt.writeSync(this.fd, this._writingBuf, 'utf8')),
        (S = () => jt.write(this.fd, this._writingBuf, 'utf8', this.release));
    else
      throw new Error(
        `SonicBoom supports "${_x}" and "${Sx}", but passed ${m}`,
      );
    if (typeof t == 'number')
      (this.fd = t), process.nextTick(() => this.emit('ready'));
    else if (typeof t == 'string') wx(t, this);
    else throw new Error('SonicBoom supports only file descriptors and files');
    if (this.minLength >= this.maxWrite)
      throw new Error(
        `minLength should be smaller than maxWrite (${this.maxWrite})`,
      );
    (this.release = (w, T) => {
      if (w) {
        if (
          (w.code === 'EAGAIN' || w.code === 'EBUSY') &&
          this.retryEAGAIN(
            w,
            this._writingBuf.length,
            this._len - this._writingBuf.length,
          )
        )
          if (this.sync)
            try {
              Eb(zp), this.release(void 0, 0);
            } catch (x) {
              this.release(x);
            }
          else setTimeout(S, zp);
        else (this._writing = !1), this.emit('error', w);
        return;
      }
      this.emit('write', T);
      let C = wb(this._writingBuf, this._len, T);
      if (
        ((this._len = C.len),
        (this._writingBuf = C.writingBuf),
        this._writingBuf.length)
      ) {
        if (!this.sync) {
          S();
          return;
        }
        try {
          do {
            let x = v(),
              E = wb(this._writingBuf, this._len, x);
            (this._len = E.len), (this._writingBuf = E.writingBuf);
          } while (this._writingBuf.length);
        } catch (x) {
          this.release(x);
          return;
        }
      }
      this._fsync && jt.fsyncSync(this.fd);
      let I = this._len;
      this._reopening
        ? ((this._writing = !1), (this._reopening = !1), this.reopen())
        : I > this.minLength
          ? this._actualWrite()
          : this._ending
            ? I > 0
              ? this._actualWrite()
              : ((this._writing = !1), Vp(this))
            : ((this._writing = !1),
              this.sync
                ? this._asyncDrainScheduled ||
                  ((this._asyncDrainScheduled = !0), process.nextTick(LB, this))
                : this.emit('drain'));
    }),
      this.on('newListener', function (w) {
        w === 'drain' && (this._asyncDrainScheduled = !1);
      });
  }
  function wb(e, t, r) {
    return (
      typeof e == 'string' &&
        Buffer.byteLength(e) !== r &&
        (r = Buffer.from(e).subarray(0, r).toString().length),
      (t = Math.max(t - r, 0)),
      (e = e.slice(r)),
      { writingBuf: e, len: t }
    );
  }
  function LB(e) {
    e.listenerCount('drain') > 0 &&
      ((e._asyncDrainScheduled = !1), e.emit('drain'));
  }
  $B(Xn, AB);
  function Ex(e, t) {
    return e.length === 0 ? Up : e.length === 1 ? e[0] : Buffer.concat(e, t);
  }
  function DB(e) {
    if (this.destroyed) throw new Error('SonicBoom destroyed');
    let t = this._len + e.length,
      r = this._bufs;
    return this.maxLength && t > this.maxLength
      ? (this.emit('drop', e), this._len < this._hwm)
      : (r.length === 0 || r[r.length - 1].length + e.length > this.maxWrite
          ? r.push('' + e)
          : (r[r.length - 1] += e),
        (this._len = t),
        !this._writing && this._len >= this.minLength && this._actualWrite(),
        this._len < this._hwm);
  }
  function jB(e) {
    if (this.destroyed) throw new Error('SonicBoom destroyed');
    let t = this._len + e.length,
      r = this._bufs,
      n = this._lens;
    return this.maxLength && t > this.maxLength
      ? (this.emit('drop', e), this._len < this._hwm)
      : (r.length === 0 || n[n.length - 1] + e.length > this.maxWrite
          ? (r.push([e]), n.push(e.length))
          : (r[r.length - 1].push(e), (n[n.length - 1] += e.length)),
        (this._len = t),
        !this._writing && this._len >= this.minLength && this._actualWrite(),
        this._len < this._hwm);
  }
  function Rx(e) {
    this._flushPending = !0;
    let t = () => {
        this._fsync
          ? ((this._flushPending = !1), e())
          : jt.fsync(this.fd, (n) => {
              (this._flushPending = !1), e(n);
            }),
          this.off('error', r);
      },
      r = (n) => {
        (this._flushPending = !1), e(n), this.off('drain', t);
      };
    this.once('drain', t), this.once('error', r);
  }
  function FB(e) {
    if (e != null && typeof e != 'function')
      throw new Error('flush cb must be a function');
    if (this.destroyed) {
      let t = new Error('SonicBoom destroyed');
      if (e) {
        e(t);
        return;
      }
      throw t;
    }
    if (this.minLength <= 0) {
      e?.();
      return;
    }
    e && Rx.call(this, e),
      !this._writing &&
        (this._bufs.length === 0 && this._bufs.push(''), this._actualWrite());
  }
  function qB(e) {
    if (e != null && typeof e != 'function')
      throw new Error('flush cb must be a function');
    if (this.destroyed) {
      let t = new Error('SonicBoom destroyed');
      if (e) {
        e(t);
        return;
      }
      throw t;
    }
    if (this.minLength <= 0) {
      e?.();
      return;
    }
    e && Rx.call(this, e),
      !this._writing &&
        (this._bufs.length === 0 && (this._bufs.push([]), this._lens.push(0)),
        this._actualWrite());
  }
  Xn.prototype.reopen = function (e) {
    if (this.destroyed) throw new Error('SonicBoom destroyed');
    if (this._opening) {
      this.once('ready', () => {
        this.reopen(e);
      });
      return;
    }
    if (this._ending) return;
    if (!this.file)
      throw new Error(
        'Unable to reopen a file descriptor, you must pass a file to SonicBoom',
      );
    if ((e && (this.file = e), (this._reopening = !0), this._writing)) return;
    let t = this.fd;
    this.once('ready', () => {
      t !== this.fd &&
        jt.close(t, (r) => {
          if (r) return this.emit('error', r);
        });
    }),
      wx(this.file, this);
  };
  Xn.prototype.end = function () {
    if (this.destroyed) throw new Error('SonicBoom destroyed');
    if (this._opening) {
      this.once('ready', () => {
        this.end();
      });
      return;
    }
    this._ending ||
      ((this._ending = !0),
      !this._writing &&
        (this._len > 0 && this.fd >= 0 ? this._actualWrite() : Vp(this)));
  };
  function MB() {
    if (this.destroyed) throw new Error('SonicBoom destroyed');
    if (this.fd < 0) throw new Error('sonic boom is not ready yet');
    !this._writing &&
      this._writingBuf.length > 0 &&
      (this._bufs.unshift(this._writingBuf), (this._writingBuf = ''));
    let e = '';
    for (; this._bufs.length || e; ) {
      e.length <= 0 && (e = this._bufs[0]);
      try {
        let t = jt.writeSync(this.fd, e, 'utf8'),
          r = wb(e, this._len, t);
        (e = r.writingBuf),
          (this._len = r.len),
          e.length <= 0 && this._bufs.shift();
      } catch (t) {
        if (
          (t.code === 'EAGAIN' || t.code === 'EBUSY') &&
          !this.retryEAGAIN(t, e.length, this._len - e.length)
        )
          throw t;
        Eb(zp);
      }
    }
    try {
      jt.fsyncSync(this.fd);
    } catch {}
  }
  function HB() {
    if (this.destroyed) throw new Error('SonicBoom destroyed');
    if (this.fd < 0) throw new Error('sonic boom is not ready yet');
    !this._writing &&
      this._writingBuf.length > 0 &&
      (this._bufs.unshift([this._writingBuf]), (this._writingBuf = Up));
    let e = Up;
    for (; this._bufs.length || e.length; ) {
      e.length <= 0 && (e = Ex(this._bufs[0], this._lens[0]));
      try {
        let t = jt.writeSync(this.fd, e);
        (e = e.subarray(t)),
          (this._len = Math.max(this._len - t, 0)),
          e.length <= 0 && (this._bufs.shift(), this._lens.shift());
      } catch (t) {
        if (
          (t.code === 'EAGAIN' || t.code === 'EBUSY') &&
          !this.retryEAGAIN(t, e.length, this._len - e.length)
        )
          throw t;
        Eb(zp);
      }
    }
  }
  Xn.prototype.destroy = function () {
    this.destroyed || Vp(this);
  };
  function zB() {
    let e = this.release;
    if (
      ((this._writing = !0),
      (this._writingBuf = this._writingBuf || this._bufs.shift() || ''),
      this.sync)
    )
      try {
        let t = jt.writeSync(this.fd, this._writingBuf, 'utf8');
        e(null, t);
      } catch (t) {
        e(t);
      }
    else jt.write(this.fd, this._writingBuf, 'utf8', e);
  }
  function UB() {
    let e = this.release;
    if (
      ((this._writing = !0),
      (this._writingBuf = this._writingBuf.length
        ? this._writingBuf
        : Ex(this._bufs.shift(), this._lens.shift())),
      this.sync)
    )
      try {
        let t = jt.writeSync(this.fd, this._writingBuf);
        e(null, t);
      } catch (t) {
        e(t);
      }
    else jt.write(this.fd, this._writingBuf, e);
  }
  function Vp(e) {
    if (e.fd === -1) {
      e.once('ready', Vp.bind(null, e));
      return;
    }
    (e.destroyed = !0), (e._bufs = []), (e._lens = []), jt.fsync(e.fd, t);
    function t() {
      e.fd !== 1 && e.fd !== 2 ? jt.close(e.fd, r) : r();
    }
    function r(n) {
      if (n) {
        e.emit('error', n);
        return;
      }
      e._ending && !e._writing && e.emit('finish'), e.emit('close');
    }
  }
  Xn.SonicBoom = Xn;
  Xn.default = Xn;
  Tx.exports = Xn;
});
var Rb = $((Jhe, Ix) => {
  'use strict';
  var Zn = { exit: [], beforeExit: [] },
    kx = { exit: WB, beforeExit: GB },
    cu;
  function VB() {
    cu === void 0 && (cu = new FinalizationRegistry(YB));
  }
  function BB(e) {
    Zn[e].length > 0 || process.on(e, kx[e]);
  }
  function xx(e) {
    Zn[e].length > 0 ||
      (process.removeListener(e, kx[e]),
      Zn.exit.length === 0 && Zn.beforeExit.length === 0 && (cu = void 0));
  }
  function WB() {
    Cx('exit');
  }
  function GB() {
    Cx('beforeExit');
  }
  function Cx(e) {
    for (let t of Zn[e]) {
      let r = t.deref(),
        n = t.fn;
      r !== void 0 && n(r, e);
    }
    Zn[e] = [];
  }
  function YB(e) {
    for (let t of ['exit', 'beforeExit']) {
      let r = Zn[t].indexOf(e);
      Zn[t].splice(r, r + 1), xx(t);
    }
  }
  function Ox(e, t, r) {
    if (t === void 0) throw new Error("the object can't be undefined");
    BB(e);
    let n = new WeakRef(t);
    (n.fn = r), VB(), cu.register(t, n), Zn[e].push(n);
  }
  function JB(e, t) {
    Ox('exit', e, t);
  }
  function KB(e, t) {
    Ox('beforeExit', e, t);
  }
  function XB(e) {
    if (cu !== void 0) {
      cu.unregister(e);
      for (let t of ['exit', 'beforeExit'])
        (Zn[t] = Zn[t].filter((r) => {
          let n = r.deref();
          return n && n !== e;
        })),
          xx(t);
    }
  }
  Ix.exports = { register: JB, registerBeforeExit: KB, unregister: XB };
});
var Ax = $((Khe, ZB) => {
  ZB.exports = {
    name: 'thread-stream',
    version: '3.1.0',
    description: 'A streaming way to send data to a Node.js Worker Thread',
    main: 'index.js',
    types: 'index.d.ts',
    dependencies: { 'real-require': '^0.2.0' },
    devDependencies: {
      '@types/node': '^20.1.0',
      '@types/tap': '^15.0.0',
      '@yao-pkg/pkg': '^5.11.5',
      desm: '^1.3.0',
      fastbench: '^1.0.1',
      husky: '^9.0.6',
      'pino-elasticsearch': '^8.0.0',
      'sonic-boom': '^4.0.1',
      standard: '^17.0.0',
      tap: '^16.2.0',
      'ts-node': '^10.8.0',
      typescript: '^5.3.2',
      'why-is-node-running': '^2.2.2',
    },
    scripts: {
      build: 'tsc --noEmit',
      test: 'standard && npm run build && npm run transpile && tap "test/**/*.test.*js" && tap --ts test/*.test.*ts',
      'test:ci':
        'standard && npm run transpile && npm run test:ci:js && npm run test:ci:ts',
      'test:ci:js':
        'tap --no-check-coverage --timeout=120 --coverage-report=lcovonly "test/**/*.test.*js"',
      'test:ci:ts':
        'tap --ts --no-check-coverage --coverage-report=lcovonly "test/**/*.test.*ts"',
      'test:yarn':
        'npm run transpile && tap "test/**/*.test.js" --no-check-coverage',
      transpile: 'sh ./test/ts/transpile.sh',
      prepare: 'husky install',
    },
    standard: { ignore: ['test/ts/**/*', 'test/syntax-error.mjs'] },
    repository: {
      type: 'git',
      url: 'git+https://github.com/mcollina/thread-stream.git',
    },
    keywords: ['worker', 'thread', 'threads', 'stream'],
    author: 'Matteo Collina <hello@matteocollina.com>',
    license: 'MIT',
    bugs: { url: 'https://github.com/mcollina/thread-stream/issues' },
    homepage: 'https://github.com/mcollina/thread-stream#readme',
  };
});
var Nx = $((Xhe, $x) => {
  'use strict';
  function QB(e, t, r, n, i) {
    let s = Date.now() + n,
      o = Atomics.load(e, t);
    if (o === r) {
      i(null, 'ok');
      return;
    }
    let a = o,
      u = (c) => {
        Date.now() > s
          ? i(null, 'timed-out')
          : setTimeout(() => {
              (a = o),
                (o = Atomics.load(e, t)),
                o === a
                  ? u(c >= 1e3 ? 1e3 : c * 2)
                  : o === r
                    ? i(null, 'ok')
                    : i(null, 'not-equal');
            }, c);
      };
    u(1);
  }
  function e3(e, t, r, n, i) {
    let s = Date.now() + n,
      o = Atomics.load(e, t);
    if (o !== r) {
      i(null, 'ok');
      return;
    }
    let a = (u) => {
      Date.now() > s
        ? i(null, 'timed-out')
        : setTimeout(() => {
            (o = Atomics.load(e, t)),
              o !== r ? i(null, 'ok') : a(u >= 1e3 ? 1e3 : u * 2);
          }, u);
    };
    a(1);
  }
  $x.exports = { wait: QB, waitDiff: e3 };
});
var Dx = $((Zhe, Lx) => {
  'use strict';
  Lx.exports = { WRITE_INDEX: 4, READ_INDEX: 8 };
});
var Hx = $((Qhe, Mx) => {
  'use strict';
  var { version: t3 } = Ax(),
    { EventEmitter: r3 } = require('events'),
    { Worker: n3 } = require('worker_threads'),
    { join: s3 } = require('path'),
    { pathToFileURL: i3 } = require('url'),
    { wait: o3 } = Nx(),
    { WRITE_INDEX: Zr, READ_INDEX: gs } = Dx(),
    a3 = require('buffer'),
    l3 = require('assert'),
    J = Symbol('kImpl'),
    u3 = a3.constants.MAX_STRING_LENGTH,
    Uf = class {
      constructor(t) {
        this._value = t;
      }
      deref() {
        return this._value;
      }
    },
    Wp = class {
      register() {}
      unregister() {}
    },
    c3 = process.env.NODE_V8_COVERAGE ? Wp : global.FinalizationRegistry || Wp,
    f3 = process.env.NODE_V8_COVERAGE ? Uf : global.WeakRef || Uf,
    jx = new c3((e) => {
      e.exited || e.terminate();
    });
  function d3(e, t) {
    let { filename: r, workerData: n } = t,
      s =
        ('__bundlerPathsOverrides' in globalThis
          ? globalThis.__bundlerPathsOverrides
          : {})['thread-stream-worker'] || s3(__dirname, 'lib', 'worker.js'),
      o = new n3(s, {
        ...t.workerOpts,
        trackUnmanagedFds: !1,
        workerData: {
          filename: r.indexOf('file://') === 0 ? r : i3(r).href,
          dataBuf: e[J].dataBuf,
          stateBuf: e[J].stateBuf,
          workerData: { $context: { threadStreamVersion: t3 }, ...n },
        },
      });
    return (
      (o.stream = new Uf(e)),
      o.on('message', h3),
      o.on('exit', qx),
      jx.register(e, o),
      o
    );
  }
  function Fx(e) {
    l3(!e[J].sync), e[J].needDrain && ((e[J].needDrain = !1), e.emit('drain'));
  }
  function Bp(e) {
    let t = Atomics.load(e[J].state, Zr),
      r = e[J].data.length - t;
    if (r > 0) {
      if (e[J].buf.length === 0) {
        (e[J].flushing = !1),
          e[J].ending ? Cb(e) : e[J].needDrain && process.nextTick(Fx, e);
        return;
      }
      let n = e[J].buf.slice(0, r),
        i = Buffer.byteLength(n);
      i <= r
        ? ((e[J].buf = e[J].buf.slice(r)), Gp(e, n, Bp.bind(null, e)))
        : e.flush(() => {
            if (!e.destroyed) {
              for (
                Atomics.store(e[J].state, gs, 0),
                  Atomics.store(e[J].state, Zr, 0);
                i > e[J].data.length;

              )
                (r = r / 2),
                  (n = e[J].buf.slice(0, r)),
                  (i = Buffer.byteLength(n));
              (e[J].buf = e[J].buf.slice(r)), Gp(e, n, Bp.bind(null, e));
            }
          });
    } else if (r === 0) {
      if (t === 0 && e[J].buf.length === 0) return;
      e.flush(() => {
        Atomics.store(e[J].state, gs, 0),
          Atomics.store(e[J].state, Zr, 0),
          Bp(e);
      });
    } else vs(e, new Error('overwritten'));
  }
  function h3(e) {
    let t = this.stream.deref();
    if (t === void 0) {
      (this.exited = !0), this.terminate();
      return;
    }
    switch (e.code) {
      case 'READY':
        (this.stream = new f3(t)),
          t.flush(() => {
            (t[J].ready = !0), t.emit('ready');
          });
        break;
      case 'ERROR':
        vs(t, e.err);
        break;
      case 'EVENT':
        Array.isArray(e.args)
          ? t.emit(e.name, ...e.args)
          : t.emit(e.name, e.args);
        break;
      case 'WARNING':
        process.emitWarning(e.err);
        break;
      default:
        vs(t, new Error('this should not happen: ' + e.code));
    }
  }
  function qx(e) {
    let t = this.stream.deref();
    t !== void 0 &&
      (jx.unregister(t),
      (t.worker.exited = !0),
      t.worker.off('exit', qx),
      vs(t, e !== 0 ? new Error('the worker thread exited') : null));
  }
  var Pb = class extends r3 {
    constructor(t = {}) {
      if ((super(), t.bufferSize < 4))
        throw new Error('bufferSize must at least fit a 4-byte utf-8 char');
      (this[J] = {}),
        (this[J].stateBuf = new SharedArrayBuffer(128)),
        (this[J].state = new Int32Array(this[J].stateBuf)),
        (this[J].dataBuf = new SharedArrayBuffer(
          t.bufferSize || 4 * 1024 * 1024,
        )),
        (this[J].data = Buffer.from(this[J].dataBuf)),
        (this[J].sync = t.sync || !1),
        (this[J].ending = !1),
        (this[J].ended = !1),
        (this[J].needDrain = !1),
        (this[J].destroyed = !1),
        (this[J].flushing = !1),
        (this[J].ready = !1),
        (this[J].finished = !1),
        (this[J].errored = null),
        (this[J].closed = !1),
        (this[J].buf = ''),
        (this.worker = d3(this, t)),
        this.on('message', (r, n) => {
          this.worker.postMessage(r, n);
        });
    }
    write(t) {
      if (this[J].destroyed)
        return kb(this, new Error('the worker has exited')), !1;
      if (this[J].ending)
        return kb(this, new Error('the worker is ending')), !1;
      if (this[J].flushing && this[J].buf.length + t.length >= u3)
        try {
          Tb(this), (this[J].flushing = !0);
        } catch (r) {
          return vs(this, r), !1;
        }
      if (((this[J].buf += t), this[J].sync))
        try {
          return Tb(this), !0;
        } catch (r) {
          return vs(this, r), !1;
        }
      return (
        this[J].flushing || ((this[J].flushing = !0), setImmediate(Bp, this)),
        (this[J].needDrain =
          this[J].data.length -
            this[J].buf.length -
            Atomics.load(this[J].state, Zr) <=
          0),
        !this[J].needDrain
      );
    }
    end() {
      this[J].destroyed || ((this[J].ending = !0), Cb(this));
    }
    flush(t) {
      if (this[J].destroyed) {
        typeof t == 'function' &&
          process.nextTick(t, new Error('the worker has exited'));
        return;
      }
      let r = Atomics.load(this[J].state, Zr);
      o3(this[J].state, gs, r, 1 / 0, (n, i) => {
        if (n) {
          vs(this, n), process.nextTick(t, n);
          return;
        }
        if (i === 'not-equal') {
          this.flush(t);
          return;
        }
        process.nextTick(t);
      });
    }
    flushSync() {
      this[J].destroyed || (Tb(this), xb(this));
    }
    unref() {
      this.worker.unref();
    }
    ref() {
      this.worker.ref();
    }
    get ready() {
      return this[J].ready;
    }
    get destroyed() {
      return this[J].destroyed;
    }
    get closed() {
      return this[J].closed;
    }
    get writable() {
      return !this[J].destroyed && !this[J].ending;
    }
    get writableEnded() {
      return this[J].ending;
    }
    get writableFinished() {
      return this[J].finished;
    }
    get writableNeedDrain() {
      return this[J].needDrain;
    }
    get writableObjectMode() {
      return !1;
    }
    get writableErrored() {
      return this[J].errored;
    }
  };
  function kb(e, t) {
    setImmediate(() => {
      e.emit('error', t);
    });
  }
  function vs(e, t) {
    e[J].destroyed ||
      ((e[J].destroyed = !0),
      t && ((e[J].errored = t), kb(e, t)),
      e.worker.exited
        ? setImmediate(() => {
            (e[J].closed = !0), e.emit('close');
          })
        : e.worker
            .terminate()
            .catch(() => {})
            .then(() => {
              (e[J].closed = !0), e.emit('close');
            }));
  }
  function Gp(e, t, r) {
    let n = Atomics.load(e[J].state, Zr),
      i = Buffer.byteLength(t);
    return (
      e[J].data.write(t, n),
      Atomics.store(e[J].state, Zr, n + i),
      Atomics.notify(e[J].state, Zr),
      r(),
      !0
    );
  }
  function Cb(e) {
    if (!(e[J].ended || !e[J].ending || e[J].flushing)) {
      e[J].ended = !0;
      try {
        e.flushSync();
        let t = Atomics.load(e[J].state, gs);
        Atomics.store(e[J].state, Zr, -1), Atomics.notify(e[J].state, Zr);
        let r = 0;
        for (; t !== -1; ) {
          if (
            (Atomics.wait(e[J].state, gs, t, 1e3),
            (t = Atomics.load(e[J].state, gs)),
            t === -2)
          ) {
            vs(e, new Error('end() failed'));
            return;
          }
          if (++r === 10) {
            vs(e, new Error('end() took too long (10s)'));
            return;
          }
        }
        process.nextTick(() => {
          (e[J].finished = !0), e.emit('finish');
        });
      } catch (t) {
        vs(e, t);
      }
    }
  }
  function Tb(e) {
    let t = () => {
      e[J].ending ? Cb(e) : e[J].needDrain && process.nextTick(Fx, e);
    };
    for (e[J].flushing = !1; e[J].buf.length !== 0; ) {
      let r = Atomics.load(e[J].state, Zr),
        n = e[J].data.length - r;
      if (n === 0) {
        xb(e),
          Atomics.store(e[J].state, gs, 0),
          Atomics.store(e[J].state, Zr, 0);
        continue;
      } else if (n < 0) throw new Error('overwritten');
      let i = e[J].buf.slice(0, n),
        s = Buffer.byteLength(i);
      if (s <= n) (e[J].buf = e[J].buf.slice(n)), Gp(e, i, t);
      else {
        for (
          xb(e),
            Atomics.store(e[J].state, gs, 0),
            Atomics.store(e[J].state, Zr, 0);
          s > e[J].buf.length;

        )
          (n = n / 2), (i = e[J].buf.slice(0, n)), (s = Buffer.byteLength(i));
        (e[J].buf = e[J].buf.slice(n)), Gp(e, i, t);
      }
    }
  }
  function xb(e) {
    if (e[J].flushing) throw new Error('unable to flush while flushing');
    let t = Atomics.load(e[J].state, Zr),
      r = 0;
    for (;;) {
      let n = Atomics.load(e[J].state, gs);
      if (n === -2) throw Error('_flushSync failed');
      if (n !== t) Atomics.wait(e[J].state, gs, n, 1e3);
      else break;
      if (++r === 10) throw new Error('_flushSync took too long (10s)');
    }
  }
  Mx.exports = Pb;
});
var Ab = $((epe, zx) => {
  'use strict';
  var { createRequire: p3 } = require('module'),
    m3 = db(),
    { join: Ob, isAbsolute: y3, sep: g3 } = require('node:path'),
    v3 = _b(),
    Ib = Rb(),
    b3 = Hx();
  function S3(e) {
    Ib.register(e, w3),
      Ib.registerBeforeExit(e, E3),
      e.on('close', function () {
        Ib.unregister(e);
      });
  }
  function _3(e, t, r) {
    let n = new b3({ filename: e, workerData: t, workerOpts: r });
    n.on('ready', i),
      n.on('close', function () {
        process.removeListener('exit', s);
      }),
      process.on('exit', s);
    function i() {
      process.removeListener('exit', s), n.unref(), r.autoEnd !== !1 && S3(n);
    }
    function s() {
      n.closed || (n.flushSync(), v3(100), n.end());
    }
    return n;
  }
  function w3(e) {
    e.ref(),
      e.flushSync(),
      e.end(),
      e.once('close', function () {
        e.unref();
      });
  }
  function E3(e) {
    e.flushSync();
  }
  function R3(e) {
    let {
        pipeline: t,
        targets: r,
        levels: n,
        dedupe: i,
        worker: s = {},
        caller: o = m3(),
      } = e,
      a = { ...e.options },
      u = typeof o == 'string' ? [o] : o,
      c =
        '__bundlerPathsOverrides' in globalThis
          ? globalThis.__bundlerPathsOverrides
          : {},
      d = e.target;
    if (d && r)
      throw new Error('only one of target or targets can be specified');
    return (
      r
        ? ((d = c['pino-worker'] || Ob(__dirname, 'worker.js')),
          (a.targets = r
            .filter((g) => g.target)
            .map((g) => ({ ...g, target: m(g.target) }))),
          (a.pipelines = r
            .filter((g) => g.pipeline)
            .map((g) =>
              g.pipeline.map((v) => ({
                ...v,
                level: g.level,
                target: m(v.target),
              })),
            )))
        : t &&
          ((d = c['pino-worker'] || Ob(__dirname, 'worker.js')),
          (a.pipelines = [t.map((g) => ({ ...g, target: m(g.target) }))])),
      n && (a.levels = n),
      i && (a.dedupe = i),
      (a.pinoWillSendConfig = !0),
      _3(m(d), a, s)
    );
    function m(g) {
      if (((g = c[g] || g), y3(g) || g.indexOf('file://') === 0)) return g;
      if (g === 'pino/file') return Ob(__dirname, '..', 'file.js');
      let v;
      for (let S of u)
        try {
          let w = S === 'node:repl' ? process.cwd() + g3 : S;
          v = p3(w).resolve(g);
          break;
        } catch {
          continue;
        }
      if (!v)
        throw new Error(`unable to determine transport target for "${g}"`);
      return v;
    }
  }
  zx.exports = R3;
});
var Kp = $((tpe, Qx) => {
  'use strict';
  var Ux = vx(),
    { mapHttpRequest: T3, mapHttpResponse: P3 } = fb(),
    Nb = Px(),
    Vx = Rb(),
    {
      lsCacheSym: k3,
      chindingsSym: Gx,
      writeSym: Bx,
      serializersSym: Yx,
      formatOptsSym: Wx,
      endSym: x3,
      stringifiersSym: Jx,
      stringifySym: Kx,
      stringifySafeSym: Lb,
      wildcardFirstSym: Xx,
      nestedKeySym: C3,
      formattersSym: Zx,
      messageKeySym: O3,
      errorKeySym: I3,
      nestedKeyStrSym: A3,
      msgPrefixSym: Yp,
    } = uu(),
    { isMainThread: $3 } = require('worker_threads'),
    N3 = Ab();
  function fu() {}
  function L3(e, t) {
    if (!t) return r;
    return function (...i) {
      t.call(this, i, r, e);
    };
    function r(n, ...i) {
      if (typeof n == 'object') {
        let s = n;
        n !== null &&
          (n.method && n.headers && n.socket
            ? (n = T3(n))
            : typeof n.setHeader == 'function' && (n = P3(n)));
        let o;
        s === null && i.length === 0
          ? (o = [null])
          : ((s = i.shift()), (o = i)),
          typeof this[Yp] == 'string' &&
            s !== void 0 &&
            s !== null &&
            (s = this[Yp] + s),
          this[Bx](n, Ux(s, o, this[Wx]), e);
      } else {
        let s = n === void 0 ? i.shift() : n;
        typeof this[Yp] == 'string' &&
          s !== void 0 &&
          s !== null &&
          (s = this[Yp] + s),
          this[Bx](null, Ux(s, i, this[Wx]), e);
      }
    }
  }
  function $b(e) {
    let t = '',
      r = 0,
      n = !1,
      i = 255,
      s = e.length;
    if (s > 100) return JSON.stringify(e);
    for (var o = 0; o < s && i >= 32; o++)
      (i = e.charCodeAt(o)),
        (i === 34 || i === 92) &&
          ((t += e.slice(r, o) + '\\'), (r = o), (n = !0));
    return (
      n ? (t += e.slice(r)) : (t = e),
      i < 32 ? JSON.stringify(e) : '"' + t + '"'
    );
  }
  function D3(e, t, r, n) {
    let i = this[Kx],
      s = this[Lb],
      o = this[Jx],
      a = this[x3],
      u = this[Gx],
      c = this[Yx],
      d = this[Zx],
      m = this[O3],
      g = this[I3],
      v = this[k3][r] + n;
    v = v + u;
    let S;
    d.log && (e = d.log(e));
    let w = o[Xx],
      T = '';
    for (let I in e)
      if (
        ((S = e[I]), Object.prototype.hasOwnProperty.call(e, I) && S !== void 0)
      ) {
        c[I] ? (S = c[I](S)) : I === g && c.err && (S = c.err(S));
        let x = o[I] || w;
        switch (typeof S) {
          case 'undefined':
          case 'function':
            continue;
          case 'number':
            Number.isFinite(S) === !1 && (S = null);
          case 'boolean':
            x && (S = x(S));
            break;
          case 'string':
            S = (x || $b)(S);
            break;
          default:
            S = (x || i)(S, s);
        }
        if (S === void 0) continue;
        let E = $b(I);
        T += ',' + E + ':' + S;
      }
    let C = '';
    if (t !== void 0) {
      S = c[m] ? c[m](t) : t;
      let I = o[m] || w;
      switch (typeof S) {
        case 'function':
          break;
        case 'number':
          Number.isFinite(S) === !1 && (S = null);
        case 'boolean':
          I && (S = I(S)), (C = ',"' + m + '":' + S);
          break;
        case 'string':
          (S = (I || $b)(S)), (C = ',"' + m + '":' + S);
          break;
        default:
          (S = (I || i)(S, s)), (C = ',"' + m + '":' + S);
      }
    }
    return this[C3] && T
      ? v + this[A3] + T.slice(1) + '}' + C + a
      : v + T + C + a;
  }
  function j3(e, t) {
    let r,
      n = e[Gx],
      i = e[Kx],
      s = e[Lb],
      o = e[Jx],
      a = o[Xx],
      u = e[Yx],
      c = e[Zx].bindings;
    t = c(t);
    for (let d in t)
      if (
        ((r = t[d]),
        (d !== 'level' &&
          d !== 'serializers' &&
          d !== 'formatters' &&
          d !== 'customLevels' &&
          t.hasOwnProperty(d) &&
          r !== void 0) === !0)
      ) {
        if (
          ((r = u[d] ? u[d](r) : r), (r = (o[d] || a || i)(r, s)), r === void 0)
        )
          continue;
        n += ',"' + d + '":' + r;
      }
    return n;
  }
  function F3(e) {
    return e.write !== e.constructor.prototype.write;
  }
  var q3 = process.env.NODE_V8_COVERAGE || process.env.V8_COVERAGE;
  function Jp(e) {
    let t = new Nb(e);
    return (
      t.on('error', r),
      !q3 &&
        !e.sync &&
        $3 &&
        (Vx.register(t, M3),
        t.on('close', function () {
          Vx.unregister(t);
        })),
      t
    );
    function r(n) {
      if (n.code === 'EPIPE') {
        (t.write = fu), (t.end = fu), (t.flushSync = fu), (t.destroy = fu);
        return;
      }
      t.removeListener('error', r), t.emit('error', n);
    }
  }
  function M3(e, t) {
    e.destroyed ||
      (t === 'beforeExit'
        ? (e.flush(),
          e.on('drain', function () {
            e.end();
          }))
        : e.flushSync());
  }
  function H3(e) {
    return function (r, n, i = {}, s) {
      if (typeof i == 'string') (s = Jp({ dest: i })), (i = {});
      else if (typeof s == 'string') {
        if (i && i.transport)
          throw Error(
            'only one of option.transport or stream can be specified',
          );
        s = Jp({ dest: s });
      } else if (i instanceof Nb || i.writable || i._writableState)
        (s = i), (i = {});
      else if (i.transport) {
        if (
          i.transport instanceof Nb ||
          i.transport.writable ||
          i.transport._writableState
        )
          throw Error(
            'option.transport do not allow stream, please pass to option directly. e.g. pino(transport)',
          );
        if (
          i.transport.targets &&
          i.transport.targets.length &&
          i.formatters &&
          typeof i.formatters.level == 'function'
        )
          throw Error(
            'option.transport.targets do not allow custom level formatters',
          );
        let u;
        i.customLevels &&
          (u = i.useOnlyCustomLevels
            ? i.customLevels
            : Object.assign({}, i.levels, i.customLevels)),
          (s = N3({ caller: n, ...i.transport, levels: u }));
      }
      if (
        ((i = Object.assign({}, e, i)),
        (i.serializers = Object.assign({}, e.serializers, i.serializers)),
        (i.formatters = Object.assign({}, e.formatters, i.formatters)),
        i.prettyPrint)
      )
        throw new Error(
          'prettyPrint option is no longer supported, see the pino-pretty package (https://github.com/pinojs/pino-pretty)',
        );
      let { enabled: o, onChild: a } = i;
      return (
        o === !1 && (i.level = 'silent'),
        a || (i.onChild = fu),
        s ||
          (F3(process.stdout)
            ? (s = process.stdout)
            : (s = Jp({ fd: process.stdout.fd || 1 }))),
        { opts: i, stream: s }
      );
    };
  }
  function z3(e, t) {
    try {
      return JSON.stringify(e);
    } catch {
      try {
        return (t || this[Lb])(e);
      } catch {
        return '"[unable to serialize, circular reference is too complex to analyze]"';
      }
    }
  }
  function U3(e, t, r) {
    return { level: e, bindings: t, log: r };
  }
  function V3(e) {
    let t = Number(e);
    return typeof e == 'string' && Number.isFinite(t)
      ? t
      : e === void 0
        ? 1
        : e;
  }
  Qx.exports = {
    noop: fu,
    buildSafeSonicBoom: Jp,
    asChindings: j3,
    asJson: D3,
    genLog: L3,
    createArgsNormalizer: H3,
    stringify: z3,
    buildFormatters: U3,
    normalizeDestFileDescriptor: V3,
  };
});
var Xp = $((rpe, eC) => {
  var B3 = { trace: 10, debug: 20, info: 30, warn: 40, error: 50, fatal: 60 },
    W3 = { ASC: 'ASC', DESC: 'DESC' };
  eC.exports = { DEFAULT_LEVELS: B3, SORTING_ORDER: W3 };
});
var Fb = $((npe, sC) => {
  'use strict';
  var {
      lsCacheSym: G3,
      levelValSym: Db,
      useOnlyCustomLevelsSym: Y3,
      streamSym: J3,
      formattersSym: K3,
      hooksSym: X3,
      levelCompSym: tC,
    } = uu(),
    { noop: Z3, genLog: xa } = Kp(),
    { DEFAULT_LEVELS: bs, SORTING_ORDER: rC } = Xp(),
    nC = {
      fatal: (e) => {
        let t = xa(bs.fatal, e);
        return function (...r) {
          let n = this[J3];
          if ((t.call(this, ...r), typeof n.flushSync == 'function'))
            try {
              n.flushSync();
            } catch {}
        };
      },
      error: (e) => xa(bs.error, e),
      warn: (e) => xa(bs.warn, e),
      info: (e) => xa(bs.info, e),
      debug: (e) => xa(bs.debug, e),
      trace: (e) => xa(bs.trace, e),
    },
    jb = Object.keys(bs).reduce((e, t) => ((e[bs[t]] = t), e), {}),
    Q3 = Object.keys(jb).reduce(
      (e, t) => ((e[t] = '{"level":' + Number(t)), e),
      {},
    );
  function e9(e) {
    let t = e[K3].level,
      { labels: r } = e.levels,
      n = {};
    for (let i in r) {
      let s = t(r[i], Number(i));
      n[i] = JSON.stringify(s).slice(0, -1);
    }
    return (e[G3] = n), e;
  }
  function t9(e, t) {
    if (t) return !1;
    switch (e) {
      case 'fatal':
      case 'error':
      case 'warn':
      case 'info':
      case 'debug':
      case 'trace':
        return !0;
      default:
        return !1;
    }
  }
  function r9(e) {
    let { labels: t, values: r } = this.levels;
    if (typeof e == 'number') {
      if (t[e] === void 0) throw Error('unknown level value' + e);
      e = t[e];
    }
    if (r[e] === void 0) throw Error('unknown level ' + e);
    let n = this[Db],
      i = (this[Db] = r[e]),
      s = this[Y3],
      o = this[tC],
      a = this[X3].logMethod;
    for (let u in r) {
      if (o(r[u], i) === !1) {
        this[u] = Z3;
        continue;
      }
      this[u] = t9(u, s) ? nC[u](a) : xa(r[u], a);
    }
    this.emit('level-change', e, i, t[n], n, this);
  }
  function n9(e) {
    let { levels: t, levelVal: r } = this;
    return t && t.labels ? t.labels[r] : '';
  }
  function s9(e) {
    let { values: t } = this.levels,
      r = t[e];
    return r !== void 0 && this[tC](r, this[Db]);
  }
  function i9(e, t, r) {
    return e === rC.DESC ? t <= r : t >= r;
  }
  function o9(e) {
    return typeof e == 'string' ? i9.bind(null, e) : e;
  }
  function a9(e = null, t = !1) {
    let r = e ? Object.keys(e).reduce((s, o) => ((s[e[o]] = o), s), {}) : null,
      n = Object.assign(
        Object.create(Object.prototype, { Infinity: { value: 'silent' } }),
        t ? null : jb,
        r,
      ),
      i = Object.assign(
        Object.create(Object.prototype, { silent: { value: 1 / 0 } }),
        t ? null : bs,
        e,
      );
    return { labels: n, values: i };
  }
  function l9(e, t, r) {
    if (typeof e == 'number') {
      if (
        ![]
          .concat(
            Object.keys(t || {}).map((s) => t[s]),
            r ? [] : Object.keys(jb).map((s) => +s),
            1 / 0,
          )
          .includes(e)
      )
        throw Error(`default level:${e} must be included in custom levels`);
      return;
    }
    let n = Object.assign(
      Object.create(Object.prototype, { silent: { value: 1 / 0 } }),
      r ? null : bs,
      t,
    );
    if (!(e in n))
      throw Error(`default level:${e} must be included in custom levels`);
  }
  function u9(e, t) {
    let { labels: r, values: n } = e;
    for (let i in t) {
      if (i in n) throw Error('levels cannot be overridden');
      if (t[i] in r)
        throw Error('pre-existing level values cannot be used for new levels');
    }
  }
  function c9(e) {
    if (
      typeof e != 'function' &&
      !(typeof e == 'string' && Object.values(rC).includes(e))
    )
      throw new Error(
        'Levels comparison should be one of "ASC", "DESC" or "function" type',
      );
  }
  sC.exports = {
    initialLsCache: Q3,
    genLsCache: e9,
    levelMethods: nC,
    getLevel: n9,
    setLevel: r9,
    isLevelEnabled: s9,
    mappings: a9,
    assertNoLevelCollisions: u9,
    assertDefaultLevelFound: l9,
    genLevelComparison: o9,
    assertLevelComparison: c9,
  };
});
var qb = $((spe, iC) => {
  'use strict';
  iC.exports = { version: '9.3.1' };
});
var yC = $((ope, mC) => {
  'use strict';
  var { EventEmitter: f9 } = require('node:events'),
    {
      lsCacheSym: d9,
      levelValSym: h9,
      setLevelSym: Hb,
      getLevelSym: oC,
      chindingsSym: zb,
      parsedChindingsSym: p9,
      mixinSym: m9,
      asJsonSym: fC,
      writeSym: y9,
      mixinMergeStrategySym: g9,
      timeSym: v9,
      timeSliceIndexSym: b9,
      streamSym: dC,
      serializersSym: Ca,
      formattersSym: Mb,
      errorKeySym: S9,
      messageKeySym: _9,
      useOnlyCustomLevelsSym: w9,
      needsMetadataGsym: E9,
      redactFmtSym: R9,
      stringifySym: T9,
      formatOptsSym: P9,
      stringifiersSym: k9,
      msgPrefixSym: aC,
    } = uu(),
    {
      getLevel: x9,
      setLevel: C9,
      isLevelEnabled: O9,
      mappings: I9,
      initialLsCache: A9,
      genLsCache: $9,
      assertNoLevelCollisions: N9,
    } = Fb(),
    { asChindings: hC, asJson: L9, buildFormatters: lC, stringify: uC } = Kp(),
    { version: D9 } = qb(),
    j9 = bb(),
    F9 = class {},
    pC = {
      constructor: F9,
      child: q9,
      bindings: M9,
      setBindings: H9,
      flush: B9,
      isLevelEnabled: O9,
      version: D9,
      get level() {
        return this[oC]();
      },
      set level(e) {
        this[Hb](e);
      },
      get levelVal() {
        return this[h9];
      },
      set levelVal(e) {
        throw Error('levelVal is read-only');
      },
      [d9]: A9,
      [y9]: U9,
      [fC]: L9,
      [oC]: x9,
      [Hb]: C9,
    };
  Object.setPrototypeOf(pC, f9.prototype);
  mC.exports = function () {
    return Object.create(pC);
  };
  var cC = (e) => e;
  function q9(e, t) {
    if (!e) throw Error('missing bindings for child Pino');
    t = t || {};
    let r = this[Ca],
      n = this[Mb],
      i = Object.create(this);
    if (t.hasOwnProperty('serializers') === !0) {
      i[Ca] = Object.create(null);
      for (let d in r) i[Ca][d] = r[d];
      let u = Object.getOwnPropertySymbols(r);
      for (var s = 0; s < u.length; s++) {
        let d = u[s];
        i[Ca][d] = r[d];
      }
      for (let d in t.serializers) i[Ca][d] = t.serializers[d];
      let c = Object.getOwnPropertySymbols(t.serializers);
      for (var o = 0; o < c.length; o++) {
        let d = c[o];
        i[Ca][d] = t.serializers[d];
      }
    } else i[Ca] = r;
    if (t.hasOwnProperty('formatters')) {
      let { level: u, bindings: c, log: d } = t.formatters;
      i[Mb] = lC(u || n.level, c || cC, d || n.log);
    } else i[Mb] = lC(n.level, cC, n.log);
    if (
      (t.hasOwnProperty('customLevels') === !0 &&
        (N9(this.levels, t.customLevels),
        (i.levels = I9(t.customLevels, i[w9])),
        $9(i)),
      (typeof t.redact == 'object' && t.redact !== null) ||
        Array.isArray(t.redact))
    ) {
      i.redact = t.redact;
      let u = j9(i.redact, uC),
        c = { stringify: u[R9] };
      (i[T9] = uC), (i[k9] = u), (i[P9] = c);
    }
    typeof t.msgPrefix == 'string' && (i[aC] = (this[aC] || '') + t.msgPrefix),
      (i[zb] = hC(i, e));
    let a = t.level || this.level;
    return i[Hb](a), this.onChild(i), i;
  }
  function M9() {
    let t = `{${this[zb].substr(1)}}`,
      r = JSON.parse(t);
    return delete r.pid, delete r.hostname, r;
  }
  function H9(e) {
    let t = hC(this, e);
    (this[zb] = t), delete this[p9];
  }
  function z9(e, t) {
    return Object.assign(t, e);
  }
  function U9(e, t, r) {
    let n = this[v9](),
      i = this[m9],
      s = this[S9],
      o = this[_9],
      a = this[g9] || z9,
      u;
    e == null
      ? (u = {})
      : e instanceof Error
        ? ((u = { [s]: e }), t === void 0 && (t = e.message))
        : ((u = e),
          t === void 0 && e[o] === void 0 && e[s] && (t = e[s].message)),
      i && (u = a(u, i(u, r, this)));
    let c = this[fC](u, t, r, n),
      d = this[dC];
    d[E9] === !0 &&
      ((d.lastLevel = r),
      (d.lastObj = u),
      (d.lastMsg = t),
      (d.lastTime = n.slice(this[b9])),
      (d.lastLogger = this)),
      d.write(c);
  }
  function V9() {}
  function B9(e) {
    if (e != null && typeof e != 'function')
      throw Error('callback must be a function');
    let t = this[dC];
    typeof t.flush == 'function' ? t.flush(e || V9) : e && e();
  }
});
var _C = $((Wb, SC) => {
  'use strict';
  var { hasOwnProperty: Zp } = Object.prototype,
    Ia = Bb();
  Ia.configure = Bb;
  Ia.stringify = Ia;
  Ia.default = Ia;
  Wb.stringify = Ia;
  Wb.configure = Bb;
  SC.exports = Ia;
  var W9 =
    /[\u0000-\u001f\u0022\u005c\ud800-\udfff]|[\ud800-\udbff](?![\udc00-\udfff])|(?:[^\ud800-\udbff]|^)[\udc00-\udfff]/;
  function fo(e) {
    return e.length < 5e3 && !W9.test(e) ? `"${e}"` : JSON.stringify(e);
  }
  function Ub(e) {
    if (e.length > 200) return e.sort();
    for (let t = 1; t < e.length; t++) {
      let r = e[t],
        n = t;
      for (; n !== 0 && e[n - 1] > r; ) (e[n] = e[n - 1]), n--;
      e[n] = r;
    }
    return e;
  }
  var G9 = Object.getOwnPropertyDescriptor(
    Object.getPrototypeOf(Object.getPrototypeOf(new Int8Array())),
    Symbol.toStringTag,
  ).get;
  function Vb(e) {
    return G9.call(e) !== void 0 && e.length !== 0;
  }
  function gC(e, t, r) {
    e.length < r && (r = e.length);
    let n = t === ',' ? '' : ' ',
      i = `"0":${n}${e[0]}`;
    for (let s = 1; s < r; s++) i += `${t}"${s}":${n}${e[s]}`;
    return i;
  }
  function Y9(e) {
    if (Zp.call(e, 'circularValue')) {
      let t = e.circularValue;
      if (typeof t == 'string') return `"${t}"`;
      if (t == null) return t;
      if (t === Error || t === TypeError)
        return {
          toString() {
            throw new TypeError('Converting circular structure to JSON');
          },
        };
      throw new TypeError(
        'The "circularValue" argument must be of type string or the value null or undefined',
      );
    }
    return '"[Circular]"';
  }
  function vC(e, t) {
    let r;
    if (Zp.call(e, t) && ((r = e[t]), typeof r != 'boolean'))
      throw new TypeError(`The "${t}" argument must be of type boolean`);
    return r === void 0 ? !0 : r;
  }
  function bC(e, t) {
    let r;
    if (Zp.call(e, t)) {
      if (((r = e[t]), typeof r != 'number'))
        throw new TypeError(`The "${t}" argument must be of type number`);
      if (!Number.isInteger(r))
        throw new TypeError(`The "${t}" argument must be an integer`);
      if (r < 1) throw new RangeError(`The "${t}" argument must be >= 1`);
    }
    return r === void 0 ? 1 / 0 : r;
  }
  function Oa(e) {
    return e === 1 ? '1 item' : `${e} items`;
  }
  function J9(e) {
    let t = new Set();
    for (let r of e)
      (typeof r == 'string' || typeof r == 'number') && t.add(String(r));
    return t;
  }
  function K9(e) {
    if (Zp.call(e, 'strict')) {
      let t = e.strict;
      if (typeof t != 'boolean')
        throw new TypeError('The "strict" argument must be of type boolean');
      if (t)
        return (r) => {
          let n = `Object can not safely be stringified. Received type ${typeof r}`;
          throw (
            (typeof r != 'function' && (n += ` (${r.toString()})`),
            new Error(n))
          );
        };
    }
  }
  function Bb(e) {
    e = { ...e };
    let t = K9(e);
    t &&
      (e.bigint === void 0 && (e.bigint = !1),
      'circularValue' in e || (e.circularValue = Error));
    let r = Y9(e),
      n = vC(e, 'bigint'),
      i = vC(e, 'deterministic'),
      s = bC(e, 'maximumDepth'),
      o = bC(e, 'maximumBreadth');
    function a(g, v, S, w, T, C) {
      let I = v[g];
      switch (
        (typeof I == 'object' &&
          I !== null &&
          typeof I.toJSON == 'function' &&
          (I = I.toJSON(g)),
        (I = w.call(v, g, I)),
        typeof I)
      ) {
        case 'string':
          return fo(I);
        case 'object': {
          if (I === null) return 'null';
          if (S.indexOf(I) !== -1) return r;
          let x = '',
            E = ',',
            j = C;
          if (Array.isArray(I)) {
            if (I.length === 0) return '[]';
            if (s < S.length + 1) return '"[Array]"';
            S.push(I),
              T !== '' &&
                ((C += T),
                (x += `
${C}`),
                (E = `,
${C}`));
            let G = Math.min(I.length, o),
              Y = 0;
            for (; Y < G - 1; Y++) {
              let de = a(String(Y), I, S, w, T, C);
              (x += de !== void 0 ? de : 'null'), (x += E);
            }
            let W = a(String(Y), I, S, w, T, C);
            if (((x += W !== void 0 ? W : 'null'), I.length - 1 > o)) {
              let de = I.length - o - 1;
              x += `${E}"... ${Oa(de)} not stringified"`;
            }
            return (
              T !== '' &&
                (x += `
${j}`),
              S.pop(),
              `[${x}]`
            );
          }
          let q = Object.keys(I),
            O = q.length;
          if (O === 0) return '{}';
          if (s < S.length + 1) return '"[Object]"';
          let F = '',
            U = '';
          T !== '' &&
            ((C += T),
            (E = `,
${C}`),
            (F = ' '));
          let D = Math.min(O, o);
          i && !Vb(I) && (q = Ub(q)), S.push(I);
          for (let G = 0; G < D; G++) {
            let Y = q[G],
              W = a(Y, I, S, w, T, C);
            W !== void 0 && ((x += `${U}${fo(Y)}:${F}${W}`), (U = E));
          }
          if (O > o) {
            let G = O - o;
            (x += `${U}"...":${F}"${Oa(G)} not stringified"`), (U = E);
          }
          return (
            T !== '' &&
              U.length > 1 &&
              (x = `
${C}${x}
${j}`),
            S.pop(),
            `{${x}}`
          );
        }
        case 'number':
          return isFinite(I) ? String(I) : t ? t(I) : 'null';
        case 'boolean':
          return I === !0 ? 'true' : 'false';
        case 'undefined':
          return;
        case 'bigint':
          if (n) return String(I);
        default:
          return t ? t(I) : void 0;
      }
    }
    function u(g, v, S, w, T, C) {
      switch (
        (typeof v == 'object' &&
          v !== null &&
          typeof v.toJSON == 'function' &&
          (v = v.toJSON(g)),
        typeof v)
      ) {
        case 'string':
          return fo(v);
        case 'object': {
          if (v === null) return 'null';
          if (S.indexOf(v) !== -1) return r;
          let I = C,
            x = '',
            E = ',';
          if (Array.isArray(v)) {
            if (v.length === 0) return '[]';
            if (s < S.length + 1) return '"[Array]"';
            S.push(v),
              T !== '' &&
                ((C += T),
                (x += `
${C}`),
                (E = `,
${C}`));
            let O = Math.min(v.length, o),
              F = 0;
            for (; F < O - 1; F++) {
              let D = u(String(F), v[F], S, w, T, C);
              (x += D !== void 0 ? D : 'null'), (x += E);
            }
            let U = u(String(F), v[F], S, w, T, C);
            if (((x += U !== void 0 ? U : 'null'), v.length - 1 > o)) {
              let D = v.length - o - 1;
              x += `${E}"... ${Oa(D)} not stringified"`;
            }
            return (
              T !== '' &&
                (x += `
${I}`),
              S.pop(),
              `[${x}]`
            );
          }
          S.push(v);
          let j = '';
          T !== '' &&
            ((C += T),
            (E = `,
${C}`),
            (j = ' '));
          let q = '';
          for (let O of w) {
            let F = u(O, v[O], S, w, T, C);
            F !== void 0 && ((x += `${q}${fo(O)}:${j}${F}`), (q = E));
          }
          return (
            T !== '' &&
              q.length > 1 &&
              (x = `
${C}${x}
${I}`),
            S.pop(),
            `{${x}}`
          );
        }
        case 'number':
          return isFinite(v) ? String(v) : t ? t(v) : 'null';
        case 'boolean':
          return v === !0 ? 'true' : 'false';
        case 'undefined':
          return;
        case 'bigint':
          if (n) return String(v);
        default:
          return t ? t(v) : void 0;
      }
    }
    function c(g, v, S, w, T) {
      switch (typeof v) {
        case 'string':
          return fo(v);
        case 'object': {
          if (v === null) return 'null';
          if (typeof v.toJSON == 'function') {
            if (((v = v.toJSON(g)), typeof v != 'object'))
              return c(g, v, S, w, T);
            if (v === null) return 'null';
          }
          if (S.indexOf(v) !== -1) return r;
          let C = T;
          if (Array.isArray(v)) {
            if (v.length === 0) return '[]';
            if (s < S.length + 1) return '"[Array]"';
            S.push(v), (T += w);
            let F = `
${T}`,
              U = `,
${T}`,
              D = Math.min(v.length, o),
              G = 0;
            for (; G < D - 1; G++) {
              let W = c(String(G), v[G], S, w, T);
              (F += W !== void 0 ? W : 'null'), (F += U);
            }
            let Y = c(String(G), v[G], S, w, T);
            if (((F += Y !== void 0 ? Y : 'null'), v.length - 1 > o)) {
              let W = v.length - o - 1;
              F += `${U}"... ${Oa(W)} not stringified"`;
            }
            return (
              (F += `
${C}`),
              S.pop(),
              `[${F}]`
            );
          }
          let I = Object.keys(v),
            x = I.length;
          if (x === 0) return '{}';
          if (s < S.length + 1) return '"[Object]"';
          T += w;
          let E = `,
${T}`,
            j = '',
            q = '',
            O = Math.min(x, o);
          Vb(v) &&
            ((j += gC(v, E, o)),
            (I = I.slice(v.length)),
            (O -= v.length),
            (q = E)),
            i && (I = Ub(I)),
            S.push(v);
          for (let F = 0; F < O; F++) {
            let U = I[F],
              D = c(U, v[U], S, w, T);
            D !== void 0 && ((j += `${q}${fo(U)}: ${D}`), (q = E));
          }
          if (x > o) {
            let F = x - o;
            (j += `${q}"...": "${Oa(F)} not stringified"`), (q = E);
          }
          return (
            q !== '' &&
              (j = `
${T}${j}
${C}`),
            S.pop(),
            `{${j}}`
          );
        }
        case 'number':
          return isFinite(v) ? String(v) : t ? t(v) : 'null';
        case 'boolean':
          return v === !0 ? 'true' : 'false';
        case 'undefined':
          return;
        case 'bigint':
          if (n) return String(v);
        default:
          return t ? t(v) : void 0;
      }
    }
    function d(g, v, S) {
      switch (typeof v) {
        case 'string':
          return fo(v);
        case 'object': {
          if (v === null) return 'null';
          if (typeof v.toJSON == 'function') {
            if (((v = v.toJSON(g)), typeof v != 'object')) return d(g, v, S);
            if (v === null) return 'null';
          }
          if (S.indexOf(v) !== -1) return r;
          let w = '';
          if (Array.isArray(v)) {
            if (v.length === 0) return '[]';
            if (s < S.length + 1) return '"[Array]"';
            S.push(v);
            let E = Math.min(v.length, o),
              j = 0;
            for (; j < E - 1; j++) {
              let O = d(String(j), v[j], S);
              (w += O !== void 0 ? O : 'null'), (w += ',');
            }
            let q = d(String(j), v[j], S);
            if (((w += q !== void 0 ? q : 'null'), v.length - 1 > o)) {
              let O = v.length - o - 1;
              w += `,"... ${Oa(O)} not stringified"`;
            }
            return S.pop(), `[${w}]`;
          }
          let T = Object.keys(v),
            C = T.length;
          if (C === 0) return '{}';
          if (s < S.length + 1) return '"[Object]"';
          let I = '',
            x = Math.min(C, o);
          Vb(v) &&
            ((w += gC(v, ',', o)),
            (T = T.slice(v.length)),
            (x -= v.length),
            (I = ',')),
            i && (T = Ub(T)),
            S.push(v);
          for (let E = 0; E < x; E++) {
            let j = T[E],
              q = d(j, v[j], S);
            q !== void 0 && ((w += `${I}${fo(j)}:${q}`), (I = ','));
          }
          if (C > o) {
            let E = C - o;
            w += `${I}"...":"${Oa(E)} not stringified"`;
          }
          return S.pop(), `{${w}}`;
        }
        case 'number':
          return isFinite(v) ? String(v) : t ? t(v) : 'null';
        case 'boolean':
          return v === !0 ? 'true' : 'false';
        case 'undefined':
          return;
        case 'bigint':
          if (n) return String(v);
        default:
          return t ? t(v) : void 0;
      }
    }
    function m(g, v, S) {
      if (arguments.length > 1) {
        let w = '';
        if (
          (typeof S == 'number'
            ? (w = ' '.repeat(Math.min(S, 10)))
            : typeof S == 'string' && (w = S.slice(0, 10)),
          v != null)
        ) {
          if (typeof v == 'function') return a('', { '': g }, [], v, w, '');
          if (Array.isArray(v)) return u('', g, [], J9(v), w, '');
        }
        if (w.length !== 0) return c('', g, [], w, '');
      }
      return d('', g, []);
    }
    return m;
  }
});
var RC = $((ape, EC) => {
  'use strict';
  var Gb = Symbol.for('pino.metadata'),
    { DEFAULT_LEVELS: wC } = Xp(),
    X9 = wC.info;
  function Z9(e, t) {
    let r = 0;
    (e = e || []), (t = t || { dedupe: !1 });
    let n = Object.create(wC);
    (n.silent = 1 / 0),
      t.levels &&
        typeof t.levels == 'object' &&
        Object.keys(t.levels).forEach((m) => {
          n[m] = t.levels[m];
        });
    let i = {
      write: s,
      add: u,
      emit: o,
      flushSync: a,
      end: c,
      minLevel: 0,
      streams: [],
      clone: d,
      [Gb]: !0,
      streamLevels: n,
    };
    return Array.isArray(e) ? e.forEach(u, i) : u.call(i, e), (e = null), i;
    function s(m) {
      let g,
        v = this.lastLevel,
        { streams: S } = this,
        w = 0,
        T;
      for (
        let C = e5(S.length, t.dedupe);
        r5(C, S.length, t.dedupe);
        C = t5(C, t.dedupe)
      )
        if (((g = S[C]), g.level <= v)) {
          if (w !== 0 && w !== g.level) break;
          if (((T = g.stream), T[Gb])) {
            let { lastTime: I, lastMsg: x, lastObj: E, lastLogger: j } = this;
            (T.lastLevel = v),
              (T.lastTime = I),
              (T.lastMsg = x),
              (T.lastObj = E),
              (T.lastLogger = j);
          }
          T.write(m), t.dedupe && (w = g.level);
        } else if (!t.dedupe) break;
    }
    function o(...m) {
      for (let { stream: g } of this.streams)
        typeof g.emit == 'function' && g.emit(...m);
    }
    function a() {
      for (let { stream: m } of this.streams)
        typeof m.flushSync == 'function' && m.flushSync();
    }
    function u(m) {
      if (!m) return i;
      let g = typeof m.write == 'function' || m.stream,
        v = m.write ? m : m.stream;
      if (!g)
        throw Error(
          'stream object needs to implement either StreamEntry or DestinationStream interface',
        );
      let { streams: S, streamLevels: w } = this,
        T;
      typeof m.levelVal == 'number'
        ? (T = m.levelVal)
        : typeof m.level == 'string'
          ? (T = w[m.level])
          : typeof m.level == 'number'
            ? (T = m.level)
            : (T = X9);
      let C = { stream: v, level: T, levelVal: void 0, id: r++ };
      return S.unshift(C), S.sort(Q9), (this.minLevel = S[0].level), i;
    }
    function c() {
      for (let { stream: m } of this.streams)
        typeof m.flushSync == 'function' && m.flushSync(), m.end();
    }
    function d(m) {
      let g = new Array(this.streams.length);
      for (let v = 0; v < g.length; v++)
        g[v] = { level: m, stream: this.streams[v].stream };
      return {
        write: s,
        add: u,
        minLevel: m,
        streams: g,
        clone: d,
        emit: o,
        flushSync: a,
        [Gb]: !0,
      };
    }
  }
  function Q9(e, t) {
    return e.level - t.level;
  }
  function e5(e, t) {
    return t ? e - 1 : 0;
  }
  function t5(e, t) {
    return t ? e - 1 : e + 1;
  }
  function r5(e, t, r) {
    return r ? e >= 0 : e < t;
  }
  EC.exports = Z9;
});
var jC = $((lpe, Tn) => {
  'use strict';
  var n5 = require('node:os'),
    AC = fb(),
    s5 = db(),
    i5 = bb(),
    $C = yx(),
    o5 = yC(),
    NC = uu(),
    { configure: a5 } = _C(),
    {
      assertDefaultLevelFound: l5,
      mappings: LC,
      genLsCache: u5,
      genLevelComparison: c5,
      assertLevelComparison: f5,
    } = Fb(),
    { DEFAULT_LEVELS: d5, SORTING_ORDER: h5 } = Xp(),
    {
      createArgsNormalizer: p5,
      asChindings: m5,
      buildSafeSonicBoom: TC,
      buildFormatters: y5,
      stringify: Yb,
      normalizeDestFileDescriptor: PC,
      noop: g5,
    } = Kp(),
    { version: v5 } = qb(),
    {
      chindingsSym: kC,
      redactFmtSym: b5,
      serializersSym: xC,
      timeSym: S5,
      timeSliceIndexSym: _5,
      streamSym: w5,
      stringifySym: CC,
      stringifySafeSym: Jb,
      stringifiersSym: OC,
      setLevelSym: E5,
      endSym: R5,
      formatOptsSym: T5,
      messageKeySym: P5,
      errorKeySym: k5,
      nestedKeySym: x5,
      mixinSym: C5,
      levelCompSym: O5,
      useOnlyCustomLevelsSym: I5,
      formattersSym: IC,
      hooksSym: A5,
      nestedKeyStrSym: $5,
      mixinMergeStrategySym: N5,
      msgPrefixSym: L5,
    } = NC,
    { epochTime: DC, nullTime: D5 } = $C,
    { pid: j5 } = process,
    F5 = n5.hostname(),
    q5 = AC.err,
    M5 = {
      level: 'info',
      levelComparison: h5.ASC,
      levels: d5,
      messageKey: 'msg',
      errorKey: 'err',
      nestedKey: null,
      enabled: !0,
      base: { pid: j5, hostname: F5 },
      serializers: Object.assign(Object.create(null), { err: q5 }),
      formatters: Object.assign(Object.create(null), {
        bindings(e) {
          return e;
        },
        level(e, t) {
          return { level: t };
        },
      }),
      hooks: { logMethod: void 0 },
      timestamp: DC,
      name: void 0,
      redact: null,
      customLevels: null,
      useOnlyCustomLevels: !1,
      depthLimit: 5,
      edgeLimit: 100,
    },
    H5 = p5(M5),
    z5 = Object.assign(Object.create(null), AC);
  function Kb(...e) {
    let t = {},
      { opts: r, stream: n } = H5(t, s5(), ...e),
      {
        redact: i,
        crlf: s,
        serializers: o,
        timestamp: a,
        messageKey: u,
        errorKey: c,
        nestedKey: d,
        base: m,
        name: g,
        level: v,
        customLevels: S,
        levelComparison: w,
        mixin: T,
        mixinMergeStrategy: C,
        useOnlyCustomLevels: I,
        formatters: x,
        hooks: E,
        depthLimit: j,
        edgeLimit: q,
        onChild: O,
        msgPrefix: F,
      } = r,
      U = a5({ maximumDepth: j, maximumBreadth: q }),
      D = y5(x.level, x.bindings, x.log),
      G = Yb.bind({ [Jb]: U }),
      Y = i ? i5(i, G) : {},
      W = i ? { stringify: Y[b5] } : { stringify: G },
      de =
        '}' +
        (s
          ? `\r
`
          : `
`),
      X = m5.bind(null, {
        [kC]: '',
        [xC]: o,
        [OC]: Y,
        [CC]: Yb,
        [Jb]: U,
        [IC]: D,
      }),
      se = '';
    m !== null &&
      (g === void 0
        ? (se = X(m))
        : (se = X(Object.assign({}, m, { name: g }))));
    let ae = a instanceof Function ? a : a ? DC : D5,
      qe = ae().indexOf(':') + 1;
    if (I && !S)
      throw Error(
        'customLevels is required if useOnlyCustomLevels is set true',
      );
    if (T && typeof T != 'function')
      throw Error(`Unknown mixin type "${typeof T}" - expected "function"`);
    if (F && typeof F != 'string')
      throw Error(`Unknown msgPrefix type "${typeof F}" - expected "string"`);
    l5(v, S, I);
    let re = LC(S, I);
    typeof n.emit == 'function' &&
      n.emit('message', {
        code: 'PINO_CONFIG',
        config: { levels: re, messageKey: u, errorKey: c },
      }),
      f5(w);
    let Ie = c5(w);
    return (
      Object.assign(t, {
        levels: re,
        [O5]: Ie,
        [I5]: I,
        [w5]: n,
        [S5]: ae,
        [_5]: qe,
        [CC]: Yb,
        [Jb]: U,
        [OC]: Y,
        [R5]: de,
        [T5]: W,
        [P5]: u,
        [k5]: c,
        [x5]: d,
        [$5]: d ? `,${JSON.stringify(d)}:{` : '',
        [xC]: o,
        [C5]: T,
        [N5]: C,
        [kC]: se,
        [IC]: D,
        [A5]: E,
        silent: g5,
        onChild: O,
        [L5]: F,
      }),
      Object.setPrototypeOf(t, o5()),
      u5(t),
      t[E5](v),
      t
    );
  }
  Tn.exports = Kb;
  Tn.exports.destination = (e = process.stdout.fd) =>
    typeof e == 'object'
      ? ((e.dest = PC(e.dest || process.stdout.fd)), TC(e))
      : TC({ dest: PC(e), minLength: 0 });
  Tn.exports.transport = Ab();
  Tn.exports.multistream = RC();
  Tn.exports.levels = LC();
  Tn.exports.stdSerializers = z5;
  Tn.exports.stdTimeFunctions = Object.assign({}, $C);
  Tn.exports.symbols = NC;
  Tn.exports.version = v5;
  Tn.exports.default = Kb;
  Tn.exports.pino = Kb;
});
var Vf = $((upe, zC) => {
  'use strict';
  var U5 = Pk(),
    Qp = jC(),
    { serializersSym: FC } = Qp.symbols,
    { FST_ERR_LOG_INVALID_DESTINATION: V5, FST_ERR_LOG_INVALID_LOGGER: B5 } =
      br();
  function qC(e) {
    if (e.stream && e.file) throw new V5();
    e.file && ((e.stream = Qp.destination(e.file)), delete e.file);
    let t = e.logger,
      r = e.genReqId,
      n = null;
    return (
      t
        ? ((e.logger = void 0),
          (e.genReqId = void 0),
          t[FC] && (e.serializers = Object.assign({}, e.serializers, t[FC])),
          (n = t.child({}, e)),
          (e.logger = t),
          (e.genReqId = r))
        : (n = Qp(e, e.stream)),
      n
    );
  }
  var Xb = {
    req: function (t) {
      return {
        method: t.method,
        url: t.url,
        version: t.headers && t.headers['accept-version'],
        hostname: t.hostname,
        remoteAddress: t.ip,
        remotePort: t.socket ? t.socket.remotePort : void 0,
      };
    },
    err: Qp.stdSerializers.err,
    res: function (t) {
      return { statusCode: t.statusCode };
    },
  };
  function W5() {
    let e = process.hrtime();
    return e[0] * 1e3 + e[1] / 1e6;
  }
  function G5(e) {
    if (!e.logger) {
      let n = U5;
      return (n.child = () => n), { logger: n, hasLogger: !1 };
    }
    if (MC(e.logger))
      return {
        logger: qC({
          logger: e.logger,
          serializers: Object.assign({}, Xb, e.logger.serializers),
        }),
        hasLogger: !0,
      };
    let t = {};
    return (
      Object.prototype.toString.call(e.logger) === '[object Object]' &&
        Reflect.ownKeys(e.logger).forEach((n) => {
          Object.defineProperty(t, n, {
            value: e.logger[n],
            writable: !0,
            enumerable: !0,
            configurable: !0,
          });
        }),
      (t.level = t.level || 'info'),
      (t.serializers = Object.assign({}, Xb, t.serializers)),
      (e.logger = t),
      { logger: qC(e.logger), hasLogger: !0 }
    );
  }
  function MC(e, t) {
    let r = ['info', 'error', 'debug', 'fatal', 'warn', 'trace', 'child'],
      n = e ? r.filter((i) => !e[i] || typeof e[i] != 'function') : r;
    if (n.length) {
      if (n.length === r.length && !t) return !1;
      throw B5(n.join(','));
    } else return !0;
  }
  function Y5(e, t, r, n, i) {
    let s = { [e.requestIdLogLabel]: n },
      o = e.childLoggerFactory.call(e.server, t, s, i || {}, r);
    return e.childLoggerFactory !== HC && MC(o, !0), o;
  }
  function HC(e, t, r) {
    return e.child(t, r);
  }
  zC.exports = {
    createLogger: G5,
    createChildLogger: Y5,
    defaultChildLoggerFactory: HC,
    serializers: Xb,
    now: W5,
  };
});
var em = $((cpe, UC) => {
  'use strict';
  UC.exports = J5;
  function du(e) {
    return e instanceof Buffer
      ? Buffer.from(e)
      : new e.constructor(e.buffer.slice(), e.byteOffset, e.length);
  }
  function J5(e) {
    if (((e = e || {}), e.circles)) return K5(e);
    let t = new Map();
    if (
      (t.set(Date, (o) => new Date(o)),
      t.set(Map, (o, a) => new Map(n(Array.from(o), a))),
      t.set(Set, (o, a) => new Set(n(Array.from(o), a))),
      e.constructorHandlers)
    )
      for (let o of e.constructorHandlers) t.set(o[0], o[1]);
    let r = null;
    return e.proto ? s : i;
    function n(o, a) {
      let u = Object.keys(o),
        c = new Array(u.length);
      for (let d = 0; d < u.length; d++) {
        let m = u[d],
          g = o[m];
        typeof g != 'object' || g === null
          ? (c[m] = g)
          : g.constructor !== Object && (r = t.get(g.constructor))
            ? (c[m] = r(g, a))
            : ArrayBuffer.isView(g)
              ? (c[m] = du(g))
              : (c[m] = a(g));
      }
      return c;
    }
    function i(o) {
      if (typeof o != 'object' || o === null) return o;
      if (Array.isArray(o)) return n(o, i);
      if (o.constructor !== Object && (r = t.get(o.constructor)))
        return r(o, i);
      let a = {};
      for (let u in o) {
        if (Object.hasOwnProperty.call(o, u) === !1) continue;
        let c = o[u];
        typeof c != 'object' || c === null
          ? (a[u] = c)
          : c.constructor !== Object && (r = t.get(c.constructor))
            ? (a[u] = r(c, i))
            : ArrayBuffer.isView(c)
              ? (a[u] = du(c))
              : (a[u] = i(c));
      }
      return a;
    }
    function s(o) {
      if (typeof o != 'object' || o === null) return o;
      if (Array.isArray(o)) return n(o, s);
      if (o.constructor !== Object && (r = t.get(o.constructor)))
        return r(o, s);
      let a = {};
      for (let u in o) {
        let c = o[u];
        typeof c != 'object' || c === null
          ? (a[u] = c)
          : c.constructor !== Object && (r = t.get(c.constructor))
            ? (a[u] = r(c, s))
            : ArrayBuffer.isView(c)
              ? (a[u] = du(c))
              : (a[u] = s(c));
      }
      return a;
    }
  }
  function K5(e) {
    let t = [],
      r = [],
      n = new Map();
    if (
      (n.set(Date, (u) => new Date(u)),
      n.set(Map, (u, c) => new Map(s(Array.from(u), c))),
      n.set(Set, (u, c) => new Set(s(Array.from(u), c))),
      e.constructorHandlers)
    )
      for (let u of e.constructorHandlers) n.set(u[0], u[1]);
    let i = null;
    return e.proto ? a : o;
    function s(u, c) {
      let d = Object.keys(u),
        m = new Array(d.length);
      for (let g = 0; g < d.length; g++) {
        let v = d[g],
          S = u[v];
        if (typeof S != 'object' || S === null) m[v] = S;
        else if (S.constructor !== Object && (i = n.get(S.constructor)))
          m[v] = i(S, c);
        else if (ArrayBuffer.isView(S)) m[v] = du(S);
        else {
          let w = t.indexOf(S);
          w !== -1 ? (m[v] = r[w]) : (m[v] = c(S));
        }
      }
      return m;
    }
    function o(u) {
      if (typeof u != 'object' || u === null) return u;
      if (Array.isArray(u)) return s(u, o);
      if (u.constructor !== Object && (i = n.get(u.constructor)))
        return i(u, o);
      let c = {};
      t.push(u), r.push(c);
      for (let d in u) {
        if (Object.hasOwnProperty.call(u, d) === !1) continue;
        let m = u[d];
        if (typeof m != 'object' || m === null) c[d] = m;
        else if (m.constructor !== Object && (i = n.get(m.constructor)))
          c[d] = i(m, o);
        else if (ArrayBuffer.isView(m)) c[d] = du(m);
        else {
          let g = t.indexOf(m);
          g !== -1 ? (c[d] = r[g]) : (c[d] = o(m));
        }
      }
      return t.pop(), r.pop(), c;
    }
    function a(u) {
      if (typeof u != 'object' || u === null) return u;
      if (Array.isArray(u)) return s(u, a);
      if (u.constructor !== Object && (i = n.get(u.constructor)))
        return i(u, a);
      let c = {};
      t.push(u), r.push(c);
      for (let d in u) {
        let m = u[d];
        if (typeof m != 'object' || m === null) c[d] = m;
        else if (m.constructor !== Object && (i = n.get(m.constructor)))
          c[d] = i(m, a);
        else if (ArrayBuffer.isView(m)) c[d] = du(m);
        else {
          let g = t.indexOf(m);
          g !== -1 ? (c[d] = r[g]) : (c[d] = a(m));
        }
      }
      return t.pop(), r.pop(), c;
    }
  }
});
var Bf = $((fpe, GC) => {
  'use strict';
  var X5 = em()({ circles: !1, proto: !0 }),
    { kSchemaVisited: VC, kSchemaResponse: Z5 } = rr(),
    Qb = Symbol.for('fluent-schema-object'),
    {
      FST_ERR_SCH_MISSING_ID: Q5,
      FST_ERR_SCH_ALREADY_PRESENT: eW,
      FST_ERR_SCH_DUPLICATE: tW,
      FST_ERR_SCH_CONTENT_MISSING_SCHEMA: rW,
    } = br(),
    WC = ['params', 'body', 'querystring', 'query', 'headers'];
  function tm(e) {
    this.store = e || {};
  }
  tm.prototype.add = function (e) {
    let t = X5(
        e.isFluentSchema || e.isFluentJSONSchema || e[Qb] ? e.valueOf() : e,
      ),
      r = t.$id;
    if (!r) throw new Q5();
    if (this.store[r]) throw new eW(r);
    this.store[r] = t;
  };
  tm.prototype.getSchemas = function () {
    return Object.assign({}, this.store);
  };
  tm.prototype.getSchema = function (e) {
    return this.store[e];
  };
  function BC(e) {
    return (
      typeof e == 'object' && Object.getPrototypeOf(e) !== Object.prototype
    );
  }
  function nW(e, t) {
    if (e[VC]) return e;
    if (e.query) {
      if (e.querystring) throw new tW('querystring');
      e.querystring = e.query;
    }
    sW(e);
    for (let r of WC) {
      let n = e[r];
      n && !BC(n) && (e[r] = Zb(n, t.jsonShorthand));
    }
    if (e.response) {
      let r = Object.keys(e.response);
      for (let n of r) {
        if (BC(e.response[n])) continue;
        let i = e.response[n].content,
          s = !1;
        if (i) {
          let o = Object.keys(i);
          for (let a = 0; a < o.length; a++) {
            let u = o[a];
            if (!i[u].schema) {
              if (o.length === 1) break;
              throw new rW(u);
            }
            (e.response[n].content[u].schema = Zb(
              i[u].schema,
              t.jsonShorthand,
            )),
              a === o.length - 1 && (s = !0);
          }
        }
        s || (e.response[n] = Zb(e.response[n], t.jsonShorthand));
      }
    }
    return (e[VC] = !0), e;
  }
  function sW(e) {
    for (let t of WC)
      e[t] && (e[t].isFluentSchema || e[t][Qb]) && (e[t] = e[t].valueOf());
    if (e.response) {
      let t = Object.keys(e.response);
      for (let r of t)
        (e.response[r].isFluentSchema || e.response[r][Qb]) &&
          (e.response[r] = e.response[r].valueOf());
    }
  }
  function Zb(e, t) {
    return !t || e.$ref || e.oneOf || e.allOf || e.anyOf || e.$merge || e.$patch
      ? e
      : !e.type && !e.properties
        ? { type: 'object', properties: e }
        : e;
  }
  function iW(e, t, r) {
    let n = e[Z5];
    if (!n) return !1;
    if (n[t]) {
      if (n[t].constructor === Object && r) {
        let s = r.split(';', 1)[0];
        return n[t][s] ? n[t][s] : !1;
      }
      return n[t];
    }
    let i = (t + '')[0] + 'xx';
    if (n[i]) {
      if (n[i].constructor === Object && r) {
        let s = r.split(';', 1)[0];
        return n[i][s] ? n[i][s] : !1;
      }
      return n[i];
    }
    if (n.default) {
      if (n.default.constructor === Object && r) {
        let s = r.split(';', 1)[0];
        return n.default[s] ? n.default[s] : !1;
      }
      return n.default;
    }
    return !1;
  }
  GC.exports = {
    buildSchemas(e) {
      return new tm(e);
    },
    getSchemaSerializer: iW,
    normalizeSchema: nW,
  };
});
var rm = $((dpe, JC) => {
  'use strict';
  var oW = /[\u0000-\u001f\u0022\u005c\ud800-\udfff]/;
  JC.exports = class YC {
    constructor(t) {
      switch (t && t.rounding) {
        case 'floor':
          this.parseInteger = Math.floor;
          break;
        case 'ceil':
          this.parseInteger = Math.ceil;
          break;
        case 'round':
          this.parseInteger = Math.round;
          break;
        case 'trunc':
        default:
          this.parseInteger = Math.trunc;
          break;
      }
      this._options = t;
    }
    asInteger(t) {
      if (Number.isInteger(t)) return '' + t;
      if (typeof t == 'bigint') return t.toString();
      let r = this.parseInteger(t);
      if (r === 1 / 0 || r === -1 / 0 || r !== r)
        throw new Error(`The value "${t}" cannot be converted to an integer.`);
      return '' + r;
    }
    asNumber(t) {
      let r = Number(t);
      if (r !== r)
        throw new Error(`The value "${t}" cannot be converted to a number.`);
      return r === 1 / 0 || r === -1 / 0 ? 'null' : '' + r;
    }
    asBoolean(t) {
      return (t && 'true') || 'false';
    }
    asDateTime(t) {
      if (t === null) return '""';
      if (t instanceof Date) return '"' + t.toISOString() + '"';
      if (typeof t == 'string') return '"' + t + '"';
      throw new Error(`The value "${t}" cannot be converted to a date-time.`);
    }
    asDate(t) {
      if (t === null) return '""';
      if (t instanceof Date)
        return (
          '"' +
          new Date(t.getTime() - t.getTimezoneOffset() * 6e4)
            .toISOString()
            .slice(0, 10) +
          '"'
        );
      if (typeof t == 'string') return '"' + t + '"';
      throw new Error(`The value "${t}" cannot be converted to a date.`);
    }
    asTime(t) {
      if (t === null) return '""';
      if (t instanceof Date)
        return (
          '"' +
          new Date(t.getTime() - t.getTimezoneOffset() * 6e4)
            .toISOString()
            .slice(11, 19) +
          '"'
        );
      if (typeof t == 'string') return '"' + t + '"';
      throw new Error(`The value "${t}" cannot be converted to a time.`);
    }
    asString(t) {
      let r = t.length;
      if (r < 42) {
        let i = '',
          s = -1,
          o = 255;
        for (var n = 0; n < r; n++)
          if (((o = t.charCodeAt(n)), o === 34 || o === 92))
            s === -1 && (s = 0), (i += t.slice(s, n) + '\\'), (s = n);
          else if (o < 32 || (o >= 55296 && o <= 57343))
            return JSON.stringify(t);
        return (s === -1 && '"' + t + '"') || '"' + i + t.slice(s) + '"';
      } else
        return r < 5e3 && oW.test(t) === !1 ? '"' + t + '"' : JSON.stringify(t);
    }
    asUnsafeString(t) {
      return '"' + t + '"';
    }
    getState() {
      return this._options;
    }
    static restoreFromState(t) {
      return new YC(t);
    }
  };
});
var XC = $((hpe, KC) => {
  'use strict';
  var aW = rm(),
    lW = { mode: 'standalone' },
    uW = aW.restoreFromState(lW),
    cW = null;
  KC.exports = (function (t, r) {
    let n = '{',
      i = '}',
      s = '[',
      o = ']',
      a = ',',
      u = ':',
      c = '"',
      d = n + i,
      m = s + o,
      g = c + c,
      v = 'null';
    function S(T) {
      let C = T && typeof T.toJSON == 'function' ? T.toJSON() : T;
      if (C === null) return d;
      let I,
        x = n,
        E = !1;
      return (
        (I = C.statusCode),
        I !== void 0 &&
          ((!E && (E = !0)) || (x += a),
          (x += '"statusCode":'),
          (x += r.asNumber(I))),
        (I = C.code),
        I !== void 0 &&
          ((!E && (E = !0)) || (x += a),
          (x += '"code":'),
          typeof I != 'string'
            ? I === null
              ? (x += g)
              : I instanceof Date
                ? (x += c + I.toISOString() + c)
                : I instanceof RegExp
                  ? (x += r.asString(I.source))
                  : (x += r.asString(I.toString()))
            : (x += r.asString(I))),
        (I = C.error),
        I !== void 0 &&
          ((!E && (E = !0)) || (x += a),
          (x += '"error":'),
          typeof I != 'string'
            ? I === null
              ? (x += g)
              : I instanceof Date
                ? (x += c + I.toISOString() + c)
                : I instanceof RegExp
                  ? (x += r.asString(I.source))
                  : (x += r.asString(I.toString()))
            : (x += r.asString(I))),
        (I = C.message),
        I !== void 0 &&
          ((!E && (E = !0)) || (x += a),
          (x += '"message":'),
          typeof I != 'string'
            ? I === null
              ? (x += g)
              : I instanceof Date
                ? (x += c + I.toISOString() + c)
                : I instanceof RegExp
                  ? (x += r.asString(I.source))
                  : (x += r.asString(I.toString()))
            : (x += r.asString(I))),
        x + i
      );
    }
    return S;
  })(cW, uW);
});
var Wf = $((ppe, t1) => {
  'use strict';
  var ZC = require('node:http').STATUS_CODES,
    fW = X0(),
    {
      kReplyHeaders: Aa,
      kReplyNextErrorHandler: nm,
      kReplyIsRunningOnErrorHook: dW,
      kReplyHasStatusCode: hW,
      kRouteContext: e1,
      kDisableRequestLogging: sm,
    } = rr(),
    {
      FST_ERR_REP_INVALID_PAYLOAD_TYPE: pW,
      FST_ERR_FAILED_ERROR_SERIALIZATION: mW,
    } = br(),
    { getSchemaSerializer: yW } = Bf(),
    eS = XC(),
    gW = {
      func: bW,
      toJSON() {
        return this.func.name.toString() + '()';
      },
    };
  function vW(e, t, r) {
    e[dW] = !1;
    let n = e[e1];
    if (e[nm] === !1) {
      QC(t, e, function (o, a) {
        try {
          o.raw.writeHead(o.raw.statusCode, o[Aa]);
        } catch (u) {
          o.log[sm] ||
            o.log.warn({ req: o.request, res: o, err: u }, u && u.message),
            o.raw.writeHead(o.raw.statusCode);
        }
        o.raw.end(a);
      });
      return;
    }
    let i = e[nm] || n.errorHandler;
    (e[nm] = Object.getPrototypeOf(i)),
      delete e[Aa]['content-type'],
      delete e[Aa]['content-length'];
    let s = i.func;
    if (!s) {
      (e[nm] = !1), QC(t, e, r);
      return;
    }
    try {
      let o = s(t, e.request, e);
      o !== void 0 &&
        (o !== null && typeof o.then == 'function' ? fW(o, e) : e.send(o));
    } catch (o) {
      e.send(o);
    }
  }
  function bW(e, t, r) {
    if ((_W(e, r), !r[hW] || r.statusCode === 200)) {
      let n = e.statusCode || e.status;
      r.code(n >= 400 ? n : 500);
    }
    r.statusCode < 500
      ? r.log[sm] || r.log.info({ res: r, err: e }, e && e.message)
      : r.log[sm] || r.log.error({ req: t, res: r, err: e }, e && e.message),
      r.send(e);
  }
  function QC(e, t, r) {
    let n = t.raw,
      i = t.statusCode;
    t[Aa]['content-type'] =
      t[Aa]['content-type'] ?? 'application/json; charset=utf-8';
    let s;
    try {
      let o = yW(t[e1], i, t[Aa]['content-type']);
      s =
        o === !1
          ? eS({
              error: ZC[i + ''],
              code: e.code,
              message: e.message,
              statusCode: i,
            })
          : o(
              Object.create(e, {
                error: { value: ZC[i + ''] },
                message: { value: e.message },
                statusCode: { value: i },
              }),
            );
    } catch (o) {
      t.log[sm] ||
        t.log.error(
          { err: o, statusCode: n.statusCode },
          'The serializer for the given status code failed',
        ),
        t.code(500),
        (s = eS(new mW(o.message, e.message)));
    }
    typeof s != 'string' && !Buffer.isBuffer(s) && (s = eS(new pW(typeof s))),
      (t[Aa]['content-length'] = '' + Buffer.byteLength(s)),
      r(t, s);
  }
  function SW(e = gW, t) {
    if (!t) return e;
    let r = Object.create(e);
    return (r.func = t), r;
  }
  function _W(e, t) {
    let r = t.raw,
      n = r.statusCode;
    (n = n >= 400 ? n : 500),
      e != null &&
        (e.headers !== void 0 && t.headers(e.headers),
        e.status >= 400
          ? (n = e.status)
          : e.statusCode >= 400 && (n = e.statusCode)),
      (r.statusCode = n);
  }
  t1.exports = { buildErrorHandler: SW, handleError: vW };
});
var cm = $((mpe, um) => {
  'use strict';
  var sS = require('node:stream').finished,
    wW = require('node:stream').Readable,
    {
      kFourOhFourContext: r1,
      kPublicRouteContext: n1,
      kReplyErrorHandlerCalled: f1,
      kReplyHijacked: Gf,
      kReplyStartTime: Yf,
      kReplyEndTime: oS,
      kReplySerializer: ti,
      kReplySerializerDefault: om,
      kReplyIsError: am,
      kReplyHeaders: ft,
      kReplyTrailers: nr,
      kReplyHasStatusCode: aS,
      kReplyIsRunningOnErrorHook: lS,
      kReplyNextErrorHandler: EW,
      kDisableRequestLogging: d1,
      kSchemaResponse: lm,
      kReplyCacheSerializeFns: ho,
      kSchemaController: tS,
      kOptions: RW,
      kRouteContext: Ne,
    } = rr(),
    {
      onSendHookRunner: h1,
      onResponseHookRunner: TW,
      preHandlerHookRunner: PW,
      preSerializationHookRunner: kW,
    } = ao(),
    s1 = tb()[Symbol.for('internals')],
    xW = Vf(),
    iS = xW.now,
    { handleError: i1 } = Wf(),
    { getSchemaSerializer: CW } = Bf(),
    rS = {
      JSON: 'application/json; charset=utf-8',
      PLAIN: 'text/plain; charset=utf-8',
      OCTET: 'application/octet-stream',
    },
    {
      FST_ERR_REP_INVALID_PAYLOAD_TYPE: OW,
      FST_ERR_REP_RESPONSE_BODY_CONSUMED: IW,
      FST_ERR_REP_ALREADY_SENT: p1,
      FST_ERR_REP_SENT_VALUE: AW,
      FST_ERR_SEND_INSIDE_ONERR: $W,
      FST_ERR_BAD_STATUS_CODE: NW,
      FST_ERR_BAD_TRAILER_NAME: LW,
      FST_ERR_BAD_TRAILER_VALUE: DW,
      FST_ERR_MISSING_SERIALIZATION_FN: jW,
      FST_ERR_MISSING_CONTENTTYPE_SERIALIZATION_FN: FW,
    } = br(),
    {
      FSTDEP010: qW,
      FSTDEP013: MW,
      FSTDEP019: HW,
      FSTDEP020: zW,
      FSTDEP021: UW,
    } = Qs(),
    m1 = Object.prototype.toString;
  function lt(e, t, r) {
    (this.raw = e),
      (this[ti] = null),
      (this[f1] = !1),
      (this[am] = !1),
      (this[lS] = !1),
      (this.request = t),
      (this[ft] = {}),
      (this[nr] = null),
      (this[aS] = !1),
      (this[Yf] = void 0),
      (this.log = r);
  }
  lt.props = [];
  Object.defineProperties(lt.prototype, {
    [Ne]: {
      get() {
        return this.request[Ne];
      },
    },
    context: {
      get() {
        return HW(), this.request[Ne];
      },
    },
    elapsedTime: {
      get() {
        return this[Yf] === void 0 ? 0 : (this[oS] || iS()) - this[Yf];
      },
    },
    server: {
      get() {
        return this.request[Ne].server;
      },
    },
    sent: {
      enumerable: !0,
      get() {
        return (this[Gf] || this.raw.writableEnded) === !0;
      },
      set(e) {
        if ((qW(), e !== !0)) throw new AW();
        if (this.sent && this[Gf])
          throw new p1(this.request.url, this.request.method);
        this[Gf] = !0;
      },
    },
    statusCode: {
      get() {
        return this.raw.statusCode;
      },
      set(e) {
        this.code(e);
      },
    },
    [n1]: {
      get() {
        return this.request[n1];
      },
    },
  });
  lt.prototype.hijack = function () {
    return (this[Gf] = !0), this;
  };
  lt.prototype.send = function (e) {
    if (this[lS] === !0) throw new $W();
    if (this.sent)
      return (
        this.log.warn({ err: new p1(this.request.url, this.request.method) }),
        this
      );
    if (e instanceof Error || this[am] === !0)
      return (this[am] = !1), Jf(this, e, $a), this;
    if (e === void 0) return $a(this, e), this;
    let t = this.getHeader('content-type'),
      r = t !== void 0;
    if (e !== null) {
      if (
        typeof e.pipe == 'function' ||
        typeof e.getReader == 'function' ||
        m1.call(e) === '[object Response]'
      )
        return $a(this, e), this;
      if (e?.buffer instanceof ArrayBuffer) {
        r === !1 && (this[ft]['content-type'] = rS.OCTET);
        let n = Buffer.isBuffer(e)
          ? e
          : Buffer.from(e.buffer, e.byteOffset, e.byteLength);
        return $a(this, n), this;
      }
      if (r === !1 && typeof e == 'string')
        return (this[ft]['content-type'] = rS.PLAIN), $a(this, e), this;
    }
    if (this[ti] !== null) {
      if (typeof e != 'string') return o1(this, e), this;
      e = this[ti](e);
    } else if (r === !1 || t.indexOf('json') > -1) {
      if (r === !1) this[ft]['content-type'] = rS.JSON;
      else if (t.indexOf('charset') === -1) {
        let n = t.trim();
        n.endsWith(';')
          ? (this[ft]['content-type'] = `${n} charset=utf-8`)
          : (this[ft]['content-type'] = `${n}; charset=utf-8`);
      }
      if (typeof e != 'string') return o1(this, e), this;
    }
    return $a(this, e), this;
  };
  lt.prototype.getHeader = function (e) {
    e = e.toLowerCase();
    let t = this.raw,
      r = this[ft][e];
    return r === void 0 && t.hasHeader(e) && (r = t.getHeader(e)), r;
  };
  lt.prototype.getHeaders = function () {
    return { ...this.raw.getHeaders(), ...this[ft] };
  };
  lt.prototype.hasHeader = function (e) {
    return (
      (e = e.toLowerCase()), this[ft][e] !== void 0 || this.raw.hasHeader(e)
    );
  };
  lt.prototype.removeHeader = function (e) {
    return delete this[ft][e.toLowerCase()], this;
  };
  lt.prototype.header = function (e, t = '') {
    return (
      (e = e.toLowerCase()),
      this[ft][e] && e === 'set-cookie'
        ? (typeof this[ft][e] == 'string' && (this[ft][e] = [this[ft][e]]),
          Array.isArray(t)
            ? Array.prototype.push.apply(this[ft][e], t)
            : this[ft][e].push(t))
        : (this[ft][e] = t),
      this
    );
  };
  lt.prototype.headers = function (e) {
    let t = Object.keys(e);
    for (var r = 0; r !== t.length; ++r) {
      let n = t[r];
      this.header(n, e[n]);
    }
    return this;
  };
  var VW = new Set([
    'transfer-encoding',
    'content-length',
    'host',
    'cache-control',
    'max-forwards',
    'te',
    'authorization',
    'set-cookie',
    'content-encoding',
    'content-type',
    'content-range',
    'trailer',
  ]);
  lt.prototype.trailer = function (e, t) {
    if (((e = e.toLowerCase()), VW.has(e))) throw new LW(e);
    if (typeof t != 'function') throw new DW(e, typeof t);
    return this[nr] === null && (this[nr] = {}), (this[nr][e] = t), this;
  };
  lt.prototype.hasTrailer = function (e) {
    return this[nr]?.[e.toLowerCase()] !== void 0;
  };
  lt.prototype.removeTrailer = function (e) {
    return this[nr] === null
      ? this
      : ((this[nr][e.toLowerCase()] = void 0), this);
  };
  lt.prototype.code = function (e) {
    let t = Number(e);
    if (isNaN(t) || t < 100 || t > 599) throw new NW(e || String(e));
    return (this.raw.statusCode = t), (this[aS] = !0), this;
  };
  lt.prototype.status = lt.prototype.code;
  lt.prototype.getSerializationFunction = function (e, t) {
    let r;
    return (
      typeof e == 'string' || typeof e == 'number'
        ? typeof t == 'string'
          ? (r = this[Ne][lm]?.[e]?.[t])
          : (r = this[Ne][lm]?.[e])
        : typeof e == 'object' && (r = this[Ne][ho]?.get(e)),
      r
    );
  };
  lt.prototype.compileSerializationSchema = function (e, t = null, r = null) {
    let { request: n } = this,
      { method: i, url: s } = n;
    if (this[Ne][ho]?.has(e)) return this[Ne][ho].get(e);
    let a = (
      this[Ne].serializerCompiler ||
      this.server[tS].serializerCompiler ||
      this.server[tS].setupSerializer(this.server[RW]) ||
      this.server[tS].serializerCompiler
    )({ schema: e, method: i, url: s, httpStatus: t, contentType: r });
    return (
      this[Ne][ho] == null && (this[Ne][ho] = new WeakMap()),
      this[Ne][ho].set(e, a),
      a
    );
  };
  lt.prototype.serializeInput = function (e, t, r, n) {
    let i = r,
      s;
    if (
      ((r = typeof t == 'string' || typeof t == 'number' ? t : r),
      (n = r && i !== r ? i : n),
      r != null)
    ) {
      if (
        (n != null ? (s = this[Ne][lm]?.[r]?.[n]) : (s = this[Ne][lm]?.[r]),
        s == null)
      )
        throw n ? new FW(r, n) : new jW(r);
    } else
      this[Ne][ho]?.has(t)
        ? (s = this[Ne][ho].get(t))
        : (s = this.compileSerializationSchema(t, r, n));
    return s(e);
  };
  lt.prototype.serialize = function (e) {
    return this[ti] !== null
      ? this[ti](e)
      : this[Ne] && this[Ne][om]
        ? this[Ne][om](e, this.raw.statusCode)
        : v1(this[Ne], e, this.raw.statusCode);
  };
  lt.prototype.serializer = function (e) {
    return (this[ti] = e), this;
  };
  lt.prototype.type = function (e) {
    return (this[ft]['content-type'] = e), this;
  };
  lt.prototype.redirect = function (e, t) {
    if (typeof e == 'number') {
      UW();
      let r = t;
      (t = e), (e = r);
    }
    return (
      t || (t = this[aS] ? this.raw.statusCode : 302),
      this.header('location', e).code(t).send()
    );
  };
  lt.prototype.callNotFound = function () {
    return KW(this), this;
  };
  lt.prototype.getResponseTime = function () {
    return zW(), this.elapsedTime;
  };
  lt.prototype.then = function (e, t) {
    if (this.sent) {
      e();
      return;
    }
    sS(this.raw, (r) => {
      r && r.code !== 'ERR_STREAM_PREMATURE_CLOSE'
        ? t
          ? t(r)
          : this.log && this.log.warn('unhandled rejection on reply.then')
        : e();
    });
  };
  function o1(e, t) {
    e[Ne].preSerialization !== null
      ? kW(e[Ne].preSerialization, e.request, e, t, a1)
      : a1(null, e.request, e, t);
  }
  function a1(e, t, r, n) {
    if (e != null) {
      Jf(r, e);
      return;
    }
    try {
      r[ti] !== null
        ? (n = r[ti](n))
        : r[Ne] && r[Ne][om]
          ? (n = r[Ne][om](n, r.raw.statusCode))
          : (n = v1(r[Ne], n, r.raw.statusCode, r[ft]['content-type']));
    } catch (i) {
      BW(i, r), Jf(r, i);
      return;
    }
    $a(r, n);
  }
  function BW(e, t) {
    e.serialization = t[Ne].config;
  }
  function $a(e, t) {
    e[Ne].onSend !== null ? h1(e[Ne].onSend, e.request, e, t, WW) : y1(e, t);
  }
  function WW(e, t, r, n) {
    e != null ? Jf(r, e) : y1(r, n);
  }
  function nS(e, t) {
    let r = e.raw;
    try {
      r.writeHead(t, e[ft]);
    } catch (n) {
      throw (
        (n.code === 'ERR_HTTP_HEADERS_SENT' &&
          e.log.warn(
            `Reply was already sent, did you forget to "return reply" in the "${e.request.raw.url}" (${e.request.raw.method}) route?`,
          ),
        n)
      );
    }
  }
  function y1(e, t) {
    let r = e.raw,
      n = e.request;
    if (e[nr] !== null) {
      let o = Object.keys(e[nr]),
        a = '';
      for (let u of o) typeof e[nr][u] == 'function' && ((a += ' '), (a += u));
      e.header('Transfer-Encoding', 'chunked'), e.header('Trailer', a.trim());
    }
    let i = m1.call(t) === '[object Response]';
    i && typeof t.status == 'number' && e.code(t.status);
    let s = r.statusCode;
    if (t == null) {
      s >= 200 &&
        s !== 204 &&
        s !== 304 &&
        n.method !== 'HEAD' &&
        e[nr] === null &&
        (e[ft]['content-length'] = '0'),
        nS(e, s),
        im(t, r, e);
      return;
    }
    if ((s >= 100 && s < 200) || s === 204) {
      e.removeHeader('content-type'),
        e.removeHeader('content-length'),
        nS(e, s),
        im(void 0, r, e),
        typeof t.resume == 'function' && (t.on('error', b1), t.resume());
      return;
    }
    if (typeof t.pipe == 'function') {
      g1(t, r, e);
      return;
    }
    if (typeof t.getReader == 'function') {
      u1(t, r, e);
      return;
    }
    if (i) {
      if (
        typeof t.headers == 'object' &&
        typeof t.headers.forEach == 'function'
      )
        for (let [o, a] of t.headers) e.header(o, a);
      if (t.body != null) {
        if (t.bodyUsed) throw new IW();
        u1(t.body, r, e);
      }
      return;
    }
    if (typeof t != 'string' && !Buffer.isBuffer(t)) throw new OW(typeof t);
    if (e[nr] === null) {
      let o = e[ft]['content-length'];
      (!o || (n.raw.method !== 'HEAD' && Number(o) !== Buffer.byteLength(t))) &&
        (e[ft]['content-length'] = '' + Buffer.byteLength(t));
    }
    nS(e, s), r.write(t), im(t, r, e);
  }
  function l1(e, t, r) {
    t.code === 'ERR_STREAM_PREMATURE_CLOSE'
      ? e[d1] || e.info({ res: r }, 'stream closed prematurely')
      : e.warn(
          { err: t },
          'response terminated with an error with headers already sent',
        );
  }
  function u1(e, t, r) {
    let n = wW.fromWeb(e);
    g1(n, t, r);
  }
  function g1(e, t, r) {
    let n = !0,
      i = !1;
    if (
      (GW(e, t, r),
      sS(e, { readable: !0, writable: !1 }, function (s) {
        (n = !1),
          s != null &&
            (t.headersSent || r.request.raw.aborted === !0
              ? (i || ((i = !0), l1(r.log, s, t)), t.destroy())
              : Jf(r, s));
      }),
      sS(t, function (s) {
        n &&
          (s != null && t.headersSent && !i && ((i = !0), l1(r.log, s, t)),
          typeof e.destroy == 'function'
            ? e.destroy()
            : typeof e.close == 'function'
              ? e.close(b1)
              : typeof e.abort == 'function'
                ? e.abort()
                : r.log.warn('stream payload does not end properly'));
      }),
      t.headersSent)
    )
      r.log.warn(
        "response will send, but you shouldn't use res.writeHead in stream mode",
      );
    else for (let s in r[ft]) t.setHeader(s, r[ft][s]);
    e.pipe(t);
  }
  function im(e, t, r) {
    if (r[nr] === null) {
      t.end(null, null, null);
      return;
    }
    let n = Object.keys(r[nr]),
      i = {},
      s = 0,
      o = !0;
    function a() {
      s === 0 && (t.addTrailers(i), t.end(null, null, null));
    }
    for (let u of n) {
      let c = function (m, g) {
        s++, m ? r.log.debug(m) : (i[u] = g), process.nextTick(a);
      };
      if (typeof r[nr][u] != 'function') continue;
      (o = !1), s--;
      let d = r[nr][u](r, e, c);
      typeof d == 'object' && typeof d.then == 'function'
        ? d.then((m) => c(null, m), c)
        : d != null && (MW(), c(null, d));
    }
    o && t.end(null, null, null);
  }
  function GW(e, t, r) {
    r[nr] !== null && e.on('end', () => im(null, t, r));
  }
  function Jf(e, t, r) {
    e[Ne].onError !== null && !e[EW]
      ? ((e[lS] = !0), h1(e[Ne].onError, e.request, e, t, () => i1(e, t, r)))
      : i1(e, t, r);
  }
  function YW(e) {
    e[Yf] = iS();
    let t = (r) => {
      (e[oS] = iS()),
        e.raw.removeListener('finish', t),
        e.raw.removeListener('error', t);
      let n = e[Ne];
      n && n.onResponse !== null
        ? TW(n.onResponse, e.request, e, c1)
        : c1(r, e.request, e);
    };
    e.raw.on('finish', t), e.raw.on('error', t);
  }
  function c1(e, t, r) {
    if (r.log[d1]) return;
    let n = r.elapsedTime;
    if (e != null) {
      r.log.error({ res: r, err: e, responseTime: n }, 'request errored');
      return;
    }
    r.log.info({ res: r, responseTime: n }, 'request completed');
  }
  function JW(e) {
    let t = e.props.slice();
    function r(n, i, s) {
      (this.raw = n),
        (this[am] = !1),
        (this[f1] = !1),
        (this[Gf] = !1),
        (this[ti] = null),
        (this.request = i),
        (this[ft] = {}),
        (this[nr] = null),
        (this[Yf] = void 0),
        (this[oS] = void 0),
        (this.log = s);
      for (var o, a = 0; a < t.length; a++) (o = t[a]), (this[o.key] = o.value);
    }
    return (
      Object.setPrototypeOf(r.prototype, e.prototype),
      Object.setPrototypeOf(r, e),
      (r.parent = e),
      (r.props = t),
      r
    );
  }
  function KW(e) {
    if (e[Ne][r1] === null) {
      e.log.warn(
        'Trying to send a NotFound error inside a 404 handler. Sending basic 404 response.',
      ),
        e.code(404).send('404 Not Found');
      return;
    }
    (e.request[Ne] = e[Ne][r1]),
      e[Ne].preHandler !== null
        ? PW(e[Ne].preHandler, e.request, e, s1.preHandlerCallback)
        : s1.preHandlerCallback(null, e.request, e);
  }
  function v1(e, t, r, n) {
    let i = CW(e, r, n);
    return i ? i(t) : JSON.stringify(t);
  }
  function b1() {}
  um.exports = lt;
  um.exports.buildReply = JW;
  um.exports.setupResponseListeners = YW;
});
var _1 = $((ype, S1) => {
  'use strict';
  S1.exports = XW;
  function XW(e) {
    if (!e) throw new TypeError('argument req is required');
    var t = QW(e.headers['x-forwarded-for'] || ''),
      r = ZW(e),
      n = [r].concat(t);
    return n;
  }
  function ZW(e) {
    return e.socket ? e.socket.remoteAddress : e.connection.remoteAddress;
  }
  function QW(e) {
    for (var t = e.length, r = [], n = e.length, i = e.length - 1; i >= 0; i--)
      switch (e.charCodeAt(i)) {
        case 32:
          n === t && (n = t = i);
          break;
        case 44:
          n !== t && r.push(e.substring(n, t)), (n = t = i);
          break;
        default:
          n = i;
          break;
      }
    return n !== t && r.push(e.substring(n, t)), r;
  }
});
var E1 = $((w1, Kf) => {
  (function () {
    var e, t, r, n, i, s, o, a, u;
    (t = {}),
      (a = this),
      typeof Kf < 'u' && Kf !== null && Kf.exports
        ? (Kf.exports = t)
        : (a.ipaddr = t),
      (o = function (c, d, m, g) {
        var v, S;
        if (c.length !== d.length)
          throw new Error(
            'ipaddr: cannot match CIDR for objects with different lengths',
          );
        for (v = 0; g > 0; ) {
          if (((S = m - g), S < 0 && (S = 0), c[v] >> S !== d[v] >> S))
            return !1;
          (g -= m), (v += 1);
        }
        return !0;
      }),
      (t.subnetMatch = function (c, d, m) {
        var g, v, S, w, T;
        m == null && (m = 'unicast');
        for (S in d)
          for (
            w = d[S],
              w[0] && !(w[0] instanceof Array) && (w = [w]),
              g = 0,
              v = w.length;
            g < v;
            g++
          )
            if (((T = w[g]), c.kind() === T[0].kind() && c.match.apply(c, T)))
              return S;
        return m;
      }),
      (t.IPv4 = (function () {
        function c(d) {
          var m, g, v;
          if (d.length !== 4)
            throw new Error('ipaddr: ipv4 octet count should be 4');
          for (m = 0, g = d.length; m < g; m++)
            if (((v = d[m]), !(0 <= v && v <= 255)))
              throw new Error('ipaddr: ipv4 octet should fit in 8 bits');
          this.octets = d;
        }
        return (
          (c.prototype.kind = function () {
            return 'ipv4';
          }),
          (c.prototype.toString = function () {
            return this.octets.join('.');
          }),
          (c.prototype.toNormalizedString = function () {
            return this.toString();
          }),
          (c.prototype.toByteArray = function () {
            return this.octets.slice(0);
          }),
          (c.prototype.match = function (d, m) {
            var g;
            if (
              (m === void 0 && ((g = d), (d = g[0]), (m = g[1])),
              d.kind() !== 'ipv4')
            )
              throw new Error(
                'ipaddr: cannot match ipv4 address with non-ipv4 one',
              );
            return o(this.octets, d.octets, 8, m);
          }),
          (c.prototype.SpecialRanges = {
            unspecified: [[new c([0, 0, 0, 0]), 8]],
            broadcast: [[new c([255, 255, 255, 255]), 32]],
            multicast: [[new c([224, 0, 0, 0]), 4]],
            linkLocal: [[new c([169, 254, 0, 0]), 16]],
            loopback: [[new c([127, 0, 0, 0]), 8]],
            carrierGradeNat: [[new c([100, 64, 0, 0]), 10]],
            private: [
              [new c([10, 0, 0, 0]), 8],
              [new c([172, 16, 0, 0]), 12],
              [new c([192, 168, 0, 0]), 16],
            ],
            reserved: [
              [new c([192, 0, 0, 0]), 24],
              [new c([192, 0, 2, 0]), 24],
              [new c([192, 88, 99, 0]), 24],
              [new c([198, 51, 100, 0]), 24],
              [new c([203, 0, 113, 0]), 24],
              [new c([240, 0, 0, 0]), 4],
            ],
          }),
          (c.prototype.range = function () {
            return t.subnetMatch(this, this.SpecialRanges);
          }),
          (c.prototype.toIPv4MappedAddress = function () {
            return t.IPv6.parse('::ffff:' + this.toString());
          }),
          (c.prototype.prefixLengthFromSubnetMask = function () {
            var d, m, g, v, S, w, T;
            for (
              T = {
                0: 8,
                128: 7,
                192: 6,
                224: 5,
                240: 4,
                248: 3,
                252: 2,
                254: 1,
                255: 0,
              },
                d = 0,
                S = !1,
                m = g = 3;
              g >= 0;
              m = g += -1
            )
              if (((v = this.octets[m]), v in T)) {
                if (((w = T[v]), S && w !== 0)) return null;
                w !== 8 && (S = !0), (d += w);
              } else return null;
            return 32 - d;
          }),
          c
        );
      })()),
      (r = '(0?\\d+|0x[a-f0-9]+)'),
      (n = {
        fourOctet: new RegExp(
          '^' + r + '\\.' + r + '\\.' + r + '\\.' + r + '$',
          'i',
        ),
        longValue: new RegExp('^' + r + '$', 'i'),
      }),
      (t.IPv4.parser = function (c) {
        var d, m, g, v, S;
        if (
          ((m = function (w) {
            return w[0] === '0' && w[1] !== 'x' ? parseInt(w, 8) : parseInt(w);
          }),
          (d = c.match(n.fourOctet)))
        )
          return (function () {
            var w, T, C, I;
            for (C = d.slice(1, 6), I = [], w = 0, T = C.length; w < T; w++)
              (g = C[w]), I.push(m(g));
            return I;
          })();
        if ((d = c.match(n.longValue))) {
          if (((S = m(d[1])), S > 4294967295 || S < 0))
            throw new Error('ipaddr: address outside defined range');
          return (function () {
            var w, T;
            for (T = [], v = w = 0; w <= 24; v = w += 8) T.push((S >> v) & 255);
            return T;
          })().reverse();
        } else return null;
      }),
      (t.IPv6 = (function () {
        function c(d, m) {
          var g, v, S, w, T, C;
          if (d.length === 16)
            for (this.parts = [], g = v = 0; v <= 14; g = v += 2)
              this.parts.push((d[g] << 8) | d[g + 1]);
          else if (d.length === 8) this.parts = d;
          else throw new Error('ipaddr: ipv6 part count should be 8 or 16');
          for (C = this.parts, S = 0, w = C.length; S < w; S++)
            if (((T = C[S]), !(0 <= T && T <= 65535)))
              throw new Error('ipaddr: ipv6 part should fit in 16 bits');
          m && (this.zoneId = m);
        }
        return (
          (c.prototype.kind = function () {
            return 'ipv6';
          }),
          (c.prototype.toString = function () {
            return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');
          }),
          (c.prototype.toRFC5952String = function () {
            var d, m, g, v, S;
            for (
              v = /((^|:)(0(:|$)){2,})/g,
                S = this.toNormalizedString(),
                d = 0,
                m = -1;
              (g = v.exec(S));

            )
              g[0].length > m && ((d = g.index), (m = g[0].length));
            return m < 0 ? S : S.substring(0, d) + '::' + S.substring(d + m);
          }),
          (c.prototype.toByteArray = function () {
            var d, m, g, v, S;
            for (d = [], S = this.parts, m = 0, g = S.length; m < g; m++)
              (v = S[m]), d.push(v >> 8), d.push(v & 255);
            return d;
          }),
          (c.prototype.toNormalizedString = function () {
            var d, m, g;
            return (
              (d = function () {
                var v, S, w, T;
                for (w = this.parts, T = [], v = 0, S = w.length; v < S; v++)
                  (m = w[v]), T.push(m.toString(16));
                return T;
              }
                .call(this)
                .join(':')),
              (g = ''),
              this.zoneId && (g = '%' + this.zoneId),
              d + g
            );
          }),
          (c.prototype.toFixedLengthString = function () {
            var d, m, g;
            return (
              (d = function () {
                var v, S, w, T;
                for (w = this.parts, T = [], v = 0, S = w.length; v < S; v++)
                  (m = w[v]), T.push(m.toString(16).padStart(4, '0'));
                return T;
              }
                .call(this)
                .join(':')),
              (g = ''),
              this.zoneId && (g = '%' + this.zoneId),
              d + g
            );
          }),
          (c.prototype.match = function (d, m) {
            var g;
            if (
              (m === void 0 && ((g = d), (d = g[0]), (m = g[1])),
              d.kind() !== 'ipv6')
            )
              throw new Error(
                'ipaddr: cannot match ipv6 address with non-ipv6 one',
              );
            return o(this.parts, d.parts, 16, m);
          }),
          (c.prototype.SpecialRanges = {
            unspecified: [new c([0, 0, 0, 0, 0, 0, 0, 0]), 128],
            linkLocal: [new c([65152, 0, 0, 0, 0, 0, 0, 0]), 10],
            multicast: [new c([65280, 0, 0, 0, 0, 0, 0, 0]), 8],
            loopback: [new c([0, 0, 0, 0, 0, 0, 0, 1]), 128],
            uniqueLocal: [new c([64512, 0, 0, 0, 0, 0, 0, 0]), 7],
            ipv4Mapped: [new c([0, 0, 0, 0, 0, 65535, 0, 0]), 96],
            rfc6145: [new c([0, 0, 0, 0, 65535, 0, 0, 0]), 96],
            rfc6052: [new c([100, 65435, 0, 0, 0, 0, 0, 0]), 96],
            '6to4': [new c([8194, 0, 0, 0, 0, 0, 0, 0]), 16],
            teredo: [new c([8193, 0, 0, 0, 0, 0, 0, 0]), 32],
            reserved: [[new c([8193, 3512, 0, 0, 0, 0, 0, 0]), 32]],
          }),
          (c.prototype.range = function () {
            return t.subnetMatch(this, this.SpecialRanges);
          }),
          (c.prototype.isIPv4MappedAddress = function () {
            return this.range() === 'ipv4Mapped';
          }),
          (c.prototype.toIPv4Address = function () {
            var d, m, g;
            if (!this.isIPv4MappedAddress())
              throw new Error(
                'ipaddr: trying to convert a generic ipv6 address to ipv4',
              );
            return (
              (g = this.parts.slice(-2)),
              (d = g[0]),
              (m = g[1]),
              new t.IPv4([d >> 8, d & 255, m >> 8, m & 255])
            );
          }),
          (c.prototype.prefixLengthFromSubnetMask = function () {
            var d, m, g, v, S, w, T;
            for (
              T = {
                0: 16,
                32768: 15,
                49152: 14,
                57344: 13,
                61440: 12,
                63488: 11,
                64512: 10,
                65024: 9,
                65280: 8,
                65408: 7,
                65472: 6,
                65504: 5,
                65520: 4,
                65528: 3,
                65532: 2,
                65534: 1,
                65535: 0,
              },
                d = 0,
                S = !1,
                m = g = 7;
              g >= 0;
              m = g += -1
            )
              if (((v = this.parts[m]), v in T)) {
                if (((w = T[v]), S && w !== 0)) return null;
                w !== 16 && (S = !0), (d += w);
              } else return null;
            return 128 - d;
          }),
          c
        );
      })()),
      (i = '(?:[0-9a-f]+::?)+'),
      (u = '%[0-9a-z]{1,}'),
      (s = {
        zoneIndex: new RegExp(u, 'i'),
        native: new RegExp(
          '^(::)?(' + i + ')?([0-9a-f]+)?(::)?(' + u + ')?$',
          'i',
        ),
        transitional: new RegExp(
          '^((?:' +
            i +
            ')|(?:::)(?:' +
            i +
            ')?)' +
            (r + '\\.' + r + '\\.' + r + '\\.' + r) +
            ('(' + u + ')?$'),
          'i',
        ),
      }),
      (e = function (c, d) {
        var m, g, v, S, w, T;
        if (c.indexOf('::') !== c.lastIndexOf('::')) return null;
        for (
          T = (c.match(s.zoneIndex) || [])[0],
            T && ((T = T.substring(1)), (c = c.replace(/%.+$/, ''))),
            m = 0,
            g = -1;
          (g = c.indexOf(':', g + 1)) >= 0;

        )
          m++;
        if (
          (c.substr(0, 2) === '::' && m--,
          c.substr(-2, 2) === '::' && m--,
          m > d)
        )
          return null;
        for (w = d - m, S = ':'; w--; ) S += '0:';
        return (
          (c = c.replace('::', S)),
          c[0] === ':' && (c = c.slice(1)),
          c[c.length - 1] === ':' && (c = c.slice(0, -1)),
          (d = (function () {
            var C, I, x, E;
            for (x = c.split(':'), E = [], C = 0, I = x.length; C < I; C++)
              (v = x[C]), E.push(parseInt(v, 16));
            return E;
          })()),
          { parts: d, zoneId: T }
        );
      }),
      (t.IPv6.parser = function (c) {
        var d, m, g, v, S, w, T;
        if (s.native.test(c)) return e(c, 8);
        if (
          (v = c.match(s.transitional)) &&
          ((T = v[6] || ''), (d = e(v[1].slice(0, -1) + T, 6)), d.parts)
        ) {
          for (
            w = [
              parseInt(v[2]),
              parseInt(v[3]),
              parseInt(v[4]),
              parseInt(v[5]),
            ],
              m = 0,
              g = w.length;
            m < g;
            m++
          )
            if (((S = w[m]), !(0 <= S && S <= 255))) return null;
          return (
            d.parts.push((w[0] << 8) | w[1]),
            d.parts.push((w[2] << 8) | w[3]),
            { parts: d.parts, zoneId: d.zoneId }
          );
        }
        return null;
      }),
      (t.IPv4.isIPv4 = t.IPv6.isIPv6 =
        function (c) {
          return this.parser(c) !== null;
        }),
      (t.IPv4.isValid = function (c) {
        var d;
        try {
          return new this(this.parser(c)), !0;
        } catch (m) {
          return (d = m), !1;
        }
      }),
      (t.IPv4.isValidFourPartDecimal = function (c) {
        return !!(
          t.IPv4.isValid(c) && c.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/)
        );
      }),
      (t.IPv6.isValid = function (c) {
        var d, m;
        if (typeof c == 'string' && c.indexOf(':') === -1) return !1;
        try {
          return (d = this.parser(c)), new this(d.parts, d.zoneId), !0;
        } catch (g) {
          return (m = g), !1;
        }
      }),
      (t.IPv4.parse = function (c) {
        var d;
        if (((d = this.parser(c)), d === null))
          throw new Error('ipaddr: string is not formatted like ip address');
        return new this(d);
      }),
      (t.IPv6.parse = function (c) {
        var d;
        if (((d = this.parser(c)), d.parts === null))
          throw new Error('ipaddr: string is not formatted like ip address');
        return new this(d.parts, d.zoneId);
      }),
      (t.IPv4.parseCIDR = function (c) {
        var d, m, g;
        if (
          (m = c.match(/^(.+)\/(\d+)$/)) &&
          ((d = parseInt(m[2])), d >= 0 && d <= 32)
        )
          return (
            (g = [this.parse(m[1]), d]),
            Object.defineProperty(g, 'toString', {
              value: function () {
                return this.join('/');
              },
            }),
            g
          );
        throw new Error(
          'ipaddr: string is not formatted like an IPv4 CIDR range',
        );
      }),
      (t.IPv4.subnetMaskFromPrefixLength = function (c) {
        var d, m, g;
        if (((c = parseInt(c)), c < 0 || c > 32))
          throw new Error('ipaddr: invalid IPv4 prefix length');
        for (g = [0, 0, 0, 0], m = 0, d = Math.floor(c / 8); m < d; )
          (g[m] = 255), m++;
        return (
          d < 4 && (g[d] = (Math.pow(2, c % 8) - 1) << (8 - (c % 8))),
          new this(g)
        );
      }),
      (t.IPv4.broadcastAddressFromCIDR = function (c) {
        var d, m, g, v, S, w;
        try {
          for (
            d = this.parseCIDR(c),
              v = d[0].toByteArray(),
              w = this.subnetMaskFromPrefixLength(d[1]).toByteArray(),
              S = [],
              g = 0;
            g < 4;

          )
            S.push(parseInt(v[g], 10) | (parseInt(w[g], 10) ^ 255)), g++;
          return new this(S);
        } catch (T) {
          throw (
            ((m = T),
            new Error('ipaddr: the address does not have IPv4 CIDR format'))
          );
        }
      }),
      (t.IPv4.networkAddressFromCIDR = function (c) {
        var d, m, g, v, S, w;
        try {
          for (
            d = this.parseCIDR(c),
              v = d[0].toByteArray(),
              w = this.subnetMaskFromPrefixLength(d[1]).toByteArray(),
              S = [],
              g = 0;
            g < 4;

          )
            S.push(parseInt(v[g], 10) & parseInt(w[g], 10)), g++;
          return new this(S);
        } catch (T) {
          throw (
            ((m = T),
            new Error('ipaddr: the address does not have IPv4 CIDR format'))
          );
        }
      }),
      (t.IPv6.parseCIDR = function (c) {
        var d, m, g;
        if (
          (m = c.match(/^(.+)\/(\d+)$/)) &&
          ((d = parseInt(m[2])), d >= 0 && d <= 128)
        )
          return (
            (g = [this.parse(m[1]), d]),
            Object.defineProperty(g, 'toString', {
              value: function () {
                return this.join('/');
              },
            }),
            g
          );
        throw new Error(
          'ipaddr: string is not formatted like an IPv6 CIDR range',
        );
      }),
      (t.isValid = function (c) {
        return t.IPv6.isValid(c) || t.IPv4.isValid(c);
      }),
      (t.parse = function (c) {
        if (t.IPv6.isValid(c)) return t.IPv6.parse(c);
        if (t.IPv4.isValid(c)) return t.IPv4.parse(c);
        throw new Error('ipaddr: the address has neither IPv6 nor IPv4 format');
      }),
      (t.parseCIDR = function (c) {
        var d;
        try {
          return t.IPv6.parseCIDR(c);
        } catch (m) {
          d = m;
          try {
            return t.IPv4.parseCIDR(c);
          } catch (g) {
            throw (
              ((d = g),
              new Error(
                'ipaddr: the address has neither IPv6 nor IPv4 CIDR format',
              ))
            );
          }
        }
      }),
      (t.fromByteArray = function (c) {
        var d;
        if (((d = c.length), d === 4)) return new t.IPv4(c);
        if (d === 16) return new t.IPv6(c);
        throw new Error(
          'ipaddr: the binary input is neither an IPv6 nor IPv4 address',
        );
      }),
      (t.process = function (c) {
        var d;
        return (
          (d = this.parse(c)),
          d.kind() === 'ipv6' && d.isIPv4MappedAddress() ? d.toIPv4Address() : d
        );
      });
  }).call(w1);
});
var x1 = $((gpe, hm) => {
  'use strict';
  hm.exports = o6;
  hm.exports.all = P1;
  hm.exports.compile = k1;
  var e6 = _1(),
    T1 = E1(),
    t6 = /^[0-9]+$/,
    fm = T1.isValid,
    dm = T1.parse,
    R1 = {
      linklocal: ['169.254.0.0/16', 'fe80::/10'],
      loopback: ['127.0.0.1/8', '::1/128'],
      uniquelocal: [
        '10.0.0.0/8',
        '172.16.0.0/12',
        '192.168.0.0/16',
        'fc00::/7',
      ],
    };
  function P1(e, t) {
    var r = e6(e);
    if (!t) return r;
    typeof t != 'function' && (t = k1(t));
    for (var n = 0; n < r.length - 1; n++) t(r[n], n) || (r.length = n + 1);
    return r;
  }
  function k1(e) {
    if (!e) throw new TypeError('argument is required');
    var t;
    if (typeof e == 'string') t = [e];
    else if (Array.isArray(e)) t = e.slice();
    else throw new TypeError('unsupported trust argument');
    for (var r = 0; r < t.length; r++)
      (e = t[r]),
        Object.prototype.hasOwnProperty.call(R1, e) &&
          ((e = R1[e]),
          t.splice.apply(t, [r, 1].concat(e)),
          (r += e.length - 1));
    return n6(r6(t));
  }
  function r6(e) {
    for (var t = new Array(e.length), r = 0; r < e.length; r++) t[r] = s6(e[r]);
    return t;
  }
  function n6(e) {
    var t = e.length;
    return t === 0 ? a6 : t === 1 ? u6(e[0]) : l6(e);
  }
  function s6(e) {
    var t = e.lastIndexOf('/'),
      r = t !== -1 ? e.substring(0, t) : e;
    if (!fm(r)) throw new TypeError('invalid IP address: ' + r);
    var n = dm(r);
    t === -1 &&
      n.kind() === 'ipv6' &&
      n.isIPv4MappedAddress() &&
      (n = n.toIPv4Address());
    var i = n.kind() === 'ipv6' ? 128 : 32,
      s = t !== -1 ? e.substring(t + 1, e.length) : null;
    if (
      (s === null
        ? (s = i)
        : t6.test(s)
          ? (s = parseInt(s, 10))
          : n.kind() === 'ipv4' && fm(s)
            ? (s = i6(s))
            : (s = null),
      s <= 0 || s > i)
    )
      throw new TypeError('invalid range on address: ' + e);
    return [n, s];
  }
  function i6(e) {
    var t = dm(e),
      r = t.kind();
    return r === 'ipv4' ? t.prefixLengthFromSubnetMask() : null;
  }
  function o6(e, t) {
    if (!e) throw new TypeError('req argument is required');
    if (!t) throw new TypeError('trust argument is required');
    var r = P1(e, t),
      n = r[r.length - 1];
    return n;
  }
  function a6() {
    return !1;
  }
  function l6(e) {
    return function (r) {
      if (!fm(r)) return !1;
      for (var n = dm(r), i, s = n.kind(), o = 0; o < e.length; o++) {
        var a = e[o],
          u = a[0],
          c = u.kind(),
          d = a[1],
          m = n;
        if (s !== c) {
          if (c === 'ipv4' && !n.isIPv4MappedAddress()) continue;
          i || (i = c === 'ipv4' ? n.toIPv4Address() : n.toIPv4MappedAddress()),
            (m = i);
        }
        if (m.match(u, d)) return !0;
      }
      return !1;
    };
  }
  function u6(e) {
    var t = e[0],
      r = t.kind(),
      n = r === 'ipv4',
      i = e[1];
    return function (o) {
      if (!fm(o)) return !1;
      var a = dm(o),
        u = a.kind();
      if (u !== r) {
        if (n && !a.isIPv4MappedAddress()) return !1;
        a = n ? a.toIPv4Address() : a.toIPv4MappedAddress();
      }
      return a.match(t, i);
    };
  }
});
var Xf = $((vpe, C1) => {
  var c6 = '2.0.0',
    f6 = Number.MAX_SAFE_INTEGER || 9007199254740991,
    d6 = 16,
    h6 = 250,
    p6 = [
      'major',
      'premajor',
      'minor',
      'preminor',
      'patch',
      'prepatch',
      'prerelease',
    ];
  C1.exports = {
    MAX_LENGTH: 256,
    MAX_SAFE_COMPONENT_LENGTH: d6,
    MAX_SAFE_BUILD_LENGTH: h6,
    MAX_SAFE_INTEGER: f6,
    RELEASE_TYPES: p6,
    SEMVER_SPEC_VERSION: c6,
    FLAG_INCLUDE_PRERELEASE: 1,
    FLAG_LOOSE: 2,
  };
});
var Zf = $((bpe, O1) => {
  var m6 =
    typeof process == 'object' &&
    process.env &&
    process.env.NODE_DEBUG &&
    /\bsemver\b/i.test(process.env.NODE_DEBUG)
      ? (...e) => console.error('SEMVER', ...e)
      : () => {};
  O1.exports = m6;
});
var hu = $((ri, I1) => {
  var {
      MAX_SAFE_COMPONENT_LENGTH: uS,
      MAX_SAFE_BUILD_LENGTH: y6,
      MAX_LENGTH: g6,
    } = Xf(),
    v6 = Zf();
  ri = I1.exports = {};
  var b6 = (ri.re = []),
    S6 = (ri.safeRe = []),
    ue = (ri.src = []),
    ce = (ri.t = {}),
    _6 = 0,
    cS = '[a-zA-Z0-9-]',
    w6 = [
      ['\\s', 1],
      ['\\d', g6],
      [cS, y6],
    ],
    E6 = (e) => {
      for (let [t, r] of w6)
        e = e
          .split(`${t}*`)
          .join(`${t}{0,${r}}`)
          .split(`${t}+`)
          .join(`${t}{1,${r}}`);
      return e;
    },
    Te = (e, t, r) => {
      let n = E6(t),
        i = _6++;
      v6(e, i, t),
        (ce[e] = i),
        (ue[i] = t),
        (b6[i] = new RegExp(t, r ? 'g' : void 0)),
        (S6[i] = new RegExp(n, r ? 'g' : void 0));
    };
  Te('NUMERICIDENTIFIER', '0|[1-9]\\d*');
  Te('NUMERICIDENTIFIERLOOSE', '\\d+');
  Te('NONNUMERICIDENTIFIER', `\\d*[a-zA-Z-]${cS}*`);
  Te(
    'MAINVERSION',
    `(${ue[ce.NUMERICIDENTIFIER]})\\.(${ue[ce.NUMERICIDENTIFIER]})\\.(${ue[ce.NUMERICIDENTIFIER]})`,
  );
  Te(
    'MAINVERSIONLOOSE',
    `(${ue[ce.NUMERICIDENTIFIERLOOSE]})\\.(${ue[ce.NUMERICIDENTIFIERLOOSE]})\\.(${ue[ce.NUMERICIDENTIFIERLOOSE]})`,
  );
  Te(
    'PRERELEASEIDENTIFIER',
    `(?:${ue[ce.NUMERICIDENTIFIER]}|${ue[ce.NONNUMERICIDENTIFIER]})`,
  );
  Te(
    'PRERELEASEIDENTIFIERLOOSE',
    `(?:${ue[ce.NUMERICIDENTIFIERLOOSE]}|${ue[ce.NONNUMERICIDENTIFIER]})`,
  );
  Te(
    'PRERELEASE',
    `(?:-(${ue[ce.PRERELEASEIDENTIFIER]}(?:\\.${ue[ce.PRERELEASEIDENTIFIER]})*))`,
  );
  Te(
    'PRERELEASELOOSE',
    `(?:-?(${ue[ce.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${ue[ce.PRERELEASEIDENTIFIERLOOSE]})*))`,
  );
  Te('BUILDIDENTIFIER', `${cS}+`);
  Te(
    'BUILD',
    `(?:\\+(${ue[ce.BUILDIDENTIFIER]}(?:\\.${ue[ce.BUILDIDENTIFIER]})*))`,
  );
  Te(
    'FULLPLAIN',
    `v?${ue[ce.MAINVERSION]}${ue[ce.PRERELEASE]}?${ue[ce.BUILD]}?`,
  );
  Te('FULL', `^${ue[ce.FULLPLAIN]}$`);
  Te(
    'LOOSEPLAIN',
    `[v=\\s]*${ue[ce.MAINVERSIONLOOSE]}${ue[ce.PRERELEASELOOSE]}?${ue[ce.BUILD]}?`,
  );
  Te('LOOSE', `^${ue[ce.LOOSEPLAIN]}$`);
  Te('GTLT', '((?:<|>)?=?)');
  Te('XRANGEIDENTIFIERLOOSE', `${ue[ce.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
  Te('XRANGEIDENTIFIER', `${ue[ce.NUMERICIDENTIFIER]}|x|X|\\*`);
  Te(
    'XRANGEPLAIN',
    `[v=\\s]*(${ue[ce.XRANGEIDENTIFIER]})(?:\\.(${ue[ce.XRANGEIDENTIFIER]})(?:\\.(${ue[ce.XRANGEIDENTIFIER]})(?:${ue[ce.PRERELEASE]})?${ue[ce.BUILD]}?)?)?`,
  );
  Te(
    'XRANGEPLAINLOOSE',
    `[v=\\s]*(${ue[ce.XRANGEIDENTIFIERLOOSE]})(?:\\.(${ue[ce.XRANGEIDENTIFIERLOOSE]})(?:\\.(${ue[ce.XRANGEIDENTIFIERLOOSE]})(?:${ue[ce.PRERELEASELOOSE]})?${ue[ce.BUILD]}?)?)?`,
  );
  Te('XRANGE', `^${ue[ce.GTLT]}\\s*${ue[ce.XRANGEPLAIN]}$`);
  Te('XRANGELOOSE', `^${ue[ce.GTLT]}\\s*${ue[ce.XRANGEPLAINLOOSE]}$`);
  Te(
    'COERCEPLAIN',
    `(^|[^\\d])(\\d{1,${uS}})(?:\\.(\\d{1,${uS}}))?(?:\\.(\\d{1,${uS}}))?`,
  );
  Te('COERCE', `${ue[ce.COERCEPLAIN]}(?:$|[^\\d])`);
  Te(
    'COERCEFULL',
    ue[ce.COERCEPLAIN] +
      `(?:${ue[ce.PRERELEASE]})?(?:${ue[ce.BUILD]})?(?:$|[^\\d])`,
  );
  Te('COERCERTL', ue[ce.COERCE], !0);
  Te('COERCERTLFULL', ue[ce.COERCEFULL], !0);
  Te('LONETILDE', '(?:~>?)');
  Te('TILDETRIM', `(\\s*)${ue[ce.LONETILDE]}\\s+`, !0);
  ri.tildeTrimReplace = '$1~';
  Te('TILDE', `^${ue[ce.LONETILDE]}${ue[ce.XRANGEPLAIN]}$`);
  Te('TILDELOOSE', `^${ue[ce.LONETILDE]}${ue[ce.XRANGEPLAINLOOSE]}$`);
  Te('LONECARET', '(?:\\^)');
  Te('CARETTRIM', `(\\s*)${ue[ce.LONECARET]}\\s+`, !0);
  ri.caretTrimReplace = '$1^';
  Te('CARET', `^${ue[ce.LONECARET]}${ue[ce.XRANGEPLAIN]}$`);
  Te('CARETLOOSE', `^${ue[ce.LONECARET]}${ue[ce.XRANGEPLAINLOOSE]}$`);
  Te('COMPARATORLOOSE', `^${ue[ce.GTLT]}\\s*(${ue[ce.LOOSEPLAIN]})$|^$`);
  Te('COMPARATOR', `^${ue[ce.GTLT]}\\s*(${ue[ce.FULLPLAIN]})$|^$`);
  Te(
    'COMPARATORTRIM',
    `(\\s*)${ue[ce.GTLT]}\\s*(${ue[ce.LOOSEPLAIN]}|${ue[ce.XRANGEPLAIN]})`,
    !0,
  );
  ri.comparatorTrimReplace = '$1$2$3';
  Te(
    'HYPHENRANGE',
    `^\\s*(${ue[ce.XRANGEPLAIN]})\\s+-\\s+(${ue[ce.XRANGEPLAIN]})\\s*$`,
  );
  Te(
    'HYPHENRANGELOOSE',
    `^\\s*(${ue[ce.XRANGEPLAINLOOSE]})\\s+-\\s+(${ue[ce.XRANGEPLAINLOOSE]})\\s*$`,
  );
  Te('STAR', '(<|>)?=?\\s*\\*');
  Te('GTE0', '^\\s*>=\\s*0\\.0\\.0\\s*$');
  Te('GTE0PRE', '^\\s*>=\\s*0\\.0\\.0-0\\s*$');
});
var pm = $((Spe, A1) => {
  var R6 = Object.freeze({ loose: !0 }),
    T6 = Object.freeze({}),
    P6 = (e) => (e ? (typeof e != 'object' ? R6 : e) : T6);
  A1.exports = P6;
});
var fS = $((_pe, L1) => {
  var $1 = /^[0-9]+$/,
    N1 = (e, t) => {
      let r = $1.test(e),
        n = $1.test(t);
      return (
        r && n && ((e = +e), (t = +t)),
        e === t ? 0 : r && !n ? -1 : n && !r ? 1 : e < t ? -1 : 1
      );
    },
    k6 = (e, t) => N1(t, e);
  L1.exports = { compareIdentifiers: N1, rcompareIdentifiers: k6 };
});
var _r = $((wpe, q1) => {
  var mm = Zf(),
    { MAX_LENGTH: D1, MAX_SAFE_INTEGER: ym } = Xf(),
    { safeRe: j1, t: F1 } = hu(),
    x6 = pm(),
    { compareIdentifiers: pu } = fS(),
    dS = class e {
      constructor(t, r) {
        if (((r = x6(r)), t instanceof e)) {
          if (
            t.loose === !!r.loose &&
            t.includePrerelease === !!r.includePrerelease
          )
            return t;
          t = t.version;
        } else if (typeof t != 'string')
          throw new TypeError(
            `Invalid version. Must be a string. Got type "${typeof t}".`,
          );
        if (t.length > D1)
          throw new TypeError(`version is longer than ${D1} characters`);
        mm('SemVer', t, r),
          (this.options = r),
          (this.loose = !!r.loose),
          (this.includePrerelease = !!r.includePrerelease);
        let n = t.trim().match(r.loose ? j1[F1.LOOSE] : j1[F1.FULL]);
        if (!n) throw new TypeError(`Invalid Version: ${t}`);
        if (
          ((this.raw = t),
          (this.major = +n[1]),
          (this.minor = +n[2]),
          (this.patch = +n[3]),
          this.major > ym || this.major < 0)
        )
          throw new TypeError('Invalid major version');
        if (this.minor > ym || this.minor < 0)
          throw new TypeError('Invalid minor version');
        if (this.patch > ym || this.patch < 0)
          throw new TypeError('Invalid patch version');
        n[4]
          ? (this.prerelease = n[4].split('.').map((i) => {
              if (/^[0-9]+$/.test(i)) {
                let s = +i;
                if (s >= 0 && s < ym) return s;
              }
              return i;
            }))
          : (this.prerelease = []),
          (this.build = n[5] ? n[5].split('.') : []),
          this.format();
      }
      format() {
        return (
          (this.version = `${this.major}.${this.minor}.${this.patch}`),
          this.prerelease.length &&
            (this.version += `-${this.prerelease.join('.')}`),
          this.version
        );
      }
      toString() {
        return this.version;
      }
      compare(t) {
        if (
          (mm('SemVer.compare', this.version, this.options, t),
          !(t instanceof e))
        ) {
          if (typeof t == 'string' && t === this.version) return 0;
          t = new e(t, this.options);
        }
        return t.version === this.version
          ? 0
          : this.compareMain(t) || this.comparePre(t);
      }
      compareMain(t) {
        return (
          t instanceof e || (t = new e(t, this.options)),
          pu(this.major, t.major) ||
            pu(this.minor, t.minor) ||
            pu(this.patch, t.patch)
        );
      }
      comparePre(t) {
        if (
          (t instanceof e || (t = new e(t, this.options)),
          this.prerelease.length && !t.prerelease.length)
        )
          return -1;
        if (!this.prerelease.length && t.prerelease.length) return 1;
        if (!this.prerelease.length && !t.prerelease.length) return 0;
        let r = 0;
        do {
          let n = this.prerelease[r],
            i = t.prerelease[r];
          if ((mm('prerelease compare', r, n, i), n === void 0 && i === void 0))
            return 0;
          if (i === void 0) return 1;
          if (n === void 0) return -1;
          if (n === i) continue;
          return pu(n, i);
        } while (++r);
      }
      compareBuild(t) {
        t instanceof e || (t = new e(t, this.options));
        let r = 0;
        do {
          let n = this.build[r],
            i = t.build[r];
          if ((mm('build compare', r, n, i), n === void 0 && i === void 0))
            return 0;
          if (i === void 0) return 1;
          if (n === void 0) return -1;
          if (n === i) continue;
          return pu(n, i);
        } while (++r);
      }
      inc(t, r, n) {
        switch (t) {
          case 'premajor':
            (this.prerelease.length = 0),
              (this.patch = 0),
              (this.minor = 0),
              this.major++,
              this.inc('pre', r, n);
            break;
          case 'preminor':
            (this.prerelease.length = 0),
              (this.patch = 0),
              this.minor++,
              this.inc('pre', r, n);
            break;
          case 'prepatch':
            (this.prerelease.length = 0),
              this.inc('patch', r, n),
              this.inc('pre', r, n);
            break;
          case 'prerelease':
            this.prerelease.length === 0 && this.inc('patch', r, n),
              this.inc('pre', r, n);
            break;
          case 'major':
            (this.minor !== 0 ||
              this.patch !== 0 ||
              this.prerelease.length === 0) &&
              this.major++,
              (this.minor = 0),
              (this.patch = 0),
              (this.prerelease = []);
            break;
          case 'minor':
            (this.patch !== 0 || this.prerelease.length === 0) && this.minor++,
              (this.patch = 0),
              (this.prerelease = []);
            break;
          case 'patch':
            this.prerelease.length === 0 && this.patch++,
              (this.prerelease = []);
            break;
          case 'pre': {
            let i = Number(n) ? 1 : 0;
            if (!r && n === !1)
              throw new Error(
                'invalid increment argument: identifier is empty',
              );
            if (this.prerelease.length === 0) this.prerelease = [i];
            else {
              let s = this.prerelease.length;
              for (; --s >= 0; )
                typeof this.prerelease[s] == 'number' &&
                  (this.prerelease[s]++, (s = -2));
              if (s === -1) {
                if (r === this.prerelease.join('.') && n === !1)
                  throw new Error(
                    'invalid increment argument: identifier already exists',
                  );
                this.prerelease.push(i);
              }
            }
            if (r) {
              let s = [r, i];
              n === !1 && (s = [r]),
                pu(this.prerelease[0], r) === 0
                  ? isNaN(this.prerelease[1]) && (this.prerelease = s)
                  : (this.prerelease = s);
            }
            break;
          }
          default:
            throw new Error(`invalid increment argument: ${t}`);
        }
        return (
          (this.raw = this.format()),
          this.build.length && (this.raw += `+${this.build.join('.')}`),
          this
        );
      }
    };
  q1.exports = dS;
});
var Na = $((Epe, H1) => {
  var M1 = _r(),
    C6 = (e, t, r = !1) => {
      if (e instanceof M1) return e;
      try {
        return new M1(e, t);
      } catch (n) {
        if (!r) return null;
        throw n;
      }
    };
  H1.exports = C6;
});
var U1 = $((Rpe, z1) => {
  var O6 = Na(),
    I6 = (e, t) => {
      let r = O6(e, t);
      return r ? r.version : null;
    };
  z1.exports = I6;
});
var B1 = $((Tpe, V1) => {
  var A6 = Na(),
    $6 = (e, t) => {
      let r = A6(e.trim().replace(/^[=v]+/, ''), t);
      return r ? r.version : null;
    };
  V1.exports = $6;
});
var Y1 = $((Ppe, G1) => {
  var W1 = _r(),
    N6 = (e, t, r, n, i) => {
      typeof r == 'string' && ((i = n), (n = r), (r = void 0));
      try {
        return new W1(e instanceof W1 ? e.version : e, r).inc(t, n, i).version;
      } catch {
        return null;
      }
    };
  G1.exports = N6;
});
var X1 = $((kpe, K1) => {
  var J1 = Na(),
    L6 = (e, t) => {
      let r = J1(e, null, !0),
        n = J1(t, null, !0),
        i = r.compare(n);
      if (i === 0) return null;
      let s = i > 0,
        o = s ? r : n,
        a = s ? n : r,
        u = !!o.prerelease.length;
      if (!!a.prerelease.length && !u)
        return !a.patch && !a.minor
          ? 'major'
          : o.patch
            ? 'patch'
            : o.minor
              ? 'minor'
              : 'major';
      let d = u ? 'pre' : '';
      return r.major !== n.major
        ? d + 'major'
        : r.minor !== n.minor
          ? d + 'minor'
          : r.patch !== n.patch
            ? d + 'patch'
            : 'prerelease';
    };
  K1.exports = L6;
});
var Q1 = $((xpe, Z1) => {
  var D6 = _r(),
    j6 = (e, t) => new D6(e, t).major;
  Z1.exports = j6;
});
var tO = $((Cpe, eO) => {
  var F6 = _r(),
    q6 = (e, t) => new F6(e, t).minor;
  eO.exports = q6;
});
var nO = $((Ope, rO) => {
  var M6 = _r(),
    H6 = (e, t) => new M6(e, t).patch;
  rO.exports = H6;
});
var iO = $((Ipe, sO) => {
  var z6 = Na(),
    U6 = (e, t) => {
      let r = z6(e, t);
      return r && r.prerelease.length ? r.prerelease : null;
    };
  sO.exports = U6;
});
var Pn = $((Ape, aO) => {
  var oO = _r(),
    V6 = (e, t, r) => new oO(e, r).compare(new oO(t, r));
  aO.exports = V6;
});
var uO = $(($pe, lO) => {
  var B6 = Pn(),
    W6 = (e, t, r) => B6(t, e, r);
  lO.exports = W6;
});
var fO = $((Npe, cO) => {
  var G6 = Pn(),
    Y6 = (e, t) => G6(e, t, !0);
  cO.exports = Y6;
});
var gm = $((Lpe, hO) => {
  var dO = _r(),
    J6 = (e, t, r) => {
      let n = new dO(e, r),
        i = new dO(t, r);
      return n.compare(i) || n.compareBuild(i);
    };
  hO.exports = J6;
});
var mO = $((Dpe, pO) => {
  var K6 = gm(),
    X6 = (e, t) => e.sort((r, n) => K6(r, n, t));
  pO.exports = X6;
});
var gO = $((jpe, yO) => {
  var Z6 = gm(),
    Q6 = (e, t) => e.sort((r, n) => Z6(n, r, t));
  yO.exports = Q6;
});
var Qf = $((Fpe, vO) => {
  var eG = Pn(),
    tG = (e, t, r) => eG(e, t, r) > 0;
  vO.exports = tG;
});
var vm = $((qpe, bO) => {
  var rG = Pn(),
    nG = (e, t, r) => rG(e, t, r) < 0;
  bO.exports = nG;
});
var hS = $((Mpe, SO) => {
  var sG = Pn(),
    iG = (e, t, r) => sG(e, t, r) === 0;
  SO.exports = iG;
});
var pS = $((Hpe, _O) => {
  var oG = Pn(),
    aG = (e, t, r) => oG(e, t, r) !== 0;
  _O.exports = aG;
});
var bm = $((zpe, wO) => {
  var lG = Pn(),
    uG = (e, t, r) => lG(e, t, r) >= 0;
  wO.exports = uG;
});
var Sm = $((Upe, EO) => {
  var cG = Pn(),
    fG = (e, t, r) => cG(e, t, r) <= 0;
  EO.exports = fG;
});
var mS = $((Vpe, RO) => {
  var dG = hS(),
    hG = pS(),
    pG = Qf(),
    mG = bm(),
    yG = vm(),
    gG = Sm(),
    vG = (e, t, r, n) => {
      switch (t) {
        case '===':
          return (
            typeof e == 'object' && (e = e.version),
            typeof r == 'object' && (r = r.version),
            e === r
          );
        case '!==':
          return (
            typeof e == 'object' && (e = e.version),
            typeof r == 'object' && (r = r.version),
            e !== r
          );
        case '':
        case '=':
        case '==':
          return dG(e, r, n);
        case '!=':
          return hG(e, r, n);
        case '>':
          return pG(e, r, n);
        case '>=':
          return mG(e, r, n);
        case '<':
          return yG(e, r, n);
        case '<=':
          return gG(e, r, n);
        default:
          throw new TypeError(`Invalid operator: ${t}`);
      }
    };
  RO.exports = vG;
});
var PO = $((Bpe, TO) => {
  var bG = _r(),
    SG = Na(),
    { safeRe: _m, t: wm } = hu(),
    _G = (e, t) => {
      if (e instanceof bG) return e;
      if ((typeof e == 'number' && (e = String(e)), typeof e != 'string'))
        return null;
      t = t || {};
      let r = null;
      if (!t.rtl)
        r = e.match(t.includePrerelease ? _m[wm.COERCEFULL] : _m[wm.COERCE]);
      else {
        let u = t.includePrerelease ? _m[wm.COERCERTLFULL] : _m[wm.COERCERTL],
          c;
        for (; (c = u.exec(e)) && (!r || r.index + r[0].length !== e.length); )
          (!r || c.index + c[0].length !== r.index + r[0].length) && (r = c),
            (u.lastIndex = c.index + c[1].length + c[2].length);
        u.lastIndex = -1;
      }
      if (r === null) return null;
      let n = r[2],
        i = r[3] || '0',
        s = r[4] || '0',
        o = t.includePrerelease && r[5] ? `-${r[5]}` : '',
        a = t.includePrerelease && r[6] ? `+${r[6]}` : '';
      return SG(`${n}.${i}.${s}${o}${a}`, t);
    };
  TO.exports = _G;
});
var xO = $((Wpe, kO) => {
  var yS = class {
    constructor() {
      (this.max = 1e3), (this.map = new Map());
    }
    get(t) {
      let r = this.map.get(t);
      if (r !== void 0) return this.map.delete(t), this.map.set(t, r), r;
    }
    delete(t) {
      return this.map.delete(t);
    }
    set(t, r) {
      if (!this.delete(t) && r !== void 0) {
        if (this.map.size >= this.max) {
          let i = this.map.keys().next().value;
          this.delete(i);
        }
        this.map.set(t, r);
      }
      return this;
    }
  };
  kO.exports = yS;
});
var kn = $((Gpe, AO) => {
  var wG = /\s+/g,
    gS = class e {
      constructor(t, r) {
        if (((r = RG(r)), t instanceof e))
          return t.loose === !!r.loose &&
            t.includePrerelease === !!r.includePrerelease
            ? t
            : new e(t.raw, r);
        if (t instanceof vS)
          return (
            (this.raw = t.value),
            (this.set = [[t]]),
            (this.formatted = void 0),
            this
          );
        if (
          ((this.options = r),
          (this.loose = !!r.loose),
          (this.includePrerelease = !!r.includePrerelease),
          (this.raw = t.trim().replace(wG, ' ')),
          (this.set = this.raw
            .split('||')
            .map((n) => this.parseRange(n.trim()))
            .filter((n) => n.length)),
          !this.set.length)
        )
          throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
        if (this.set.length > 1) {
          let n = this.set[0];
          if (
            ((this.set = this.set.filter((i) => !OO(i[0]))),
            this.set.length === 0)
          )
            this.set = [n];
          else if (this.set.length > 1) {
            for (let i of this.set)
              if (i.length === 1 && IG(i[0])) {
                this.set = [i];
                break;
              }
          }
        }
        this.formatted = void 0;
      }
      get range() {
        if (this.formatted === void 0) {
          this.formatted = '';
          for (let t = 0; t < this.set.length; t++) {
            t > 0 && (this.formatted += '||');
            let r = this.set[t];
            for (let n = 0; n < r.length; n++)
              n > 0 && (this.formatted += ' '),
                (this.formatted += r[n].toString().trim());
          }
        }
        return this.formatted;
      }
      format() {
        return this.range;
      }
      toString() {
        return this.range;
      }
      parseRange(t) {
        let n =
            ((this.options.includePrerelease && CG) |
              (this.options.loose && OG)) +
            ':' +
            t,
          i = CO.get(n);
        if (i) return i;
        let s = this.options.loose,
          o = s ? Qr[Nr.HYPHENRANGELOOSE] : Qr[Nr.HYPHENRANGE];
        (t = t.replace(o, HG(this.options.includePrerelease))),
          mt('hyphen replace', t),
          (t = t.replace(Qr[Nr.COMPARATORTRIM], PG)),
          mt('comparator trim', t),
          (t = t.replace(Qr[Nr.TILDETRIM], kG)),
          mt('tilde trim', t),
          (t = t.replace(Qr[Nr.CARETTRIM], xG)),
          mt('caret trim', t);
        let a = t
          .split(' ')
          .map((m) => AG(m, this.options))
          .join(' ')
          .split(/\s+/)
          .map((m) => MG(m, this.options));
        s &&
          (a = a.filter(
            (m) => (
              mt('loose invalid filter', m, this.options),
              !!m.match(Qr[Nr.COMPARATORLOOSE])
            ),
          )),
          mt('range list', a);
        let u = new Map(),
          c = a.map((m) => new vS(m, this.options));
        for (let m of c) {
          if (OO(m)) return [m];
          u.set(m.value, m);
        }
        u.size > 1 && u.has('') && u.delete('');
        let d = [...u.values()];
        return CO.set(n, d), d;
      }
      intersects(t, r) {
        if (!(t instanceof e)) throw new TypeError('a Range is required');
        return this.set.some(
          (n) =>
            IO(n, r) &&
            t.set.some(
              (i) =>
                IO(i, r) && n.every((s) => i.every((o) => s.intersects(o, r))),
            ),
        );
      }
      test(t) {
        if (!t) return !1;
        if (typeof t == 'string')
          try {
            t = new TG(t, this.options);
          } catch {
            return !1;
          }
        for (let r = 0; r < this.set.length; r++)
          if (zG(this.set[r], t, this.options)) return !0;
        return !1;
      }
    };
  AO.exports = gS;
  var EG = xO(),
    CO = new EG(),
    RG = pm(),
    vS = ed(),
    mt = Zf(),
    TG = _r(),
    {
      safeRe: Qr,
      t: Nr,
      comparatorTrimReplace: PG,
      tildeTrimReplace: kG,
      caretTrimReplace: xG,
    } = hu(),
    { FLAG_INCLUDE_PRERELEASE: CG, FLAG_LOOSE: OG } = Xf(),
    OO = (e) => e.value === '<0.0.0-0',
    IG = (e) => e.value === '',
    IO = (e, t) => {
      let r = !0,
        n = e.slice(),
        i = n.pop();
      for (; r && n.length; )
        (r = n.every((s) => i.intersects(s, t))), (i = n.pop());
      return r;
    },
    AG = (e, t) => (
      mt('comp', e, t),
      (e = LG(e, t)),
      mt('caret', e),
      (e = $G(e, t)),
      mt('tildes', e),
      (e = jG(e, t)),
      mt('xrange', e),
      (e = qG(e, t)),
      mt('stars', e),
      e
    ),
    Lr = (e) => !e || e.toLowerCase() === 'x' || e === '*',
    $G = (e, t) =>
      e
        .trim()
        .split(/\s+/)
        .map((r) => NG(r, t))
        .join(' '),
    NG = (e, t) => {
      let r = t.loose ? Qr[Nr.TILDELOOSE] : Qr[Nr.TILDE];
      return e.replace(r, (n, i, s, o, a) => {
        mt('tilde', e, n, i, s, o, a);
        let u;
        return (
          Lr(i)
            ? (u = '')
            : Lr(s)
              ? (u = `>=${i}.0.0 <${+i + 1}.0.0-0`)
              : Lr(o)
                ? (u = `>=${i}.${s}.0 <${i}.${+s + 1}.0-0`)
                : a
                  ? (mt('replaceTilde pr', a),
                    (u = `>=${i}.${s}.${o}-${a} <${i}.${+s + 1}.0-0`))
                  : (u = `>=${i}.${s}.${o} <${i}.${+s + 1}.0-0`),
          mt('tilde return', u),
          u
        );
      });
    },
    LG = (e, t) =>
      e
        .trim()
        .split(/\s+/)
        .map((r) => DG(r, t))
        .join(' '),
    DG = (e, t) => {
      mt('caret', e, t);
      let r = t.loose ? Qr[Nr.CARETLOOSE] : Qr[Nr.CARET],
        n = t.includePrerelease ? '-0' : '';
      return e.replace(r, (i, s, o, a, u) => {
        mt('caret', e, i, s, o, a, u);
        let c;
        return (
          Lr(s)
            ? (c = '')
            : Lr(o)
              ? (c = `>=${s}.0.0${n} <${+s + 1}.0.0-0`)
              : Lr(a)
                ? s === '0'
                  ? (c = `>=${s}.${o}.0${n} <${s}.${+o + 1}.0-0`)
                  : (c = `>=${s}.${o}.0${n} <${+s + 1}.0.0-0`)
                : u
                  ? (mt('replaceCaret pr', u),
                    s === '0'
                      ? o === '0'
                        ? (c = `>=${s}.${o}.${a}-${u} <${s}.${o}.${+a + 1}-0`)
                        : (c = `>=${s}.${o}.${a}-${u} <${s}.${+o + 1}.0-0`)
                      : (c = `>=${s}.${o}.${a}-${u} <${+s + 1}.0.0-0`))
                  : (mt('no pr'),
                    s === '0'
                      ? o === '0'
                        ? (c = `>=${s}.${o}.${a}${n} <${s}.${o}.${+a + 1}-0`)
                        : (c = `>=${s}.${o}.${a}${n} <${s}.${+o + 1}.0-0`)
                      : (c = `>=${s}.${o}.${a} <${+s + 1}.0.0-0`)),
          mt('caret return', c),
          c
        );
      });
    },
    jG = (e, t) => (
      mt('replaceXRanges', e, t),
      e
        .split(/\s+/)
        .map((r) => FG(r, t))
        .join(' ')
    ),
    FG = (e, t) => {
      e = e.trim();
      let r = t.loose ? Qr[Nr.XRANGELOOSE] : Qr[Nr.XRANGE];
      return e.replace(r, (n, i, s, o, a, u) => {
        mt('xRange', e, n, i, s, o, a, u);
        let c = Lr(s),
          d = c || Lr(o),
          m = d || Lr(a),
          g = m;
        return (
          i === '=' && g && (i = ''),
          (u = t.includePrerelease ? '-0' : ''),
          c
            ? i === '>' || i === '<'
              ? (n = '<0.0.0-0')
              : (n = '*')
            : i && g
              ? (d && (o = 0),
                (a = 0),
                i === '>'
                  ? ((i = '>='),
                    d
                      ? ((s = +s + 1), (o = 0), (a = 0))
                      : ((o = +o + 1), (a = 0)))
                  : i === '<=' && ((i = '<'), d ? (s = +s + 1) : (o = +o + 1)),
                i === '<' && (u = '-0'),
                (n = `${i + s}.${o}.${a}${u}`))
              : d
                ? (n = `>=${s}.0.0${u} <${+s + 1}.0.0-0`)
                : m && (n = `>=${s}.${o}.0${u} <${s}.${+o + 1}.0-0`),
          mt('xRange return', n),
          n
        );
      });
    },
    qG = (e, t) => (
      mt('replaceStars', e, t), e.trim().replace(Qr[Nr.STAR], '')
    ),
    MG = (e, t) => (
      mt('replaceGTE0', e, t),
      e.trim().replace(Qr[t.includePrerelease ? Nr.GTE0PRE : Nr.GTE0], '')
    ),
    HG = (e) => (t, r, n, i, s, o, a, u, c, d, m, g) => (
      Lr(n)
        ? (r = '')
        : Lr(i)
          ? (r = `>=${n}.0.0${e ? '-0' : ''}`)
          : Lr(s)
            ? (r = `>=${n}.${i}.0${e ? '-0' : ''}`)
            : o
              ? (r = `>=${r}`)
              : (r = `>=${r}${e ? '-0' : ''}`),
      Lr(c)
        ? (u = '')
        : Lr(d)
          ? (u = `<${+c + 1}.0.0-0`)
          : Lr(m)
            ? (u = `<${c}.${+d + 1}.0-0`)
            : g
              ? (u = `<=${c}.${d}.${m}-${g}`)
              : e
                ? (u = `<${c}.${d}.${+m + 1}-0`)
                : (u = `<=${u}`),
      `${r} ${u}`.trim()
    ),
    zG = (e, t, r) => {
      for (let n = 0; n < e.length; n++) if (!e[n].test(t)) return !1;
      if (t.prerelease.length && !r.includePrerelease) {
        for (let n = 0; n < e.length; n++)
          if (
            (mt(e[n].semver),
            e[n].semver !== vS.ANY && e[n].semver.prerelease.length > 0)
          ) {
            let i = e[n].semver;
            if (
              i.major === t.major &&
              i.minor === t.minor &&
              i.patch === t.patch
            )
              return !0;
          }
        return !1;
      }
      return !0;
    };
});
var ed = $((Ype, FO) => {
  var td = Symbol('SemVer ANY'),
    _S = class e {
      static get ANY() {
        return td;
      }
      constructor(t, r) {
        if (((r = $O(r)), t instanceof e)) {
          if (t.loose === !!r.loose) return t;
          t = t.value;
        }
        (t = t.trim().split(/\s+/).join(' ')),
          SS('comparator', t, r),
          (this.options = r),
          (this.loose = !!r.loose),
          this.parse(t),
          this.semver === td
            ? (this.value = '')
            : (this.value = this.operator + this.semver.version),
          SS('comp', this);
      }
      parse(t) {
        let r = this.options.loose ? NO[LO.COMPARATORLOOSE] : NO[LO.COMPARATOR],
          n = t.match(r);
        if (!n) throw new TypeError(`Invalid comparator: ${t}`);
        (this.operator = n[1] !== void 0 ? n[1] : ''),
          this.operator === '=' && (this.operator = ''),
          n[2]
            ? (this.semver = new DO(n[2], this.options.loose))
            : (this.semver = td);
      }
      toString() {
        return this.value;
      }
      test(t) {
        if (
          (SS('Comparator.test', t, this.options.loose),
          this.semver === td || t === td)
        )
          return !0;
        if (typeof t == 'string')
          try {
            t = new DO(t, this.options);
          } catch {
            return !1;
          }
        return bS(t, this.operator, this.semver, this.options);
      }
      intersects(t, r) {
        if (!(t instanceof e)) throw new TypeError('a Comparator is required');
        return this.operator === ''
          ? this.value === ''
            ? !0
            : new jO(t.value, r).test(this.value)
          : t.operator === ''
            ? t.value === ''
              ? !0
              : new jO(this.value, r).test(t.semver)
            : ((r = $O(r)),
              (r.includePrerelease &&
                (this.value === '<0.0.0-0' || t.value === '<0.0.0-0')) ||
              (!r.includePrerelease &&
                (this.value.startsWith('<0.0.0') ||
                  t.value.startsWith('<0.0.0')))
                ? !1
                : !!(
                    (this.operator.startsWith('>') &&
                      t.operator.startsWith('>')) ||
                    (this.operator.startsWith('<') &&
                      t.operator.startsWith('<')) ||
                    (this.semver.version === t.semver.version &&
                      this.operator.includes('=') &&
                      t.operator.includes('=')) ||
                    (bS(this.semver, '<', t.semver, r) &&
                      this.operator.startsWith('>') &&
                      t.operator.startsWith('<')) ||
                    (bS(this.semver, '>', t.semver, r) &&
                      this.operator.startsWith('<') &&
                      t.operator.startsWith('>'))
                  ));
      }
    };
  FO.exports = _S;
  var $O = pm(),
    { safeRe: NO, t: LO } = hu(),
    bS = mS(),
    SS = Zf(),
    DO = _r(),
    jO = kn();
});
var rd = $((Jpe, qO) => {
  var UG = kn(),
    VG = (e, t, r) => {
      try {
        t = new UG(t, r);
      } catch {
        return !1;
      }
      return t.test(e);
    };
  qO.exports = VG;
});
var HO = $((Kpe, MO) => {
  var BG = kn(),
    WG = (e, t) =>
      new BG(e, t).set.map((r) =>
        r
          .map((n) => n.value)
          .join(' ')
          .trim()
          .split(' '),
      );
  MO.exports = WG;
});
var UO = $((Xpe, zO) => {
  var GG = _r(),
    YG = kn(),
    JG = (e, t, r) => {
      let n = null,
        i = null,
        s = null;
      try {
        s = new YG(t, r);
      } catch {
        return null;
      }
      return (
        e.forEach((o) => {
          s.test(o) &&
            (!n || i.compare(o) === -1) &&
            ((n = o), (i = new GG(n, r)));
        }),
        n
      );
    };
  zO.exports = JG;
});
var BO = $((Zpe, VO) => {
  var KG = _r(),
    XG = kn(),
    ZG = (e, t, r) => {
      let n = null,
        i = null,
        s = null;
      try {
        s = new XG(t, r);
      } catch {
        return null;
      }
      return (
        e.forEach((o) => {
          s.test(o) &&
            (!n || i.compare(o) === 1) &&
            ((n = o), (i = new KG(n, r)));
        }),
        n
      );
    };
  VO.exports = ZG;
});
var YO = $((Qpe, GO) => {
  var wS = _r(),
    QG = kn(),
    WO = Qf(),
    e8 = (e, t) => {
      e = new QG(e, t);
      let r = new wS('0.0.0');
      if (e.test(r) || ((r = new wS('0.0.0-0')), e.test(r))) return r;
      r = null;
      for (let n = 0; n < e.set.length; ++n) {
        let i = e.set[n],
          s = null;
        i.forEach((o) => {
          let a = new wS(o.semver.version);
          switch (o.operator) {
            case '>':
              a.prerelease.length === 0 ? a.patch++ : a.prerelease.push(0),
                (a.raw = a.format());
            case '':
            case '>=':
              (!s || WO(a, s)) && (s = a);
              break;
            case '<':
            case '<=':
              break;
            default:
              throw new Error(`Unexpected operation: ${o.operator}`);
          }
        }),
          s && (!r || WO(r, s)) && (r = s);
      }
      return r && e.test(r) ? r : null;
    };
  GO.exports = e8;
});
var KO = $((eme, JO) => {
  var t8 = kn(),
    r8 = (e, t) => {
      try {
        return new t8(e, t).range || '*';
      } catch {
        return null;
      }
    };
  JO.exports = r8;
});
var Em = $((tme, eI) => {
  var n8 = _r(),
    QO = ed(),
    { ANY: s8 } = QO,
    i8 = kn(),
    o8 = rd(),
    XO = Qf(),
    ZO = vm(),
    a8 = Sm(),
    l8 = bm(),
    u8 = (e, t, r, n) => {
      (e = new n8(e, n)), (t = new i8(t, n));
      let i, s, o, a, u;
      switch (r) {
        case '>':
          (i = XO), (s = a8), (o = ZO), (a = '>'), (u = '>=');
          break;
        case '<':
          (i = ZO), (s = l8), (o = XO), (a = '<'), (u = '<=');
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (o8(e, t, n)) return !1;
      for (let c = 0; c < t.set.length; ++c) {
        let d = t.set[c],
          m = null,
          g = null;
        if (
          (d.forEach((v) => {
            v.semver === s8 && (v = new QO('>=0.0.0')),
              (m = m || v),
              (g = g || v),
              i(v.semver, m.semver, n)
                ? (m = v)
                : o(v.semver, g.semver, n) && (g = v);
          }),
          m.operator === a ||
            m.operator === u ||
            ((!g.operator || g.operator === a) && s(e, g.semver)))
        )
          return !1;
        if (g.operator === u && o(e, g.semver)) return !1;
      }
      return !0;
    };
  eI.exports = u8;
});
var rI = $((rme, tI) => {
  var c8 = Em(),
    f8 = (e, t, r) => c8(e, t, '>', r);
  tI.exports = f8;
});
var sI = $((nme, nI) => {
  var d8 = Em(),
    h8 = (e, t, r) => d8(e, t, '<', r);
  nI.exports = h8;
});
var aI = $((sme, oI) => {
  var iI = kn(),
    p8 = (e, t, r) => (
      (e = new iI(e, r)), (t = new iI(t, r)), e.intersects(t, r)
    );
  oI.exports = p8;
});
var uI = $((ime, lI) => {
  var m8 = rd(),
    y8 = Pn();
  lI.exports = (e, t, r) => {
    let n = [],
      i = null,
      s = null,
      o = e.sort((d, m) => y8(d, m, r));
    for (let d of o)
      m8(d, t, r)
        ? ((s = d), i || (i = d))
        : (s && n.push([i, s]), (s = null), (i = null));
    i && n.push([i, null]);
    let a = [];
    for (let [d, m] of n)
      d === m
        ? a.push(d)
        : !m && d === o[0]
          ? a.push('*')
          : m
            ? d === o[0]
              ? a.push(`<=${m}`)
              : a.push(`${d} - ${m}`)
            : a.push(`>=${d}`);
    let u = a.join(' || '),
      c = typeof t.raw == 'string' ? t.raw : String(t);
    return u.length < c.length ? u : t;
  };
});
var mI = $((ome, pI) => {
  var cI = kn(),
    RS = ed(),
    { ANY: ES } = RS,
    nd = rd(),
    TS = Pn(),
    g8 = (e, t, r = {}) => {
      if (e === t) return !0;
      (e = new cI(e, r)), (t = new cI(t, r));
      let n = !1;
      e: for (let i of e.set) {
        for (let s of t.set) {
          let o = b8(i, s, r);
          if (((n = n || o !== null), o)) continue e;
        }
        if (n) return !1;
      }
      return !0;
    },
    v8 = [new RS('>=0.0.0-0')],
    fI = [new RS('>=0.0.0')],
    b8 = (e, t, r) => {
      if (e === t) return !0;
      if (e.length === 1 && e[0].semver === ES) {
        if (t.length === 1 && t[0].semver === ES) return !0;
        r.includePrerelease ? (e = v8) : (e = fI);
      }
      if (t.length === 1 && t[0].semver === ES) {
        if (r.includePrerelease) return !0;
        t = fI;
      }
      let n = new Set(),
        i,
        s;
      for (let v of e)
        v.operator === '>' || v.operator === '>='
          ? (i = dI(i, v, r))
          : v.operator === '<' || v.operator === '<='
            ? (s = hI(s, v, r))
            : n.add(v.semver);
      if (n.size > 1) return null;
      let o;
      if (i && s) {
        if (((o = TS(i.semver, s.semver, r)), o > 0)) return null;
        if (o === 0 && (i.operator !== '>=' || s.operator !== '<='))
          return null;
      }
      for (let v of n) {
        if ((i && !nd(v, String(i), r)) || (s && !nd(v, String(s), r)))
          return null;
        for (let S of t) if (!nd(v, String(S), r)) return !1;
        return !0;
      }
      let a,
        u,
        c,
        d,
        m =
          s && !r.includePrerelease && s.semver.prerelease.length
            ? s.semver
            : !1,
        g =
          i && !r.includePrerelease && i.semver.prerelease.length
            ? i.semver
            : !1;
      m &&
        m.prerelease.length === 1 &&
        s.operator === '<' &&
        m.prerelease[0] === 0 &&
        (m = !1);
      for (let v of t) {
        if (
          ((d = d || v.operator === '>' || v.operator === '>='),
          (c = c || v.operator === '<' || v.operator === '<='),
          i)
        ) {
          if (
            (g &&
              v.semver.prerelease &&
              v.semver.prerelease.length &&
              v.semver.major === g.major &&
              v.semver.minor === g.minor &&
              v.semver.patch === g.patch &&
              (g = !1),
            v.operator === '>' || v.operator === '>=')
          ) {
            if (((a = dI(i, v, r)), a === v && a !== i)) return !1;
          } else if (i.operator === '>=' && !nd(i.semver, String(v), r))
            return !1;
        }
        if (s) {
          if (
            (m &&
              v.semver.prerelease &&
              v.semver.prerelease.length &&
              v.semver.major === m.major &&
              v.semver.minor === m.minor &&
              v.semver.patch === m.patch &&
              (m = !1),
            v.operator === '<' || v.operator === '<=')
          ) {
            if (((u = hI(s, v, r)), u === v && u !== s)) return !1;
          } else if (s.operator === '<=' && !nd(s.semver, String(v), r))
            return !1;
        }
        if (!v.operator && (s || i) && o !== 0) return !1;
      }
      return !(
        (i && c && !s && o !== 0) ||
        (s && d && !i && o !== 0) ||
        g ||
        m
      );
    },
    dI = (e, t, r) => {
      if (!e) return t;
      let n = TS(e.semver, t.semver, r);
      return n > 0
        ? e
        : n < 0 || (t.operator === '>' && e.operator === '>=')
          ? t
          : e;
    },
    hI = (e, t, r) => {
      if (!e) return t;
      let n = TS(e.semver, t.semver, r);
      return n < 0
        ? e
        : n > 0 || (t.operator === '<' && e.operator === '<=')
          ? t
          : e;
    };
  pI.exports = g8;
});
var kS = $((ame, vI) => {
  var PS = hu(),
    yI = Xf(),
    S8 = _r(),
    gI = fS(),
    _8 = Na(),
    w8 = U1(),
    E8 = B1(),
    R8 = Y1(),
    T8 = X1(),
    P8 = Q1(),
    k8 = tO(),
    x8 = nO(),
    C8 = iO(),
    O8 = Pn(),
    I8 = uO(),
    A8 = fO(),
    $8 = gm(),
    N8 = mO(),
    L8 = gO(),
    D8 = Qf(),
    j8 = vm(),
    F8 = hS(),
    q8 = pS(),
    M8 = bm(),
    H8 = Sm(),
    z8 = mS(),
    U8 = PO(),
    V8 = ed(),
    B8 = kn(),
    W8 = rd(),
    G8 = HO(),
    Y8 = UO(),
    J8 = BO(),
    K8 = YO(),
    X8 = KO(),
    Z8 = Em(),
    Q8 = rI(),
    e7 = sI(),
    t7 = aI(),
    r7 = uI(),
    n7 = mI();
  vI.exports = {
    parse: _8,
    valid: w8,
    clean: E8,
    inc: R8,
    diff: T8,
    major: P8,
    minor: k8,
    patch: x8,
    prerelease: C8,
    compare: O8,
    rcompare: I8,
    compareLoose: A8,
    compareBuild: $8,
    sort: N8,
    rsort: L8,
    gt: D8,
    lt: j8,
    eq: F8,
    neq: q8,
    gte: M8,
    lte: H8,
    cmp: z8,
    coerce: U8,
    Comparator: V8,
    Range: B8,
    satisfies: W8,
    toComparators: G8,
    maxSatisfying: Y8,
    minSatisfying: J8,
    minVersion: K8,
    validRange: X8,
    outside: Z8,
    gtr: Q8,
    ltr: e7,
    intersects: t7,
    simplifyRange: r7,
    subset: n7,
    SemVer: S8,
    re: PS.re,
    src: PS.src,
    tokens: PS.t,
    SEMVER_SPEC_VERSION: yI.SEMVER_SPEC_VERSION,
    RELEASE_TYPES: yI.RELEASE_TYPES,
    compareIdentifiers: gI.compareIdentifiers,
    rcompareIdentifiers: gI.rcompareIdentifiers,
  };
});
var Tm = $((lme, IS) => {
  'use strict';
  var Rm = x1(),
    s7 = kS(),
    {
      FSTDEP005: i7,
      FSTDEP012: o7,
      FSTDEP015: a7,
      FSTDEP016: l7,
      FSTDEP017: u7,
      FSTDEP018: c7,
    } = Qs(),
    {
      kHasBeenDecorated: f7,
      kSchemaBody: d7,
      kSchemaHeaders: h7,
      kSchemaParams: p7,
      kSchemaQuerystring: bI,
      kSchemaController: xS,
      kOptions: m7,
      kRequestCacheValidateFns: po,
      kRouteContext: Ft,
      kPublicRouteContext: SI,
      kRequestOriginalUrl: CS,
    } = rr(),
    { FST_ERR_REQ_INVALID_VALIDATION_INVOCATION: y7 } = br(),
    _I = { body: d7, headers: h7, params: p7, querystring: bI, query: bI };
  function OS(e, t, r, n, i, s) {
    (this.id = e),
      (this[Ft] = s),
      (this.params = t),
      (this.raw = r),
      (this.query = n),
      (this.log = i),
      (this.body = void 0);
  }
  OS.props = [];
  function g7(e) {
    if (typeof e == 'function') return e;
    if (e === !0)
      return function () {
        return !0;
      };
    if (typeof e == 'number')
      return function (t, r) {
        return r < e;
      };
    if (typeof e == 'string') {
      let t = e.split(',').map((r) => r.trim());
      return Rm.compile(t);
    }
    return Rm.compile(e);
  }
  function v7(e, t) {
    return t ? b7(e, t) : EI(e);
  }
  function EI(e) {
    let t = e.props.slice();
    function r(n, i, s, o, a, u) {
      (this.id = n),
        (this[Ft] = u),
        (this.params = i),
        (this.raw = s),
        (this.query = o),
        (this.log = a),
        (this.body = void 0);
      for (var c, d = 0; d < t.length; d++) (c = t[d]), (this[c.key] = c.value);
    }
    return (
      Object.setPrototypeOf(r.prototype, e.prototype),
      Object.setPrototypeOf(r, e),
      (r.props = t),
      (r.parent = e),
      r
    );
  }
  function wI(e) {
    let t = e.lastIndexOf(',');
    return t === -1 ? e.trim() : e.slice(t + 1).trim();
  }
  function b7(e, t) {
    let r = EI(e),
      n = g7(t);
    return (
      (r[f7] = !0),
      Object.defineProperties(r.prototype, {
        ip: {
          get() {
            return Rm(this.raw, n);
          },
        },
        ips: {
          get() {
            return Rm.all(this.raw, n);
          },
        },
        hostname: {
          get() {
            return this.ip !== void 0 && this.headers['x-forwarded-host']
              ? wI(this.headers['x-forwarded-host'])
              : this.headers.host || this.headers[':authority'];
          },
        },
        protocol: {
          get() {
            if (this.headers['x-forwarded-proto'])
              return wI(this.headers['x-forwarded-proto']);
            if (this.socket) return this.socket.encrypted ? 'https' : 'http';
          },
        },
      }),
      r
    );
  }
  Object.defineProperties(OS.prototype, {
    server: {
      get() {
        return this[Ft].server;
      },
    },
    url: {
      get() {
        return this.raw.url;
      },
    },
    originalUrl: {
      get() {
        return (
          this[CS] || (this[CS] = this.raw.originalUrl || this.raw.url),
          this[CS]
        );
      },
    },
    method: {
      get() {
        return this.raw.method;
      },
    },
    context: {
      get() {
        return o7(), this[Ft];
      },
    },
    routerPath: {
      get() {
        return u7(), this[Ft].config?.url;
      },
    },
    routeOptions: {
      get() {
        let e = this[Ft],
          t = e._parserOptions.limit,
          r = e.server.initialConfig.bodyLimit,
          n = e.server.hasConstraintStrategy('version')
            ? this.raw.headers['accept-version']
            : void 0,
          i = {
            method: e.config?.method,
            url: e.config?.url,
            bodyLimit: t || r,
            attachValidation: e.attachValidation,
            logLevel: e.logLevel,
            exposeHeadRoute: e.exposeHeadRoute,
            prefixTrailingSlash: e.prefixTrailingSlash,
            handler: e.handler,
            version: n,
          };
        return (
          Object.defineProperties(i, {
            config: { get: () => e.config },
            schema: { get: () => e.schema },
          }),
          Object.freeze(i)
        );
      },
    },
    routerMethod: {
      get() {
        return c7(), this[Ft].config?.method;
      },
    },
    routeConfig: {
      get() {
        return l7(), this[Ft][SI]?.config;
      },
    },
    routeSchema: {
      get() {
        return a7(), this[Ft][SI].schema;
      },
    },
    is404: {
      get() {
        return this[Ft].config?.url === void 0;
      },
    },
    connection: {
      get() {
        return (
          s7.gte(process.versions.node, '13.0.0') && i7(), this.raw.connection
        );
      },
    },
    socket: {
      get() {
        return this.raw.socket;
      },
    },
    ip: {
      get() {
        if (this.socket) return this.socket.remoteAddress;
      },
    },
    hostname: {
      get() {
        return this.raw.headers.host || this.raw.headers[':authority'];
      },
    },
    protocol: {
      get() {
        if (this.socket) return this.socket.encrypted ? 'https' : 'http';
      },
    },
    headers: {
      get() {
        return this.additionalHeaders
          ? Object.assign({}, this.raw.headers, this.additionalHeaders)
          : this.raw.headers;
      },
      set(e) {
        this.additionalHeaders = e;
      },
    },
    getValidationFunction: {
      value: function (e) {
        if (typeof e == 'string') {
          let t = _I[e];
          return this[Ft][t];
        } else if (typeof e == 'object') return this[Ft][po]?.get(e);
      },
    },
    compileValidationSchema: {
      value: function (e, t = null) {
        let { method: r, url: n } = this;
        if (this[Ft][po]?.has(e)) return this[Ft][po].get(e);
        let s = (
          this[Ft].validatorCompiler ||
          this.server[xS].validatorCompiler ||
          this.server[xS].setupValidator(this.server[m7]) ||
          this.server[xS].validatorCompiler
        )({ schema: e, method: r, url: n, httpPart: t });
        return (
          this[Ft][po] == null && (this[Ft][po] = new WeakMap()),
          this[Ft][po].set(e, s),
          s
        );
      },
    },
    validateInput: {
      value: function (e, t, r) {
        r = typeof t == 'string' ? t : r;
        let n = r != null && typeof r == 'string' && _I[r],
          i;
        if (
          (n && (i = this[Ft][n]),
          i == null && (t == null || typeof t != 'object' || Array.isArray(t)))
        )
          throw new y7(r);
        return (
          i == null &&
            (this[Ft][po]?.has(t)
              ? (i = this[Ft][po].get(t))
              : (i = this.compileValidationSchema(t, r))),
          i(e)
        );
      },
    },
  });
  IS.exports = OS;
  IS.exports.buildRequest = v7;
});
var Pm = $((ume, RI) => {
  'use strict';
  var {
    kFourOhFourContext: S7,
    kReplySerializerDefault: _7,
    kSchemaErrorFormatter: w7,
    kErrorHandler: E7,
    kChildLoggerFactory: R7,
    kOptions: T7,
    kReply: P7,
    kRequest: k7,
    kBodyLimit: x7,
    kLogLevel: C7,
    kContentTypeParser: O7,
    kRouteByFastify: I7,
    kRequestCacheValidateFns: A7,
    kReplyCacheSerializeFns: $7,
    kPublicRouteContext: N7,
  } = rr();
  function L7({
    schema: e,
    handler: t,
    config: r,
    requestIdLogLabel: n,
    childLoggerFactory: i,
    errorHandler: s,
    bodyLimit: o,
    logLevel: a,
    logSerializers: u,
    attachValidation: c,
    validatorCompiler: d,
    serializerCompiler: m,
    replySerializer: g,
    schemaErrorFormatter: v,
    exposeHeadRoute: S,
    prefixTrailingSlash: w,
    server: T,
    isFastify: C,
  }) {
    (this.schema = e),
      (this.handler = t),
      (this.Reply = T[P7]),
      (this.Request = T[k7]),
      (this.contentTypeParser = T[O7]),
      (this.onRequest = null),
      (this.onSend = null),
      (this.onError = null),
      (this.onTimeout = null),
      (this.preHandler = null),
      (this.onResponse = null),
      (this.preSerialization = null),
      (this.onRequestAbort = null),
      (this.config = r),
      (this.errorHandler = s || T[E7]),
      (this.requestIdLogLabel = n || T[T7].requestIdLogLabel),
      (this.childLoggerFactory = i || T[R7]),
      (this._middie = null),
      (this._parserOptions = { limit: o || T[x7] }),
      (this.exposeHeadRoute = S),
      (this.prefixTrailingSlash = w),
      (this.logLevel = a || T[C7]),
      (this.logSerializers = u),
      (this[S7] = null),
      (this.attachValidation = c),
      (this[_7] = g),
      (this.schemaErrorFormatter = v || T[w7] || j7),
      (this[I7] = C),
      (this[A7] = null),
      (this[$7] = null),
      (this.validatorCompiler = d || null),
      (this.serializerCompiler = m || null),
      (this[N7] = D7(this)),
      (this.server = T);
  }
  function D7(e) {
    return Object.create(null, {
      schema: {
        enumerable: !0,
        get() {
          return e.schema;
        },
      },
      config: {
        enumerable: !0,
        get() {
          return e.config;
        },
      },
    });
  }
  function j7(e, t) {
    let r = '',
      n = ', ';
    for (var i = 0; i !== e.length; ++i) {
      let s = e[i];
      r += t + (s.instancePath || '') + ' ' + s.message + n;
    }
    return new Error(r.slice(0, -n.length));
  }
  RI.exports = L7;
});
var AS = $((cme, TI) => {
  'use strict';
  TI.exports = {
    supportedMethods: [
      'DELETE',
      'GET',
      'HEAD',
      'PATCH',
      'POST',
      'PUT',
      'OPTIONS',
      'PROPFIND',
      'PROPPATCH',
      'MKCOL',
      'COPY',
      'MOVE',
      'LOCK',
      'UNLOCK',
      'TRACE',
      'SEARCH',
      'REPORT',
      'MKCALENDAR',
    ],
  };
});
var jS = $((fme, CI) => {
  'use strict';
  var { kReply: $S, kRequest: NS, kState: F7, kHasBeenDecorated: q7 } = rr(),
    {
      FST_ERR_DEC_ALREADY_PRESENT: PI,
      FST_ERR_DEC_MISSING_DEPENDENCY: M7,
      FST_ERR_DEC_AFTER_START: H7,
      FST_ERR_DEC_DEPENDENCY_INVALID_TYPE: z7,
    } = br(),
    { FSTDEP006: U7 } = Qs();
  function V7(e, t, r, n) {
    if (Object.prototype.hasOwnProperty.call(e, t)) throw new PI(t);
    LS(e, t, n),
      r && (typeof r.getter == 'function' || typeof r.setter == 'function')
        ? Object.defineProperty(e, t, { get: r.getter, set: r.setter })
        : (e[t] = r);
  }
  function kI(e, t, r, n) {
    let i = e.prototype;
    if (Object.prototype.hasOwnProperty.call(i, t) || xm(e, t)) throw new PI(t);
    (e[q7] = !0),
      LS(e, t, n),
      r && (typeof r.getter == 'function' || typeof r.setter == 'function')
        ? Object.defineProperty(i, t, { get: r.getter, set: r.setter })
        : typeof r == 'function'
          ? (i[t] = r)
          : e.props.push({ key: t, value: r });
  }
  function xI(e, t) {
    typeof t == 'object' &&
      t &&
      !(typeof t.getter == 'function' || typeof t.setter == 'function') &&
      U7(e);
  }
  function B7(e, t, r) {
    return DS(this, e), V7(this, e, t, r), this;
  }
  function km(e, t) {
    return t
      ? t in e || (e.prototype && t in e.prototype) || xm(e, t)
      : e in this;
  }
  function xm(e, t) {
    return e.props ? e.props.find(({ key: r }) => r === t) : !1;
  }
  function W7(e) {
    return e && xm(this[NS], e) ? !0 : km(this[NS].prototype, e);
  }
  function G7(e) {
    return e && xm(this[$S], e) ? !0 : km(this[$S].prototype, e);
  }
  function LS(e, t, r) {
    if (r != null) {
      if (!Array.isArray(r)) throw new z7(t);
      for (var n = 0; n !== r.length; ++n) if (!km(e, r[n])) throw new M7(r[n]);
    }
  }
  function Y7(e, t, r) {
    return DS(this, e), xI(e, t), kI(this[$S], e, t, r), this;
  }
  function J7(e, t, r) {
    return DS(this, e), xI(e, t), kI(this[NS], e, t, r), this;
  }
  function DS(e, t) {
    if (e[F7].started) throw new H7(t);
  }
  CI.exports = {
    add: B7,
    exist: km,
    existRequest: W7,
    existReply: G7,
    dependencies: LS,
    decorateReply: Y7,
    decorateRequest: J7,
  };
});
var II = $((Ss) => {
  'use strict';
  var FS = class {
      constructor(t = 1e3, r = 0) {
        if (isNaN(t) || t < 0) throw new Error('Invalid max value');
        if (isNaN(r) || r < 0) throw new Error('Invalid ttl value');
        (this.first = null),
          (this.items = new Map()),
          (this.last = null),
          (this.max = t),
          (this.ttl = r);
      }
      get size() {
        return this.items.size;
      }
      clear() {
        (this.items = new Map()), (this.first = null), (this.last = null);
      }
      delete(t) {
        if (this.items.has(t)) {
          let r = this.items.get(t);
          this.items.delete(t),
            r.prev !== null && (r.prev.next = r.next),
            r.next !== null && (r.next.prev = r.prev),
            this.first === r && (this.first = r.next),
            this.last === r && (this.last = r.prev);
        }
      }
      deleteMany(t) {
        for (var r = 0; r < t.length; r++) this.delete(t[r]);
      }
      evict() {
        if (this.size > 0) {
          let t = this.first;
          this.items.delete(t.key),
            this.size === 0
              ? ((this.first = null), (this.last = null))
              : ((this.first = t.next), (this.first.prev = null));
        }
      }
      expiresAt(t) {
        if (this.items.has(t)) return this.items.get(t).expiry;
      }
      get(t) {
        if (this.items.has(t)) {
          let r = this.items.get(t);
          if (this.ttl > 0 && r.expiry <= Date.now()) {
            this.delete(t);
            return;
          }
          return r.value;
        }
      }
      getMany(t) {
        let r = [];
        for (var n = 0; n < t.length; n++) r.push(this.get(t[n]));
        return r;
      }
      keys() {
        return this.items.keys();
      }
      set(t, r) {
        if (this.items.has(t)) {
          let i = this.items.get(t);
          (i.value = r),
            (i.expiry = this.ttl > 0 ? Date.now() + this.ttl : this.ttl);
          return;
        }
        this.max > 0 && this.size === this.max && this.evict();
        let n = {
          expiry: this.ttl > 0 ? Date.now() + this.ttl : this.ttl,
          key: t,
          prev: this.last,
          next: null,
          value: r,
        };
        this.items.set(t, n),
          this.size === 1 ? (this.first = n) : (this.last.next = n),
          (this.last = n);
      }
    },
    qS = class {
      constructor(t = 1e3, r = 0) {
        if (isNaN(t) || t < 0) throw new Error('Invalid max value');
        if (isNaN(r) || r < 0) throw new Error('Invalid ttl value');
        (this.first = null),
          (this.items = new Map()),
          (this.last = null),
          (this.max = t),
          (this.ttl = r);
      }
      get size() {
        return this.items.size;
      }
      bumpLru(t) {
        if (this.last === t) return;
        let r = this.last,
          n = t.next,
          i = t.prev;
        this.first === t && (this.first = n),
          (t.next = null),
          (t.prev = r),
          (r.next = t),
          i !== null && (i.next = n),
          n !== null && (n.prev = i),
          (this.last = t);
      }
      clear() {
        (this.items = new Map()), (this.first = null), (this.last = null);
      }
      delete(t) {
        if (this.items.has(t)) {
          let r = this.items.get(t);
          this.items.delete(t),
            r.prev !== null && (r.prev.next = r.next),
            r.next !== null && (r.next.prev = r.prev),
            this.first === r && (this.first = r.next),
            this.last === r && (this.last = r.prev);
        }
      }
      deleteMany(t) {
        for (var r = 0; r < t.length; r++) this.delete(t[r]);
      }
      evict() {
        if (this.size > 0) {
          let t = this.first;
          this.items.delete(t.key),
            this.size === 0
              ? ((this.first = null), (this.last = null))
              : ((this.first = t.next), (this.first.prev = null));
        }
      }
      expiresAt(t) {
        if (this.items.has(t)) return this.items.get(t).expiry;
      }
      get(t) {
        if (this.items.has(t)) {
          let r = this.items.get(t);
          if (this.ttl > 0 && r.expiry <= Date.now()) {
            this.delete(t);
            return;
          }
          return this.bumpLru(r), r.value;
        }
      }
      getMany(t) {
        let r = [];
        for (var n = 0; n < t.length; n++) r.push(this.get(t[n]));
        return r;
      }
      keys() {
        return this.items.keys();
      }
      set(t, r) {
        if (this.items.has(t)) {
          let i = this.items.get(t);
          (i.value = r),
            (i.expiry = this.ttl > 0 ? Date.now() + this.ttl : this.ttl),
            this.last !== i && this.bumpLru(i);
          return;
        }
        this.max > 0 && this.size === this.max && this.evict();
        let n = {
          expiry: this.ttl > 0 ? Date.now() + this.ttl : this.ttl,
          key: t,
          prev: this.last,
          next: null,
          value: r,
        };
        this.items.set(t, n),
          this.size === 1 ? (this.first = n) : (this.last.next = n),
          (this.last = n);
      }
    },
    sd = class {
      constructor(t = 1e3, r = 0) {
        if (isNaN(t) || t < 0) throw new Error('Invalid max value');
        if (isNaN(r) || r < 0) throw new Error('Invalid ttl value');
        (this.first = null),
          (this.items = Object.create(null)),
          (this.last = null),
          (this.size = 0),
          (this.max = t),
          (this.ttl = r);
      }
      bumpLru(t) {
        if (this.last === t) return;
        let r = this.last,
          n = t.next,
          i = t.prev;
        this.first === t && (this.first = n),
          (t.next = null),
          (t.prev = r),
          (r.next = t),
          i !== null && (i.next = n),
          n !== null && (n.prev = i),
          (this.last = t);
      }
      clear() {
        (this.items = Object.create(null)),
          (this.first = null),
          (this.last = null),
          (this.size = 0);
      }
      delete(t) {
        if (Object.prototype.hasOwnProperty.call(this.items, t)) {
          let r = this.items[t];
          delete this.items[t],
            this.size--,
            r.prev !== null && (r.prev.next = r.next),
            r.next !== null && (r.next.prev = r.prev),
            this.first === r && (this.first = r.next),
            this.last === r && (this.last = r.prev);
        }
      }
      deleteMany(t) {
        for (var r = 0; r < t.length; r++) this.delete(t[r]);
      }
      evict() {
        if (this.size > 0) {
          let t = this.first;
          delete this.items[t.key],
            --this.size === 0
              ? ((this.first = null), (this.last = null))
              : ((this.first = t.next), (this.first.prev = null));
        }
      }
      expiresAt(t) {
        if (Object.prototype.hasOwnProperty.call(this.items, t))
          return this.items[t].expiry;
      }
      get(t) {
        if (Object.prototype.hasOwnProperty.call(this.items, t)) {
          let r = this.items[t];
          if (this.ttl > 0 && r.expiry <= Date.now()) {
            this.delete(t);
            return;
          }
          return this.bumpLru(r), r.value;
        }
      }
      getMany(t) {
        let r = [];
        for (var n = 0; n < t.length; n++) r.push(this.get(t[n]));
        return r;
      }
      keys() {
        return Object.keys(this.items);
      }
      set(t, r) {
        if (Object.prototype.hasOwnProperty.call(this.items, t)) {
          let i = this.items[t];
          (i.value = r),
            (i.expiry = this.ttl > 0 ? Date.now() + this.ttl : this.ttl),
            this.last !== i && this.bumpLru(i);
          return;
        }
        this.max > 0 && this.size === this.max && this.evict();
        let n = {
          expiry: this.ttl > 0 ? Date.now() + this.ttl : this.ttl,
          key: t,
          prev: this.last,
          next: null,
          value: r,
        };
        (this.items[t] = n),
          ++this.size === 1 ? (this.first = n) : (this.last.next = n),
          (this.last = n);
      }
    },
    Cm = class {
      constructor() {
        this.records = {};
      }
      initForCache(t, r) {
        this.records[t] = {
          [r]: {
            cacheSize: 0,
            hits: 0,
            falsyHits: 0,
            emptyHits: 0,
            misses: 0,
            expirations: 0,
            evictions: 0,
            invalidateOne: 0,
            invalidateAll: 0,
            sets: 0,
          },
        };
      }
      resetForCache(t) {
        for (let r of Object.keys(this.records[t]))
          this.records[t][r] = {
            cacheSize: 0,
            hits: 0,
            falsyHits: 0,
            emptyHits: 0,
            misses: 0,
            expirations: 0,
            evictions: 0,
            invalidateOne: 0,
            invalidateAll: 0,
            sets: 0,
          };
      }
      getStatistics() {
        return this.records;
      }
    };
  function OI(e) {
    return `${e.getFullYear()}-${(e.getMonth() + 1).toString().padStart(2, '0')}-${e.getDate().toString().padStart(2, '0')}`;
  }
  var MS = class {
      constructor(t, r, n) {
        (this.cacheId = t),
          (this.statisticTtlInHours = r),
          (this.collectionStart = new Date()),
          (this.currentTimeStamp = OI(this.collectionStart)),
          (this.records = n || new Cm()),
          this.records.initForCache(this.cacheId, this.currentTimeStamp);
      }
      get currentRecord() {
        return (
          this.records.records[this.cacheId][this.currentTimeStamp] ||
            (this.records.records[this.cacheId][this.currentTimeStamp] = {
              cacheSize: 0,
              hits: 0,
              falsyHits: 0,
              emptyHits: 0,
              misses: 0,
              expirations: 0,
              evictions: 0,
              sets: 0,
              invalidateOne: 0,
              invalidateAll: 0,
            }),
          this.records.records[this.cacheId][this.currentTimeStamp]
        );
      }
      hoursPassed() {
        return (Date.now() - this.collectionStart) / 1e3 / 60 / 60;
      }
      addHit() {
        this.archiveIfNeeded(), this.currentRecord.hits++;
      }
      addFalsyHit() {
        this.archiveIfNeeded(), this.currentRecord.falsyHits++;
      }
      addEmptyHit() {
        this.archiveIfNeeded(), this.currentRecord.emptyHits++;
      }
      addMiss() {
        this.archiveIfNeeded(), this.currentRecord.misses++;
      }
      addEviction() {
        this.archiveIfNeeded(), this.currentRecord.evictions++;
      }
      setCacheSize(t) {
        this.archiveIfNeeded(), (this.currentRecord.cacheSize = t);
      }
      addExpiration() {
        this.archiveIfNeeded(), this.currentRecord.expirations++;
      }
      addSet() {
        this.archiveIfNeeded(), this.currentRecord.sets++;
      }
      addInvalidateOne() {
        this.archiveIfNeeded(), this.currentRecord.invalidateOne++;
      }
      addInvalidateAll() {
        this.archiveIfNeeded(), this.currentRecord.invalidateAll++;
      }
      getStatistics() {
        return this.records.getStatistics();
      }
      archiveIfNeeded() {
        this.hoursPassed() >= this.statisticTtlInHours &&
          ((this.collectionStart = new Date()),
          (this.currentTimeStamp = OI(this.collectionStart)),
          this.records.initForCache(this.cacheId, this.currentTimeStamp));
      }
    },
    Om = class extends sd {
      constructor(t, r, n, i, s) {
        if ((super(t || 1e3, r || 0), !n))
          throw new Error('Cache id is mandatory');
        this.hitStatistics = new MS(n, s !== void 0 ? s : 24, i);
      }
      getStatistics() {
        return this.hitStatistics.getStatistics();
      }
      set(t, r) {
        super.set(t, r),
          this.hitStatistics.addSet(),
          this.hitStatistics.setCacheSize(this.size);
      }
      evict() {
        super.evict(),
          this.hitStatistics.addEviction(),
          this.hitStatistics.setCacheSize(this.size);
      }
      delete(t, r = !1) {
        super.delete(t),
          r || this.hitStatistics.addInvalidateOne(),
          this.hitStatistics.setCacheSize(this.size);
      }
      clear() {
        super.clear(),
          this.hitStatistics.addInvalidateAll(),
          this.hitStatistics.setCacheSize(this.size);
      }
      get(t) {
        if (Object.prototype.hasOwnProperty.call(this.items, t)) {
          let r = this.items[t];
          if (this.ttl > 0 && r.expiry <= Date.now()) {
            this.delete(t, !0), this.hitStatistics.addExpiration();
            return;
          }
          return (
            this.bumpLru(r),
            r.value || this.hitStatistics.addFalsyHit(),
            (r.value === void 0 || r.value === null || r.value === '') &&
              this.hitStatistics.addEmptyHit(),
            this.hitStatistics.addHit(),
            r.value
          );
        }
        this.hitStatistics.addMiss();
      }
    },
    Im = class {
      constructor(t = 1e3, r = 0) {
        if (isNaN(t) || t < 0) throw new Error('Invalid max value');
        if (isNaN(r) || r < 0) throw new Error('Invalid ttl value');
        (this.first = null),
          (this.items = Object.create(null)),
          (this.last = null),
          (this.size = 0),
          (this.max = t),
          (this.ttl = r);
      }
      clear() {
        (this.items = Object.create(null)),
          (this.first = null),
          (this.last = null),
          (this.size = 0);
      }
      delete(t) {
        if (Object.prototype.hasOwnProperty.call(this.items, t)) {
          let r = this.items[t];
          delete this.items[t],
            this.size--,
            r.prev !== null && (r.prev.next = r.next),
            r.next !== null && (r.next.prev = r.prev),
            this.first === r && (this.first = r.next),
            this.last === r && (this.last = r.prev);
        }
      }
      deleteMany(t) {
        for (var r = 0; r < t.length; r++) this.delete(t[r]);
      }
      evict() {
        if (this.size > 0) {
          let t = this.first;
          delete this.items[t.key],
            --this.size === 0
              ? ((this.first = null), (this.last = null))
              : ((this.first = t.next), (this.first.prev = null));
        }
      }
      expiresAt(t) {
        if (Object.prototype.hasOwnProperty.call(this.items, t))
          return this.items[t].expiry;
      }
      get(t) {
        if (Object.prototype.hasOwnProperty.call(this.items, t)) {
          let r = this.items[t];
          if (this.ttl > 0 && r.expiry <= Date.now()) {
            this.delete(t);
            return;
          }
          return r.value;
        }
      }
      getMany(t) {
        let r = [];
        for (var n = 0; n < t.length; n++) r.push(this.get(t[n]));
        return r;
      }
      keys() {
        return Object.keys(this.items);
      }
      set(t, r) {
        if (Object.prototype.hasOwnProperty.call(this.items, t)) {
          let i = this.items[t];
          (i.value = r),
            (i.expiry = this.ttl > 0 ? Date.now() + this.ttl : this.ttl);
          return;
        }
        this.max > 0 && this.size === this.max && this.evict();
        let n = {
          expiry: this.ttl > 0 ? Date.now() + this.ttl : this.ttl,
          key: t,
          prev: this.last,
          next: null,
          value: r,
        };
        (this.items[t] = n),
          ++this.size === 1 ? (this.first = n) : (this.last.next = n),
          (this.last = n);
      }
    };
  Ss.Fifo = Im;
  Ss.FifoMap = FS;
  Ss.FifoObject = Im;
  Ss.HitStatisticsRecord = Cm;
  Ss.Lru = sd;
  Ss.LruHitStatistics = Om;
  Ss.LruMap = qS;
  Ss.LruObject = sd;
  Ss.LruObjectHitStatistics = Om;
});
var LI = $((hme, id) => {
  'use strict';
  var Nm = function () {};
  Nm.prototype = Object.create(null);
  var Am =
      /; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,
    $m = /\\([\v\u0020-\u00ff])/gu,
    AI = /^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,
    La = { type: '', parameters: new Nm() };
  Object.freeze(La.parameters);
  Object.freeze(La);
  function $I(e) {
    if (typeof e != 'string')
      throw new TypeError('argument header is required and must be a string');
    let t = e.indexOf(';'),
      r = t !== -1 ? e.slice(0, t).trim() : e.trim();
    if (AI.test(r) === !1) throw new TypeError('invalid media type');
    let n = { type: r.toLowerCase(), parameters: new Nm() };
    if (t === -1) return n;
    let i, s, o;
    for (Am.lastIndex = t; (s = Am.exec(e)); ) {
      if (s.index !== t) throw new TypeError('invalid parameter format');
      (t += s[0].length),
        (i = s[1].toLowerCase()),
        (o = s[2]),
        o[0] === '"' &&
          ((o = o.slice(1, o.length - 1)),
          $m.test(o) && (o = o.replace($m, '$1'))),
        (n.parameters[i] = o);
    }
    if (t !== e.length) throw new TypeError('invalid parameter format');
    return n;
  }
  function NI(e) {
    if (typeof e != 'string') return La;
    let t = e.indexOf(';'),
      r = t !== -1 ? e.slice(0, t).trim() : e.trim();
    if (AI.test(r) === !1) return La;
    let n = { type: r.toLowerCase(), parameters: new Nm() };
    if (t === -1) return n;
    let i, s, o;
    for (Am.lastIndex = t; (s = Am.exec(e)); ) {
      if (s.index !== t) return La;
      (t += s[0].length),
        (i = s[1].toLowerCase()),
        (o = s[2]),
        o[0] === '"' &&
          ((o = o.slice(1, o.length - 1)),
          $m.test(o) && (o = o.replace($m, '$1'))),
        (n.parameters[i] = o);
    }
    return t !== e.length ? La : n;
  }
  id.exports.default = { parse: $I, safeParse: NI };
  id.exports.parse = $I;
  id.exports.safeParse = NI;
  id.exports.defaultContentType = La;
});
var MI = $((pme, mu) => {
  'use strict';
  var K7 = typeof Buffer < 'u',
    DI =
      /"(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])"\s*:/,
    jI =
      /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
  function FI(e, t, r) {
    r == null && t !== null && typeof t == 'object' && ((r = t), (t = void 0)),
      K7 && Buffer.isBuffer(e) && (e = e.toString()),
      e && e.charCodeAt(0) === 65279 && (e = e.slice(1));
    let n = JSON.parse(e, t);
    if (n === null || typeof n != 'object') return n;
    let i = (r && r.protoAction) || 'error',
      s = (r && r.constructorAction) || 'error';
    if (i === 'ignore' && s === 'ignore') return n;
    if (i !== 'ignore' && s !== 'ignore') {
      if (DI.test(e) === !1 && jI.test(e) === !1) return n;
    } else if (i !== 'ignore' && s === 'ignore') {
      if (DI.test(e) === !1) return n;
    } else if (jI.test(e) === !1) return n;
    return qI(n, { protoAction: i, constructorAction: s, safe: r && r.safe });
  }
  function qI(
    e,
    { protoAction: t = 'error', constructorAction: r = 'error', safe: n } = {},
  ) {
    let i = [e];
    for (; i.length; ) {
      let s = i;
      i = [];
      for (let o of s) {
        if (
          t !== 'ignore' &&
          Object.prototype.hasOwnProperty.call(o, '__proto__')
        ) {
          if (n === !0) return null;
          if (t === 'error')
            throw new SyntaxError(
              'Object contains forbidden prototype property',
            );
          delete o.__proto__;
        }
        if (
          r !== 'ignore' &&
          Object.prototype.hasOwnProperty.call(o, 'constructor') &&
          Object.prototype.hasOwnProperty.call(o.constructor, 'prototype')
        ) {
          if (n === !0) return null;
          if (r === 'error')
            throw new SyntaxError(
              'Object contains forbidden prototype property',
            );
          delete o.constructor;
        }
        for (let a in o) {
          let u = o[a];
          u && typeof u == 'object' && i.push(u);
        }
      }
    }
    return e;
  }
  function HS(e, t, r) {
    let n = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    try {
      return FI(e, t, r);
    } finally {
      Error.stackTraceLimit = n;
    }
  }
  function X7(e, t) {
    let r = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    try {
      return FI(e, t, { safe: !0 });
    } catch {
      return null;
    } finally {
      Error.stackTraceLimit = r;
    }
  }
  mu.exports = HS;
  mu.exports.default = HS;
  mu.exports.parse = HS;
  mu.exports.safeParse = X7;
  mu.exports.scan = qI;
});
var WS = $((mme, ad) => {
  'use strict';
  var { AsyncResource: Z7 } = require('node:async_hooks'),
    { FifoMap: zI } = II(),
    { safeParse: UI, defaultContentType: Q7 } = LI(),
    eY = MI(),
    {
      kDefaultJsonParse: od,
      kContentTypeParser: yu,
      kBodyLimit: tY,
      kRequestPayloadStream: VI,
      kState: US,
      kTestInternals: rY,
      kReplyIsError: BI,
      kRouteContext: nY,
    } = rr(),
    {
      FST_ERR_CTP_INVALID_TYPE: WI,
      FST_ERR_CTP_EMPTY_TYPE: sY,
      FST_ERR_CTP_ALREADY_PRESENT: iY,
      FST_ERR_CTP_INVALID_HANDLER: oY,
      FST_ERR_CTP_INVALID_PARSE_TYPE: aY,
      FST_ERR_CTP_BODY_TOO_LARGE: HI,
      FST_ERR_CTP_INVALID_MEDIA_TYPE: lY,
      FST_ERR_CTP_INVALID_CONTENT_LENGTH: uY,
      FST_ERR_CTP_EMPTY_JSON_BODY: cY,
      FST_ERR_CTP_INSTANCE_ALREADY_STARTED: VS,
    } = br();
  function ni(e, t, r) {
    (this[od] = YI(t, r)),
      (this.customParsers = new Map()),
      this.customParsers.set('application/json', new zS(!0, !1, e, this[od])),
      this.customParsers.set('text/plain', new zS(!0, !1, e, BS)),
      (this.parserList = [new Lm('application/json'), new Lm('text/plain')]),
      (this.parserRegExpList = []),
      (this.cache = new zI(100));
  }
  ni.prototype.add = function (e, t, r) {
    let n = typeof e == 'string';
    if (!n && !(e instanceof RegExp)) throw new WI();
    if (n && e.length === 0) throw new sY();
    if (typeof r != 'function') throw new oY();
    if (this.existingParser(e)) throw new iY(e);
    if (
      t.parseAs !== void 0 &&
      t.parseAs !== 'string' &&
      t.parseAs !== 'buffer'
    )
      throw new aY(t.parseAs);
    let i = new zS(
      t.parseAs === 'string',
      t.parseAs === 'buffer',
      t.bodyLimit,
      r,
    );
    n && e === '*'
      ? this.customParsers.set('', i)
      : (n
          ? this.parserList.unshift(new Lm(e))
          : ((e.isEssence = e.source.indexOf(';') === -1),
            this.parserRegExpList.unshift(e)),
        this.customParsers.set(e.toString(), i));
  };
  ni.prototype.hasParser = function (e) {
    return this.customParsers.has(typeof e == 'string' ? e : e.toString());
  };
  ni.prototype.existingParser = function (e) {
    return e === 'application/json' && this.customParsers.has(e)
      ? this.customParsers.get(e).fn !== this[od]
      : e === 'text/plain' && this.customParsers.has(e)
        ? this.customParsers.get(e).fn !== BS
        : this.hasParser(e);
  };
  ni.prototype.getParser = function (e) {
    if (this.hasParser(e)) return this.customParsers.get(e);
    let t = this.cache.get(e);
    if (t !== void 0) return t;
    let r = UI(e);
    if (r === Q7) return this.customParsers.get('');
    for (var n = 0; n !== this.parserList.length; ++n) {
      let s = this.parserList[n];
      if (yY(r, s)) {
        let o = this.customParsers.get(s.name);
        return this.cache.set(e, o), o;
      }
    }
    for (var i = 0; i !== this.parserRegExpList.length; ++i) {
      let s = this.parserRegExpList[i];
      if (gY(e, r.type, s)) {
        let o = this.customParsers.get(s.toString());
        return this.cache.set(e, o), o;
      }
    }
    return this.customParsers.get('');
  };
  ni.prototype.removeAll = function () {
    (this.customParsers = new Map()),
      (this.parserRegExpList = []),
      (this.parserList = []),
      (this.cache = new zI(100));
  };
  ni.prototype.remove = function (e) {
    if (!(typeof e == 'string' || e instanceof RegExp)) throw new WI();
    let t = this.customParsers.delete(e.toString()),
      r = typeof e == 'string' ? this.parserList : this.parserRegExpList,
      n = r.findIndex((i) => i.toString() === e.toString());
    return n > -1 && r.splice(n, 1), t || n > -1;
  };
  ni.prototype.run = function (e, t, r, n) {
    let i = this.getParser(e);
    if (i === void 0) {
      r.is404 ? t(r, n) : n.send(new lY(e || void 0));
      return;
    }
    let s = new Z7('content-type-parser:run', r);
    if (i.asString === !0 || i.asBuffer === !0)
      GI(r, n, n[nY]._parserOptions, i, o);
    else {
      let a = i.fn(r, r[VI], o);
      a && typeof a.then == 'function' && a.then((u) => o(null, u), o);
    }
    function o(a, u) {
      s.runInAsyncScope(() => {
        s.emitDestroy(),
          a ? ((n[BI] = !0), n.send(a)) : ((r.body = u), t(r, n));
      });
    }
  };
  function GI(e, t, r, n, i) {
    let s = n.asString,
      o = r.limit === null ? n.bodyLimit : r.limit,
      a =
        e.headers['content-length'] === void 0
          ? NaN
          : Number(e.headers['content-length']);
    if (a > o) {
      t.header('connection', 'close'), t.send(new HI());
      return;
    }
    let u = 0,
      c = s === !0 ? '' : [],
      d = e[VI] || e.raw;
    s === !0 && d.setEncoding('utf8'),
      d.on('data', m),
      d.on('end', g),
      d.on('error', g),
      d.resume();
    function m(v) {
      u += v.length;
      let { receivedEncodedLength: S = 0 } = d;
      if (u > o || S > o) {
        d.removeListener('data', m),
          d.removeListener('end', g),
          d.removeListener('error', g),
          t.send(new HI());
        return;
      }
      s === !0 ? (c += v) : c.push(v);
    }
    function g(v) {
      if (
        (d.removeListener('data', m),
        d.removeListener('end', g),
        d.removeListener('error', g),
        v !== void 0)
      ) {
        (typeof v.statusCode == 'number' && v.statusCode >= 400) ||
          (v.statusCode = 400),
          (t[BI] = !0),
          t.code(v.statusCode).send(v);
        return;
      }
      if (
        (s === !0 && (u = Buffer.byteLength(c)),
        !Number.isNaN(a) && (d.receivedEncodedLength || u) !== a)
      ) {
        t.header('connection', 'close'), t.send(new uY());
        return;
      }
      s === !1 && (c = Buffer.concat(c));
      let S = n.fn(e, c, i);
      S && typeof S.then == 'function' && S.then((w) => i(null, w), i);
    }
  }
  function YI(e, t) {
    return r;
    function r(n, i, s) {
      if (i === '' || i == null || (Buffer.isBuffer(i) && i.length === 0))
        return s(new cY(), void 0);
      let o;
      try {
        o = eY.parse(i, { protoAction: e, constructorAction: t });
      } catch (a) {
        return (a.statusCode = 400), s(a, void 0);
      }
      s(null, o);
    }
  }
  function BS(e, t, r) {
    r(null, t);
  }
  function zS(e, t, r, n) {
    (this.asString = e),
      (this.asBuffer = t),
      (this.bodyLimit = r),
      (this.fn = n);
  }
  function fY(e) {
    let t = new ni();
    return (
      (t[od] = e[od]),
      (t.customParsers = new Map(e.customParsers.entries())),
      (t.parserList = e.parserList.slice()),
      (t.parserRegExpList = e.parserRegExpList.slice()),
      t
    );
  }
  function dY(e, t, r) {
    if (this[US].started) throw new VS('addContentTypeParser');
    return (
      typeof t == 'function' && ((r = t), (t = {})),
      t || (t = {}),
      t.bodyLimit || (t.bodyLimit = this[tY]),
      Array.isArray(e)
        ? e.forEach((n) => this[yu].add(n, t, r))
        : this[yu].add(e, t, r),
      this
    );
  }
  function hY(e) {
    return this[yu].hasParser(e);
  }
  function pY(e) {
    if (this[US].started) throw new VS('removeContentTypeParser');
    if (Array.isArray(e)) for (let t of e) this[yu].remove(t);
    else this[yu].remove(e);
  }
  function mY() {
    if (this[US].started) throw new VS('removeAllContentTypeParsers');
    this[yu].removeAll();
  }
  function yY(e, t) {
    if (t.isEssence) return e.type.indexOf(t) !== -1;
    if (e.type.indexOf(t.type) === -1) return !1;
    for (let r of t.parameterKeys)
      if (!(r in e.parameters) || e.parameters[r] !== t.parameters[r])
        return !1;
    return !0;
  }
  function gY(e, t, r) {
    return r.isEssence ? r.test(t) : r.test(e);
  }
  function Lm(e) {
    this.name = e;
    let t = UI(e);
    if (
      ((this.isEssence = e.indexOf(';') === -1),
      this.isEssence === !1 && t.type === '')
    ) {
      let r = e.split(';', 1)[0];
      this.type = r === '' ? e : r;
    } else this.type = t.type;
    (this.parameters = t.parameters),
      (this.parameterKeys = Object.keys(t.parameters));
  }
  Lm.prototype.toString = function () {
    return this.name;
  };
  ad.exports = ni;
  ad.exports.helpers = {
    buildContentTypeParser: fY,
    addContentTypeParser: dY,
    hasContentTypeParser: hY,
    removeContentTypeParser: pY,
    removeAllContentTypeParsers: mY,
  };
  ad.exports.defaultParsers = {
    getDefaultJsonParser: YI,
    defaultTextParser: BS,
  };
  ad.exports[rY] = { rawBody: GI };
});
var mo = $((yme, JI) => {
  'use strict';
  JI.exports = function e(t, r) {
    if (t === r) return !0;
    if (t && r && typeof t == 'object' && typeof r == 'object') {
      if (t.constructor !== r.constructor) return !1;
      var n, i, s;
      if (Array.isArray(t)) {
        if (((n = t.length), n != r.length)) return !1;
        for (i = n; i-- !== 0; ) if (!e(t[i], r[i])) return !1;
        return !0;
      }
      if (t.constructor === RegExp)
        return t.source === r.source && t.flags === r.flags;
      if (t.valueOf !== Object.prototype.valueOf)
        return t.valueOf() === r.valueOf();
      if (t.toString !== Object.prototype.toString)
        return t.toString() === r.toString();
      if (((s = Object.keys(t)), (n = s.length), n !== Object.keys(r).length))
        return !1;
      for (i = n; i-- !== 0; )
        if (!Object.prototype.hasOwnProperty.call(r, s[i])) return !1;
      for (i = n; i-- !== 0; ) {
        var o = s[i];
        if (!e(t[o], r[o])) return !1;
      }
      return !0;
    }
    return t !== t && r !== r;
  };
});
var QI = $((gme, ZI) => {
  'use strict';
  var KI = mo(),
    vY = Symbol.for('json-schema-ref'),
    GS = class {
      #e;
      #t;
      #n;
      #s;
      #i;
      constructor(t = {}) {
        (this.#e = {}),
          (this.#t = {}),
          (this.#n = t.insertRefSymbol ?? !1),
          (this.#s = t.allowEqualDuplicates ?? !0),
          (this.#i = t.cloneSchemaWithoutRefs ?? !1);
      }
      addSchema(t, r) {
        t.$id !== void 0 && t.$id.charAt(0) !== '#'
          ? (r = t.$id)
          : this.#u(t, r),
          this.#a(t, r);
      }
      getSchema(t, r = '#') {
        let n = this.#e[t];
        if (n === void 0)
          throw new Error(
            `Cannot resolve ref "${t}${r}". Schema with id "${t}" is not found.`,
          );
        return n.anchors[r] !== void 0 ? n.anchors[r] : XI(n.schema, r);
      }
      hasSchema(t) {
        return this.#e[t] !== void 0;
      }
      getSchemaRefs(t) {
        let r = this.#e[t];
        if (r === void 0)
          throw new Error(`Schema with id "${t}" is not found.`);
        return r.refs;
      }
      getSchemaDependencies(t, r = {}) {
        let n = this.#e[t];
        for (let i of n.refs) {
          let s = i.schemaId;
          r[s] === void 0 &&
            ((r[s] = this.getSchema(s)), this.getSchemaDependencies(s, r));
        }
        return r;
      }
      derefSchema(t) {
        if (this.#t[t] !== void 0) return;
        let r = this.#e[t];
        if (r === void 0)
          throw new Error(`Schema with id "${t}" is not found.`);
        !this.#i &&
          r.refs.length === 0 &&
          (this.#t[t] = { schema: r.schema, anchors: r.anchors });
        let n = [];
        this.#r(r.schema, t, n);
        let i = this.getSchemaDependencies(t);
        for (let s in i) {
          let o = i[s];
          this.#r(o, s, n);
        }
        for (let s of n) {
          let { refSchemaId: o, refJsonPointer: a } = this.#o(
              s.ref,
              s.sourceSchemaId,
            ),
            u = this.getDerefSchema(o, a);
          if (u === null)
            throw new Error(
              `Cannot resolve ref "${s.ref}". Ref "${a}" is not found in schema "${o}".`,
            );
          (s.targetSchema = u), (s.targetSchemaId = o);
        }
        for (let s of n) this.#l(s, n);
      }
      getDerefSchema(t, r = '#') {
        let n = this.#t[t];
        return (
          n === void 0 && (this.derefSchema(t), (n = this.#t[t])),
          n.anchors[r] !== void 0 ? n.anchors[r] : XI(n.schema, r)
        );
      }
      #o(t, r) {
        let n = t.indexOf('#');
        return n === -1
          ? { refSchemaId: t, refJsonPointer: '#' }
          : n === 0
            ? { refSchemaId: r, refJsonPointer: t }
            : { refSchemaId: t.slice(0, n), refJsonPointer: t.slice(n) };
      }
      #a(t, r) {
        let n = t.$id;
        n !== void 0 &&
          typeof n == 'string' &&
          (n.charAt(0) === '#' ? this.#c(t, r, n) : (this.#u(t, n), (r = n)));
        let i = t.$ref;
        if (i !== void 0 && typeof i == 'string') {
          let { refSchemaId: s, refJsonPointer: o } = this.#o(i, r);
          this.#e[r].refs.push({ schemaId: s, jsonPointer: o });
        }
        for (let s in t)
          typeof t[s] == 'object' && t[s] !== null && this.#a(t[s], r);
      }
      #r(t, r, n = []) {
        let i = Array.isArray(t) ? [...t] : { ...t },
          s = i.$id;
        s !== void 0 &&
          typeof s == 'string' &&
          (s.charAt(0) === '#' ? this.#d(i, r, s) : (this.#f(i, s), (r = s))),
          i.$ref !== void 0 &&
            n.push({ ref: i.$ref, sourceSchemaId: r, sourceSchema: i });
        for (let o in i) {
          let a = i[o];
          typeof a == 'object' && a !== null && (i[o] = this.#r(a, r, n));
        }
        return i;
      }
      #l(t, r) {
        let { sourceSchema: n, targetSchema: i } = t;
        if (n.$ref) {
          if ((this.#n && (n[vY] = n.$ref), delete n.$ref, i.$ref)) {
            let s = r.find((o) => o.sourceSchema === i);
            this.#l(s, r);
          }
          for (let s in i)
            if (s !== '$id') {
              if (n[s] !== void 0) {
                if (KI(n[s], i[s])) continue;
                throw new Error(
                  `Cannot resolve ref "${t.ref}". Property "${s}" is already exist in schema "${t.sourceSchemaId}".`,
                );
              }
              n[s] = i[s];
            }
          t.isResolved = !0;
        }
      }
      #u(t, r) {
        let n = this.#e[r];
        if (n !== void 0) {
          if (this.#s && KI(t, n.schema)) return;
          throw new Error(`There is already another schema with id "${r}".`);
        }
        this.#e[r] = { schema: t, anchors: {}, refs: [] };
      }
      #c(t, r, n) {
        let { anchors: i } = this.#e[r];
        if (i[n] !== void 0)
          throw new Error(
            `There is already another anchor "${n}" in a schema "${r}".`,
          );
        i[n] = t;
      }
      #f(t, r) {
        this.#t[r] === void 0 && (this.#t[r] = { schema: t, anchors: {} });
      }
      #d(t, r, n) {
        let { anchors: i } = this.#t[r];
        i[n] = t;
      }
    };
  function XI(e, t) {
    let r = t.split('/'),
      n = e;
    for (let i of r)
      if (!(i === '' || i === '#')) {
        if (typeof n != 'object' || n === null) return null;
        n = n[i];
      }
    return n ?? null;
  }
  ZI.exports = { RefResolver: GS };
});
var gu = $((We) => {
  'use strict';
  Object.defineProperty(We, '__esModule', { value: !0 });
  We.regexpCode =
    We.getEsmExportName =
    We.getProperty =
    We.safeStringify =
    We.stringify =
    We.strConcat =
    We.addCodeArg =
    We.str =
    We._ =
    We.nil =
    We._Code =
    We.Name =
    We.IDENTIFIER =
    We._CodeOrName =
      void 0;
  var ld = class {};
  We._CodeOrName = ld;
  We.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
  var Da = class extends ld {
    constructor(t) {
      if ((super(), !We.IDENTIFIER.test(t)))
        throw new Error('CodeGen: name must be a valid identifier');
      this.str = t;
    }
    toString() {
      return this.str;
    }
    emptyStr() {
      return !1;
    }
    get names() {
      return { [this.str]: 1 };
    }
  };
  We.Name = Da;
  var xn = class extends ld {
    constructor(t) {
      super(), (this._items = typeof t == 'string' ? [t] : t);
    }
    toString() {
      return this.str;
    }
    emptyStr() {
      if (this._items.length > 1) return !1;
      let t = this._items[0];
      return t === '' || t === '""';
    }
    get str() {
      var t;
      return (t = this._str) !== null && t !== void 0
        ? t
        : (this._str = this._items.reduce((r, n) => `${r}${n}`, ''));
    }
    get names() {
      var t;
      return (t = this._names) !== null && t !== void 0
        ? t
        : (this._names = this._items.reduce(
            (r, n) => (n instanceof Da && (r[n.str] = (r[n.str] || 0) + 1), r),
            {},
          ));
    }
  };
  We._Code = xn;
  We.nil = new xn('');
  function eA(e, ...t) {
    let r = [e[0]],
      n = 0;
    for (; n < t.length; ) JS(r, t[n]), r.push(e[++n]);
    return new xn(r);
  }
  We._ = eA;
  var YS = new xn('+');
  function tA(e, ...t) {
    let r = [ud(e[0])],
      n = 0;
    for (; n < t.length; ) r.push(YS), JS(r, t[n]), r.push(YS, ud(e[++n]));
    return bY(r), new xn(r);
  }
  We.str = tA;
  function JS(e, t) {
    t instanceof xn
      ? e.push(...t._items)
      : t instanceof Da
        ? e.push(t)
        : e.push(wY(t));
  }
  We.addCodeArg = JS;
  function bY(e) {
    let t = 1;
    for (; t < e.length - 1; ) {
      if (e[t] === YS) {
        let r = SY(e[t - 1], e[t + 1]);
        if (r !== void 0) {
          e.splice(t - 1, 3, r);
          continue;
        }
        e[t++] = '+';
      }
      t++;
    }
  }
  function SY(e, t) {
    if (t === '""') return e;
    if (e === '""') return t;
    if (typeof e == 'string')
      return t instanceof Da || e[e.length - 1] !== '"'
        ? void 0
        : typeof t != 'string'
          ? `${e.slice(0, -1)}${t}"`
          : t[0] === '"'
            ? e.slice(0, -1) + t.slice(1)
            : void 0;
    if (typeof t == 'string' && t[0] === '"' && !(e instanceof Da))
      return `"${e}${t.slice(1)}`;
  }
  function _Y(e, t) {
    return t.emptyStr() ? e : e.emptyStr() ? t : tA`${e}${t}`;
  }
  We.strConcat = _Y;
  function wY(e) {
    return typeof e == 'number' || typeof e == 'boolean' || e === null
      ? e
      : ud(Array.isArray(e) ? e.join(',') : e);
  }
  function EY(e) {
    return new xn(ud(e));
  }
  We.stringify = EY;
  function ud(e) {
    return JSON.stringify(e)
      .replace(/\u2028/g, '\\u2028')
      .replace(/\u2029/g, '\\u2029');
  }
  We.safeStringify = ud;
  function RY(e) {
    return typeof e == 'string' && We.IDENTIFIER.test(e)
      ? new xn(`.${e}`)
      : eA`[${e}]`;
  }
  We.getProperty = RY;
  function TY(e) {
    if (typeof e == 'string' && We.IDENTIFIER.test(e)) return new xn(`${e}`);
    throw new Error(
      `CodeGen: invalid export name: ${e}, use explicit $id name mapping`,
    );
  }
  We.getEsmExportName = TY;
  function PY(e) {
    return new xn(e.toString());
  }
  We.regexpCode = PY;
});
var qm = $((tn) => {
  'use strict';
  Object.defineProperty(tn, '__esModule', { value: !0 });
  tn.ValueScope =
    tn.ValueScopeName =
    tn.Scope =
    tn.varKinds =
    tn.UsedValueState =
      void 0;
  var en = gu(),
    KS = class extends Error {
      constructor(t) {
        super(`CodeGen: "code" for ${t} not defined`), (this.value = t.value);
      }
    },
    Dm;
  (function (e) {
    (e[(e.Started = 0)] = 'Started'), (e[(e.Completed = 1)] = 'Completed');
  })(Dm || (tn.UsedValueState = Dm = {}));
  tn.varKinds = {
    const: new en.Name('const'),
    let: new en.Name('let'),
    var: new en.Name('var'),
  };
  var jm = class {
    constructor({ prefixes: t, parent: r } = {}) {
      (this._names = {}), (this._prefixes = t), (this._parent = r);
    }
    toName(t) {
      return t instanceof en.Name ? t : this.name(t);
    }
    name(t) {
      return new en.Name(this._newName(t));
    }
    _newName(t) {
      let r = this._names[t] || this._nameGroup(t);
      return `${t}${r.index++}`;
    }
    _nameGroup(t) {
      var r, n;
      if (
        (!(
          (n =
            (r = this._parent) === null || r === void 0
              ? void 0
              : r._prefixes) === null || n === void 0
        ) &&
          n.has(t)) ||
        (this._prefixes && !this._prefixes.has(t))
      )
        throw new Error(`CodeGen: prefix "${t}" is not allowed in this scope`);
      return (this._names[t] = { prefix: t, index: 0 });
    }
  };
  tn.Scope = jm;
  var Fm = class extends en.Name {
    constructor(t, r) {
      super(r), (this.prefix = t);
    }
    setValue(t, { property: r, itemIndex: n }) {
      (this.value = t), (this.scopePath = (0, en._)`.${new en.Name(r)}[${n}]`);
    }
  };
  tn.ValueScopeName = Fm;
  var kY = (0, en._)`\n`,
    XS = class extends jm {
      constructor(t) {
        super(t),
          (this._values = {}),
          (this._scope = t.scope),
          (this.opts = { ...t, _n: t.lines ? kY : en.nil });
      }
      get() {
        return this._scope;
      }
      name(t) {
        return new Fm(t, this._newName(t));
      }
      value(t, r) {
        var n;
        if (r.ref === void 0)
          throw new Error('CodeGen: ref must be passed in value');
        let i = this.toName(t),
          { prefix: s } = i,
          o = (n = r.key) !== null && n !== void 0 ? n : r.ref,
          a = this._values[s];
        if (a) {
          let d = a.get(o);
          if (d) return d;
        } else a = this._values[s] = new Map();
        a.set(o, i);
        let u = this._scope[s] || (this._scope[s] = []),
          c = u.length;
        return (u[c] = r.ref), i.setValue(r, { property: s, itemIndex: c }), i;
      }
      getValue(t, r) {
        let n = this._values[t];
        if (n) return n.get(r);
      }
      scopeRefs(t, r = this._values) {
        return this._reduceValues(r, (n) => {
          if (n.scopePath === void 0)
            throw new Error(`CodeGen: name "${n}" has no value`);
          return (0, en._)`${t}${n.scopePath}`;
        });
      }
      scopeCode(t = this._values, r, n) {
        return this._reduceValues(
          t,
          (i) => {
            if (i.value === void 0)
              throw new Error(`CodeGen: name "${i}" has no value`);
            return i.value.code;
          },
          r,
          n,
        );
      }
      _reduceValues(t, r, n = {}, i) {
        let s = en.nil;
        for (let o in t) {
          let a = t[o];
          if (!a) continue;
          let u = (n[o] = n[o] || new Map());
          a.forEach((c) => {
            if (u.has(c)) return;
            u.set(c, Dm.Started);
            let d = r(c);
            if (d) {
              let m = this.opts.es5 ? tn.varKinds.var : tn.varKinds.const;
              s = (0, en._)`${s}${m} ${c} = ${d};${this.opts._n}`;
            } else if ((d = i?.(c))) s = (0, en._)`${s}${d}${this.opts._n}`;
            else throw new KS(c);
            u.set(c, Dm.Completed);
          });
        }
        return s;
      }
    };
  tn.ValueScope = XS;
});
var be = $((Oe) => {
  'use strict';
  Object.defineProperty(Oe, '__esModule', { value: !0 });
  Oe.or =
    Oe.and =
    Oe.not =
    Oe.CodeGen =
    Oe.operators =
    Oe.varKinds =
    Oe.ValueScopeName =
    Oe.ValueScope =
    Oe.Scope =
    Oe.Name =
    Oe.regexpCode =
    Oe.stringify =
    Oe.getProperty =
    Oe.nil =
    Oe.strConcat =
    Oe.str =
    Oe._ =
      void 0;
  var He = gu(),
    Qn = qm(),
    yo = gu();
  Object.defineProperty(Oe, '_', {
    enumerable: !0,
    get: function () {
      return yo._;
    },
  });
  Object.defineProperty(Oe, 'str', {
    enumerable: !0,
    get: function () {
      return yo.str;
    },
  });
  Object.defineProperty(Oe, 'strConcat', {
    enumerable: !0,
    get: function () {
      return yo.strConcat;
    },
  });
  Object.defineProperty(Oe, 'nil', {
    enumerable: !0,
    get: function () {
      return yo.nil;
    },
  });
  Object.defineProperty(Oe, 'getProperty', {
    enumerable: !0,
    get: function () {
      return yo.getProperty;
    },
  });
  Object.defineProperty(Oe, 'stringify', {
    enumerable: !0,
    get: function () {
      return yo.stringify;
    },
  });
  Object.defineProperty(Oe, 'regexpCode', {
    enumerable: !0,
    get: function () {
      return yo.regexpCode;
    },
  });
  Object.defineProperty(Oe, 'Name', {
    enumerable: !0,
    get: function () {
      return yo.Name;
    },
  });
  var Um = qm();
  Object.defineProperty(Oe, 'Scope', {
    enumerable: !0,
    get: function () {
      return Um.Scope;
    },
  });
  Object.defineProperty(Oe, 'ValueScope', {
    enumerable: !0,
    get: function () {
      return Um.ValueScope;
    },
  });
  Object.defineProperty(Oe, 'ValueScopeName', {
    enumerable: !0,
    get: function () {
      return Um.ValueScopeName;
    },
  });
  Object.defineProperty(Oe, 'varKinds', {
    enumerable: !0,
    get: function () {
      return Um.varKinds;
    },
  });
  Oe.operators = {
    GT: new He._Code('>'),
    GTE: new He._Code('>='),
    LT: new He._Code('<'),
    LTE: new He._Code('<='),
    EQ: new He._Code('==='),
    NEQ: new He._Code('!=='),
    NOT: new He._Code('!'),
    OR: new He._Code('||'),
    AND: new He._Code('&&'),
    ADD: new He._Code('+'),
  };
  var si = class {
      optimizeNodes() {
        return this;
      }
      optimizeNames(t, r) {
        return this;
      }
    },
    ZS = class extends si {
      constructor(t, r, n) {
        super(), (this.varKind = t), (this.name = r), (this.rhs = n);
      }
      render({ es5: t, _n: r }) {
        let n = t ? Qn.varKinds.var : this.varKind,
          i = this.rhs === void 0 ? '' : ` = ${this.rhs}`;
        return `${n} ${this.name}${i};` + r;
      }
      optimizeNames(t, r) {
        if (t[this.name.str])
          return this.rhs && (this.rhs = bu(this.rhs, t, r)), this;
      }
      get names() {
        return this.rhs instanceof He._CodeOrName ? this.rhs.names : {};
      }
    },
    Mm = class extends si {
      constructor(t, r, n) {
        super(), (this.lhs = t), (this.rhs = r), (this.sideEffects = n);
      }
      render({ _n: t }) {
        return `${this.lhs} = ${this.rhs};` + t;
      }
      optimizeNames(t, r) {
        if (
          !(
            this.lhs instanceof He.Name &&
            !t[this.lhs.str] &&
            !this.sideEffects
          )
        )
          return (this.rhs = bu(this.rhs, t, r)), this;
      }
      get names() {
        let t = this.lhs instanceof He.Name ? {} : { ...this.lhs.names };
        return zm(t, this.rhs);
      }
    },
    QS = class extends Mm {
      constructor(t, r, n, i) {
        super(t, n, i), (this.op = r);
      }
      render({ _n: t }) {
        return `${this.lhs} ${this.op}= ${this.rhs};` + t;
      }
    },
    e_ = class extends si {
      constructor(t) {
        super(), (this.label = t), (this.names = {});
      }
      render({ _n: t }) {
        return `${this.label}:` + t;
      }
    },
    t_ = class extends si {
      constructor(t) {
        super(), (this.label = t), (this.names = {});
      }
      render({ _n: t }) {
        return `break${this.label ? ` ${this.label}` : ''};` + t;
      }
    },
    r_ = class extends si {
      constructor(t) {
        super(), (this.error = t);
      }
      render({ _n: t }) {
        return `throw ${this.error};` + t;
      }
      get names() {
        return this.error.names;
      }
    },
    n_ = class extends si {
      constructor(t) {
        super(), (this.code = t);
      }
      render({ _n: t }) {
        return `${this.code};` + t;
      }
      optimizeNodes() {
        return `${this.code}` ? this : void 0;
      }
      optimizeNames(t, r) {
        return (this.code = bu(this.code, t, r)), this;
      }
      get names() {
        return this.code instanceof He._CodeOrName ? this.code.names : {};
      }
    },
    cd = class extends si {
      constructor(t = []) {
        super(), (this.nodes = t);
      }
      render(t) {
        return this.nodes.reduce((r, n) => r + n.render(t), '');
      }
      optimizeNodes() {
        let { nodes: t } = this,
          r = t.length;
        for (; r--; ) {
          let n = t[r].optimizeNodes();
          Array.isArray(n)
            ? t.splice(r, 1, ...n)
            : n
              ? (t[r] = n)
              : t.splice(r, 1);
        }
        return t.length > 0 ? this : void 0;
      }
      optimizeNames(t, r) {
        let { nodes: n } = this,
          i = n.length;
        for (; i--; ) {
          let s = n[i];
          s.optimizeNames(t, r) || (xY(t, s.names), n.splice(i, 1));
        }
        return n.length > 0 ? this : void 0;
      }
      get names() {
        return this.nodes.reduce((t, r) => qa(t, r.names), {});
      }
    },
    ii = class extends cd {
      render(t) {
        return '{' + t._n + super.render(t) + '}' + t._n;
      }
    },
    s_ = class extends cd {},
    vu = class extends ii {};
  vu.kind = 'else';
  var ja = class e extends ii {
    constructor(t, r) {
      super(r), (this.condition = t);
    }
    render(t) {
      let r = `if(${this.condition})` + super.render(t);
      return this.else && (r += 'else ' + this.else.render(t)), r;
    }
    optimizeNodes() {
      super.optimizeNodes();
      let t = this.condition;
      if (t === !0) return this.nodes;
      let r = this.else;
      if (r) {
        let n = r.optimizeNodes();
        r = this.else = Array.isArray(n) ? new vu(n) : n;
      }
      if (r)
        return t === !1
          ? r instanceof e
            ? r
            : r.nodes
          : this.nodes.length
            ? this
            : new e(rA(t), r instanceof e ? [r] : r.nodes);
      if (!(t === !1 || !this.nodes.length)) return this;
    }
    optimizeNames(t, r) {
      var n;
      if (
        ((this.else =
          (n = this.else) === null || n === void 0
            ? void 0
            : n.optimizeNames(t, r)),
        !!(super.optimizeNames(t, r) || this.else))
      )
        return (this.condition = bu(this.condition, t, r)), this;
    }
    get names() {
      let t = super.names;
      return zm(t, this.condition), this.else && qa(t, this.else.names), t;
    }
  };
  ja.kind = 'if';
  var Fa = class extends ii {};
  Fa.kind = 'for';
  var i_ = class extends Fa {
      constructor(t) {
        super(), (this.iteration = t);
      }
      render(t) {
        return `for(${this.iteration})` + super.render(t);
      }
      optimizeNames(t, r) {
        if (super.optimizeNames(t, r))
          return (this.iteration = bu(this.iteration, t, r)), this;
      }
      get names() {
        return qa(super.names, this.iteration.names);
      }
    },
    o_ = class extends Fa {
      constructor(t, r, n, i) {
        super(),
          (this.varKind = t),
          (this.name = r),
          (this.from = n),
          (this.to = i);
      }
      render(t) {
        let r = t.es5 ? Qn.varKinds.var : this.varKind,
          { name: n, from: i, to: s } = this;
        return `for(${r} ${n}=${i}; ${n}<${s}; ${n}++)` + super.render(t);
      }
      get names() {
        let t = zm(super.names, this.from);
        return zm(t, this.to);
      }
    },
    Hm = class extends Fa {
      constructor(t, r, n, i) {
        super(),
          (this.loop = t),
          (this.varKind = r),
          (this.name = n),
          (this.iterable = i);
      }
      render(t) {
        return (
          `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` +
          super.render(t)
        );
      }
      optimizeNames(t, r) {
        if (super.optimizeNames(t, r))
          return (this.iterable = bu(this.iterable, t, r)), this;
      }
      get names() {
        return qa(super.names, this.iterable.names);
      }
    },
    fd = class extends ii {
      constructor(t, r, n) {
        super(), (this.name = t), (this.args = r), (this.async = n);
      }
      render(t) {
        return (
          `${this.async ? 'async ' : ''}function ${this.name}(${this.args})` +
          super.render(t)
        );
      }
    };
  fd.kind = 'func';
  var dd = class extends cd {
    render(t) {
      return 'return ' + super.render(t);
    }
  };
  dd.kind = 'return';
  var a_ = class extends ii {
      render(t) {
        let r = 'try' + super.render(t);
        return (
          this.catch && (r += this.catch.render(t)),
          this.finally && (r += this.finally.render(t)),
          r
        );
      }
      optimizeNodes() {
        var t, r;
        return (
          super.optimizeNodes(),
          (t = this.catch) === null || t === void 0 || t.optimizeNodes(),
          (r = this.finally) === null || r === void 0 || r.optimizeNodes(),
          this
        );
      }
      optimizeNames(t, r) {
        var n, i;
        return (
          super.optimizeNames(t, r),
          (n = this.catch) === null || n === void 0 || n.optimizeNames(t, r),
          (i = this.finally) === null || i === void 0 || i.optimizeNames(t, r),
          this
        );
      }
      get names() {
        let t = super.names;
        return (
          this.catch && qa(t, this.catch.names),
          this.finally && qa(t, this.finally.names),
          t
        );
      }
    },
    hd = class extends ii {
      constructor(t) {
        super(), (this.error = t);
      }
      render(t) {
        return `catch(${this.error})` + super.render(t);
      }
    };
  hd.kind = 'catch';
  var pd = class extends ii {
    render(t) {
      return 'finally' + super.render(t);
    }
  };
  pd.kind = 'finally';
  var l_ = class {
    constructor(t, r = {}) {
      (this._values = {}),
        (this._blockStarts = []),
        (this._constants = {}),
        (this.opts = {
          ...r,
          _n: r.lines
            ? `
`
            : '',
        }),
        (this._extScope = t),
        (this._scope = new Qn.Scope({ parent: t })),
        (this._nodes = [new s_()]);
    }
    toString() {
      return this._root.render(this.opts);
    }
    name(t) {
      return this._scope.name(t);
    }
    scopeName(t) {
      return this._extScope.name(t);
    }
    scopeValue(t, r) {
      let n = this._extScope.value(t, r);
      return (
        (this._values[n.prefix] || (this._values[n.prefix] = new Set())).add(n),
        n
      );
    }
    getScopeValue(t, r) {
      return this._extScope.getValue(t, r);
    }
    scopeRefs(t) {
      return this._extScope.scopeRefs(t, this._values);
    }
    scopeCode() {
      return this._extScope.scopeCode(this._values);
    }
    _def(t, r, n, i) {
      let s = this._scope.toName(r);
      return (
        n !== void 0 && i && (this._constants[s.str] = n),
        this._leafNode(new ZS(t, s, n)),
        s
      );
    }
    const(t, r, n) {
      return this._def(Qn.varKinds.const, t, r, n);
    }
    let(t, r, n) {
      return this._def(Qn.varKinds.let, t, r, n);
    }
    var(t, r, n) {
      return this._def(Qn.varKinds.var, t, r, n);
    }
    assign(t, r, n) {
      return this._leafNode(new Mm(t, r, n));
    }
    add(t, r) {
      return this._leafNode(new QS(t, Oe.operators.ADD, r));
    }
    code(t) {
      return (
        typeof t == 'function'
          ? t()
          : t !== He.nil && this._leafNode(new n_(t)),
        this
      );
    }
    object(...t) {
      let r = ['{'];
      for (let [n, i] of t)
        r.length > 1 && r.push(','),
          r.push(n),
          (n !== i || this.opts.es5) && (r.push(':'), (0, He.addCodeArg)(r, i));
      return r.push('}'), new He._Code(r);
    }
    if(t, r, n) {
      if ((this._blockNode(new ja(t)), r && n))
        this.code(r).else().code(n).endIf();
      else if (r) this.code(r).endIf();
      else if (n) throw new Error('CodeGen: "else" body without "then" body');
      return this;
    }
    elseIf(t) {
      return this._elseNode(new ja(t));
    }
    else() {
      return this._elseNode(new vu());
    }
    endIf() {
      return this._endBlockNode(ja, vu);
    }
    _for(t, r) {
      return this._blockNode(t), r && this.code(r).endFor(), this;
    }
    for(t, r) {
      return this._for(new i_(t), r);
    }
    forRange(
      t,
      r,
      n,
      i,
      s = this.opts.es5 ? Qn.varKinds.var : Qn.varKinds.let,
    ) {
      let o = this._scope.toName(t);
      return this._for(new o_(s, o, r, n), () => i(o));
    }
    forOf(t, r, n, i = Qn.varKinds.const) {
      let s = this._scope.toName(t);
      if (this.opts.es5) {
        let o = r instanceof He.Name ? r : this.var('_arr', r);
        return this.forRange('_i', 0, (0, He._)`${o}.length`, (a) => {
          this.var(s, (0, He._)`${o}[${a}]`), n(s);
        });
      }
      return this._for(new Hm('of', i, s, r), () => n(s));
    }
    forIn(t, r, n, i = this.opts.es5 ? Qn.varKinds.var : Qn.varKinds.const) {
      if (this.opts.ownProperties)
        return this.forOf(t, (0, He._)`Object.keys(${r})`, n);
      let s = this._scope.toName(t);
      return this._for(new Hm('in', i, s, r), () => n(s));
    }
    endFor() {
      return this._endBlockNode(Fa);
    }
    label(t) {
      return this._leafNode(new e_(t));
    }
    break(t) {
      return this._leafNode(new t_(t));
    }
    return(t) {
      let r = new dd();
      if ((this._blockNode(r), this.code(t), r.nodes.length !== 1))
        throw new Error('CodeGen: "return" should have one node');
      return this._endBlockNode(dd);
    }
    try(t, r, n) {
      if (!r && !n)
        throw new Error('CodeGen: "try" without "catch" and "finally"');
      let i = new a_();
      if ((this._blockNode(i), this.code(t), r)) {
        let s = this.name('e');
        (this._currNode = i.catch = new hd(s)), r(s);
      }
      return (
        n && ((this._currNode = i.finally = new pd()), this.code(n)),
        this._endBlockNode(hd, pd)
      );
    }
    throw(t) {
      return this._leafNode(new r_(t));
    }
    block(t, r) {
      return (
        this._blockStarts.push(this._nodes.length),
        t && this.code(t).endBlock(r),
        this
      );
    }
    endBlock(t) {
      let r = this._blockStarts.pop();
      if (r === void 0) throw new Error('CodeGen: not in self-balancing block');
      let n = this._nodes.length - r;
      if (n < 0 || (t !== void 0 && n !== t))
        throw new Error(
          `CodeGen: wrong number of nodes: ${n} vs ${t} expected`,
        );
      return (this._nodes.length = r), this;
    }
    func(t, r = He.nil, n, i) {
      return (
        this._blockNode(new fd(t, r, n)), i && this.code(i).endFunc(), this
      );
    }
    endFunc() {
      return this._endBlockNode(fd);
    }
    optimize(t = 1) {
      for (; t-- > 0; )
        this._root.optimizeNodes(),
          this._root.optimizeNames(this._root.names, this._constants);
    }
    _leafNode(t) {
      return this._currNode.nodes.push(t), this;
    }
    _blockNode(t) {
      this._currNode.nodes.push(t), this._nodes.push(t);
    }
    _endBlockNode(t, r) {
      let n = this._currNode;
      if (n instanceof t || (r && n instanceof r))
        return this._nodes.pop(), this;
      throw new Error(
        `CodeGen: not in block "${r ? `${t.kind}/${r.kind}` : t.kind}"`,
      );
    }
    _elseNode(t) {
      let r = this._currNode;
      if (!(r instanceof ja)) throw new Error('CodeGen: "else" without "if"');
      return (this._currNode = r.else = t), this;
    }
    get _root() {
      return this._nodes[0];
    }
    get _currNode() {
      let t = this._nodes;
      return t[t.length - 1];
    }
    set _currNode(t) {
      let r = this._nodes;
      r[r.length - 1] = t;
    }
  };
  Oe.CodeGen = l_;
  function qa(e, t) {
    for (let r in t) e[r] = (e[r] || 0) + (t[r] || 0);
    return e;
  }
  function zm(e, t) {
    return t instanceof He._CodeOrName ? qa(e, t.names) : e;
  }
  function bu(e, t, r) {
    if (e instanceof He.Name) return n(e);
    if (!i(e)) return e;
    return new He._Code(
      e._items.reduce(
        (s, o) => (
          o instanceof He.Name && (o = n(o)),
          o instanceof He._Code ? s.push(...o._items) : s.push(o),
          s
        ),
        [],
      ),
    );
    function n(s) {
      let o = r[s.str];
      return o === void 0 || t[s.str] !== 1 ? s : (delete t[s.str], o);
    }
    function i(s) {
      return (
        s instanceof He._Code &&
        s._items.some(
          (o) => o instanceof He.Name && t[o.str] === 1 && r[o.str] !== void 0,
        )
      );
    }
  }
  function xY(e, t) {
    for (let r in t) e[r] = (e[r] || 0) - (t[r] || 0);
  }
  function rA(e) {
    return typeof e == 'boolean' || typeof e == 'number' || e === null
      ? !e
      : (0, He._)`!${u_(e)}`;
  }
  Oe.not = rA;
  var CY = nA(Oe.operators.AND);
  function OY(...e) {
    return e.reduce(CY);
  }
  Oe.and = OY;
  var IY = nA(Oe.operators.OR);
  function AY(...e) {
    return e.reduce(IY);
  }
  Oe.or = AY;
  function nA(e) {
    return (t, r) =>
      t === He.nil ? r : r === He.nil ? t : (0, He._)`${u_(t)} ${e} ${u_(r)}`;
  }
  function u_(e) {
    return e instanceof He.Name ? e : (0, He._)`(${e})`;
  }
});
var xe = $((Le) => {
  'use strict';
  Object.defineProperty(Le, '__esModule', { value: !0 });
  Le.checkStrictMode =
    Le.getErrorPath =
    Le.Type =
    Le.useFunc =
    Le.setEvaluated =
    Le.evaluatedPropsToName =
    Le.mergeEvaluated =
    Le.eachItem =
    Le.unescapeJsonPointer =
    Le.escapeJsonPointer =
    Le.escapeFragment =
    Le.unescapeFragment =
    Le.schemaRefOrVal =
    Le.schemaHasRulesButRef =
    Le.schemaHasRules =
    Le.checkUnknownRules =
    Le.alwaysValidSchema =
    Le.toHash =
      void 0;
  var ut = be(),
    $Y = gu();
  function NY(e) {
    let t = {};
    for (let r of e) t[r] = !0;
    return t;
  }
  Le.toHash = NY;
  function LY(e, t) {
    return typeof t == 'boolean'
      ? t
      : Object.keys(t).length === 0
        ? !0
        : (oA(e, t), !aA(t, e.self.RULES.all));
  }
  Le.alwaysValidSchema = LY;
  function oA(e, t = e.schema) {
    let { opts: r, self: n } = e;
    if (!r.strictSchema || typeof t == 'boolean') return;
    let i = n.RULES.keywords;
    for (let s in t) i[s] || cA(e, `unknown keyword: "${s}"`);
  }
  Le.checkUnknownRules = oA;
  function aA(e, t) {
    if (typeof e == 'boolean') return !e;
    for (let r in e) if (t[r]) return !0;
    return !1;
  }
  Le.schemaHasRules = aA;
  function DY(e, t) {
    if (typeof e == 'boolean') return !e;
    for (let r in e) if (r !== '$ref' && t.all[r]) return !0;
    return !1;
  }
  Le.schemaHasRulesButRef = DY;
  function jY({ topSchemaRef: e, schemaPath: t }, r, n, i) {
    if (!i) {
      if (typeof r == 'number' || typeof r == 'boolean') return r;
      if (typeof r == 'string') return (0, ut._)`${r}`;
    }
    return (0, ut._)`${e}${t}${(0, ut.getProperty)(n)}`;
  }
  Le.schemaRefOrVal = jY;
  function FY(e) {
    return lA(decodeURIComponent(e));
  }
  Le.unescapeFragment = FY;
  function qY(e) {
    return encodeURIComponent(f_(e));
  }
  Le.escapeFragment = qY;
  function f_(e) {
    return typeof e == 'number'
      ? `${e}`
      : e.replace(/~/g, '~0').replace(/\//g, '~1');
  }
  Le.escapeJsonPointer = f_;
  function lA(e) {
    return e.replace(/~1/g, '/').replace(/~0/g, '~');
  }
  Le.unescapeJsonPointer = lA;
  function MY(e, t) {
    if (Array.isArray(e)) for (let r of e) t(r);
    else t(e);
  }
  Le.eachItem = MY;
  function sA({
    mergeNames: e,
    mergeToName: t,
    mergeValues: r,
    resultToName: n,
  }) {
    return (i, s, o, a) => {
      let u =
        o === void 0
          ? s
          : o instanceof ut.Name
            ? (s instanceof ut.Name ? e(i, s, o) : t(i, s, o), o)
            : s instanceof ut.Name
              ? (t(i, o, s), s)
              : r(s, o);
      return a === ut.Name && !(u instanceof ut.Name) ? n(i, u) : u;
    };
  }
  Le.mergeEvaluated = {
    props: sA({
      mergeNames: (e, t, r) =>
        e.if((0, ut._)`${r} !== true && ${t} !== undefined`, () => {
          e.if(
            (0, ut._)`${t} === true`,
            () => e.assign(r, !0),
            () =>
              e
                .assign(r, (0, ut._)`${r} || {}`)
                .code((0, ut._)`Object.assign(${r}, ${t})`),
          );
        }),
      mergeToName: (e, t, r) =>
        e.if((0, ut._)`${r} !== true`, () => {
          t === !0
            ? e.assign(r, !0)
            : (e.assign(r, (0, ut._)`${r} || {}`), d_(e, r, t));
        }),
      mergeValues: (e, t) => (e === !0 ? !0 : { ...e, ...t }),
      resultToName: uA,
    }),
    items: sA({
      mergeNames: (e, t, r) =>
        e.if((0, ut._)`${r} !== true && ${t} !== undefined`, () =>
          e.assign(
            r,
            (0, ut._)`${t} === true ? true : ${r} > ${t} ? ${r} : ${t}`,
          ),
        ),
      mergeToName: (e, t, r) =>
        e.if((0, ut._)`${r} !== true`, () =>
          e.assign(r, t === !0 ? !0 : (0, ut._)`${r} > ${t} ? ${r} : ${t}`),
        ),
      mergeValues: (e, t) => (e === !0 ? !0 : Math.max(e, t)),
      resultToName: (e, t) => e.var('items', t),
    }),
  };
  function uA(e, t) {
    if (t === !0) return e.var('props', !0);
    let r = e.var('props', (0, ut._)`{}`);
    return t !== void 0 && d_(e, r, t), r;
  }
  Le.evaluatedPropsToName = uA;
  function d_(e, t, r) {
    Object.keys(r).forEach((n) =>
      e.assign((0, ut._)`${t}${(0, ut.getProperty)(n)}`, !0),
    );
  }
  Le.setEvaluated = d_;
  var iA = {};
  function HY(e, t) {
    return e.scopeValue('func', {
      ref: t,
      code: iA[t.code] || (iA[t.code] = new $Y._Code(t.code)),
    });
  }
  Le.useFunc = HY;
  var c_;
  (function (e) {
    (e[(e.Num = 0)] = 'Num'), (e[(e.Str = 1)] = 'Str');
  })(c_ || (Le.Type = c_ = {}));
  function zY(e, t, r) {
    if (e instanceof ut.Name) {
      let n = t === c_.Num;
      return r
        ? n
          ? (0, ut._)`"[" + ${e} + "]"`
          : (0, ut._)`"['" + ${e} + "']"`
        : n
          ? (0, ut._)`"/" + ${e}`
          : (0, ut._)`"/" + ${e}.replace(/~/g, "~0").replace(/\\//g, "~1")`;
    }
    return r ? (0, ut.getProperty)(e).toString() : '/' + f_(e);
  }
  Le.getErrorPath = zY;
  function cA(e, t, r = e.opts.strictSchema) {
    if (r) {
      if (((t = `strict mode: ${t}`), r === !0)) throw new Error(t);
      e.self.logger.warn(t);
    }
  }
  Le.checkStrictMode = cA;
});
var Cn = $((h_) => {
  'use strict';
  Object.defineProperty(h_, '__esModule', { value: !0 });
  var wr = be(),
    UY = {
      data: new wr.Name('data'),
      valCxt: new wr.Name('valCxt'),
      instancePath: new wr.Name('instancePath'),
      parentData: new wr.Name('parentData'),
      parentDataProperty: new wr.Name('parentDataProperty'),
      rootData: new wr.Name('rootData'),
      dynamicAnchors: new wr.Name('dynamicAnchors'),
      vErrors: new wr.Name('vErrors'),
      errors: new wr.Name('errors'),
      this: new wr.Name('this'),
      self: new wr.Name('self'),
      scope: new wr.Name('scope'),
      json: new wr.Name('json'),
      jsonPos: new wr.Name('jsonPos'),
      jsonLen: new wr.Name('jsonLen'),
      jsonPart: new wr.Name('jsonPart'),
    };
  h_.default = UY;
});
var md = $((Er) => {
  'use strict';
  Object.defineProperty(Er, '__esModule', { value: !0 });
  Er.extendErrors =
    Er.resetErrorsCount =
    Er.reportExtraError =
    Er.reportError =
    Er.keyword$DataError =
    Er.keywordError =
      void 0;
  var ze = be(),
    Vm = xe(),
    Dr = Cn();
  Er.keywordError = {
    message: ({ keyword: e }) =>
      (0, ze.str)`must pass "${e}" keyword validation`,
  };
  Er.keyword$DataError = {
    message: ({ keyword: e, schemaType: t }) =>
      t
        ? (0, ze.str)`"${e}" keyword must be ${t} ($data)`
        : (0, ze.str)`"${e}" keyword is invalid ($data)`,
  };
  function VY(e, t = Er.keywordError, r, n) {
    let { it: i } = e,
      { gen: s, compositeRule: o, allErrors: a } = i,
      u = hA(e, t, r);
    (n ?? (o || a)) ? fA(s, u) : dA(i, (0, ze._)`[${u}]`);
  }
  Er.reportError = VY;
  function BY(e, t = Er.keywordError, r) {
    let { it: n } = e,
      { gen: i, compositeRule: s, allErrors: o } = n,
      a = hA(e, t, r);
    fA(i, a), s || o || dA(n, Dr.default.vErrors);
  }
  Er.reportExtraError = BY;
  function WY(e, t) {
    e.assign(Dr.default.errors, t),
      e.if((0, ze._)`${Dr.default.vErrors} !== null`, () =>
        e.if(
          t,
          () => e.assign((0, ze._)`${Dr.default.vErrors}.length`, t),
          () => e.assign(Dr.default.vErrors, null),
        ),
      );
  }
  Er.resetErrorsCount = WY;
  function GY({
    gen: e,
    keyword: t,
    schemaValue: r,
    data: n,
    errsCount: i,
    it: s,
  }) {
    if (i === void 0) throw new Error('ajv implementation error');
    let o = e.name('err');
    e.forRange('i', i, Dr.default.errors, (a) => {
      e.const(o, (0, ze._)`${Dr.default.vErrors}[${a}]`),
        e.if((0, ze._)`${o}.instancePath === undefined`, () =>
          e.assign(
            (0, ze._)`${o}.instancePath`,
            (0, ze.strConcat)(Dr.default.instancePath, s.errorPath),
          ),
        ),
        e.assign(
          (0, ze._)`${o}.schemaPath`,
          (0, ze.str)`${s.errSchemaPath}/${t}`,
        ),
        s.opts.verbose &&
          (e.assign((0, ze._)`${o}.schema`, r),
          e.assign((0, ze._)`${o}.data`, n));
    });
  }
  Er.extendErrors = GY;
  function fA(e, t) {
    let r = e.const('err', t);
    e.if(
      (0, ze._)`${Dr.default.vErrors} === null`,
      () => e.assign(Dr.default.vErrors, (0, ze._)`[${r}]`),
      (0, ze._)`${Dr.default.vErrors}.push(${r})`,
    ),
      e.code((0, ze._)`${Dr.default.errors}++`);
  }
  function dA(e, t) {
    let { gen: r, validateName: n, schemaEnv: i } = e;
    i.$async
      ? r.throw((0, ze._)`new ${e.ValidationError}(${t})`)
      : (r.assign((0, ze._)`${n}.errors`, t), r.return(!1));
  }
  var Ma = {
    keyword: new ze.Name('keyword'),
    schemaPath: new ze.Name('schemaPath'),
    params: new ze.Name('params'),
    propertyName: new ze.Name('propertyName'),
    message: new ze.Name('message'),
    schema: new ze.Name('schema'),
    parentSchema: new ze.Name('parentSchema'),
  };
  function hA(e, t, r) {
    let { createErrors: n } = e.it;
    return n === !1 ? (0, ze._)`{}` : YY(e, t, r);
  }
  function YY(e, t, r = {}) {
    let { gen: n, it: i } = e,
      s = [JY(i, r), KY(e, r)];
    return XY(e, t, s), n.object(...s);
  }
  function JY({ errorPath: e }, { instancePath: t }) {
    let r = t ? (0, ze.str)`${e}${(0, Vm.getErrorPath)(t, Vm.Type.Str)}` : e;
    return [
      Dr.default.instancePath,
      (0, ze.strConcat)(Dr.default.instancePath, r),
    ];
  }
  function KY(
    { keyword: e, it: { errSchemaPath: t } },
    { schemaPath: r, parentSchema: n },
  ) {
    let i = n ? t : (0, ze.str)`${t}/${e}`;
    return (
      r && (i = (0, ze.str)`${i}${(0, Vm.getErrorPath)(r, Vm.Type.Str)}`),
      [Ma.schemaPath, i]
    );
  }
  function XY(e, { params: t, message: r }, n) {
    let { keyword: i, data: s, schemaValue: o, it: a } = e,
      { opts: u, propertyName: c, topSchemaRef: d, schemaPath: m } = a;
    n.push(
      [Ma.keyword, i],
      [Ma.params, typeof t == 'function' ? t(e) : t || (0, ze._)`{}`],
    ),
      u.messages && n.push([Ma.message, typeof r == 'function' ? r(e) : r]),
      u.verbose &&
        n.push(
          [Ma.schema, o],
          [Ma.parentSchema, (0, ze._)`${d}${m}`],
          [Dr.default.data, s],
        ),
      c && n.push([Ma.propertyName, c]);
  }
});
var mA = $((Su) => {
  'use strict';
  Object.defineProperty(Su, '__esModule', { value: !0 });
  Su.boolOrEmptySchema = Su.topBoolOrEmptySchema = void 0;
  var ZY = md(),
    QY = be(),
    eJ = Cn(),
    tJ = { message: 'boolean schema is false' };
  function rJ(e) {
    let { gen: t, schema: r, validateName: n } = e;
    r === !1
      ? pA(e, !1)
      : typeof r == 'object' && r.$async === !0
        ? t.return(eJ.default.data)
        : (t.assign((0, QY._)`${n}.errors`, null), t.return(!0));
  }
  Su.topBoolOrEmptySchema = rJ;
  function nJ(e, t) {
    let { gen: r, schema: n } = e;
    n === !1 ? (r.var(t, !1), pA(e)) : r.var(t, !0);
  }
  Su.boolOrEmptySchema = nJ;
  function pA(e, t) {
    let { gen: r, data: n } = e,
      i = {
        gen: r,
        keyword: 'false schema',
        data: n,
        schema: !1,
        schemaCode: !1,
        schemaValue: !1,
        params: {},
        it: e,
      };
    (0, ZY.reportError)(i, tJ, void 0, t);
  }
});
var p_ = $((_u) => {
  'use strict';
  Object.defineProperty(_u, '__esModule', { value: !0 });
  _u.getRules = _u.isJSONType = void 0;
  var sJ = [
      'string',
      'number',
      'integer',
      'boolean',
      'null',
      'object',
      'array',
    ],
    iJ = new Set(sJ);
  function oJ(e) {
    return typeof e == 'string' && iJ.has(e);
  }
  _u.isJSONType = oJ;
  function aJ() {
    let e = {
      number: { type: 'number', rules: [] },
      string: { type: 'string', rules: [] },
      array: { type: 'array', rules: [] },
      object: { type: 'object', rules: [] },
    };
    return {
      types: { ...e, integer: !0, boolean: !0, null: !0 },
      rules: [{ rules: [] }, e.number, e.string, e.array, e.object],
      post: { rules: [] },
      all: {},
      keywords: {},
    };
  }
  _u.getRules = aJ;
});
var m_ = $((go) => {
  'use strict';
  Object.defineProperty(go, '__esModule', { value: !0 });
  go.shouldUseRule = go.shouldUseGroup = go.schemaHasRulesForType = void 0;
  function lJ({ schema: e, self: t }, r) {
    let n = t.RULES.types[r];
    return n && n !== !0 && yA(e, n);
  }
  go.schemaHasRulesForType = lJ;
  function yA(e, t) {
    return t.rules.some((r) => gA(e, r));
  }
  go.shouldUseGroup = yA;
  function gA(e, t) {
    var r;
    return (
      e[t.keyword] !== void 0 ||
      ((r = t.definition.implements) === null || r === void 0
        ? void 0
        : r.some((n) => e[n] !== void 0))
    );
  }
  go.shouldUseRule = gA;
});
var yd = $((Rr) => {
  'use strict';
  Object.defineProperty(Rr, '__esModule', { value: !0 });
  Rr.reportTypeError =
    Rr.checkDataTypes =
    Rr.checkDataType =
    Rr.coerceAndCheckDataType =
    Rr.getJSONTypes =
    Rr.getSchemaTypes =
    Rr.DataType =
      void 0;
  var uJ = p_(),
    cJ = m_(),
    fJ = md(),
    ke = be(),
    vA = xe(),
    wu;
  (function (e) {
    (e[(e.Correct = 0)] = 'Correct'), (e[(e.Wrong = 1)] = 'Wrong');
  })(wu || (Rr.DataType = wu = {}));
  function dJ(e) {
    let t = bA(e.type);
    if (t.includes('null')) {
      if (e.nullable === !1)
        throw new Error('type: null contradicts nullable: false');
    } else {
      if (!t.length && e.nullable !== void 0)
        throw new Error('"nullable" cannot be used without "type"');
      e.nullable === !0 && t.push('null');
    }
    return t;
  }
  Rr.getSchemaTypes = dJ;
  function bA(e) {
    let t = Array.isArray(e) ? e : e ? [e] : [];
    if (t.every(uJ.isJSONType)) return t;
    throw new Error('type must be JSONType or JSONType[]: ' + t.join(','));
  }
  Rr.getJSONTypes = bA;
  function hJ(e, t) {
    let { gen: r, data: n, opts: i } = e,
      s = pJ(t, i.coerceTypes),
      o =
        t.length > 0 &&
        !(
          s.length === 0 &&
          t.length === 1 &&
          (0, cJ.schemaHasRulesForType)(e, t[0])
        );
    if (o) {
      let a = g_(t, n, i.strictNumbers, wu.Wrong);
      r.if(a, () => {
        s.length ? mJ(e, t, s) : v_(e);
      });
    }
    return o;
  }
  Rr.coerceAndCheckDataType = hJ;
  var SA = new Set(['string', 'number', 'integer', 'boolean', 'null']);
  function pJ(e, t) {
    return t
      ? e.filter((r) => SA.has(r) || (t === 'array' && r === 'array'))
      : [];
  }
  function mJ(e, t, r) {
    let { gen: n, data: i, opts: s } = e,
      o = n.let('dataType', (0, ke._)`typeof ${i}`),
      a = n.let('coerced', (0, ke._)`undefined`);
    s.coerceTypes === 'array' &&
      n.if(
        (0, ke._)`${o} == 'object' && Array.isArray(${i}) && ${i}.length == 1`,
        () =>
          n
            .assign(i, (0, ke._)`${i}[0]`)
            .assign(o, (0, ke._)`typeof ${i}`)
            .if(g_(t, i, s.strictNumbers), () => n.assign(a, i)),
      ),
      n.if((0, ke._)`${a} !== undefined`);
    for (let c of r)
      (SA.has(c) || (c === 'array' && s.coerceTypes === 'array')) && u(c);
    n.else(),
      v_(e),
      n.endIf(),
      n.if((0, ke._)`${a} !== undefined`, () => {
        n.assign(i, a), yJ(e, a);
      });
    function u(c) {
      switch (c) {
        case 'string':
          n.elseIf((0, ke._)`${o} == "number" || ${o} == "boolean"`)
            .assign(a, (0, ke._)`"" + ${i}`)
            .elseIf((0, ke._)`${i} === null`)
            .assign(a, (0, ke._)`""`);
          return;
        case 'number':
          n.elseIf(
            (0, ke._)`${o} == "boolean" || ${i} === null
              || (${o} == "string" && ${i} && ${i} == +${i})`,
          ).assign(a, (0, ke._)`+${i}`);
          return;
        case 'integer':
          n.elseIf(
            (0, ke._)`${o} === "boolean" || ${i} === null
              || (${o} === "string" && ${i} && ${i} == +${i} && !(${i} % 1))`,
          ).assign(a, (0, ke._)`+${i}`);
          return;
        case 'boolean':
          n.elseIf((0, ke._)`${i} === "false" || ${i} === 0 || ${i} === null`)
            .assign(a, !1)
            .elseIf((0, ke._)`${i} === "true" || ${i} === 1`)
            .assign(a, !0);
          return;
        case 'null':
          n.elseIf((0, ke._)`${i} === "" || ${i} === 0 || ${i} === false`),
            n.assign(a, null);
          return;
        case 'array':
          n.elseIf(
            (0, ke._)`${o} === "string" || ${o} === "number"
              || ${o} === "boolean" || ${i} === null`,
          ).assign(a, (0, ke._)`[${i}]`);
      }
    }
  }
  function yJ({ gen: e, parentData: t, parentDataProperty: r }, n) {
    e.if((0, ke._)`${t} !== undefined`, () =>
      e.assign((0, ke._)`${t}[${r}]`, n),
    );
  }
  function y_(e, t, r, n = wu.Correct) {
    let i = n === wu.Correct ? ke.operators.EQ : ke.operators.NEQ,
      s;
    switch (e) {
      case 'null':
        return (0, ke._)`${t} ${i} null`;
      case 'array':
        s = (0, ke._)`Array.isArray(${t})`;
        break;
      case 'object':
        s = (0, ke._)`${t} && typeof ${t} == "object" && !Array.isArray(${t})`;
        break;
      case 'integer':
        s = o((0, ke._)`!(${t} % 1) && !isNaN(${t})`);
        break;
      case 'number':
        s = o();
        break;
      default:
        return (0, ke._)`typeof ${t} ${i} ${e}`;
    }
    return n === wu.Correct ? s : (0, ke.not)(s);
    function o(a = ke.nil) {
      return (0, ke.and)(
        (0, ke._)`typeof ${t} == "number"`,
        a,
        r ? (0, ke._)`isFinite(${t})` : ke.nil,
      );
    }
  }
  Rr.checkDataType = y_;
  function g_(e, t, r, n) {
    if (e.length === 1) return y_(e[0], t, r, n);
    let i,
      s = (0, vA.toHash)(e);
    if (s.array && s.object) {
      let o = (0, ke._)`typeof ${t} != "object"`;
      (i = s.null ? o : (0, ke._)`!${t} || ${o}`),
        delete s.null,
        delete s.array,
        delete s.object;
    } else i = ke.nil;
    s.number && delete s.integer;
    for (let o in s) i = (0, ke.and)(i, y_(o, t, r, n));
    return i;
  }
  Rr.checkDataTypes = g_;
  var gJ = {
    message: ({ schema: e }) => `must be ${e}`,
    params: ({ schema: e, schemaValue: t }) =>
      typeof e == 'string' ? (0, ke._)`{type: ${e}}` : (0, ke._)`{type: ${t}}`,
  };
  function v_(e) {
    let t = vJ(e);
    (0, fJ.reportError)(t, gJ);
  }
  Rr.reportTypeError = v_;
  function vJ(e) {
    let { gen: t, data: r, schema: n } = e,
      i = (0, vA.schemaRefOrVal)(e, n, 'type');
    return {
      gen: t,
      keyword: 'type',
      data: r,
      schema: n.type,
      schemaCode: i,
      schemaValue: i,
      parentSchema: n,
      params: {},
      it: e,
    };
  }
});
var wA = $((Bm) => {
  'use strict';
  Object.defineProperty(Bm, '__esModule', { value: !0 });
  Bm.assignDefaults = void 0;
  var Eu = be(),
    bJ = xe();
  function SJ(e, t) {
    let { properties: r, items: n } = e.schema;
    if (t === 'object' && r) for (let i in r) _A(e, i, r[i].default);
    else
      t === 'array' &&
        Array.isArray(n) &&
        n.forEach((i, s) => _A(e, s, i.default));
  }
  Bm.assignDefaults = SJ;
  function _A(e, t, r) {
    let { gen: n, compositeRule: i, data: s, opts: o } = e;
    if (r === void 0) return;
    let a = (0, Eu._)`${s}${(0, Eu.getProperty)(t)}`;
    if (i) {
      (0, bJ.checkStrictMode)(e, `default is ignored for: ${a}`);
      return;
    }
    let u = (0, Eu._)`${a} === undefined`;
    o.useDefaults === 'empty' &&
      (u = (0, Eu._)`${u} || ${a} === null || ${a} === ""`),
      n.if(u, (0, Eu._)`${a} = ${(0, Eu.stringify)(r)}`);
  }
});
var lr = $((it) => {
  'use strict';
  Object.defineProperty(it, '__esModule', { value: !0 });
  it.validateUnion =
    it.validateArray =
    it.usePattern =
    it.callValidateCode =
    it.schemaProperties =
    it.allSchemaProperties =
    it.noPropertyInData =
    it.propertyInData =
    it.isOwnProperty =
    it.hasPropFunc =
    it.reportMissingProp =
    it.checkMissingProp =
    it.checkReportMissingProp =
      void 0;
  var yt = be(),
    b_ = xe(),
    vo = Cn(),
    _J = xe();
  function wJ(e, t) {
    let { gen: r, data: n, it: i } = e;
    r.if(__(r, n, t, i.opts.ownProperties), () => {
      e.setParams({ missingProperty: (0, yt._)`${t}` }, !0), e.error();
    });
  }
  it.checkReportMissingProp = wJ;
  function EJ({ gen: e, data: t, it: { opts: r } }, n, i) {
    return (0, yt.or)(
      ...n.map((s) =>
        (0, yt.and)(__(e, t, s, r.ownProperties), (0, yt._)`${i} = ${s}`),
      ),
    );
  }
  it.checkMissingProp = EJ;
  function RJ(e, t) {
    e.setParams({ missingProperty: t }, !0), e.error();
  }
  it.reportMissingProp = RJ;
  function EA(e) {
    return e.scopeValue('func', {
      ref: Object.prototype.hasOwnProperty,
      code: (0, yt._)`Object.prototype.hasOwnProperty`,
    });
  }
  it.hasPropFunc = EA;
  function S_(e, t, r) {
    return (0, yt._)`${EA(e)}.call(${t}, ${r})`;
  }
  it.isOwnProperty = S_;
  function TJ(e, t, r, n) {
    let i = (0, yt._)`${t}${(0, yt.getProperty)(r)} !== undefined`;
    return n ? (0, yt._)`${i} && ${S_(e, t, r)}` : i;
  }
  it.propertyInData = TJ;
  function __(e, t, r, n) {
    let i = (0, yt._)`${t}${(0, yt.getProperty)(r)} === undefined`;
    return n ? (0, yt.or)(i, (0, yt.not)(S_(e, t, r))) : i;
  }
  it.noPropertyInData = __;
  function RA(e) {
    return e ? Object.keys(e).filter((t) => t !== '__proto__') : [];
  }
  it.allSchemaProperties = RA;
  function PJ(e, t) {
    return RA(t).filter((r) => !(0, b_.alwaysValidSchema)(e, t[r]));
  }
  it.schemaProperties = PJ;
  function kJ(
    {
      schemaCode: e,
      data: t,
      it: { gen: r, topSchemaRef: n, schemaPath: i, errorPath: s },
      it: o,
    },
    a,
    u,
    c,
  ) {
    let d = c ? (0, yt._)`${e}, ${t}, ${n}${i}` : t,
      m = [
        [
          vo.default.instancePath,
          (0, yt.strConcat)(vo.default.instancePath, s),
        ],
        [vo.default.parentData, o.parentData],
        [vo.default.parentDataProperty, o.parentDataProperty],
        [vo.default.rootData, vo.default.rootData],
      ];
    o.opts.dynamicRef &&
      m.push([vo.default.dynamicAnchors, vo.default.dynamicAnchors]);
    let g = (0, yt._)`${d}, ${r.object(...m)}`;
    return u !== yt.nil
      ? (0, yt._)`${a}.call(${u}, ${g})`
      : (0, yt._)`${a}(${g})`;
  }
  it.callValidateCode = kJ;
  var xJ = (0, yt._)`new RegExp`;
  function CJ({ gen: e, it: { opts: t } }, r) {
    let n = t.unicodeRegExp ? 'u' : '',
      { regExp: i } = t.code,
      s = i(r, n);
    return e.scopeValue('pattern', {
      key: s.toString(),
      ref: s,
      code: (0,
      yt._)`${i.code === 'new RegExp' ? xJ : (0, _J.useFunc)(e, i)}(${r}, ${n})`,
    });
  }
  it.usePattern = CJ;
  function OJ(e) {
    let { gen: t, data: r, keyword: n, it: i } = e,
      s = t.name('valid');
    if (i.allErrors) {
      let a = t.let('valid', !0);
      return o(() => t.assign(a, !1)), a;
    }
    return t.var(s, !0), o(() => t.break()), s;
    function o(a) {
      let u = t.const('len', (0, yt._)`${r}.length`);
      t.forRange('i', 0, u, (c) => {
        e.subschema({ keyword: n, dataProp: c, dataPropType: b_.Type.Num }, s),
          t.if((0, yt.not)(s), a);
      });
    }
  }
  it.validateArray = OJ;
  function IJ(e) {
    let { gen: t, schema: r, keyword: n, it: i } = e;
    if (!Array.isArray(r)) throw new Error('ajv implementation error');
    if (r.some((u) => (0, b_.alwaysValidSchema)(i, u)) && !i.opts.unevaluated)
      return;
    let o = t.let('valid', !1),
      a = t.name('_valid');
    t.block(() =>
      r.forEach((u, c) => {
        let d = e.subschema(
          { keyword: n, schemaProp: c, compositeRule: !0 },
          a,
        );
        t.assign(o, (0, yt._)`${o} || ${a}`),
          e.mergeValidEvaluated(d, a) || t.if((0, yt.not)(o));
      }),
    ),
      e.result(
        o,
        () => e.reset(),
        () => e.error(!0),
      );
  }
  it.validateUnion = IJ;
});
var kA = $((_s) => {
  'use strict';
  Object.defineProperty(_s, '__esModule', { value: !0 });
  _s.validateKeywordUsage =
    _s.validSchemaType =
    _s.funcKeywordCode =
    _s.macroKeywordCode =
      void 0;
  var jr = be(),
    Ha = Cn(),
    AJ = lr(),
    $J = md();
  function NJ(e, t) {
    let { gen: r, keyword: n, schema: i, parentSchema: s, it: o } = e,
      a = t.macro.call(o.self, i, s, o),
      u = PA(r, n, a);
    o.opts.validateSchema !== !1 && o.self.validateSchema(a, !0);
    let c = r.name('valid');
    e.subschema(
      {
        schema: a,
        schemaPath: jr.nil,
        errSchemaPath: `${o.errSchemaPath}/${n}`,
        topSchemaRef: u,
        compositeRule: !0,
      },
      c,
    ),
      e.pass(c, () => e.error(!0));
  }
  _s.macroKeywordCode = NJ;
  function LJ(e, t) {
    var r;
    let { gen: n, keyword: i, schema: s, parentSchema: o, $data: a, it: u } = e;
    jJ(u, t);
    let c = !a && t.compile ? t.compile.call(u.self, s, o, u) : t.validate,
      d = PA(n, i, c),
      m = n.let('valid');
    e.block$data(m, g), e.ok((r = t.valid) !== null && r !== void 0 ? r : m);
    function g() {
      if (t.errors === !1) w(), t.modifying && TA(e), T(() => e.error());
      else {
        let C = t.async ? v() : S();
        t.modifying && TA(e), T(() => DJ(e, C));
      }
    }
    function v() {
      let C = n.let('ruleErrs', null);
      return (
        n.try(
          () => w((0, jr._)`await `),
          (I) =>
            n.assign(m, !1).if(
              (0, jr._)`${I} instanceof ${u.ValidationError}`,
              () => n.assign(C, (0, jr._)`${I}.errors`),
              () => n.throw(I),
            ),
        ),
        C
      );
    }
    function S() {
      let C = (0, jr._)`${d}.errors`;
      return n.assign(C, null), w(jr.nil), C;
    }
    function w(C = t.async ? (0, jr._)`await ` : jr.nil) {
      let I = u.opts.passContext ? Ha.default.this : Ha.default.self,
        x = !(('compile' in t && !a) || t.schema === !1);
      n.assign(
        m,
        (0, jr._)`${C}${(0, AJ.callValidateCode)(e, d, I, x)}`,
        t.modifying,
      );
    }
    function T(C) {
      var I;
      n.if((0, jr.not)((I = t.valid) !== null && I !== void 0 ? I : m), C);
    }
  }
  _s.funcKeywordCode = LJ;
  function TA(e) {
    let { gen: t, data: r, it: n } = e;
    t.if(n.parentData, () =>
      t.assign(r, (0, jr._)`${n.parentData}[${n.parentDataProperty}]`),
    );
  }
  function DJ(e, t) {
    let { gen: r } = e;
    r.if(
      (0, jr._)`Array.isArray(${t})`,
      () => {
        r
          .assign(
            Ha.default.vErrors,
            (0,
            jr._)`${Ha.default.vErrors} === null ? ${t} : ${Ha.default.vErrors}.concat(${t})`,
          )
          .assign(Ha.default.errors, (0, jr._)`${Ha.default.vErrors}.length`),
          (0, $J.extendErrors)(e);
      },
      () => e.error(),
    );
  }
  function jJ({ schemaEnv: e }, t) {
    if (t.async && !e.$async) throw new Error('async keyword in sync schema');
  }
  function PA(e, t, r) {
    if (r === void 0) throw new Error(`keyword "${t}" failed to compile`);
    return e.scopeValue(
      'keyword',
      typeof r == 'function'
        ? { ref: r }
        : { ref: r, code: (0, jr.stringify)(r) },
    );
  }
  function FJ(e, t, r = !1) {
    return (
      !t.length ||
      t.some((n) =>
        n === 'array'
          ? Array.isArray(e)
          : n === 'object'
            ? e && typeof e == 'object' && !Array.isArray(e)
            : typeof e == n || (r && typeof e > 'u'),
      )
    );
  }
  _s.validSchemaType = FJ;
  function qJ({ schema: e, opts: t, self: r, errSchemaPath: n }, i, s) {
    if (Array.isArray(i.keyword) ? !i.keyword.includes(s) : i.keyword !== s)
      throw new Error('ajv implementation error');
    let o = i.dependencies;
    if (o?.some((a) => !Object.prototype.hasOwnProperty.call(e, a)))
      throw new Error(
        `parent schema must have dependencies of ${s}: ${o.join(',')}`,
      );
    if (i.validateSchema && !i.validateSchema(e[s])) {
      let u =
        `keyword "${s}" value is invalid at path "${n}": ` +
        r.errorsText(i.validateSchema.errors);
      if (t.validateSchema === 'log') r.logger.error(u);
      else throw new Error(u);
    }
  }
  _s.validateKeywordUsage = qJ;
});
var CA = $((bo) => {
  'use strict';
  Object.defineProperty(bo, '__esModule', { value: !0 });
  bo.extendSubschemaMode = bo.extendSubschemaData = bo.getSubschema = void 0;
  var ws = be(),
    xA = xe();
  function MJ(
    e,
    {
      keyword: t,
      schemaProp: r,
      schema: n,
      schemaPath: i,
      errSchemaPath: s,
      topSchemaRef: o,
    },
  ) {
    if (t !== void 0 && n !== void 0)
      throw new Error('both "keyword" and "schema" passed, only one allowed');
    if (t !== void 0) {
      let a = e.schema[t];
      return r === void 0
        ? {
            schema: a,
            schemaPath: (0, ws._)`${e.schemaPath}${(0, ws.getProperty)(t)}`,
            errSchemaPath: `${e.errSchemaPath}/${t}`,
          }
        : {
            schema: a[r],
            schemaPath: (0,
            ws._)`${e.schemaPath}${(0, ws.getProperty)(t)}${(0, ws.getProperty)(r)}`,
            errSchemaPath: `${e.errSchemaPath}/${t}/${(0, xA.escapeFragment)(r)}`,
          };
    }
    if (n !== void 0) {
      if (i === void 0 || s === void 0 || o === void 0)
        throw new Error(
          '"schemaPath", "errSchemaPath" and "topSchemaRef" are required with "schema"',
        );
      return { schema: n, schemaPath: i, topSchemaRef: o, errSchemaPath: s };
    }
    throw new Error('either "keyword" or "schema" must be passed');
  }
  bo.getSubschema = MJ;
  function HJ(
    e,
    t,
    { dataProp: r, dataPropType: n, data: i, dataTypes: s, propertyName: o },
  ) {
    if (i !== void 0 && r !== void 0)
      throw new Error('both "data" and "dataProp" passed, only one allowed');
    let { gen: a } = t;
    if (r !== void 0) {
      let { errorPath: c, dataPathArr: d, opts: m } = t,
        g = a.let('data', (0, ws._)`${t.data}${(0, ws.getProperty)(r)}`, !0);
      u(g),
        (e.errorPath = (0,
        ws.str)`${c}${(0, xA.getErrorPath)(r, n, m.jsPropertySyntax)}`),
        (e.parentDataProperty = (0, ws._)`${r}`),
        (e.dataPathArr = [...d, e.parentDataProperty]);
    }
    if (i !== void 0) {
      let c = i instanceof ws.Name ? i : a.let('data', i, !0);
      u(c), o !== void 0 && (e.propertyName = o);
    }
    s && (e.dataTypes = s);
    function u(c) {
      (e.data = c),
        (e.dataLevel = t.dataLevel + 1),
        (e.dataTypes = []),
        (t.definedProperties = new Set()),
        (e.parentData = t.data),
        (e.dataNames = [...t.dataNames, c]);
    }
  }
  bo.extendSubschemaData = HJ;
  function zJ(
    e,
    {
      jtdDiscriminator: t,
      jtdMetadata: r,
      compositeRule: n,
      createErrors: i,
      allErrors: s,
    },
  ) {
    n !== void 0 && (e.compositeRule = n),
      i !== void 0 && (e.createErrors = i),
      s !== void 0 && (e.allErrors = s),
      (e.jtdDiscriminator = t),
      (e.jtdMetadata = r);
  }
  bo.extendSubschemaMode = zJ;
});
var IA = $((Ame, OA) => {
  'use strict';
  var So = (OA.exports = function (e, t, r) {
    typeof t == 'function' && ((r = t), (t = {})), (r = t.cb || r);
    var n = typeof r == 'function' ? r : r.pre || function () {},
      i = r.post || function () {};
    Wm(t, n, i, e, '', e);
  });
  So.keywords = {
    additionalItems: !0,
    items: !0,
    contains: !0,
    additionalProperties: !0,
    propertyNames: !0,
    not: !0,
    if: !0,
    then: !0,
    else: !0,
  };
  So.arrayKeywords = { items: !0, allOf: !0, anyOf: !0, oneOf: !0 };
  So.propsKeywords = {
    $defs: !0,
    definitions: !0,
    properties: !0,
    patternProperties: !0,
    dependencies: !0,
  };
  So.skipKeywords = {
    default: !0,
    enum: !0,
    const: !0,
    required: !0,
    maximum: !0,
    minimum: !0,
    exclusiveMaximum: !0,
    exclusiveMinimum: !0,
    multipleOf: !0,
    maxLength: !0,
    minLength: !0,
    pattern: !0,
    format: !0,
    maxItems: !0,
    minItems: !0,
    uniqueItems: !0,
    maxProperties: !0,
    minProperties: !0,
  };
  function Wm(e, t, r, n, i, s, o, a, u, c) {
    if (n && typeof n == 'object' && !Array.isArray(n)) {
      t(n, i, s, o, a, u, c);
      for (var d in n) {
        var m = n[d];
        if (Array.isArray(m)) {
          if (d in So.arrayKeywords)
            for (var g = 0; g < m.length; g++)
              Wm(e, t, r, m[g], i + '/' + d + '/' + g, s, i, d, n, g);
        } else if (d in So.propsKeywords) {
          if (m && typeof m == 'object')
            for (var v in m)
              Wm(e, t, r, m[v], i + '/' + d + '/' + UJ(v), s, i, d, n, v);
        } else
          (d in So.keywords || (e.allKeys && !(d in So.skipKeywords))) &&
            Wm(e, t, r, m, i + '/' + d, s, i, d, n);
      }
      r(n, i, s, o, a, u, c);
    }
  }
  function UJ(e) {
    return e.replace(/~/g, '~0').replace(/\//g, '~1');
  }
});
var gd = $((rn) => {
  'use strict';
  Object.defineProperty(rn, '__esModule', { value: !0 });
  rn.getSchemaRefs =
    rn.resolveUrl =
    rn.normalizeId =
    rn._getFullPath =
    rn.getFullPath =
    rn.inlineRef =
      void 0;
  var VJ = xe(),
    BJ = mo(),
    WJ = IA(),
    GJ = new Set([
      'type',
      'format',
      'pattern',
      'maxLength',
      'minLength',
      'maxProperties',
      'minProperties',
      'maxItems',
      'minItems',
      'maximum',
      'minimum',
      'uniqueItems',
      'multipleOf',
      'required',
      'enum',
      'const',
    ]);
  function YJ(e, t = !0) {
    return typeof e == 'boolean' ? !0 : t === !0 ? !w_(e) : t ? AA(e) <= t : !1;
  }
  rn.inlineRef = YJ;
  var JJ = new Set([
    '$ref',
    '$recursiveRef',
    '$recursiveAnchor',
    '$dynamicRef',
    '$dynamicAnchor',
  ]);
  function w_(e) {
    for (let t in e) {
      if (JJ.has(t)) return !0;
      let r = e[t];
      if ((Array.isArray(r) && r.some(w_)) || (typeof r == 'object' && w_(r)))
        return !0;
    }
    return !1;
  }
  function AA(e) {
    let t = 0;
    for (let r in e) {
      if (r === '$ref') return 1 / 0;
      if (
        (t++,
        !GJ.has(r) &&
          (typeof e[r] == 'object' &&
            (0, VJ.eachItem)(e[r], (n) => (t += AA(n))),
          t === 1 / 0))
      )
        return 1 / 0;
    }
    return t;
  }
  function $A(e, t = '', r) {
    r !== !1 && (t = Ru(t));
    let n = e.parse(t);
    return NA(e, n);
  }
  rn.getFullPath = $A;
  function NA(e, t) {
    return e.serialize(t).split('#')[0] + '#';
  }
  rn._getFullPath = NA;
  var KJ = /#\/?$/;
  function Ru(e) {
    return e ? e.replace(KJ, '') : '';
  }
  rn.normalizeId = Ru;
  function XJ(e, t, r) {
    return (r = Ru(r)), e.resolve(t, r);
  }
  rn.resolveUrl = XJ;
  var ZJ = /^[a-z_][-a-z0-9._]*$/i;
  function QJ(e, t) {
    if (typeof e == 'boolean') return {};
    let { schemaId: r, uriResolver: n } = this.opts,
      i = Ru(e[r] || t),
      s = { '': i },
      o = $A(n, i, !1),
      a = {},
      u = new Set();
    return (
      WJ(e, { allKeys: !0 }, (m, g, v, S) => {
        if (S === void 0) return;
        let w = o + g,
          T = s[S];
        typeof m[r] == 'string' && (T = C.call(this, m[r])),
          I.call(this, m.$anchor),
          I.call(this, m.$dynamicAnchor),
          (s[g] = T);
        function C(x) {
          let E = this.opts.uriResolver.resolve;
          if (((x = Ru(T ? E(T, x) : x)), u.has(x))) throw d(x);
          u.add(x);
          let j = this.refs[x];
          return (
            typeof j == 'string' && (j = this.refs[j]),
            typeof j == 'object'
              ? c(m, j.schema, x)
              : x !== Ru(w) &&
                (x[0] === '#'
                  ? (c(m, a[x], x), (a[x] = m))
                  : (this.refs[x] = w)),
            x
          );
        }
        function I(x) {
          if (typeof x == 'string') {
            if (!ZJ.test(x)) throw new Error(`invalid anchor "${x}"`);
            C.call(this, `#${x}`);
          }
        }
      }),
      a
    );
    function c(m, g, v) {
      if (g !== void 0 && !BJ(m, g)) throw d(v);
    }
    function d(m) {
      return new Error(`reference "${m}" resolves to more than one schema`);
    }
  }
  rn.getSchemaRefs = QJ;
});
var Tu = $((_o) => {
  'use strict';
  Object.defineProperty(_o, '__esModule', { value: !0 });
  _o.getData = _o.KeywordCxt = _o.validateFunctionCode = void 0;
  var qA = mA(),
    LA = yd(),
    R_ = m_(),
    Gm = yd(),
    eK = wA(),
    bd = kA(),
    E_ = CA(),
    me = be(),
    Ee = Cn(),
    tK = gd(),
    oi = xe(),
    vd = md();
  function rK(e) {
    if (zA(e) && (UA(e), HA(e))) {
      iK(e);
      return;
    }
    MA(e, () => (0, qA.topBoolOrEmptySchema)(e));
  }
  _o.validateFunctionCode = rK;
  function MA(
    { gen: e, validateName: t, schema: r, schemaEnv: n, opts: i },
    s,
  ) {
    i.code.es5
      ? e.func(
          t,
          (0, me._)`${Ee.default.data}, ${Ee.default.valCxt}`,
          n.$async,
          () => {
            e.code((0, me._)`"use strict"; ${DA(r, i)}`), sK(e, i), e.code(s);
          },
        )
      : e.func(t, (0, me._)`${Ee.default.data}, ${nK(i)}`, n.$async, () =>
          e.code(DA(r, i)).code(s),
        );
  }
  function nK(e) {
    return (0,
    me._)`{${Ee.default.instancePath}="", ${Ee.default.parentData}, ${Ee.default.parentDataProperty}, ${Ee.default.rootData}=${Ee.default.data}${e.dynamicRef ? (0, me._)`, ${Ee.default.dynamicAnchors}={}` : me.nil}}={}`;
  }
  function sK(e, t) {
    e.if(
      Ee.default.valCxt,
      () => {
        e.var(
          Ee.default.instancePath,
          (0, me._)`${Ee.default.valCxt}.${Ee.default.instancePath}`,
        ),
          e.var(
            Ee.default.parentData,
            (0, me._)`${Ee.default.valCxt}.${Ee.default.parentData}`,
          ),
          e.var(
            Ee.default.parentDataProperty,
            (0, me._)`${Ee.default.valCxt}.${Ee.default.parentDataProperty}`,
          ),
          e.var(
            Ee.default.rootData,
            (0, me._)`${Ee.default.valCxt}.${Ee.default.rootData}`,
          ),
          t.dynamicRef &&
            e.var(
              Ee.default.dynamicAnchors,
              (0, me._)`${Ee.default.valCxt}.${Ee.default.dynamicAnchors}`,
            );
      },
      () => {
        e.var(Ee.default.instancePath, (0, me._)`""`),
          e.var(Ee.default.parentData, (0, me._)`undefined`),
          e.var(Ee.default.parentDataProperty, (0, me._)`undefined`),
          e.var(Ee.default.rootData, Ee.default.data),
          t.dynamicRef && e.var(Ee.default.dynamicAnchors, (0, me._)`{}`);
      },
    );
  }
  function iK(e) {
    let { schema: t, opts: r, gen: n } = e;
    MA(e, () => {
      r.$comment && t.$comment && BA(e),
        cK(e),
        n.let(Ee.default.vErrors, null),
        n.let(Ee.default.errors, 0),
        r.unevaluated && oK(e),
        VA(e),
        hK(e);
    });
  }
  function oK(e) {
    let { gen: t, validateName: r } = e;
    (e.evaluated = t.const('evaluated', (0, me._)`${r}.evaluated`)),
      t.if((0, me._)`${e.evaluated}.dynamicProps`, () =>
        t.assign((0, me._)`${e.evaluated}.props`, (0, me._)`undefined`),
      ),
      t.if((0, me._)`${e.evaluated}.dynamicItems`, () =>
        t.assign((0, me._)`${e.evaluated}.items`, (0, me._)`undefined`),
      );
  }
  function DA(e, t) {
    let r = typeof e == 'object' && e[t.schemaId];
    return r && (t.code.source || t.code.process)
      ? (0, me._)`/*# sourceURL=${r} */`
      : me.nil;
  }
  function aK(e, t) {
    if (zA(e) && (UA(e), HA(e))) {
      lK(e, t);
      return;
    }
    (0, qA.boolOrEmptySchema)(e, t);
  }
  function HA({ schema: e, self: t }) {
    if (typeof e == 'boolean') return !e;
    for (let r in e) if (t.RULES.all[r]) return !0;
    return !1;
  }
  function zA(e) {
    return typeof e.schema != 'boolean';
  }
  function lK(e, t) {
    let { schema: r, gen: n, opts: i } = e;
    i.$comment && r.$comment && BA(e), fK(e), dK(e);
    let s = n.const('_errs', Ee.default.errors);
    VA(e, s), n.var(t, (0, me._)`${s} === ${Ee.default.errors}`);
  }
  function UA(e) {
    (0, oi.checkUnknownRules)(e), uK(e);
  }
  function VA(e, t) {
    if (e.opts.jtd) return jA(e, [], !1, t);
    let r = (0, LA.getSchemaTypes)(e.schema),
      n = (0, LA.coerceAndCheckDataType)(e, r);
    jA(e, r, !n, t);
  }
  function uK(e) {
    let { schema: t, errSchemaPath: r, opts: n, self: i } = e;
    t.$ref &&
      n.ignoreKeywordsWithRef &&
      (0, oi.schemaHasRulesButRef)(t, i.RULES) &&
      i.logger.warn(`$ref: keywords ignored in schema at path "${r}"`);
  }
  function cK(e) {
    let { schema: t, opts: r } = e;
    t.default !== void 0 &&
      r.useDefaults &&
      r.strictSchema &&
      (0, oi.checkStrictMode)(e, 'default is ignored in the schema root');
  }
  function fK(e) {
    let t = e.schema[e.opts.schemaId];
    t && (e.baseId = (0, tK.resolveUrl)(e.opts.uriResolver, e.baseId, t));
  }
  function dK(e) {
    if (e.schema.$async && !e.schemaEnv.$async)
      throw new Error('async schema in sync schema');
  }
  function BA({ gen: e, schemaEnv: t, schema: r, errSchemaPath: n, opts: i }) {
    let s = r.$comment;
    if (i.$comment === !0)
      e.code((0, me._)`${Ee.default.self}.logger.log(${s})`);
    else if (typeof i.$comment == 'function') {
      let o = (0, me.str)`${n}/$comment`,
        a = e.scopeValue('root', { ref: t.root });
      e.code(
        (0, me._)`${Ee.default.self}.opts.$comment(${s}, ${o}, ${a}.schema)`,
      );
    }
  }
  function hK(e) {
    let {
      gen: t,
      schemaEnv: r,
      validateName: n,
      ValidationError: i,
      opts: s,
    } = e;
    r.$async
      ? t.if(
          (0, me._)`${Ee.default.errors} === 0`,
          () => t.return(Ee.default.data),
          () => t.throw((0, me._)`new ${i}(${Ee.default.vErrors})`),
        )
      : (t.assign((0, me._)`${n}.errors`, Ee.default.vErrors),
        s.unevaluated && pK(e),
        t.return((0, me._)`${Ee.default.errors} === 0`));
  }
  function pK({ gen: e, evaluated: t, props: r, items: n }) {
    r instanceof me.Name && e.assign((0, me._)`${t}.props`, r),
      n instanceof me.Name && e.assign((0, me._)`${t}.items`, n);
  }
  function jA(e, t, r, n) {
    let { gen: i, schema: s, data: o, allErrors: a, opts: u, self: c } = e,
      { RULES: d } = c;
    if (
      s.$ref &&
      (u.ignoreKeywordsWithRef || !(0, oi.schemaHasRulesButRef)(s, d))
    ) {
      i.block(() => GA(e, '$ref', d.all.$ref.definition));
      return;
    }
    u.jtd || mK(e, t),
      i.block(() => {
        for (let g of d.rules) m(g);
        m(d.post);
      });
    function m(g) {
      (0, R_.shouldUseGroup)(s, g) &&
        (g.type
          ? (i.if((0, Gm.checkDataType)(g.type, o, u.strictNumbers)),
            FA(e, g),
            t.length === 1 &&
              t[0] === g.type &&
              r &&
              (i.else(), (0, Gm.reportTypeError)(e)),
            i.endIf())
          : FA(e, g),
        a || i.if((0, me._)`${Ee.default.errors} === ${n || 0}`));
    }
  }
  function FA(e, t) {
    let {
      gen: r,
      schema: n,
      opts: { useDefaults: i },
    } = e;
    i && (0, eK.assignDefaults)(e, t.type),
      r.block(() => {
        for (let s of t.rules)
          (0, R_.shouldUseRule)(n, s) && GA(e, s.keyword, s.definition, t.type);
      });
  }
  function mK(e, t) {
    e.schemaEnv.meta ||
      !e.opts.strictTypes ||
      (yK(e, t), e.opts.allowUnionTypes || gK(e, t), vK(e, e.dataTypes));
  }
  function yK(e, t) {
    if (t.length) {
      if (!e.dataTypes.length) {
        e.dataTypes = t;
        return;
      }
      t.forEach((r) => {
        WA(e.dataTypes, r) ||
          T_(
            e,
            `type "${r}" not allowed by context "${e.dataTypes.join(',')}"`,
          );
      }),
        SK(e, t);
    }
  }
  function gK(e, t) {
    t.length > 1 &&
      !(t.length === 2 && t.includes('null')) &&
      T_(e, 'use allowUnionTypes to allow union type keyword');
  }
  function vK(e, t) {
    let r = e.self.RULES.all;
    for (let n in r) {
      let i = r[n];
      if (typeof i == 'object' && (0, R_.shouldUseRule)(e.schema, i)) {
        let { type: s } = i.definition;
        s.length &&
          !s.some((o) => bK(t, o)) &&
          T_(e, `missing type "${s.join(',')}" for keyword "${n}"`);
      }
    }
  }
  function bK(e, t) {
    return e.includes(t) || (t === 'number' && e.includes('integer'));
  }
  function WA(e, t) {
    return e.includes(t) || (t === 'integer' && e.includes('number'));
  }
  function SK(e, t) {
    let r = [];
    for (let n of e.dataTypes)
      WA(t, n)
        ? r.push(n)
        : t.includes('integer') && n === 'number' && r.push('integer');
    e.dataTypes = r;
  }
  function T_(e, t) {
    let r = e.schemaEnv.baseId + e.errSchemaPath;
    (t += ` at "${r}" (strictTypes)`),
      (0, oi.checkStrictMode)(e, t, e.opts.strictTypes);
  }
  var Ym = class {
    constructor(t, r, n) {
      if (
        ((0, bd.validateKeywordUsage)(t, r, n),
        (this.gen = t.gen),
        (this.allErrors = t.allErrors),
        (this.keyword = n),
        (this.data = t.data),
        (this.schema = t.schema[n]),
        (this.$data =
          r.$data && t.opts.$data && this.schema && this.schema.$data),
        (this.schemaValue = (0, oi.schemaRefOrVal)(
          t,
          this.schema,
          n,
          this.$data,
        )),
        (this.schemaType = r.schemaType),
        (this.parentSchema = t.schema),
        (this.params = {}),
        (this.it = t),
        (this.def = r),
        this.$data)
      )
        this.schemaCode = t.gen.const('vSchema', YA(this.$data, t));
      else if (
        ((this.schemaCode = this.schemaValue),
        !(0, bd.validSchemaType)(this.schema, r.schemaType, r.allowUndefined))
      )
        throw new Error(`${n} value must be ${JSON.stringify(r.schemaType)}`);
      ('code' in r ? r.trackErrors : r.errors !== !1) &&
        (this.errsCount = t.gen.const('_errs', Ee.default.errors));
    }
    result(t, r, n) {
      this.failResult((0, me.not)(t), r, n);
    }
    failResult(t, r, n) {
      this.gen.if(t),
        n ? n() : this.error(),
        r
          ? (this.gen.else(), r(), this.allErrors && this.gen.endIf())
          : this.allErrors
            ? this.gen.endIf()
            : this.gen.else();
    }
    pass(t, r) {
      this.failResult((0, me.not)(t), void 0, r);
    }
    fail(t) {
      if (t === void 0) {
        this.error(), this.allErrors || this.gen.if(!1);
        return;
      }
      this.gen.if(t),
        this.error(),
        this.allErrors ? this.gen.endIf() : this.gen.else();
    }
    fail$data(t) {
      if (!this.$data) return this.fail(t);
      let { schemaCode: r } = this;
      this.fail(
        (0,
        me._)`${r} !== undefined && (${(0, me.or)(this.invalid$data(), t)})`,
      );
    }
    error(t, r, n) {
      if (r) {
        this.setParams(r), this._error(t, n), this.setParams({});
        return;
      }
      this._error(t, n);
    }
    _error(t, r) {
      (t ? vd.reportExtraError : vd.reportError)(this, this.def.error, r);
    }
    $dataError() {
      (0, vd.reportError)(this, this.def.$dataError || vd.keyword$DataError);
    }
    reset() {
      if (this.errsCount === void 0)
        throw new Error('add "trackErrors" to keyword definition');
      (0, vd.resetErrorsCount)(this.gen, this.errsCount);
    }
    ok(t) {
      this.allErrors || this.gen.if(t);
    }
    setParams(t, r) {
      r ? Object.assign(this.params, t) : (this.params = t);
    }
    block$data(t, r, n = me.nil) {
      this.gen.block(() => {
        this.check$data(t, n), r();
      });
    }
    check$data(t = me.nil, r = me.nil) {
      if (!this.$data) return;
      let { gen: n, schemaCode: i, schemaType: s, def: o } = this;
      n.if((0, me.or)((0, me._)`${i} === undefined`, r)),
        t !== me.nil && n.assign(t, !0),
        (s.length || o.validateSchema) &&
          (n.elseIf(this.invalid$data()),
          this.$dataError(),
          t !== me.nil && n.assign(t, !1)),
        n.else();
    }
    invalid$data() {
      let { gen: t, schemaCode: r, schemaType: n, def: i, it: s } = this;
      return (0, me.or)(o(), a());
      function o() {
        if (n.length) {
          if (!(r instanceof me.Name))
            throw new Error('ajv implementation error');
          let u = Array.isArray(n) ? n : [n];
          return (0,
          me._)`${(0, Gm.checkDataTypes)(u, r, s.opts.strictNumbers, Gm.DataType.Wrong)}`;
        }
        return me.nil;
      }
      function a() {
        if (i.validateSchema) {
          let u = t.scopeValue('validate$data', { ref: i.validateSchema });
          return (0, me._)`!${u}(${r})`;
        }
        return me.nil;
      }
    }
    subschema(t, r) {
      let n = (0, E_.getSubschema)(this.it, t);
      (0, E_.extendSubschemaData)(n, this.it, t),
        (0, E_.extendSubschemaMode)(n, t);
      let i = { ...this.it, ...n, items: void 0, props: void 0 };
      return aK(i, r), i;
    }
    mergeEvaluated(t, r) {
      let { it: n, gen: i } = this;
      n.opts.unevaluated &&
        (n.props !== !0 &&
          t.props !== void 0 &&
          (n.props = oi.mergeEvaluated.props(i, t.props, n.props, r)),
        n.items !== !0 &&
          t.items !== void 0 &&
          (n.items = oi.mergeEvaluated.items(i, t.items, n.items, r)));
    }
    mergeValidEvaluated(t, r) {
      let { it: n, gen: i } = this;
      if (n.opts.unevaluated && (n.props !== !0 || n.items !== !0))
        return i.if(r, () => this.mergeEvaluated(t, me.Name)), !0;
    }
  };
  _o.KeywordCxt = Ym;
  function GA(e, t, r, n) {
    let i = new Ym(e, r, t);
    'code' in r
      ? r.code(i, n)
      : i.$data && r.validate
        ? (0, bd.funcKeywordCode)(i, r)
        : 'macro' in r
          ? (0, bd.macroKeywordCode)(i, r)
          : (r.compile || r.validate) && (0, bd.funcKeywordCode)(i, r);
  }
  var _K = /^\/(?:[^~]|~0|~1)*$/,
    wK = /^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;
  function YA(e, { dataLevel: t, dataNames: r, dataPathArr: n }) {
    let i, s;
    if (e === '') return Ee.default.rootData;
    if (e[0] === '/') {
      if (!_K.test(e)) throw new Error(`Invalid JSON-pointer: ${e}`);
      (i = e), (s = Ee.default.rootData);
    } else {
      let c = wK.exec(e);
      if (!c) throw new Error(`Invalid JSON-pointer: ${e}`);
      let d = +c[1];
      if (((i = c[2]), i === '#')) {
        if (d >= t) throw new Error(u('property/index', d));
        return n[t - d];
      }
      if (d > t) throw new Error(u('data', d));
      if (((s = r[t - d]), !i)) return s;
    }
    let o = s,
      a = i.split('/');
    for (let c of a)
      c &&
        ((s = (0,
        me._)`${s}${(0, me.getProperty)((0, oi.unescapeJsonPointer)(c))}`),
        (o = (0, me._)`${o} && ${s}`));
    return o;
    function u(c, d) {
      return `Cannot access ${c} ${d} levels up, current level is ${t}`;
    }
  }
  _o.getData = YA;
});
var Sd = $((k_) => {
  'use strict';
  Object.defineProperty(k_, '__esModule', { value: !0 });
  var P_ = class extends Error {
    constructor(t) {
      super('validation failed'),
        (this.errors = t),
        (this.ajv = this.validation = !0);
    }
  };
  k_.default = P_;
});
var ai = $((O_) => {
  'use strict';
  Object.defineProperty(O_, '__esModule', { value: !0 });
  var x_ = gd(),
    C_ = class extends Error {
      constructor(t, r, n, i) {
        super(i || `can't resolve reference ${n} from id ${r}`),
          (this.missingRef = (0, x_.resolveUrl)(t, r, n)),
          (this.missingSchema = (0, x_.normalizeId)(
            (0, x_.getFullPath)(t, this.missingRef),
          ));
      }
    };
  O_.default = C_;
});
var Ua = $((On) => {
  'use strict';
  Object.defineProperty(On, '__esModule', { value: !0 });
  On.resolveSchema =
    On.getCompilingSchema =
    On.resolveRef =
    On.compileSchema =
    On.SchemaEnv =
      void 0;
  var es = be(),
    EK = Sd(),
    za = Cn(),
    ts = gd(),
    JA = xe(),
    RK = Tu(),
    Pu = class {
      constructor(t) {
        var r;
        (this.refs = {}), (this.dynamicAnchors = {});
        let n;
        typeof t.schema == 'object' && (n = t.schema),
          (this.schema = t.schema),
          (this.schemaId = t.schemaId),
          (this.root = t.root || this),
          (this.baseId =
            (r = t.baseId) !== null && r !== void 0
              ? r
              : (0, ts.normalizeId)(n?.[t.schemaId || '$id'])),
          (this.schemaPath = t.schemaPath),
          (this.localRefs = t.localRefs),
          (this.meta = t.meta),
          (this.$async = n?.$async),
          (this.refs = {});
      }
    };
  On.SchemaEnv = Pu;
  function A_(e) {
    let t = KA.call(this, e);
    if (t) return t;
    let r = (0, ts.getFullPath)(this.opts.uriResolver, e.root.baseId),
      { es5: n, lines: i } = this.opts.code,
      { ownProperties: s } = this.opts,
      o = new es.CodeGen(this.scope, { es5: n, lines: i, ownProperties: s }),
      a;
    e.$async &&
      (a = o.scopeValue('Error', {
        ref: EK.default,
        code: (0, es._)`require("ajv/dist/runtime/validation_error").default`,
      }));
    let u = o.scopeName('validate');
    e.validateName = u;
    let c = {
        gen: o,
        allErrors: this.opts.allErrors,
        data: za.default.data,
        parentData: za.default.parentData,
        parentDataProperty: za.default.parentDataProperty,
        dataNames: [za.default.data],
        dataPathArr: [es.nil],
        dataLevel: 0,
        dataTypes: [],
        definedProperties: new Set(),
        topSchemaRef: o.scopeValue(
          'schema',
          this.opts.code.source === !0
            ? { ref: e.schema, code: (0, es.stringify)(e.schema) }
            : { ref: e.schema },
        ),
        validateName: u,
        ValidationError: a,
        schema: e.schema,
        schemaEnv: e,
        rootId: r,
        baseId: e.baseId || r,
        schemaPath: es.nil,
        errSchemaPath: e.schemaPath || (this.opts.jtd ? '' : '#'),
        errorPath: (0, es._)`""`,
        opts: this.opts,
        self: this,
      },
      d;
    try {
      this._compilations.add(e),
        (0, RK.validateFunctionCode)(c),
        o.optimize(this.opts.code.optimize);
      let m = o.toString();
      (d = `${o.scopeRefs(za.default.scope)}return ${m}`),
        this.opts.code.process && (d = this.opts.code.process(d, e));
      let v = new Function(`${za.default.self}`, `${za.default.scope}`, d)(
        this,
        this.scope.get(),
      );
      if (
        (this.scope.value(u, { ref: v }),
        (v.errors = null),
        (v.schema = e.schema),
        (v.schemaEnv = e),
        e.$async && (v.$async = !0),
        this.opts.code.source === !0 &&
          (v.source = {
            validateName: u,
            validateCode: m,
            scopeValues: o._values,
          }),
        this.opts.unevaluated)
      ) {
        let { props: S, items: w } = c;
        (v.evaluated = {
          props: S instanceof es.Name ? void 0 : S,
          items: w instanceof es.Name ? void 0 : w,
          dynamicProps: S instanceof es.Name,
          dynamicItems: w instanceof es.Name,
        }),
          v.source && (v.source.evaluated = (0, es.stringify)(v.evaluated));
      }
      return (e.validate = v), e;
    } catch (m) {
      throw (
        (delete e.validate,
        delete e.validateName,
        d && this.logger.error('Error compiling schema, function code:', d),
        m)
      );
    } finally {
      this._compilations.delete(e);
    }
  }
  On.compileSchema = A_;
  function TK(e, t, r) {
    var n;
    r = (0, ts.resolveUrl)(this.opts.uriResolver, t, r);
    let i = e.refs[r];
    if (i) return i;
    let s = xK.call(this, e, r);
    if (s === void 0) {
      let o = (n = e.localRefs) === null || n === void 0 ? void 0 : n[r],
        { schemaId: a } = this.opts;
      o && (s = new Pu({ schema: o, schemaId: a, root: e, baseId: t }));
    }
    if (s !== void 0) return (e.refs[r] = PK.call(this, s));
  }
  On.resolveRef = TK;
  function PK(e) {
    return (0, ts.inlineRef)(e.schema, this.opts.inlineRefs)
      ? e.schema
      : e.validate
        ? e
        : A_.call(this, e);
  }
  function KA(e) {
    for (let t of this._compilations) if (kK(t, e)) return t;
  }
  On.getCompilingSchema = KA;
  function kK(e, t) {
    return e.schema === t.schema && e.root === t.root && e.baseId === t.baseId;
  }
  function xK(e, t) {
    let r;
    for (; typeof (r = this.refs[t]) == 'string'; ) t = r;
    return r || this.schemas[t] || Jm.call(this, e, t);
  }
  function Jm(e, t) {
    let r = this.opts.uriResolver.parse(t),
      n = (0, ts._getFullPath)(this.opts.uriResolver, r),
      i = (0, ts.getFullPath)(this.opts.uriResolver, e.baseId, void 0);
    if (Object.keys(e.schema).length > 0 && n === i) return I_.call(this, r, e);
    let s = (0, ts.normalizeId)(n),
      o = this.refs[s] || this.schemas[s];
    if (typeof o == 'string') {
      let a = Jm.call(this, e, o);
      return typeof a?.schema != 'object' ? void 0 : I_.call(this, r, a);
    }
    if (typeof o?.schema == 'object') {
      if ((o.validate || A_.call(this, o), s === (0, ts.normalizeId)(t))) {
        let { schema: a } = o,
          { schemaId: u } = this.opts,
          c = a[u];
        return (
          c && (i = (0, ts.resolveUrl)(this.opts.uriResolver, i, c)),
          new Pu({ schema: a, schemaId: u, root: e, baseId: i })
        );
      }
      return I_.call(this, r, o);
    }
  }
  On.resolveSchema = Jm;
  var CK = new Set([
    'properties',
    'patternProperties',
    'enum',
    'dependencies',
    'definitions',
  ]);
  function I_(e, { baseId: t, schema: r, root: n }) {
    var i;
    if (((i = e.fragment) === null || i === void 0 ? void 0 : i[0]) !== '/')
      return;
    for (let a of e.fragment.slice(1).split('/')) {
      if (typeof r == 'boolean') return;
      let u = r[(0, JA.unescapeFragment)(a)];
      if (u === void 0) return;
      r = u;
      let c = typeof r == 'object' && r[this.opts.schemaId];
      !CK.has(a) && c && (t = (0, ts.resolveUrl)(this.opts.uriResolver, t, c));
    }
    let s;
    if (
      typeof r != 'boolean' &&
      r.$ref &&
      !(0, JA.schemaHasRulesButRef)(r, this.RULES)
    ) {
      let a = (0, ts.resolveUrl)(this.opts.uriResolver, t, r.$ref);
      s = Jm.call(this, n, a);
    }
    let { schemaId: o } = this.opts;
    if (
      ((s = s || new Pu({ schema: r, schemaId: o, root: n, baseId: t })),
      s.schema !== s.root.schema)
    )
      return s;
  }
});
var XA = $((Fme, OK) => {
  OK.exports = {
    $id: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#',
    description:
      'Meta-schema for $data reference (JSON AnySchema extension proposal)',
    type: 'object',
    required: ['$data'],
    properties: {
      $data: {
        type: 'string',
        anyOf: [
          { format: 'relative-json-pointer' },
          { format: 'json-pointer' },
        ],
      },
    },
    additionalProperties: !1,
  };
});
var QA = $((qme, ZA) => {
  'use strict';
  var IK = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    a: 10,
    A: 10,
    b: 11,
    B: 11,
    c: 12,
    C: 12,
    d: 13,
    D: 13,
    e: 14,
    E: 14,
    f: 15,
    F: 15,
  };
  ZA.exports = { HEX: IK };
});
var a$ = $((Mme, o$) => {
  'use strict';
  var { HEX: AK } = QA();
  function n$(e) {
    if (i$(e, '.') < 3) return { host: e, isIPV4: !1 };
    let t =
        e.match(
          /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/u,
        ) || [],
      [r] = t;
    return r ? { host: NK(r, '.'), isIPV4: !0 } : { host: e, isIPV4: !1 };
  }
  function $_(e, t = !1) {
    let r = '',
      n = !0;
    for (let i of e) {
      if (AK[i] === void 0) return;
      i !== '0' && n === !0 && (n = !1), n || (r += i);
    }
    return t && r.length === 0 && (r = '0'), r;
  }
  function $K(e) {
    let t = 0,
      r = { error: !1, address: '', zone: '' },
      n = [],
      i = [],
      s = !1,
      o = !1,
      a = !1;
    function u() {
      if (i.length) {
        if (s === !1) {
          let c = $_(i);
          if (c !== void 0) n.push(c);
          else return (r.error = !0), !1;
        }
        i.length = 0;
      }
      return !0;
    }
    for (let c = 0; c < e.length; c++) {
      let d = e[c];
      if (!(d === '[' || d === ']'))
        if (d === ':') {
          if ((o === !0 && (a = !0), !u())) break;
          if ((t++, n.push(':'), t > 7)) {
            r.error = !0;
            break;
          }
          c - 1 >= 0 && e[c - 1] === ':' && (o = !0);
          continue;
        } else if (d === '%') {
          if (!u()) break;
          s = !0;
        } else {
          i.push(d);
          continue;
        }
    }
    return (
      i.length &&
        (s ? (r.zone = i.join('')) : a ? n.push(i.join('')) : n.push($_(i))),
      (r.address = n.join('')),
      r
    );
  }
  function s$(e, t = {}) {
    if (i$(e, ':') < 2) return { host: e, isIPV6: !1 };
    let r = $K(e);
    if (r.error) return { host: e, isIPV6: !1 };
    {
      let n = r.address,
        i = r.address;
      return (
        r.zone && ((n += '%' + r.zone), (i += '%25' + r.zone)),
        { host: n, escapedHost: i, isIPV6: !0 }
      );
    }
  }
  function NK(e, t) {
    let r = '',
      n = !0,
      i = e.length;
    for (let s = 0; s < i; s++) {
      let o = e[s];
      o === '0' && n
        ? ((s + 1 <= i && e[s + 1] === t) || s + 1 === i) &&
          ((r += o), (n = !1))
        : (o === t ? (n = !0) : (n = !1), (r += o));
    }
    return r;
  }
  function i$(e, t) {
    let r = 0;
    for (let n = 0; n < e.length; n++) e[n] === t && r++;
    return r;
  }
  var e$ = /^\.\.?\//u,
    t$ = /^\/\.(?:\/|$)/u,
    r$ = /^\/\.\.(?:\/|$)/u,
    LK = /^\/?(?:.|\n)*?(?=\/|$)/u;
  function DK(e) {
    let t = [];
    for (; e.length; )
      if (e.match(e$)) e = e.replace(e$, '');
      else if (e.match(t$)) e = e.replace(t$, '/');
      else if (e.match(r$)) (e = e.replace(r$, '/')), t.pop();
      else if (e === '.' || e === '..') e = '';
      else {
        let r = e.match(LK);
        if (r) {
          let n = r[0];
          (e = e.slice(n.length)), t.push(n);
        } else throw new Error('Unexpected dot segment condition');
      }
    return t.join('');
  }
  function jK(e, t) {
    let r = t !== !0 ? escape : unescape;
    return (
      e.scheme !== void 0 && (e.scheme = r(e.scheme)),
      e.userinfo !== void 0 && (e.userinfo = r(e.userinfo)),
      e.host !== void 0 && (e.host = r(e.host)),
      e.path !== void 0 && (e.path = r(e.path)),
      e.query !== void 0 && (e.query = r(e.query)),
      e.fragment !== void 0 && (e.fragment = r(e.fragment)),
      e
    );
  }
  function FK(e, t) {
    let r = [];
    if (
      (e.userinfo !== void 0 && (r.push(e.userinfo), r.push('@')),
      e.host !== void 0)
    ) {
      let n = unescape(e.host),
        i = n$(n);
      if (i.isIPV4) n = i.host;
      else {
        let s = s$(i.host, { isIPV4: !1 });
        s.isIPV6 === !0 ? (n = `[${s.escapedHost}]`) : (n = e.host);
      }
      r.push(n);
    }
    return (
      (typeof e.port == 'number' || typeof e.port == 'string') &&
        (r.push(':'), r.push(String(e.port))),
      r.length ? r.join('') : void 0
    );
  }
  o$.exports = {
    recomposeAuthority: FK,
    normalizeComponentEncoding: jK,
    removeDotSegments: DK,
    normalizeIPv4: n$,
    normalizeIPv6: s$,
    stringArrayToHexStripped: $_,
  };
});
var h$ = $((Hme, d$) => {
  'use strict';
  var qK =
      /^[\da-f]{8}\b-[\da-f]{4}\b-[\da-f]{4}\b-[\da-f]{4}\b-[\da-f]{12}$/iu,
    MK = /([\da-z][\d\-a-z]{0,31}):((?:[\w!$'()*+,\-.:;=@]|%[\da-f]{2})+)/iu;
  function l$(e) {
    return typeof e.secure == 'boolean'
      ? e.secure
      : String(e.scheme).toLowerCase() === 'wss';
  }
  function u$(e) {
    return e.host || (e.error = e.error || 'HTTP URIs must have a host.'), e;
  }
  function c$(e) {
    let t = String(e.scheme).toLowerCase() === 'https';
    return (
      (e.port === (t ? 443 : 80) || e.port === '') && (e.port = void 0),
      e.path || (e.path = '/'),
      e
    );
  }
  function HK(e) {
    return (
      (e.secure = l$(e)),
      (e.resourceName = (e.path || '/') + (e.query ? '?' + e.query : '')),
      (e.path = void 0),
      (e.query = void 0),
      e
    );
  }
  function zK(e) {
    if (
      ((e.port === (l$(e) ? 443 : 80) || e.port === '') && (e.port = void 0),
      typeof e.secure == 'boolean' &&
        ((e.scheme = e.secure ? 'wss' : 'ws'), (e.secure = void 0)),
      e.resourceName)
    ) {
      let [t, r] = e.resourceName.split('?');
      (e.path = t && t !== '/' ? t : void 0),
        (e.query = r),
        (e.resourceName = void 0);
    }
    return (e.fragment = void 0), e;
  }
  function UK(e, t) {
    if (!e.path) return (e.error = 'URN can not be parsed'), e;
    let r = e.path.match(MK);
    if (r) {
      let n = t.scheme || e.scheme || 'urn';
      (e.nid = r[1].toLowerCase()), (e.nss = r[2]);
      let i = `${n}:${t.nid || e.nid}`,
        s = N_[i];
      (e.path = void 0), s && (e = s.parse(e, t));
    } else e.error = e.error || 'URN can not be parsed.';
    return e;
  }
  function VK(e, t) {
    let r = t.scheme || e.scheme || 'urn',
      n = e.nid.toLowerCase(),
      i = `${r}:${t.nid || n}`,
      s = N_[i];
    s && (e = s.serialize(e, t));
    let o = e,
      a = e.nss;
    return (o.path = `${n || t.nid}:${a}`), (t.skipEscape = !0), o;
  }
  function BK(e, t) {
    let r = e;
    return (
      (r.uuid = r.nss),
      (r.nss = void 0),
      !t.tolerant &&
        (!r.uuid || !qK.test(r.uuid)) &&
        (r.error = r.error || 'UUID is not valid.'),
      r
    );
  }
  function WK(e) {
    let t = e;
    return (t.nss = (e.uuid || '').toLowerCase()), t;
  }
  var f$ = { scheme: 'http', domainHost: !0, parse: u$, serialize: c$ },
    GK = {
      scheme: 'https',
      domainHost: f$.domainHost,
      parse: u$,
      serialize: c$,
    },
    Km = { scheme: 'ws', domainHost: !0, parse: HK, serialize: zK },
    YK = {
      scheme: 'wss',
      domainHost: Km.domainHost,
      parse: Km.parse,
      serialize: Km.serialize,
    },
    JK = { scheme: 'urn', parse: UK, serialize: VK, skipNormalize: !0 },
    KK = { scheme: 'urn:uuid', parse: BK, serialize: WK, skipNormalize: !0 },
    N_ = { http: f$, https: GK, ws: Km, wss: YK, urn: JK, 'urn:uuid': KK };
  d$.exports = N_;
});
var m$ = $((zme, Zm) => {
  'use strict';
  var {
      normalizeIPv6: XK,
      normalizeIPv4: ZK,
      removeDotSegments: _d,
      recomposeAuthority: QK,
      normalizeComponentEncoding: Xm,
    } = a$(),
    L_ = h$();
  function eX(e, t) {
    return (
      typeof e == 'string'
        ? (e = Es(li(e, t), t))
        : typeof e == 'object' && (e = li(Es(e, t), t)),
      e
    );
  }
  function tX(e, t, r) {
    let n = Object.assign({ scheme: 'null' }, r),
      i = p$(li(e, n), li(t, n), n, !0);
    return Es(i, { ...n, skipEscape: !0 });
  }
  function p$(e, t, r, n) {
    let i = {};
    return (
      n || ((e = li(Es(e, r), r)), (t = li(Es(t, r), r))),
      (r = r || {}),
      !r.tolerant && t.scheme
        ? ((i.scheme = t.scheme),
          (i.userinfo = t.userinfo),
          (i.host = t.host),
          (i.port = t.port),
          (i.path = _d(t.path || '')),
          (i.query = t.query))
        : (t.userinfo !== void 0 || t.host !== void 0 || t.port !== void 0
            ? ((i.userinfo = t.userinfo),
              (i.host = t.host),
              (i.port = t.port),
              (i.path = _d(t.path || '')),
              (i.query = t.query))
            : (t.path
                ? (t.path.charAt(0) === '/'
                    ? (i.path = _d(t.path))
                    : ((e.userinfo !== void 0 ||
                        e.host !== void 0 ||
                        e.port !== void 0) &&
                      !e.path
                        ? (i.path = '/' + t.path)
                        : e.path
                          ? (i.path =
                              e.path.slice(0, e.path.lastIndexOf('/') + 1) +
                              t.path)
                          : (i.path = t.path),
                      (i.path = _d(i.path))),
                  (i.query = t.query))
                : ((i.path = e.path),
                  t.query !== void 0
                    ? (i.query = t.query)
                    : (i.query = e.query)),
              (i.userinfo = e.userinfo),
              (i.host = e.host),
              (i.port = e.port)),
          (i.scheme = e.scheme)),
      (i.fragment = t.fragment),
      i
    );
  }
  function rX(e, t, r) {
    return (
      typeof e == 'string'
        ? ((e = unescape(e)),
          (e = Es(Xm(li(e, r), !0), { ...r, skipEscape: !0 })))
        : typeof e == 'object' && (e = Es(Xm(e, !0), { ...r, skipEscape: !0 })),
      typeof t == 'string'
        ? ((t = unescape(t)),
          (t = Es(Xm(li(t, r), !0), { ...r, skipEscape: !0 })))
        : typeof t == 'object' && (t = Es(Xm(t, !0), { ...r, skipEscape: !0 })),
      e.toLowerCase() === t.toLowerCase()
    );
  }
  function Es(e, t) {
    let r = {
        host: e.host,
        scheme: e.scheme,
        userinfo: e.userinfo,
        port: e.port,
        path: e.path,
        query: e.query,
        nid: e.nid,
        nss: e.nss,
        uuid: e.uuid,
        fragment: e.fragment,
        reference: e.reference,
        resourceName: e.resourceName,
        secure: e.secure,
        error: '',
      },
      n = Object.assign({}, t),
      i = [],
      s = L_[(n.scheme || r.scheme || '').toLowerCase()];
    s && s.serialize && s.serialize(r, n),
      r.path !== void 0 &&
        (n.skipEscape
          ? (r.path = unescape(r.path))
          : ((r.path = escape(r.path)),
            r.scheme !== void 0 && (r.path = r.path.split('%3A').join(':')))),
      n.reference !== 'suffix' && r.scheme && (i.push(r.scheme), i.push(':'));
    let o = QK(r, n);
    if (
      (o !== void 0 &&
        (n.reference !== 'suffix' && i.push('//'),
        i.push(o),
        r.path && r.path.charAt(0) !== '/' && i.push('/')),
      r.path !== void 0)
    ) {
      let a = r.path;
      !n.absolutePath && (!s || !s.absolutePath) && (a = _d(a)),
        o === void 0 && (a = a.replace(/^\/\//u, '/%2F')),
        i.push(a);
    }
    return (
      r.query !== void 0 && (i.push('?'), i.push(r.query)),
      r.fragment !== void 0 && (i.push('#'), i.push(r.fragment)),
      i.join('')
    );
  }
  var nX = Array.from({ length: 127 }, (e, t) =>
    /[^!"$&'()*+,\-.;=_`a-z{}~]/u.test(String.fromCharCode(t)),
  );
  function sX(e) {
    let t = 0;
    for (let r = 0, n = e.length; r < n; ++r)
      if (((t = e.charCodeAt(r)), t > 126 || nX[t])) return !0;
    return !1;
  }
  var iX =
    /^(?:([^#/:?]+):)?(?:\/\/((?:([^#/?@]*)@)?(\[[^#/?\]]+\]|[^#/:?]*)(?::(\d*))?))?([^#?]*)(?:\?([^#]*))?(?:#((?:.|[\n\r])*))?/u;
  function li(e, t) {
    let r = Object.assign({}, t),
      n = {
        scheme: void 0,
        userinfo: void 0,
        host: '',
        port: void 0,
        path: '',
        query: void 0,
        fragment: void 0,
      },
      i = e.indexOf('%') !== -1,
      s = !1;
    r.reference === 'suffix' &&
      (e = (r.scheme ? r.scheme + ':' : '') + '//' + e);
    let o = e.match(iX);
    if (o) {
      if (
        ((n.scheme = o[1]),
        (n.userinfo = o[3]),
        (n.host = o[4]),
        (n.port = parseInt(o[5], 10)),
        (n.path = o[6] || ''),
        (n.query = o[7]),
        (n.fragment = o[8]),
        isNaN(n.port) && (n.port = o[5]),
        n.host)
      ) {
        let u = ZK(n.host);
        if (u.isIPV4 === !1) {
          let c = XK(u.host, { isIPV4: !1 });
          (n.host = c.host.toLowerCase()), (s = c.isIPV6);
        } else (n.host = u.host), (s = !0);
      }
      n.scheme === void 0 &&
      n.userinfo === void 0 &&
      n.host === void 0 &&
      n.port === void 0 &&
      !n.path &&
      n.query === void 0
        ? (n.reference = 'same-document')
        : n.scheme === void 0
          ? (n.reference = 'relative')
          : n.fragment === void 0
            ? (n.reference = 'absolute')
            : (n.reference = 'uri'),
        r.reference &&
          r.reference !== 'suffix' &&
          r.reference !== n.reference &&
          (n.error = n.error || 'URI is not a ' + r.reference + ' reference.');
      let a = L_[(r.scheme || n.scheme || '').toLowerCase()];
      if (
        !r.unicodeSupport &&
        (!a || !a.unicodeSupport) &&
        n.host &&
        (r.domainHost || (a && a.domainHost)) &&
        s === !1 &&
        sX(n.host)
      )
        try {
          n.host = URL.domainToASCII(n.host.toLowerCase());
        } catch (u) {
          n.error =
            n.error || "Host's domain name can not be converted to ASCII: " + u;
        }
      (!a || (a && !a.skipNormalize)) &&
        (i && n.scheme !== void 0 && (n.scheme = unescape(n.scheme)),
        i && n.userinfo !== void 0 && (n.userinfo = unescape(n.userinfo)),
        i && n.host !== void 0 && (n.host = unescape(n.host)),
        n.path !== void 0 &&
          n.path.length &&
          (n.path = escape(unescape(n.path))),
        n.fragment !== void 0 &&
          n.fragment.length &&
          (n.fragment = encodeURI(decodeURIComponent(n.fragment)))),
        a && a.parse && a.parse(n, r);
    } else n.error = n.error || 'URI can not be parsed.';
    return n;
  }
  var D_ = {
    SCHEMES: L_,
    normalize: eX,
    resolve: tX,
    resolveComponents: p$,
    equal: rX,
    serialize: Es,
    parse: li,
  };
  Zm.exports = D_;
  Zm.exports.default = D_;
  Zm.exports.fastUri = D_;
});
var g$ = $((j_) => {
  'use strict';
  Object.defineProperty(j_, '__esModule', { value: !0 });
  var y$ = m$();
  y$.code = 'require("ajv/dist/runtime/uri").default';
  j_.default = y$;
});
var M_ = $((ur) => {
  'use strict';
  Object.defineProperty(ur, '__esModule', { value: !0 });
  ur.CodeGen =
    ur.Name =
    ur.nil =
    ur.stringify =
    ur.str =
    ur._ =
    ur.KeywordCxt =
      void 0;
  var oX = Tu();
  Object.defineProperty(ur, 'KeywordCxt', {
    enumerable: !0,
    get: function () {
      return oX.KeywordCxt;
    },
  });
  var ku = be();
  Object.defineProperty(ur, '_', {
    enumerable: !0,
    get: function () {
      return ku._;
    },
  });
  Object.defineProperty(ur, 'str', {
    enumerable: !0,
    get: function () {
      return ku.str;
    },
  });
  Object.defineProperty(ur, 'stringify', {
    enumerable: !0,
    get: function () {
      return ku.stringify;
    },
  });
  Object.defineProperty(ur, 'nil', {
    enumerable: !0,
    get: function () {
      return ku.nil;
    },
  });
  Object.defineProperty(ur, 'Name', {
    enumerable: !0,
    get: function () {
      return ku.Name;
    },
  });
  Object.defineProperty(ur, 'CodeGen', {
    enumerable: !0,
    get: function () {
      return ku.CodeGen;
    },
  });
  var aX = Sd(),
    w$ = ai(),
    lX = p_(),
    wd = Ua(),
    uX = be(),
    Ed = gd(),
    Qm = yd(),
    q_ = xe(),
    v$ = XA(),
    cX = g$(),
    E$ = (e, t) => new RegExp(e, t);
  E$.code = 'new RegExp';
  var fX = ['removeAdditional', 'useDefaults', 'coerceTypes'],
    dX = new Set([
      'validate',
      'serialize',
      'parse',
      'wrapper',
      'root',
      'schema',
      'keyword',
      'pattern',
      'formats',
      'validate$data',
      'func',
      'obj',
      'Error',
    ]),
    hX = {
      errorDataPath: '',
      format: '`validateFormats: false` can be used instead.',
      nullable: '"nullable" keyword is supported by default.',
      jsonPointers: 'Deprecated jsPropertySyntax can be used instead.',
      extendRefs: 'Deprecated ignoreKeywordsWithRef can be used instead.',
      missingRefs:
        'Pass empty schema with $id that should be ignored to ajv.addSchema.',
      processCode:
        'Use option `code: {process: (code, schemaEnv: object) => string}`',
      sourceCode: 'Use option `code: {source: true}`',
      strictDefaults: 'It is default now, see option `strict`.',
      strictKeywords: 'It is default now, see option `strict`.',
      uniqueItems: '"uniqueItems" keyword is always validated.',
      unknownFormats:
        'Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).',
      cache: 'Map is used as cache, schema object as key.',
      serialize: 'Map is used as cache, schema object as key.',
      ajvErrors: 'It is default now.',
    },
    pX = {
      ignoreKeywordsWithRef: '',
      jsPropertySyntax: '',
      unicode:
        '"minLength"/"maxLength" account for unicode characters by default.',
    },
    b$ = 200;
  function mX(e) {
    var t,
      r,
      n,
      i,
      s,
      o,
      a,
      u,
      c,
      d,
      m,
      g,
      v,
      S,
      w,
      T,
      C,
      I,
      x,
      E,
      j,
      q,
      O,
      F,
      U;
    let D = e.strict,
      G = (t = e.code) === null || t === void 0 ? void 0 : t.optimize,
      Y = G === !0 || G === void 0 ? 1 : G || 0,
      W =
        (n = (r = e.code) === null || r === void 0 ? void 0 : r.regExp) !==
          null && n !== void 0
          ? n
          : E$,
      de = (i = e.uriResolver) !== null && i !== void 0 ? i : cX.default;
    return {
      strictSchema:
        (o = (s = e.strictSchema) !== null && s !== void 0 ? s : D) !== null &&
        o !== void 0
          ? o
          : !0,
      strictNumbers:
        (u = (a = e.strictNumbers) !== null && a !== void 0 ? a : D) !== null &&
        u !== void 0
          ? u
          : !0,
      strictTypes:
        (d = (c = e.strictTypes) !== null && c !== void 0 ? c : D) !== null &&
        d !== void 0
          ? d
          : 'log',
      strictTuples:
        (g = (m = e.strictTuples) !== null && m !== void 0 ? m : D) !== null &&
        g !== void 0
          ? g
          : 'log',
      strictRequired:
        (S = (v = e.strictRequired) !== null && v !== void 0 ? v : D) !==
          null && S !== void 0
          ? S
          : !1,
      code: e.code
        ? { ...e.code, optimize: Y, regExp: W }
        : { optimize: Y, regExp: W },
      loopRequired: (w = e.loopRequired) !== null && w !== void 0 ? w : b$,
      loopEnum: (T = e.loopEnum) !== null && T !== void 0 ? T : b$,
      meta: (C = e.meta) !== null && C !== void 0 ? C : !0,
      messages: (I = e.messages) !== null && I !== void 0 ? I : !0,
      inlineRefs: (x = e.inlineRefs) !== null && x !== void 0 ? x : !0,
      schemaId: (E = e.schemaId) !== null && E !== void 0 ? E : '$id',
      addUsedSchema: (j = e.addUsedSchema) !== null && j !== void 0 ? j : !0,
      validateSchema: (q = e.validateSchema) !== null && q !== void 0 ? q : !0,
      validateFormats:
        (O = e.validateFormats) !== null && O !== void 0 ? O : !0,
      unicodeRegExp: (F = e.unicodeRegExp) !== null && F !== void 0 ? F : !0,
      int32range: (U = e.int32range) !== null && U !== void 0 ? U : !0,
      uriResolver: de,
    };
  }
  var Rd = class {
    constructor(t = {}) {
      (this.schemas = {}),
        (this.refs = {}),
        (this.formats = {}),
        (this._compilations = new Set()),
        (this._loading = {}),
        (this._cache = new Map()),
        (t = this.opts = { ...t, ...mX(t) });
      let { es5: r, lines: n } = this.opts.code;
      (this.scope = new uX.ValueScope({
        scope: {},
        prefixes: dX,
        es5: r,
        lines: n,
      })),
        (this.logger = _X(t.logger));
      let i = t.validateFormats;
      (t.validateFormats = !1),
        (this.RULES = (0, lX.getRules)()),
        S$.call(this, hX, t, 'NOT SUPPORTED'),
        S$.call(this, pX, t, 'DEPRECATED', 'warn'),
        (this._metaOpts = bX.call(this)),
        t.formats && gX.call(this),
        this._addVocabularies(),
        this._addDefaultMetaSchema(),
        t.keywords && vX.call(this, t.keywords),
        typeof t.meta == 'object' && this.addMetaSchema(t.meta),
        yX.call(this),
        (t.validateFormats = i);
    }
    _addVocabularies() {
      this.addKeyword('$async');
    }
    _addDefaultMetaSchema() {
      let { $data: t, meta: r, schemaId: n } = this.opts,
        i = v$;
      n === 'id' && ((i = { ...v$ }), (i.id = i.$id), delete i.$id),
        r && t && this.addMetaSchema(i, i[n], !1);
    }
    defaultMeta() {
      let { meta: t, schemaId: r } = this.opts;
      return (this.opts.defaultMeta =
        typeof t == 'object' ? t[r] || t : void 0);
    }
    validate(t, r) {
      let n;
      if (typeof t == 'string') {
        if (((n = this.getSchema(t)), !n))
          throw new Error(`no schema with key or ref "${t}"`);
      } else n = this.compile(t);
      let i = n(r);
      return '$async' in n || (this.errors = n.errors), i;
    }
    compile(t, r) {
      let n = this._addSchema(t, r);
      return n.validate || this._compileSchemaEnv(n);
    }
    compileAsync(t, r) {
      if (typeof this.opts.loadSchema != 'function')
        throw new Error('options.loadSchema should be a function');
      let { loadSchema: n } = this.opts;
      return i.call(this, t, r);
      async function i(d, m) {
        await s.call(this, d.$schema);
        let g = this._addSchema(d, m);
        return g.validate || o.call(this, g);
      }
      async function s(d) {
        d && !this.getSchema(d) && (await i.call(this, { $ref: d }, !0));
      }
      async function o(d) {
        try {
          return this._compileSchemaEnv(d);
        } catch (m) {
          if (!(m instanceof w$.default)) throw m;
          return (
            a.call(this, m),
            await u.call(this, m.missingSchema),
            o.call(this, d)
          );
        }
      }
      function a({ missingSchema: d, missingRef: m }) {
        if (this.refs[d])
          throw new Error(
            `AnySchema ${d} is loaded but ${m} cannot be resolved`,
          );
      }
      async function u(d) {
        let m = await c.call(this, d);
        this.refs[d] || (await s.call(this, m.$schema)),
          this.refs[d] || this.addSchema(m, d, r);
      }
      async function c(d) {
        let m = this._loading[d];
        if (m) return m;
        try {
          return await (this._loading[d] = n(d));
        } finally {
          delete this._loading[d];
        }
      }
    }
    addSchema(t, r, n, i = this.opts.validateSchema) {
      if (Array.isArray(t)) {
        for (let o of t) this.addSchema(o, void 0, n, i);
        return this;
      }
      let s;
      if (typeof t == 'object') {
        let { schemaId: o } = this.opts;
        if (((s = t[o]), s !== void 0 && typeof s != 'string'))
          throw new Error(`schema ${o} must be string`);
      }
      return (
        (r = (0, Ed.normalizeId)(r || s)),
        this._checkUnique(r),
        (this.schemas[r] = this._addSchema(t, n, r, i, !0)),
        this
      );
    }
    addMetaSchema(t, r, n = this.opts.validateSchema) {
      return this.addSchema(t, r, !0, n), this;
    }
    validateSchema(t, r) {
      if (typeof t == 'boolean') return !0;
      let n;
      if (((n = t.$schema), n !== void 0 && typeof n != 'string'))
        throw new Error('$schema must be a string');
      if (((n = n || this.opts.defaultMeta || this.defaultMeta()), !n))
        return (
          this.logger.warn('meta-schema not available'),
          (this.errors = null),
          !0
        );
      let i = this.validate(n, t);
      if (!i && r) {
        let s = 'schema is invalid: ' + this.errorsText();
        if (this.opts.validateSchema === 'log') this.logger.error(s);
        else throw new Error(s);
      }
      return i;
    }
    getSchema(t) {
      let r;
      for (; typeof (r = _$.call(this, t)) == 'string'; ) t = r;
      if (r === void 0) {
        let { schemaId: n } = this.opts,
          i = new wd.SchemaEnv({ schema: {}, schemaId: n });
        if (((r = wd.resolveSchema.call(this, i, t)), !r)) return;
        this.refs[t] = r;
      }
      return r.validate || this._compileSchemaEnv(r);
    }
    removeSchema(t) {
      if (t instanceof RegExp)
        return (
          this._removeAllSchemas(this.schemas, t),
          this._removeAllSchemas(this.refs, t),
          this
        );
      switch (typeof t) {
        case 'undefined':
          return (
            this._removeAllSchemas(this.schemas),
            this._removeAllSchemas(this.refs),
            this._cache.clear(),
            this
          );
        case 'string': {
          let r = _$.call(this, t);
          return (
            typeof r == 'object' && this._cache.delete(r.schema),
            delete this.schemas[t],
            delete this.refs[t],
            this
          );
        }
        case 'object': {
          let r = t;
          this._cache.delete(r);
          let n = t[this.opts.schemaId];
          return (
            n &&
              ((n = (0, Ed.normalizeId)(n)),
              delete this.schemas[n],
              delete this.refs[n]),
            this
          );
        }
        default:
          throw new Error('ajv.removeSchema: invalid parameter');
      }
    }
    addVocabulary(t) {
      for (let r of t) this.addKeyword(r);
      return this;
    }
    addKeyword(t, r) {
      let n;
      if (typeof t == 'string')
        (n = t),
          typeof r == 'object' &&
            (this.logger.warn(
              'these parameters are deprecated, see docs for addKeyword',
            ),
            (r.keyword = n));
      else if (typeof t == 'object' && r === void 0) {
        if (((r = t), (n = r.keyword), Array.isArray(n) && !n.length))
          throw new Error(
            'addKeywords: keyword must be string or non-empty array',
          );
      } else throw new Error('invalid addKeywords parameters');
      if ((EX.call(this, n, r), !r))
        return (0, q_.eachItem)(n, (s) => F_.call(this, s)), this;
      TX.call(this, r);
      let i = {
        ...r,
        type: (0, Qm.getJSONTypes)(r.type),
        schemaType: (0, Qm.getJSONTypes)(r.schemaType),
      };
      return (
        (0, q_.eachItem)(
          n,
          i.type.length === 0
            ? (s) => F_.call(this, s, i)
            : (s) => i.type.forEach((o) => F_.call(this, s, i, o)),
        ),
        this
      );
    }
    getKeyword(t) {
      let r = this.RULES.all[t];
      return typeof r == 'object' ? r.definition : !!r;
    }
    removeKeyword(t) {
      let { RULES: r } = this;
      delete r.keywords[t], delete r.all[t];
      for (let n of r.rules) {
        let i = n.rules.findIndex((s) => s.keyword === t);
        i >= 0 && n.rules.splice(i, 1);
      }
      return this;
    }
    addFormat(t, r) {
      return (
        typeof r == 'string' && (r = new RegExp(r)), (this.formats[t] = r), this
      );
    }
    errorsText(
      t = this.errors,
      { separator: r = ', ', dataVar: n = 'data' } = {},
    ) {
      return !t || t.length === 0
        ? 'No errors'
        : t
            .map((i) => `${n}${i.instancePath} ${i.message}`)
            .reduce((i, s) => i + r + s);
    }
    $dataMetaSchema(t, r) {
      let n = this.RULES.all;
      t = JSON.parse(JSON.stringify(t));
      for (let i of r) {
        let s = i.split('/').slice(1),
          o = t;
        for (let a of s) o = o[a];
        for (let a in n) {
          let u = n[a];
          if (typeof u != 'object') continue;
          let { $data: c } = u.definition,
            d = o[a];
          c && d && (o[a] = R$(d));
        }
      }
      return t;
    }
    _removeAllSchemas(t, r) {
      for (let n in t) {
        let i = t[n];
        (!r || r.test(n)) &&
          (typeof i == 'string'
            ? delete t[n]
            : i && !i.meta && (this._cache.delete(i.schema), delete t[n]));
      }
    }
    _addSchema(
      t,
      r,
      n,
      i = this.opts.validateSchema,
      s = this.opts.addUsedSchema,
    ) {
      let o,
        { schemaId: a } = this.opts;
      if (typeof t == 'object') o = t[a];
      else {
        if (this.opts.jtd) throw new Error('schema must be object');
        if (typeof t != 'boolean')
          throw new Error('schema must be object or boolean');
      }
      let u = this._cache.get(t);
      if (u !== void 0) return u;
      n = (0, Ed.normalizeId)(o || n);
      let c = Ed.getSchemaRefs.call(this, t, n);
      return (
        (u = new wd.SchemaEnv({
          schema: t,
          schemaId: a,
          meta: r,
          baseId: n,
          localRefs: c,
        })),
        this._cache.set(u.schema, u),
        s &&
          !n.startsWith('#') &&
          (n && this._checkUnique(n), (this.refs[n] = u)),
        i && this.validateSchema(t, !0),
        u
      );
    }
    _checkUnique(t) {
      if (this.schemas[t] || this.refs[t])
        throw new Error(`schema with key or id "${t}" already exists`);
    }
    _compileSchemaEnv(t) {
      if (
        (t.meta ? this._compileMetaSchema(t) : wd.compileSchema.call(this, t),
        !t.validate)
      )
        throw new Error('ajv implementation error');
      return t.validate;
    }
    _compileMetaSchema(t) {
      let r = this.opts;
      this.opts = this._metaOpts;
      try {
        wd.compileSchema.call(this, t);
      } finally {
        this.opts = r;
      }
    }
  };
  Rd.ValidationError = aX.default;
  Rd.MissingRefError = w$.default;
  ur.default = Rd;
  function S$(e, t, r, n = 'error') {
    for (let i in e) {
      let s = i;
      s in t && this.logger[n](`${r}: option ${i}. ${e[s]}`);
    }
  }
  function _$(e) {
    return (e = (0, Ed.normalizeId)(e)), this.schemas[e] || this.refs[e];
  }
  function yX() {
    let e = this.opts.schemas;
    if (e)
      if (Array.isArray(e)) this.addSchema(e);
      else for (let t in e) this.addSchema(e[t], t);
  }
  function gX() {
    for (let e in this.opts.formats) {
      let t = this.opts.formats[e];
      t && this.addFormat(e, t);
    }
  }
  function vX(e) {
    if (Array.isArray(e)) {
      this.addVocabulary(e);
      return;
    }
    this.logger.warn('keywords option as map is deprecated, pass array');
    for (let t in e) {
      let r = e[t];
      r.keyword || (r.keyword = t), this.addKeyword(r);
    }
  }
  function bX() {
    let e = { ...this.opts };
    for (let t of fX) delete e[t];
    return e;
  }
  var SX = { log() {}, warn() {}, error() {} };
  function _X(e) {
    if (e === !1) return SX;
    if (e === void 0) return console;
    if (e.log && e.warn && e.error) return e;
    throw new Error('logger must implement log, warn and error methods');
  }
  var wX = /^[a-z_$][a-z0-9_$:-]*$/i;
  function EX(e, t) {
    let { RULES: r } = this;
    if (
      ((0, q_.eachItem)(e, (n) => {
        if (r.keywords[n]) throw new Error(`Keyword ${n} is already defined`);
        if (!wX.test(n)) throw new Error(`Keyword ${n} has invalid name`);
      }),
      !!t && t.$data && !('code' in t || 'validate' in t))
    )
      throw new Error('$data keyword must have "code" or "validate" function');
  }
  function F_(e, t, r) {
    var n;
    let i = t?.post;
    if (r && i) throw new Error('keyword with "post" flag cannot have "type"');
    let { RULES: s } = this,
      o = i ? s.post : s.rules.find(({ type: u }) => u === r);
    if (
      (o || ((o = { type: r, rules: [] }), s.rules.push(o)),
      (s.keywords[e] = !0),
      !t)
    )
      return;
    let a = {
      keyword: e,
      definition: {
        ...t,
        type: (0, Qm.getJSONTypes)(t.type),
        schemaType: (0, Qm.getJSONTypes)(t.schemaType),
      },
    };
    t.before ? RX.call(this, o, a, t.before) : o.rules.push(a),
      (s.all[e] = a),
      (n = t.implements) === null ||
        n === void 0 ||
        n.forEach((u) => this.addKeyword(u));
  }
  function RX(e, t, r) {
    let n = e.rules.findIndex((i) => i.keyword === r);
    n >= 0
      ? e.rules.splice(n, 0, t)
      : (e.rules.push(t), this.logger.warn(`rule ${r} is not defined`));
  }
  function TX(e) {
    let { metaSchema: t } = e;
    t !== void 0 &&
      (e.$data && this.opts.$data && (t = R$(t)),
      (e.validateSchema = this.compile(t, !0)));
  }
  var PX = {
    $ref: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#',
  };
  function R$(e) {
    return { anyOf: [e, PX] };
  }
});
var T$ = $((H_) => {
  'use strict';
  Object.defineProperty(H_, '__esModule', { value: !0 });
  var kX = {
    keyword: 'id',
    code() {
      throw new Error('NOT SUPPORTED: keyword "id", use "$id" for schema ID');
    },
  };
  H_.default = kX;
});
var z_ = $((Va) => {
  'use strict';
  Object.defineProperty(Va, '__esModule', { value: !0 });
  Va.callRef = Va.getValidate = void 0;
  var xX = ai(),
    P$ = lr(),
    nn = be(),
    xu = Cn(),
    k$ = Ua(),
    ey = xe(),
    CX = {
      keyword: '$ref',
      schemaType: 'string',
      code(e) {
        let { gen: t, schema: r, it: n } = e,
          { baseId: i, schemaEnv: s, validateName: o, opts: a, self: u } = n,
          { root: c } = s;
        if ((r === '#' || r === '#/') && i === c.baseId) return m();
        let d = k$.resolveRef.call(u, c, i, r);
        if (d === void 0) throw new xX.default(n.opts.uriResolver, i, r);
        if (d instanceof k$.SchemaEnv) return g(d);
        return v(d);
        function m() {
          if (s === c) return ty(e, o, s, s.$async);
          let S = t.scopeValue('root', { ref: c });
          return ty(e, (0, nn._)`${S}.validate`, c, c.$async);
        }
        function g(S) {
          let w = x$(e, S);
          ty(e, w, S, S.$async);
        }
        function v(S) {
          let w = t.scopeValue(
              'schema',
              a.code.source === !0
                ? { ref: S, code: (0, nn.stringify)(S) }
                : { ref: S },
            ),
            T = t.name('valid'),
            C = e.subschema(
              {
                schema: S,
                dataTypes: [],
                schemaPath: nn.nil,
                topSchemaRef: w,
                errSchemaPath: r,
              },
              T,
            );
          e.mergeEvaluated(C), e.ok(T);
        }
      },
    };
  function x$(e, t) {
    let { gen: r } = e;
    return t.validate
      ? r.scopeValue('validate', { ref: t.validate })
      : (0, nn._)`${r.scopeValue('wrapper', { ref: t })}.validate`;
  }
  Va.getValidate = x$;
  function ty(e, t, r, n) {
    let { gen: i, it: s } = e,
      { allErrors: o, schemaEnv: a, opts: u } = s,
      c = u.passContext ? xu.default.this : nn.nil;
    n ? d() : m();
    function d() {
      if (!a.$async) throw new Error('async schema referenced by sync schema');
      let S = i.let('valid');
      i.try(
        () => {
          i.code((0, nn._)`await ${(0, P$.callValidateCode)(e, t, c)}`),
            v(t),
            o || i.assign(S, !0);
        },
        (w) => {
          i.if((0, nn._)`!(${w} instanceof ${s.ValidationError})`, () =>
            i.throw(w),
          ),
            g(w),
            o || i.assign(S, !1);
        },
      ),
        e.ok(S);
    }
    function m() {
      e.result(
        (0, P$.callValidateCode)(e, t, c),
        () => v(t),
        () => g(t),
      );
    }
    function g(S) {
      let w = (0, nn._)`${S}.errors`;
      i.assign(
        xu.default.vErrors,
        (0,
        nn._)`${xu.default.vErrors} === null ? ${w} : ${xu.default.vErrors}.concat(${w})`,
      ),
        i.assign(xu.default.errors, (0, nn._)`${xu.default.vErrors}.length`);
    }
    function v(S) {
      var w;
      if (!s.opts.unevaluated) return;
      let T = (w = r?.validate) === null || w === void 0 ? void 0 : w.evaluated;
      if (s.props !== !0)
        if (T && !T.dynamicProps)
          T.props !== void 0 &&
            (s.props = ey.mergeEvaluated.props(i, T.props, s.props));
        else {
          let C = i.var('props', (0, nn._)`${S}.evaluated.props`);
          s.props = ey.mergeEvaluated.props(i, C, s.props, nn.Name);
        }
      if (s.items !== !0)
        if (T && !T.dynamicItems)
          T.items !== void 0 &&
            (s.items = ey.mergeEvaluated.items(i, T.items, s.items));
        else {
          let C = i.var('items', (0, nn._)`${S}.evaluated.items`);
          s.items = ey.mergeEvaluated.items(i, C, s.items, nn.Name);
        }
    }
  }
  Va.callRef = ty;
  Va.default = CX;
});
var C$ = $((U_) => {
  'use strict';
  Object.defineProperty(U_, '__esModule', { value: !0 });
  var OX = T$(),
    IX = z_(),
    AX = [
      '$schema',
      '$id',
      '$defs',
      '$vocabulary',
      { keyword: '$comment' },
      'definitions',
      OX.default,
      IX.default,
    ];
  U_.default = AX;
});
var O$ = $((V_) => {
  'use strict';
  Object.defineProperty(V_, '__esModule', { value: !0 });
  var ry = be(),
    wo = ry.operators,
    ny = {
      maximum: { okStr: '<=', ok: wo.LTE, fail: wo.GT },
      minimum: { okStr: '>=', ok: wo.GTE, fail: wo.LT },
      exclusiveMaximum: { okStr: '<', ok: wo.LT, fail: wo.GTE },
      exclusiveMinimum: { okStr: '>', ok: wo.GT, fail: wo.LTE },
    },
    $X = {
      message: ({ keyword: e, schemaCode: t }) =>
        (0, ry.str)`must be ${ny[e].okStr} ${t}`,
      params: ({ keyword: e, schemaCode: t }) =>
        (0, ry._)`{comparison: ${ny[e].okStr}, limit: ${t}}`,
    },
    NX = {
      keyword: Object.keys(ny),
      type: 'number',
      schemaType: 'number',
      $data: !0,
      error: $X,
      code(e) {
        let { keyword: t, data: r, schemaCode: n } = e;
        e.fail$data((0, ry._)`${r} ${ny[t].fail} ${n} || isNaN(${r})`);
      },
    };
  V_.default = NX;
});
var I$ = $((B_) => {
  'use strict';
  Object.defineProperty(B_, '__esModule', { value: !0 });
  var Td = be(),
    LX = {
      message: ({ schemaCode: e }) => (0, Td.str)`must be multiple of ${e}`,
      params: ({ schemaCode: e }) => (0, Td._)`{multipleOf: ${e}}`,
    },
    DX = {
      keyword: 'multipleOf',
      type: 'number',
      schemaType: 'number',
      $data: !0,
      error: LX,
      code(e) {
        let { gen: t, data: r, schemaCode: n, it: i } = e,
          s = i.opts.multipleOfPrecision,
          o = t.let('res'),
          a = s
            ? (0, Td._)`Math.abs(Math.round(${o}) - ${o}) > 1e-${s}`
            : (0, Td._)`${o} !== parseInt(${o})`;
        e.fail$data((0, Td._)`(${n} === 0 || (${o} = ${r}/${n}, ${a}))`);
      },
    };
  B_.default = DX;
});
var $$ = $((W_) => {
  'use strict';
  Object.defineProperty(W_, '__esModule', { value: !0 });
  function A$(e) {
    let t = e.length,
      r = 0,
      n = 0,
      i;
    for (; n < t; )
      r++,
        (i = e.charCodeAt(n++)),
        i >= 55296 &&
          i <= 56319 &&
          n < t &&
          ((i = e.charCodeAt(n)), (i & 64512) === 56320 && n++);
    return r;
  }
  W_.default = A$;
  A$.code = 'require("ajv/dist/runtime/ucs2length").default';
});
var N$ = $((G_) => {
  'use strict';
  Object.defineProperty(G_, '__esModule', { value: !0 });
  var Ba = be(),
    jX = xe(),
    FX = $$(),
    qX = {
      message({ keyword: e, schemaCode: t }) {
        let r = e === 'maxLength' ? 'more' : 'fewer';
        return (0, Ba.str)`must NOT have ${r} than ${t} characters`;
      },
      params: ({ schemaCode: e }) => (0, Ba._)`{limit: ${e}}`,
    },
    MX = {
      keyword: ['maxLength', 'minLength'],
      type: 'string',
      schemaType: 'number',
      $data: !0,
      error: qX,
      code(e) {
        let { keyword: t, data: r, schemaCode: n, it: i } = e,
          s = t === 'maxLength' ? Ba.operators.GT : Ba.operators.LT,
          o =
            i.opts.unicode === !1
              ? (0, Ba._)`${r}.length`
              : (0, Ba._)`${(0, jX.useFunc)(e.gen, FX.default)}(${r})`;
        e.fail$data((0, Ba._)`${o} ${s} ${n}`);
      },
    };
  G_.default = MX;
});
var L$ = $((Y_) => {
  'use strict';
  Object.defineProperty(Y_, '__esModule', { value: !0 });
  var HX = lr(),
    sy = be(),
    zX = {
      message: ({ schemaCode: e }) => (0, sy.str)`must match pattern "${e}"`,
      params: ({ schemaCode: e }) => (0, sy._)`{pattern: ${e}}`,
    },
    UX = {
      keyword: 'pattern',
      type: 'string',
      schemaType: 'string',
      $data: !0,
      error: zX,
      code(e) {
        let { data: t, $data: r, schema: n, schemaCode: i, it: s } = e,
          o = s.opts.unicodeRegExp ? 'u' : '',
          a = r
            ? (0, sy._)`(new RegExp(${i}, ${o}))`
            : (0, HX.usePattern)(e, n);
        e.fail$data((0, sy._)`!${a}.test(${t})`);
      },
    };
  Y_.default = UX;
});
var D$ = $((J_) => {
  'use strict';
  Object.defineProperty(J_, '__esModule', { value: !0 });
  var Pd = be(),
    VX = {
      message({ keyword: e, schemaCode: t }) {
        let r = e === 'maxProperties' ? 'more' : 'fewer';
        return (0, Pd.str)`must NOT have ${r} than ${t} properties`;
      },
      params: ({ schemaCode: e }) => (0, Pd._)`{limit: ${e}}`,
    },
    BX = {
      keyword: ['maxProperties', 'minProperties'],
      type: 'object',
      schemaType: 'number',
      $data: !0,
      error: VX,
      code(e) {
        let { keyword: t, data: r, schemaCode: n } = e,
          i = t === 'maxProperties' ? Pd.operators.GT : Pd.operators.LT;
        e.fail$data((0, Pd._)`Object.keys(${r}).length ${i} ${n}`);
      },
    };
  J_.default = BX;
});
var j$ = $((K_) => {
  'use strict';
  Object.defineProperty(K_, '__esModule', { value: !0 });
  var kd = lr(),
    xd = be(),
    WX = xe(),
    GX = {
      message: ({ params: { missingProperty: e } }) =>
        (0, xd.str)`must have required property '${e}'`,
      params: ({ params: { missingProperty: e } }) =>
        (0, xd._)`{missingProperty: ${e}}`,
    },
    YX = {
      keyword: 'required',
      type: 'object',
      schemaType: 'array',
      $data: !0,
      error: GX,
      code(e) {
        let { gen: t, schema: r, schemaCode: n, data: i, $data: s, it: o } = e,
          { opts: a } = o;
        if (!s && r.length === 0) return;
        let u = r.length >= a.loopRequired;
        if ((o.allErrors ? c() : d(), a.strictRequired)) {
          let v = e.parentSchema.properties,
            { definedProperties: S } = e.it;
          for (let w of r)
            if (v?.[w] === void 0 && !S.has(w)) {
              let T = o.schemaEnv.baseId + o.errSchemaPath,
                C = `required property "${w}" is not defined at "${T}" (strictRequired)`;
              (0, WX.checkStrictMode)(o, C, o.opts.strictRequired);
            }
        }
        function c() {
          if (u || s) e.block$data(xd.nil, m);
          else for (let v of r) (0, kd.checkReportMissingProp)(e, v);
        }
        function d() {
          let v = t.let('missing');
          if (u || s) {
            let S = t.let('valid', !0);
            e.block$data(S, () => g(v, S)), e.ok(S);
          } else
            t.if((0, kd.checkMissingProp)(e, r, v)),
              (0, kd.reportMissingProp)(e, v),
              t.else();
        }
        function m() {
          t.forOf('prop', n, (v) => {
            e.setParams({ missingProperty: v }),
              t.if((0, kd.noPropertyInData)(t, i, v, a.ownProperties), () =>
                e.error(),
              );
          });
        }
        function g(v, S) {
          e.setParams({ missingProperty: v }),
            t.forOf(
              v,
              n,
              () => {
                t.assign(S, (0, kd.propertyInData)(t, i, v, a.ownProperties)),
                  t.if((0, xd.not)(S), () => {
                    e.error(), t.break();
                  });
              },
              xd.nil,
            );
        }
      },
    };
  K_.default = YX;
});
var F$ = $((X_) => {
  'use strict';
  Object.defineProperty(X_, '__esModule', { value: !0 });
  var Cd = be(),
    JX = {
      message({ keyword: e, schemaCode: t }) {
        let r = e === 'maxItems' ? 'more' : 'fewer';
        return (0, Cd.str)`must NOT have ${r} than ${t} items`;
      },
      params: ({ schemaCode: e }) => (0, Cd._)`{limit: ${e}}`,
    },
    KX = {
      keyword: ['maxItems', 'minItems'],
      type: 'array',
      schemaType: 'number',
      $data: !0,
      error: JX,
      code(e) {
        let { keyword: t, data: r, schemaCode: n } = e,
          i = t === 'maxItems' ? Cd.operators.GT : Cd.operators.LT;
        e.fail$data((0, Cd._)`${r}.length ${i} ${n}`);
      },
    };
  X_.default = KX;
});
var Od = $((Z_) => {
  'use strict';
  Object.defineProperty(Z_, '__esModule', { value: !0 });
  var q$ = mo();
  q$.code = 'require("ajv/dist/runtime/equal").default';
  Z_.default = q$;
});
var M$ = $((ew) => {
  'use strict';
  Object.defineProperty(ew, '__esModule', { value: !0 });
  var Q_ = yd(),
    cr = be(),
    XX = xe(),
    ZX = Od(),
    QX = {
      message: ({ params: { i: e, j: t } }) =>
        (0,
        cr.str)`must NOT have duplicate items (items ## ${t} and ${e} are identical)`,
      params: ({ params: { i: e, j: t } }) => (0, cr._)`{i: ${e}, j: ${t}}`,
    },
    eZ = {
      keyword: 'uniqueItems',
      type: 'array',
      schemaType: 'boolean',
      $data: !0,
      error: QX,
      code(e) {
        let {
          gen: t,
          data: r,
          $data: n,
          schema: i,
          parentSchema: s,
          schemaCode: o,
          it: a,
        } = e;
        if (!n && !i) return;
        let u = t.let('valid'),
          c = s.items ? (0, Q_.getSchemaTypes)(s.items) : [];
        e.block$data(u, d, (0, cr._)`${o} === false`), e.ok(u);
        function d() {
          let S = t.let('i', (0, cr._)`${r}.length`),
            w = t.let('j');
          e.setParams({ i: S, j: w }),
            t.assign(u, !0),
            t.if((0, cr._)`${S} > 1`, () => (m() ? g : v)(S, w));
        }
        function m() {
          return (
            c.length > 0 && !c.some((S) => S === 'object' || S === 'array')
          );
        }
        function g(S, w) {
          let T = t.name('item'),
            C = (0, Q_.checkDataTypes)(
              c,
              T,
              a.opts.strictNumbers,
              Q_.DataType.Wrong,
            ),
            I = t.const('indices', (0, cr._)`{}`);
          t.for((0, cr._)`;${S}--;`, () => {
            t.let(T, (0, cr._)`${r}[${S}]`),
              t.if(C, (0, cr._)`continue`),
              c.length > 1 &&
                t.if(
                  (0, cr._)`typeof ${T} == "string"`,
                  (0, cr._)`${T} += "_"`,
                ),
              t
                .if((0, cr._)`typeof ${I}[${T}] == "number"`, () => {
                  t.assign(w, (0, cr._)`${I}[${T}]`),
                    e.error(),
                    t.assign(u, !1).break();
                })
                .code((0, cr._)`${I}[${T}] = ${S}`);
          });
        }
        function v(S, w) {
          let T = (0, XX.useFunc)(t, ZX.default),
            C = t.name('outer');
          t.label(C).for((0, cr._)`;${S}--;`, () =>
            t.for((0, cr._)`${w} = ${S}; ${w}--;`, () =>
              t.if((0, cr._)`${T}(${r}[${S}], ${r}[${w}])`, () => {
                e.error(), t.assign(u, !1).break(C);
              }),
            ),
          );
        }
      },
    };
  ew.default = eZ;
});
var H$ = $((rw) => {
  'use strict';
  Object.defineProperty(rw, '__esModule', { value: !0 });
  var tw = be(),
    tZ = xe(),
    rZ = Od(),
    nZ = {
      message: 'must be equal to constant',
      params: ({ schemaCode: e }) => (0, tw._)`{allowedValue: ${e}}`,
    },
    sZ = {
      keyword: 'const',
      $data: !0,
      error: nZ,
      code(e) {
        let { gen: t, data: r, $data: n, schemaCode: i, schema: s } = e;
        n || (s && typeof s == 'object')
          ? e.fail$data(
              (0, tw._)`!${(0, tZ.useFunc)(t, rZ.default)}(${r}, ${i})`,
            )
          : e.fail((0, tw._)`${s} !== ${r}`);
      },
    };
  rw.default = sZ;
});
var z$ = $((nw) => {
  'use strict';
  Object.defineProperty(nw, '__esModule', { value: !0 });
  var Id = be(),
    iZ = xe(),
    oZ = Od(),
    aZ = {
      message: 'must be equal to one of the allowed values',
      params: ({ schemaCode: e }) => (0, Id._)`{allowedValues: ${e}}`,
    },
    lZ = {
      keyword: 'enum',
      schemaType: 'array',
      $data: !0,
      error: aZ,
      code(e) {
        let { gen: t, data: r, $data: n, schema: i, schemaCode: s, it: o } = e;
        if (!n && i.length === 0)
          throw new Error('enum must have non-empty array');
        let a = i.length >= o.opts.loopEnum,
          u,
          c = () => u ?? (u = (0, iZ.useFunc)(t, oZ.default)),
          d;
        if (a || n) (d = t.let('valid')), e.block$data(d, m);
        else {
          if (!Array.isArray(i)) throw new Error('ajv implementation error');
          let v = t.const('vSchema', s);
          d = (0, Id.or)(...i.map((S, w) => g(v, w)));
        }
        e.pass(d);
        function m() {
          t.assign(d, !1),
            t.forOf('v', s, (v) =>
              t.if((0, Id._)`${c()}(${r}, ${v})`, () =>
                t.assign(d, !0).break(),
              ),
            );
        }
        function g(v, S) {
          let w = i[S];
          return typeof w == 'object' && w !== null
            ? (0, Id._)`${c()}(${r}, ${v}[${S}])`
            : (0, Id._)`${r} === ${w}`;
        }
      },
    };
  nw.default = lZ;
});
var U$ = $((sw) => {
  'use strict';
  Object.defineProperty(sw, '__esModule', { value: !0 });
  var uZ = O$(),
    cZ = I$(),
    fZ = N$(),
    dZ = L$(),
    hZ = D$(),
    pZ = j$(),
    mZ = F$(),
    yZ = M$(),
    gZ = H$(),
    vZ = z$(),
    bZ = [
      uZ.default,
      cZ.default,
      fZ.default,
      dZ.default,
      hZ.default,
      pZ.default,
      mZ.default,
      yZ.default,
      { keyword: 'type', schemaType: ['string', 'array'] },
      { keyword: 'nullable', schemaType: 'boolean' },
      gZ.default,
      vZ.default,
    ];
  sw.default = bZ;
});
var ow = $((Ad) => {
  'use strict';
  Object.defineProperty(Ad, '__esModule', { value: !0 });
  Ad.validateAdditionalItems = void 0;
  var Wa = be(),
    iw = xe(),
    SZ = {
      message: ({ params: { len: e } }) =>
        (0, Wa.str)`must NOT have more than ${e} items`,
      params: ({ params: { len: e } }) => (0, Wa._)`{limit: ${e}}`,
    },
    _Z = {
      keyword: 'additionalItems',
      type: 'array',
      schemaType: ['boolean', 'object'],
      before: 'uniqueItems',
      error: SZ,
      code(e) {
        let { parentSchema: t, it: r } = e,
          { items: n } = t;
        if (!Array.isArray(n)) {
          (0, iw.checkStrictMode)(
            r,
            '"additionalItems" is ignored when "items" is not an array of schemas',
          );
          return;
        }
        V$(e, n);
      },
    };
  function V$(e, t) {
    let { gen: r, schema: n, data: i, keyword: s, it: o } = e;
    o.items = !0;
    let a = r.const('len', (0, Wa._)`${i}.length`);
    if (n === !1)
      e.setParams({ len: t.length }), e.pass((0, Wa._)`${a} <= ${t.length}`);
    else if (typeof n == 'object' && !(0, iw.alwaysValidSchema)(o, n)) {
      let c = r.var('valid', (0, Wa._)`${a} <= ${t.length}`);
      r.if((0, Wa.not)(c), () => u(c)), e.ok(c);
    }
    function u(c) {
      r.forRange('i', t.length, a, (d) => {
        e.subschema({ keyword: s, dataProp: d, dataPropType: iw.Type.Num }, c),
          o.allErrors || r.if((0, Wa.not)(c), () => r.break());
      });
    }
  }
  Ad.validateAdditionalItems = V$;
  Ad.default = _Z;
});
var aw = $(($d) => {
  'use strict';
  Object.defineProperty($d, '__esModule', { value: !0 });
  $d.validateTuple = void 0;
  var B$ = be(),
    iy = xe(),
    wZ = lr(),
    EZ = {
      keyword: 'items',
      type: 'array',
      schemaType: ['object', 'array', 'boolean'],
      before: 'uniqueItems',
      code(e) {
        let { schema: t, it: r } = e;
        if (Array.isArray(t)) return W$(e, 'additionalItems', t);
        (r.items = !0),
          !(0, iy.alwaysValidSchema)(r, t) && e.ok((0, wZ.validateArray)(e));
      },
    };
  function W$(e, t, r = e.schema) {
    let { gen: n, parentSchema: i, data: s, keyword: o, it: a } = e;
    d(i),
      a.opts.unevaluated &&
        r.length &&
        a.items !== !0 &&
        (a.items = iy.mergeEvaluated.items(n, r.length, a.items));
    let u = n.name('valid'),
      c = n.const('len', (0, B$._)`${s}.length`);
    r.forEach((m, g) => {
      (0, iy.alwaysValidSchema)(a, m) ||
        (n.if((0, B$._)`${c} > ${g}`, () =>
          e.subschema({ keyword: o, schemaProp: g, dataProp: g }, u),
        ),
        e.ok(u));
    });
    function d(m) {
      let { opts: g, errSchemaPath: v } = a,
        S = r.length,
        w = S === m.minItems && (S === m.maxItems || m[t] === !1);
      if (g.strictTuples && !w) {
        let T = `"${o}" is ${S}-tuple, but minItems or maxItems/${t} are not specified or different at path "${v}"`;
        (0, iy.checkStrictMode)(a, T, g.strictTuples);
      }
    }
  }
  $d.validateTuple = W$;
  $d.default = EZ;
});
var G$ = $((lw) => {
  'use strict';
  Object.defineProperty(lw, '__esModule', { value: !0 });
  var RZ = aw(),
    TZ = {
      keyword: 'prefixItems',
      type: 'array',
      schemaType: ['array'],
      before: 'uniqueItems',
      code: (e) => (0, RZ.validateTuple)(e, 'items'),
    };
  lw.default = TZ;
});
var J$ = $((uw) => {
  'use strict';
  Object.defineProperty(uw, '__esModule', { value: !0 });
  var Y$ = be(),
    PZ = xe(),
    kZ = lr(),
    xZ = ow(),
    CZ = {
      message: ({ params: { len: e } }) =>
        (0, Y$.str)`must NOT have more than ${e} items`,
      params: ({ params: { len: e } }) => (0, Y$._)`{limit: ${e}}`,
    },
    OZ = {
      keyword: 'items',
      type: 'array',
      schemaType: ['object', 'boolean'],
      before: 'uniqueItems',
      error: CZ,
      code(e) {
        let { schema: t, parentSchema: r, it: n } = e,
          { prefixItems: i } = r;
        (n.items = !0),
          !(0, PZ.alwaysValidSchema)(n, t) &&
            (i
              ? (0, xZ.validateAdditionalItems)(e, i)
              : e.ok((0, kZ.validateArray)(e)));
      },
    };
  uw.default = OZ;
});
var K$ = $((cw) => {
  'use strict';
  Object.defineProperty(cw, '__esModule', { value: !0 });
  var In = be(),
    oy = xe(),
    IZ = {
      message: ({ params: { min: e, max: t } }) =>
        t === void 0
          ? (0, In.str)`must contain at least ${e} valid item(s)`
          : (0,
            In.str)`must contain at least ${e} and no more than ${t} valid item(s)`,
      params: ({ params: { min: e, max: t } }) =>
        t === void 0
          ? (0, In._)`{minContains: ${e}}`
          : (0, In._)`{minContains: ${e}, maxContains: ${t}}`,
    },
    AZ = {
      keyword: 'contains',
      type: 'array',
      schemaType: ['object', 'boolean'],
      before: 'uniqueItems',
      trackErrors: !0,
      error: IZ,
      code(e) {
        let { gen: t, schema: r, parentSchema: n, data: i, it: s } = e,
          o,
          a,
          { minContains: u, maxContains: c } = n;
        s.opts.next ? ((o = u === void 0 ? 1 : u), (a = c)) : (o = 1);
        let d = t.const('len', (0, In._)`${i}.length`);
        if ((e.setParams({ min: o, max: a }), a === void 0 && o === 0)) {
          (0, oy.checkStrictMode)(
            s,
            '"minContains" == 0 without "maxContains": "contains" keyword ignored',
          );
          return;
        }
        if (a !== void 0 && o > a) {
          (0, oy.checkStrictMode)(
            s,
            '"minContains" > "maxContains" is always invalid',
          ),
            e.fail();
          return;
        }
        if ((0, oy.alwaysValidSchema)(s, r)) {
          let w = (0, In._)`${d} >= ${o}`;
          a !== void 0 && (w = (0, In._)`${w} && ${d} <= ${a}`), e.pass(w);
          return;
        }
        s.items = !0;
        let m = t.name('valid');
        a === void 0 && o === 1
          ? v(m, () => t.if(m, () => t.break()))
          : o === 0
            ? (t.let(m, !0),
              a !== void 0 && t.if((0, In._)`${i}.length > 0`, g))
            : (t.let(m, !1), g()),
          e.result(m, () => e.reset());
        function g() {
          let w = t.name('_valid'),
            T = t.let('count', 0);
          v(w, () => t.if(w, () => S(T)));
        }
        function v(w, T) {
          t.forRange('i', 0, d, (C) => {
            e.subschema(
              {
                keyword: 'contains',
                dataProp: C,
                dataPropType: oy.Type.Num,
                compositeRule: !0,
              },
              w,
            ),
              T();
          });
        }
        function S(w) {
          t.code((0, In._)`${w}++`),
            a === void 0
              ? t.if((0, In._)`${w} >= ${o}`, () => t.assign(m, !0).break())
              : (t.if((0, In._)`${w} > ${a}`, () => t.assign(m, !1).break()),
                o === 1
                  ? t.assign(m, !0)
                  : t.if((0, In._)`${w} >= ${o}`, () => t.assign(m, !0)));
        }
      },
    };
  cw.default = AZ;
});
var Q$ = $((Rs) => {
  'use strict';
  Object.defineProperty(Rs, '__esModule', { value: !0 });
  Rs.validateSchemaDeps = Rs.validatePropertyDeps = Rs.error = void 0;
  var fw = be(),
    $Z = xe(),
    Nd = lr();
  Rs.error = {
    message: ({ params: { property: e, depsCount: t, deps: r } }) => {
      let n = t === 1 ? 'property' : 'properties';
      return (0, fw.str)`must have ${n} ${r} when property ${e} is present`;
    },
    params: ({
      params: { property: e, depsCount: t, deps: r, missingProperty: n },
    }) => (0, fw._)`{property: ${e},
    missingProperty: ${n},
    depsCount: ${t},
    deps: ${r}}`,
  };
  var NZ = {
    keyword: 'dependencies',
    type: 'object',
    schemaType: 'object',
    error: Rs.error,
    code(e) {
      let [t, r] = LZ(e);
      X$(e, t), Z$(e, r);
    },
  };
  function LZ({ schema: e }) {
    let t = {},
      r = {};
    for (let n in e) {
      if (n === '__proto__') continue;
      let i = Array.isArray(e[n]) ? t : r;
      i[n] = e[n];
    }
    return [t, r];
  }
  function X$(e, t = e.schema) {
    let { gen: r, data: n, it: i } = e;
    if (Object.keys(t).length === 0) return;
    let s = r.let('missing');
    for (let o in t) {
      let a = t[o];
      if (a.length === 0) continue;
      let u = (0, Nd.propertyInData)(r, n, o, i.opts.ownProperties);
      e.setParams({ property: o, depsCount: a.length, deps: a.join(', ') }),
        i.allErrors
          ? r.if(u, () => {
              for (let c of a) (0, Nd.checkReportMissingProp)(e, c);
            })
          : (r.if((0, fw._)`${u} && (${(0, Nd.checkMissingProp)(e, a, s)})`),
            (0, Nd.reportMissingProp)(e, s),
            r.else());
    }
  }
  Rs.validatePropertyDeps = X$;
  function Z$(e, t = e.schema) {
    let { gen: r, data: n, keyword: i, it: s } = e,
      o = r.name('valid');
    for (let a in t)
      (0, $Z.alwaysValidSchema)(s, t[a]) ||
        (r.if(
          (0, Nd.propertyInData)(r, n, a, s.opts.ownProperties),
          () => {
            let u = e.subschema({ keyword: i, schemaProp: a }, o);
            e.mergeValidEvaluated(u, o);
          },
          () => r.var(o, !0),
        ),
        e.ok(o));
  }
  Rs.validateSchemaDeps = Z$;
  Rs.default = NZ;
});
var tN = $((dw) => {
  'use strict';
  Object.defineProperty(dw, '__esModule', { value: !0 });
  var eN = be(),
    DZ = xe(),
    jZ = {
      message: 'property name must be valid',
      params: ({ params: e }) => (0, eN._)`{propertyName: ${e.propertyName}}`,
    },
    FZ = {
      keyword: 'propertyNames',
      type: 'object',
      schemaType: ['object', 'boolean'],
      error: jZ,
      code(e) {
        let { gen: t, schema: r, data: n, it: i } = e;
        if ((0, DZ.alwaysValidSchema)(i, r)) return;
        let s = t.name('valid');
        t.forIn('key', n, (o) => {
          e.setParams({ propertyName: o }),
            e.subschema(
              {
                keyword: 'propertyNames',
                data: o,
                dataTypes: ['string'],
                propertyName: o,
                compositeRule: !0,
              },
              s,
            ),
            t.if((0, eN.not)(s), () => {
              e.error(!0), i.allErrors || t.break();
            });
        }),
          e.ok(s);
      },
    };
  dw.default = FZ;
});
var pw = $((hw) => {
  'use strict';
  Object.defineProperty(hw, '__esModule', { value: !0 });
  var ay = lr(),
    rs = be(),
    qZ = Cn(),
    ly = xe(),
    MZ = {
      message: 'must NOT have additional properties',
      params: ({ params: e }) =>
        (0, rs._)`{additionalProperty: ${e.additionalProperty}}`,
    },
    HZ = {
      keyword: 'additionalProperties',
      type: ['object'],
      schemaType: ['boolean', 'object'],
      allowUndefined: !0,
      trackErrors: !0,
      error: MZ,
      code(e) {
        let {
          gen: t,
          schema: r,
          parentSchema: n,
          data: i,
          errsCount: s,
          it: o,
        } = e;
        if (!s) throw new Error('ajv implementation error');
        let { allErrors: a, opts: u } = o;
        if (
          ((o.props = !0),
          u.removeAdditional !== 'all' && (0, ly.alwaysValidSchema)(o, r))
        )
          return;
        let c = (0, ay.allSchemaProperties)(n.properties),
          d = (0, ay.allSchemaProperties)(n.patternProperties);
        m(), e.ok((0, rs._)`${s} === ${qZ.default.errors}`);
        function m() {
          t.forIn('key', i, (T) => {
            !c.length && !d.length ? S(T) : t.if(g(T), () => S(T));
          });
        }
        function g(T) {
          let C;
          if (c.length > 8) {
            let I = (0, ly.schemaRefOrVal)(o, n.properties, 'properties');
            C = (0, ay.isOwnProperty)(t, I, T);
          } else
            c.length
              ? (C = (0, rs.or)(...c.map((I) => (0, rs._)`${T} === ${I}`)))
              : (C = rs.nil);
          return (
            d.length &&
              (C = (0, rs.or)(
                C,
                ...d.map(
                  (I) => (0, rs._)`${(0, ay.usePattern)(e, I)}.test(${T})`,
                ),
              )),
            (0, rs.not)(C)
          );
        }
        function v(T) {
          t.code((0, rs._)`delete ${i}[${T}]`);
        }
        function S(T) {
          if (
            u.removeAdditional === 'all' ||
            (u.removeAdditional && r === !1)
          ) {
            v(T);
            return;
          }
          if (r === !1) {
            e.setParams({ additionalProperty: T }), e.error(), a || t.break();
            return;
          }
          if (typeof r == 'object' && !(0, ly.alwaysValidSchema)(o, r)) {
            let C = t.name('valid');
            u.removeAdditional === 'failing'
              ? (w(T, C, !1),
                t.if((0, rs.not)(C), () => {
                  e.reset(), v(T);
                }))
              : (w(T, C), a || t.if((0, rs.not)(C), () => t.break()));
          }
        }
        function w(T, C, I) {
          let x = {
            keyword: 'additionalProperties',
            dataProp: T,
            dataPropType: ly.Type.Str,
          };
          I === !1 &&
            Object.assign(x, {
              compositeRule: !0,
              createErrors: !1,
              allErrors: !1,
            }),
            e.subschema(x, C);
        }
      },
    };
  hw.default = HZ;
});
var sN = $((yw) => {
  'use strict';
  Object.defineProperty(yw, '__esModule', { value: !0 });
  var zZ = Tu(),
    rN = lr(),
    mw = xe(),
    nN = pw(),
    UZ = {
      keyword: 'properties',
      type: 'object',
      schemaType: 'object',
      code(e) {
        let { gen: t, schema: r, parentSchema: n, data: i, it: s } = e;
        s.opts.removeAdditional === 'all' &&
          n.additionalProperties === void 0 &&
          nN.default.code(
            new zZ.KeywordCxt(s, nN.default, 'additionalProperties'),
          );
        let o = (0, rN.allSchemaProperties)(r);
        for (let m of o) s.definedProperties.add(m);
        s.opts.unevaluated &&
          o.length &&
          s.props !== !0 &&
          (s.props = mw.mergeEvaluated.props(t, (0, mw.toHash)(o), s.props));
        let a = o.filter((m) => !(0, mw.alwaysValidSchema)(s, r[m]));
        if (a.length === 0) return;
        let u = t.name('valid');
        for (let m of a)
          c(m)
            ? d(m)
            : (t.if((0, rN.propertyInData)(t, i, m, s.opts.ownProperties)),
              d(m),
              s.allErrors || t.else().var(u, !0),
              t.endIf()),
            e.it.definedProperties.add(m),
            e.ok(u);
        function c(m) {
          return (
            s.opts.useDefaults && !s.compositeRule && r[m].default !== void 0
          );
        }
        function d(m) {
          e.subschema({ keyword: 'properties', schemaProp: m, dataProp: m }, u);
        }
      },
    };
  yw.default = UZ;
});
var lN = $((gw) => {
  'use strict';
  Object.defineProperty(gw, '__esModule', { value: !0 });
  var iN = lr(),
    uy = be(),
    oN = xe(),
    aN = xe(),
    VZ = {
      keyword: 'patternProperties',
      type: 'object',
      schemaType: 'object',
      code(e) {
        let { gen: t, schema: r, data: n, parentSchema: i, it: s } = e,
          { opts: o } = s,
          a = (0, iN.allSchemaProperties)(r),
          u = a.filter((w) => (0, oN.alwaysValidSchema)(s, r[w]));
        if (
          a.length === 0 ||
          (u.length === a.length && (!s.opts.unevaluated || s.props === !0))
        )
          return;
        let c = o.strictSchema && !o.allowMatchingProperties && i.properties,
          d = t.name('valid');
        s.props !== !0 &&
          !(s.props instanceof uy.Name) &&
          (s.props = (0, aN.evaluatedPropsToName)(t, s.props));
        let { props: m } = s;
        g();
        function g() {
          for (let w of a)
            c && v(w), s.allErrors ? S(w) : (t.var(d, !0), S(w), t.if(d));
        }
        function v(w) {
          for (let T in c)
            new RegExp(w).test(T) &&
              (0, oN.checkStrictMode)(
                s,
                `property ${T} matches pattern ${w} (use allowMatchingProperties)`,
              );
        }
        function S(w) {
          t.forIn('key', n, (T) => {
            t.if((0, uy._)`${(0, iN.usePattern)(e, w)}.test(${T})`, () => {
              let C = u.includes(w);
              C ||
                e.subschema(
                  {
                    keyword: 'patternProperties',
                    schemaProp: w,
                    dataProp: T,
                    dataPropType: aN.Type.Str,
                  },
                  d,
                ),
                s.opts.unevaluated && m !== !0
                  ? t.assign((0, uy._)`${m}[${T}]`, !0)
                  : !C && !s.allErrors && t.if((0, uy.not)(d), () => t.break());
            });
          });
        }
      },
    };
  gw.default = VZ;
});
var uN = $((vw) => {
  'use strict';
  Object.defineProperty(vw, '__esModule', { value: !0 });
  var BZ = xe(),
    WZ = {
      keyword: 'not',
      schemaType: ['object', 'boolean'],
      trackErrors: !0,
      code(e) {
        let { gen: t, schema: r, it: n } = e;
        if ((0, BZ.alwaysValidSchema)(n, r)) {
          e.fail();
          return;
        }
        let i = t.name('valid');
        e.subschema(
          {
            keyword: 'not',
            compositeRule: !0,
            createErrors: !1,
            allErrors: !1,
          },
          i,
        ),
          e.failResult(
            i,
            () => e.reset(),
            () => e.error(),
          );
      },
      error: { message: 'must NOT be valid' },
    };
  vw.default = WZ;
});
var cN = $((bw) => {
  'use strict';
  Object.defineProperty(bw, '__esModule', { value: !0 });
  var GZ = lr(),
    YZ = {
      keyword: 'anyOf',
      schemaType: 'array',
      trackErrors: !0,
      code: GZ.validateUnion,
      error: { message: 'must match a schema in anyOf' },
    };
  bw.default = YZ;
});
var fN = $((Sw) => {
  'use strict';
  Object.defineProperty(Sw, '__esModule', { value: !0 });
  var cy = be(),
    JZ = xe(),
    KZ = {
      message: 'must match exactly one schema in oneOf',
      params: ({ params: e }) => (0, cy._)`{passingSchemas: ${e.passing}}`,
    },
    XZ = {
      keyword: 'oneOf',
      schemaType: 'array',
      trackErrors: !0,
      error: KZ,
      code(e) {
        let { gen: t, schema: r, parentSchema: n, it: i } = e;
        if (!Array.isArray(r)) throw new Error('ajv implementation error');
        if (i.opts.discriminator && n.discriminator) return;
        let s = r,
          o = t.let('valid', !1),
          a = t.let('passing', null),
          u = t.name('_valid');
        e.setParams({ passing: a }),
          t.block(c),
          e.result(
            o,
            () => e.reset(),
            () => e.error(!0),
          );
        function c() {
          s.forEach((d, m) => {
            let g;
            (0, JZ.alwaysValidSchema)(i, d)
              ? t.var(u, !0)
              : (g = e.subschema(
                  { keyword: 'oneOf', schemaProp: m, compositeRule: !0 },
                  u,
                )),
              m > 0 &&
                t
                  .if((0, cy._)`${u} && ${o}`)
                  .assign(o, !1)
                  .assign(a, (0, cy._)`[${a}, ${m}]`)
                  .else(),
              t.if(u, () => {
                t.assign(o, !0),
                  t.assign(a, m),
                  g && e.mergeEvaluated(g, cy.Name);
              });
          });
        }
      },
    };
  Sw.default = XZ;
});
var dN = $((_w) => {
  'use strict';
  Object.defineProperty(_w, '__esModule', { value: !0 });
  var ZZ = xe(),
    QZ = {
      keyword: 'allOf',
      schemaType: 'array',
      code(e) {
        let { gen: t, schema: r, it: n } = e;
        if (!Array.isArray(r)) throw new Error('ajv implementation error');
        let i = t.name('valid');
        r.forEach((s, o) => {
          if ((0, ZZ.alwaysValidSchema)(n, s)) return;
          let a = e.subschema({ keyword: 'allOf', schemaProp: o }, i);
          e.ok(i), e.mergeEvaluated(a);
        });
      },
    };
  _w.default = QZ;
});
var mN = $((ww) => {
  'use strict';
  Object.defineProperty(ww, '__esModule', { value: !0 });
  var fy = be(),
    pN = xe(),
    eQ = {
      message: ({ params: e }) =>
        (0, fy.str)`must match "${e.ifClause}" schema`,
      params: ({ params: e }) => (0, fy._)`{failingKeyword: ${e.ifClause}}`,
    },
    tQ = {
      keyword: 'if',
      schemaType: ['object', 'boolean'],
      trackErrors: !0,
      error: eQ,
      code(e) {
        let { gen: t, parentSchema: r, it: n } = e;
        r.then === void 0 &&
          r.else === void 0 &&
          (0, pN.checkStrictMode)(
            n,
            '"if" without "then" and "else" is ignored',
          );
        let i = hN(n, 'then'),
          s = hN(n, 'else');
        if (!i && !s) return;
        let o = t.let('valid', !0),
          a = t.name('_valid');
        if ((u(), e.reset(), i && s)) {
          let d = t.let('ifClause');
          e.setParams({ ifClause: d }), t.if(a, c('then', d), c('else', d));
        } else i ? t.if(a, c('then')) : t.if((0, fy.not)(a), c('else'));
        e.pass(o, () => e.error(!0));
        function u() {
          let d = e.subschema(
            {
              keyword: 'if',
              compositeRule: !0,
              createErrors: !1,
              allErrors: !1,
            },
            a,
          );
          e.mergeEvaluated(d);
        }
        function c(d, m) {
          return () => {
            let g = e.subschema({ keyword: d }, a);
            t.assign(o, a),
              e.mergeValidEvaluated(g, o),
              m ? t.assign(m, (0, fy._)`${d}`) : e.setParams({ ifClause: d });
          };
        }
      },
    };
  function hN(e, t) {
    let r = e.schema[t];
    return r !== void 0 && !(0, pN.alwaysValidSchema)(e, r);
  }
  ww.default = tQ;
});
var yN = $((Ew) => {
  'use strict';
  Object.defineProperty(Ew, '__esModule', { value: !0 });
  var rQ = xe(),
    nQ = {
      keyword: ['then', 'else'],
      schemaType: ['object', 'boolean'],
      code({ keyword: e, parentSchema: t, it: r }) {
        t.if === void 0 &&
          (0, rQ.checkStrictMode)(r, `"${e}" without "if" is ignored`);
      },
    };
  Ew.default = nQ;
});
var gN = $((Rw) => {
  'use strict';
  Object.defineProperty(Rw, '__esModule', { value: !0 });
  var sQ = ow(),
    iQ = G$(),
    oQ = aw(),
    aQ = J$(),
    lQ = K$(),
    uQ = Q$(),
    cQ = tN(),
    fQ = pw(),
    dQ = sN(),
    hQ = lN(),
    pQ = uN(),
    mQ = cN(),
    yQ = fN(),
    gQ = dN(),
    vQ = mN(),
    bQ = yN();
  function SQ(e = !1) {
    let t = [
      pQ.default,
      mQ.default,
      yQ.default,
      gQ.default,
      vQ.default,
      bQ.default,
      cQ.default,
      fQ.default,
      uQ.default,
      dQ.default,
      hQ.default,
    ];
    return (
      e ? t.push(iQ.default, aQ.default) : t.push(sQ.default, oQ.default),
      t.push(lQ.default),
      t
    );
  }
  Rw.default = SQ;
});
var vN = $((Tw) => {
  'use strict';
  Object.defineProperty(Tw, '__esModule', { value: !0 });
  var qt = be(),
    _Q = {
      message: ({ schemaCode: e }) => (0, qt.str)`must match format "${e}"`,
      params: ({ schemaCode: e }) => (0, qt._)`{format: ${e}}`,
    },
    wQ = {
      keyword: 'format',
      type: ['number', 'string'],
      schemaType: 'string',
      $data: !0,
      error: _Q,
      code(e, t) {
        let { gen: r, data: n, $data: i, schema: s, schemaCode: o, it: a } = e,
          { opts: u, errSchemaPath: c, schemaEnv: d, self: m } = a;
        if (!u.validateFormats) return;
        i ? g() : v();
        function g() {
          let S = r.scopeValue('formats', {
              ref: m.formats,
              code: u.code.formats,
            }),
            w = r.const('fDef', (0, qt._)`${S}[${o}]`),
            T = r.let('fType'),
            C = r.let('format');
          r.if(
            (0, qt._)`typeof ${w} == "object" && !(${w} instanceof RegExp)`,
            () =>
              r
                .assign(T, (0, qt._)`${w}.type || "string"`)
                .assign(C, (0, qt._)`${w}.validate`),
            () => r.assign(T, (0, qt._)`"string"`).assign(C, w),
          ),
            e.fail$data((0, qt.or)(I(), x()));
          function I() {
            return u.strictSchema === !1 ? qt.nil : (0, qt._)`${o} && !${C}`;
          }
          function x() {
            let E = d.$async
                ? (0, qt._)`(${w}.async ? await ${C}(${n}) : ${C}(${n}))`
                : (0, qt._)`${C}(${n})`,
              j = (0,
              qt._)`(typeof ${C} == "function" ? ${E} : ${C}.test(${n}))`;
            return (0, qt._)`${C} && ${C} !== true && ${T} === ${t} && !${j}`;
          }
        }
        function v() {
          let S = m.formats[s];
          if (!S) {
            I();
            return;
          }
          if (S === !0) return;
          let [w, T, C] = x(S);
          w === t && e.pass(E());
          function I() {
            if (u.strictSchema === !1) {
              m.logger.warn(j());
              return;
            }
            throw new Error(j());
            function j() {
              return `unknown format "${s}" ignored in schema at path "${c}"`;
            }
          }
          function x(j) {
            let q =
                j instanceof RegExp
                  ? (0, qt.regexpCode)(j)
                  : u.code.formats
                    ? (0, qt._)`${u.code.formats}${(0, qt.getProperty)(s)}`
                    : void 0,
              O = r.scopeValue('formats', { key: s, ref: j, code: q });
            return typeof j == 'object' && !(j instanceof RegExp)
              ? [j.type || 'string', j.validate, (0, qt._)`${O}.validate`]
              : ['string', j, O];
          }
          function E() {
            if (typeof S == 'object' && !(S instanceof RegExp) && S.async) {
              if (!d.$async) throw new Error('async format in sync schema');
              return (0, qt._)`await ${C}(${n})`;
            }
            return typeof T == 'function'
              ? (0, qt._)`${C}(${n})`
              : (0, qt._)`${C}.test(${n})`;
          }
        }
      },
    };
  Tw.default = wQ;
});
var bN = $((Pw) => {
  'use strict';
  Object.defineProperty(Pw, '__esModule', { value: !0 });
  var EQ = vN(),
    RQ = [EQ.default];
  Pw.default = RQ;
});
var SN = $((Cu) => {
  'use strict';
  Object.defineProperty(Cu, '__esModule', { value: !0 });
  Cu.contentVocabulary = Cu.metadataVocabulary = void 0;
  Cu.metadataVocabulary = [
    'title',
    'description',
    'default',
    'deprecated',
    'readOnly',
    'writeOnly',
    'examples',
  ];
  Cu.contentVocabulary = [
    'contentMediaType',
    'contentEncoding',
    'contentSchema',
  ];
});
var wN = $((kw) => {
  'use strict';
  Object.defineProperty(kw, '__esModule', { value: !0 });
  var TQ = C$(),
    PQ = U$(),
    kQ = gN(),
    xQ = bN(),
    _N = SN(),
    CQ = [
      TQ.default,
      PQ.default,
      (0, kQ.default)(),
      xQ.default,
      _N.metadataVocabulary,
      _N.contentVocabulary,
    ];
  kw.default = CQ;
});
var xw = $((dy) => {
  'use strict';
  Object.defineProperty(dy, '__esModule', { value: !0 });
  dy.DiscrError = void 0;
  var EN;
  (function (e) {
    (e.Tag = 'tag'), (e.Mapping = 'mapping');
  })(EN || (dy.DiscrError = EN = {}));
});
var TN = $((Ow) => {
  'use strict';
  Object.defineProperty(Ow, '__esModule', { value: !0 });
  var Ou = be(),
    Cw = xw(),
    RN = Ua(),
    OQ = ai(),
    IQ = xe(),
    AQ = {
      message: ({ params: { discrError: e, tagName: t } }) =>
        e === Cw.DiscrError.Tag
          ? `tag "${t}" must be string`
          : `value of tag "${t}" must be in oneOf`,
      params: ({ params: { discrError: e, tag: t, tagName: r } }) =>
        (0, Ou._)`{error: ${e}, tag: ${r}, tagValue: ${t}}`,
    },
    $Q = {
      keyword: 'discriminator',
      type: 'object',
      schemaType: 'object',
      error: AQ,
      code(e) {
        let { gen: t, data: r, schema: n, parentSchema: i, it: s } = e,
          { oneOf: o } = i;
        if (!s.opts.discriminator)
          throw new Error('discriminator: requires discriminator option');
        let a = n.propertyName;
        if (typeof a != 'string')
          throw new Error('discriminator: requires propertyName');
        if (n.mapping)
          throw new Error('discriminator: mapping is not supported');
        if (!o) throw new Error('discriminator: requires oneOf keyword');
        let u = t.let('valid', !1),
          c = t.const('tag', (0, Ou._)`${r}${(0, Ou.getProperty)(a)}`);
        t.if(
          (0, Ou._)`typeof ${c} == "string"`,
          () => d(),
          () =>
            e.error(!1, { discrError: Cw.DiscrError.Tag, tag: c, tagName: a }),
        ),
          e.ok(u);
        function d() {
          let v = g();
          t.if(!1);
          for (let S in v)
            t.elseIf((0, Ou._)`${c} === ${S}`), t.assign(u, m(v[S]));
          t.else(),
            e.error(!1, {
              discrError: Cw.DiscrError.Mapping,
              tag: c,
              tagName: a,
            }),
            t.endIf();
        }
        function m(v) {
          let S = t.name('valid'),
            w = e.subschema({ keyword: 'oneOf', schemaProp: v }, S);
          return e.mergeEvaluated(w, Ou.Name), S;
        }
        function g() {
          var v;
          let S = {},
            w = C(i),
            T = !0;
          for (let E = 0; E < o.length; E++) {
            let j = o[E];
            if (j?.$ref && !(0, IQ.schemaHasRulesButRef)(j, s.self.RULES)) {
              let O = j.$ref;
              if (
                ((j = RN.resolveRef.call(
                  s.self,
                  s.schemaEnv.root,
                  s.baseId,
                  O,
                )),
                j instanceof RN.SchemaEnv && (j = j.schema),
                j === void 0)
              )
                throw new OQ.default(s.opts.uriResolver, s.baseId, O);
            }
            let q =
              (v = j?.properties) === null || v === void 0 ? void 0 : v[a];
            if (typeof q != 'object')
              throw new Error(
                `discriminator: oneOf subschemas (or referenced schemas) must have "properties/${a}"`,
              );
            (T = T && (w || C(j))), I(q, E);
          }
          if (!T) throw new Error(`discriminator: "${a}" must be required`);
          return S;
          function C({ required: E }) {
            return Array.isArray(E) && E.includes(a);
          }
          function I(E, j) {
            if (E.const) x(E.const, j);
            else if (E.enum) for (let q of E.enum) x(q, j);
            else
              throw new Error(
                `discriminator: "properties/${a}" must have "const" or "enum"`,
              );
          }
          function x(E, j) {
            if (typeof E != 'string' || E in S)
              throw new Error(
                `discriminator: "${a}" values must be unique strings`,
              );
            S[E] = j;
          }
        }
      },
    };
  Ow.default = $Q;
});
var PN = $((Oye, NQ) => {
  NQ.exports = {
    $schema: 'http://json-schema.org/draft-07/schema#',
    $id: 'http://json-schema.org/draft-07/schema#',
    title: 'Core schema meta-schema',
    definitions: {
      schemaArray: { type: 'array', minItems: 1, items: { $ref: '#' } },
      nonNegativeInteger: { type: 'integer', minimum: 0 },
      nonNegativeIntegerDefault0: {
        allOf: [{ $ref: '#/definitions/nonNegativeInteger' }, { default: 0 }],
      },
      simpleTypes: {
        enum: [
          'array',
          'boolean',
          'integer',
          'null',
          'number',
          'object',
          'string',
        ],
      },
      stringArray: {
        type: 'array',
        items: { type: 'string' },
        uniqueItems: !0,
        default: [],
      },
    },
    type: ['object', 'boolean'],
    properties: {
      $id: { type: 'string', format: 'uri-reference' },
      $schema: { type: 'string', format: 'uri' },
      $ref: { type: 'string', format: 'uri-reference' },
      $comment: { type: 'string' },
      title: { type: 'string' },
      description: { type: 'string' },
      default: !0,
      readOnly: { type: 'boolean', default: !1 },
      examples: { type: 'array', items: !0 },
      multipleOf: { type: 'number', exclusiveMinimum: 0 },
      maximum: { type: 'number' },
      exclusiveMaximum: { type: 'number' },
      minimum: { type: 'number' },
      exclusiveMinimum: { type: 'number' },
      maxLength: { $ref: '#/definitions/nonNegativeInteger' },
      minLength: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
      pattern: { type: 'string', format: 'regex' },
      additionalItems: { $ref: '#' },
      items: {
        anyOf: [{ $ref: '#' }, { $ref: '#/definitions/schemaArray' }],
        default: !0,
      },
      maxItems: { $ref: '#/definitions/nonNegativeInteger' },
      minItems: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
      uniqueItems: { type: 'boolean', default: !1 },
      contains: { $ref: '#' },
      maxProperties: { $ref: '#/definitions/nonNegativeInteger' },
      minProperties: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
      required: { $ref: '#/definitions/stringArray' },
      additionalProperties: { $ref: '#' },
      definitions: {
        type: 'object',
        additionalProperties: { $ref: '#' },
        default: {},
      },
      properties: {
        type: 'object',
        additionalProperties: { $ref: '#' },
        default: {},
      },
      patternProperties: {
        type: 'object',
        additionalProperties: { $ref: '#' },
        propertyNames: { format: 'regex' },
        default: {},
      },
      dependencies: {
        type: 'object',
        additionalProperties: {
          anyOf: [{ $ref: '#' }, { $ref: '#/definitions/stringArray' }],
        },
      },
      propertyNames: { $ref: '#' },
      const: !0,
      enum: { type: 'array', items: !0, minItems: 1, uniqueItems: !0 },
      type: {
        anyOf: [
          { $ref: '#/definitions/simpleTypes' },
          {
            type: 'array',
            items: { $ref: '#/definitions/simpleTypes' },
            minItems: 1,
            uniqueItems: !0,
          },
        ],
      },
      format: { type: 'string' },
      contentMediaType: { type: 'string' },
      contentEncoding: { type: 'string' },
      if: { $ref: '#' },
      then: { $ref: '#' },
      else: { $ref: '#' },
      allOf: { $ref: '#/definitions/schemaArray' },
      anyOf: { $ref: '#/definitions/schemaArray' },
      oneOf: { $ref: '#/definitions/schemaArray' },
      not: { $ref: '#' },
    },
    default: !0,
  };
});
var Ld = $((gt, Iw) => {
  'use strict';
  Object.defineProperty(gt, '__esModule', { value: !0 });
  gt.MissingRefError =
    gt.ValidationError =
    gt.CodeGen =
    gt.Name =
    gt.nil =
    gt.stringify =
    gt.str =
    gt._ =
    gt.KeywordCxt =
    gt.Ajv =
      void 0;
  var LQ = M_(),
    DQ = wN(),
    jQ = TN(),
    kN = PN(),
    FQ = ['/properties'],
    hy = 'http://json-schema.org/draft-07/schema',
    Iu = class extends LQ.default {
      _addVocabularies() {
        super._addVocabularies(),
          DQ.default.forEach((t) => this.addVocabulary(t)),
          this.opts.discriminator && this.addKeyword(jQ.default);
      }
      _addDefaultMetaSchema() {
        if ((super._addDefaultMetaSchema(), !this.opts.meta)) return;
        let t = this.opts.$data ? this.$dataMetaSchema(kN, FQ) : kN;
        this.addMetaSchema(t, hy, !1),
          (this.refs['http://json-schema.org/schema'] = hy);
      }
      defaultMeta() {
        return (this.opts.defaultMeta =
          super.defaultMeta() || (this.getSchema(hy) ? hy : void 0));
      }
    };
  gt.Ajv = Iu;
  Iw.exports = gt = Iu;
  Iw.exports.Ajv = Iu;
  Object.defineProperty(gt, '__esModule', { value: !0 });
  gt.default = Iu;
  var qQ = Tu();
  Object.defineProperty(gt, 'KeywordCxt', {
    enumerable: !0,
    get: function () {
      return qQ.KeywordCxt;
    },
  });
  var Au = be();
  Object.defineProperty(gt, '_', {
    enumerable: !0,
    get: function () {
      return Au._;
    },
  });
  Object.defineProperty(gt, 'str', {
    enumerable: !0,
    get: function () {
      return Au.str;
    },
  });
  Object.defineProperty(gt, 'stringify', {
    enumerable: !0,
    get: function () {
      return Au.stringify;
    },
  });
  Object.defineProperty(gt, 'nil', {
    enumerable: !0,
    get: function () {
      return Au.nil;
    },
  });
  Object.defineProperty(gt, 'Name', {
    enumerable: !0,
    get: function () {
      return Au.Name;
    },
  });
  Object.defineProperty(gt, 'CodeGen', {
    enumerable: !0,
    get: function () {
      return Au.CodeGen;
    },
  });
  var MQ = Sd();
  Object.defineProperty(gt, 'ValidationError', {
    enumerable: !0,
    get: function () {
      return MQ.default;
    },
  });
  var HQ = ai();
  Object.defineProperty(gt, 'MissingRefError', {
    enumerable: !0,
    get: function () {
      return HQ.default;
    },
  });
});
var CN = $((Iye, xN) => {
  'use strict';
  var zQ = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    a: 10,
    A: 10,
    b: 11,
    B: 11,
    c: 12,
    C: 12,
    d: 13,
    D: 13,
    e: 14,
    E: 14,
    f: 15,
    F: 15,
  };
  xN.exports = { HEX: zQ };
});
var jN = $((Aye, DN) => {
  'use strict';
  var { HEX: UQ } = CN();
  function $N(e) {
    if (LN(e, '.') < 3) return { host: e, isIPV4: !1 };
    let t =
        e.match(
          /^(\b[01]?\d{1,2}|\b2[0-4]\d|\b25[0-5])(\.([01]?\d{1,2}|2[0-4]\d|25[0-5])){3}$/u,
        ) || [],
      [r] = t;
    return r ? { host: BQ(r, '.'), isIPV4: !0 } : { host: e, isIPV4: !1 };
  }
  function Aw(e) {
    let t = '',
      r = !0;
    for (let n of e) {
      if ((n !== '0' && r === !0 && (r = !1), UQ[n] === void 0)) return;
      r || (t += n);
    }
    return t;
  }
  function VQ(e) {
    let t = 0,
      r = { error: !1, address: '', zone: '' },
      n = [],
      i = [],
      s = !1,
      o = !1,
      a = !1;
    function u() {
      if (i.length) {
        if (s === !1) {
          let c = Aw(i.join(''));
          if (c !== void 0) n.push(c);
          else return (r.error = !0), !1;
        }
        i.length = 0;
      }
      return !0;
    }
    for (let c = 0; c < e.length; c++) {
      let d = e[c];
      if (!(d === '[' || d === ']'))
        if (d === ':') {
          if ((o === !0 && (a = !0), !u())) break;
          if ((t++, n.push(':'), t > 7)) {
            r.error = !0;
            break;
          }
          c - 1 >= 0 && e[c - 1] === ':' && (o = !0);
          continue;
        } else if (d === '%') {
          if (!u()) break;
          s = !0;
        } else {
          i.push(d);
          continue;
        }
    }
    return (
      i.length &&
        (s
          ? (r.zone = i.join(''))
          : a
            ? n.push(i.join(''))
            : n.push(Aw(i.join('')))),
      (r.address = n.join('')),
      r
    );
  }
  function NN(e, t = {}) {
    if (LN(e, ':') < 2) return { host: e, isIPV6: !1 };
    let r = VQ(e);
    if (r.error) return { host: e, isIPV6: !1 };
    {
      let n = r.address,
        i = r.address;
      return (
        r.zone && ((n += '%' + r.zone), (i += '%25' + r.zone)),
        { host: n, escapedHost: i, isIPV6: !0 }
      );
    }
  }
  function BQ(e, t) {
    let r = '',
      n = !0,
      i = e.length;
    for (let s = 0; s < i; s++) {
      let o = e[s];
      o === '0' && n
        ? ((s + 1 <= i && e[s + 1] === t) || s + 1 === i) &&
          ((r += o), (n = !1))
        : (o === t ? (n = !0) : (n = !1), (r += o));
    }
    return r;
  }
  function LN(e, t) {
    let r = 0;
    for (let n = 0; n < e.length; n++) e[n] === t && r++;
    return r;
  }
  var ON = /^\.\.?\//u,
    IN = /^\/\.(?:\/|$)/u,
    AN = /^\/\.\.(?:\/|$)/u,
    WQ = /^\/?(?:.|\n)*?(?=\/|$)/u;
  function GQ(e) {
    let t = [];
    for (; e.length; )
      if (e.match(ON)) e = e.replace(ON, '');
      else if (e.match(IN)) e = e.replace(IN, '/');
      else if (e.match(AN)) (e = e.replace(AN, '/')), t.pop();
      else if (e === '.' || e === '..') e = '';
      else {
        let r = e.match(WQ);
        if (r) {
          let n = r[0];
          (e = e.slice(n.length)), t.push(n);
        } else throw new Error('Unexpected dot segment condition');
      }
    return t.join('');
  }
  function YQ(e, t) {
    let r = t !== !0 ? escape : unescape;
    return (
      e.scheme !== void 0 && (e.scheme = r(e.scheme)),
      e.userinfo !== void 0 && (e.userinfo = r(e.userinfo)),
      e.host !== void 0 && (e.host = r(e.host)),
      e.path !== void 0 && (e.path = r(e.path)),
      e.query !== void 0 && (e.query = r(e.query)),
      e.fragment !== void 0 && (e.fragment = r(e.fragment)),
      e
    );
  }
  function JQ(e, t) {
    let r = [];
    if (
      (e.userinfo !== void 0 && (r.push(e.userinfo), r.push('@')),
      e.host !== void 0)
    ) {
      let n = unescape(e.host),
        i = $N(n);
      if (i.isIPV4) n = i.host;
      else {
        let s = NN(i.host, { isIPV4: !1 });
        s.isIPV6 === !0 ? (n = `[${s.escapedHost}]`) : (n = e.host);
      }
      r.push(n);
    }
    return (
      (typeof e.port == 'number' || typeof e.port == 'string') &&
        (r.push(':'), r.push(String(e.port))),
      r.length ? r.join('') : void 0
    );
  }
  DN.exports = {
    recomposeAuthority: JQ,
    normalizeComponentEncoding: YQ,
    removeDotSegments: GQ,
    normalizeIPv4: $N,
    normalizeIPv6: NN,
    stringToHexStripped: Aw,
  };
});
var UN = $(($ye, zN) => {
  'use strict';
  var KQ =
      /^[\da-f]{8}\b-[\da-f]{4}\b-[\da-f]{4}\b-[\da-f]{4}\b-[\da-f]{12}$/iu,
    XQ = /([\da-z][\d\-a-z]{0,31}):((?:[\w!$'()*+,\-.:;=@]|%[\da-f]{2})+)/iu;
  function FN(e) {
    return typeof e.secure == 'boolean'
      ? e.secure
      : String(e.scheme).toLowerCase() === 'wss';
  }
  function qN(e) {
    return e.host || (e.error = e.error || 'HTTP URIs must have a host.'), e;
  }
  function MN(e) {
    let t = String(e.scheme).toLowerCase() === 'https';
    return (
      (e.port === (t ? 443 : 80) || e.port === '') && (e.port = void 0),
      e.path || (e.path = '/'),
      e
    );
  }
  function ZQ(e) {
    return (
      (e.secure = FN(e)),
      (e.resourceName = (e.path || '/') + (e.query ? '?' + e.query : '')),
      (e.path = void 0),
      (e.query = void 0),
      e
    );
  }
  function QQ(e) {
    if (
      ((e.port === (FN(e) ? 443 : 80) || e.port === '') && (e.port = void 0),
      typeof e.secure == 'boolean' &&
        ((e.scheme = e.secure ? 'wss' : 'ws'), (e.secure = void 0)),
      e.resourceName)
    ) {
      let [t, r] = e.resourceName.split('?');
      (e.path = t && t !== '/' ? t : void 0),
        (e.query = r),
        (e.resourceName = void 0);
    }
    return (e.fragment = void 0), e;
  }
  function eee(e, t) {
    if (!e.path) return (e.error = 'URN can not be parsed'), e;
    let r = e.path.match(XQ);
    if (r) {
      let n = t.scheme || e.scheme || 'urn';
      (e.nid = r[1].toLowerCase()), (e.nss = r[2]);
      let i = `${n}:${t.nid || e.nid}`,
        s = $w[i];
      (e.path = void 0), s && (e = s.parse(e, t));
    } else e.error = e.error || 'URN can not be parsed.';
    return e;
  }
  function tee(e, t) {
    let r = t.scheme || e.scheme || 'urn',
      n = e.nid.toLowerCase(),
      i = `${r}:${t.nid || n}`,
      s = $w[i];
    s && (e = s.serialize(e, t));
    let o = e,
      a = e.nss;
    return (o.path = `${n || t.nid}:${a}`), (t.skipEscape = !0), o;
  }
  function ree(e, t) {
    let r = e;
    return (
      (r.uuid = r.nss),
      (r.nss = void 0),
      !t.tolerant &&
        (!r.uuid || !KQ.test(r.uuid)) &&
        (r.error = r.error || 'UUID is not valid.'),
      r
    );
  }
  function nee(e) {
    let t = e;
    return (t.nss = (e.uuid || '').toLowerCase()), t;
  }
  var HN = { scheme: 'http', domainHost: !0, parse: qN, serialize: MN },
    see = {
      scheme: 'https',
      domainHost: HN.domainHost,
      parse: qN,
      serialize: MN,
    },
    py = { scheme: 'ws', domainHost: !0, parse: ZQ, serialize: QQ },
    iee = {
      scheme: 'wss',
      domainHost: py.domainHost,
      parse: py.parse,
      serialize: py.serialize,
    },
    oee = { scheme: 'urn', parse: eee, serialize: tee, skipNormalize: !0 },
    aee = { scheme: 'urn:uuid', parse: ree, serialize: nee, skipNormalize: !0 },
    $w = { http: HN, https: see, ws: py, wss: iee, urn: oee, 'urn:uuid': aee };
  zN.exports = $w;
});
var Lw = $((Nye, yy) => {
  'use strict';
  var {
      normalizeIPv6: lee,
      normalizeIPv4: uee,
      removeDotSegments: Dd,
      recomposeAuthority: cee,
      normalizeComponentEncoding: my,
    } = jN(),
    VN = UN();
  function fee(e, t) {
    return (
      typeof e == 'string'
        ? (e = Ts(ui(e, t), t))
        : typeof e == 'object' && (e = ui(Ts(e, t), t)),
      e
    );
  }
  function dee(e, t, r) {
    let n = Object.assign({ scheme: 'null' }, r),
      i = BN(ui(e, n), ui(t, n), n, !0);
    return Ts(i, { ...n, skipEscape: !0 });
  }
  function BN(e, t, r, n) {
    let i = {};
    return (
      n || ((e = ui(Ts(e, r), r)), (t = ui(Ts(t, r), r))),
      (r = r || {}),
      !r.tolerant && t.scheme
        ? ((i.scheme = t.scheme),
          (i.userinfo = t.userinfo),
          (i.host = t.host),
          (i.port = t.port),
          (i.path = Dd(t.path || '')),
          (i.query = t.query))
        : (t.userinfo !== void 0 || t.host !== void 0 || t.port !== void 0
            ? ((i.userinfo = t.userinfo),
              (i.host = t.host),
              (i.port = t.port),
              (i.path = Dd(t.path || '')),
              (i.query = t.query))
            : (t.path
                ? (t.path.charAt(0) === '/'
                    ? (i.path = Dd(t.path))
                    : ((e.userinfo !== void 0 ||
                        e.host !== void 0 ||
                        e.port !== void 0) &&
                      !e.path
                        ? (i.path = '/' + t.path)
                        : e.path
                          ? (i.path =
                              e.path.slice(0, e.path.lastIndexOf('/') + 1) +
                              t.path)
                          : (i.path = t.path),
                      (i.path = Dd(i.path))),
                  (i.query = t.query))
                : ((i.path = e.path),
                  t.query !== void 0
                    ? (i.query = t.query)
                    : (i.query = e.query)),
              (i.userinfo = e.userinfo),
              (i.host = e.host),
              (i.port = e.port)),
          (i.scheme = e.scheme)),
      (i.fragment = t.fragment),
      i
    );
  }
  function hee(e, t, r) {
    return (
      typeof e == 'string'
        ? ((e = unescape(e)),
          (e = Ts(my(ui(e, r), !0), { ...r, skipEscape: !0 })))
        : typeof e == 'object' && (e = Ts(my(e, !0), { ...r, skipEscape: !0 })),
      typeof t == 'string'
        ? ((t = unescape(t)),
          (t = Ts(my(ui(t, r), !0), { ...r, skipEscape: !0 })))
        : typeof t == 'object' && (t = Ts(my(t, !0), { ...r, skipEscape: !0 })),
      e.toLowerCase() === t.toLowerCase()
    );
  }
  function Ts(e, t) {
    let r = {
        host: e.host,
        scheme: e.scheme,
        userinfo: e.userinfo,
        port: e.port,
        path: e.path,
        query: e.query,
        nid: e.nid,
        nss: e.nss,
        uuid: e.uuid,
        fragment: e.fragment,
        reference: e.reference,
        resourceName: e.resourceName,
        secure: e.secure,
        error: '',
      },
      n = Object.assign({}, t),
      i = [],
      s = VN[(n.scheme || r.scheme || '').toLowerCase()];
    s && s.serialize && s.serialize(r, n),
      r.path !== void 0 &&
        (n.skipEscape
          ? (r.path = unescape(r.path))
          : ((r.path = escape(r.path)),
            r.scheme !== void 0 && (r.path = r.path.split('%3A').join(':')))),
      n.reference !== 'suffix' && r.scheme && (i.push(r.scheme), i.push(':'));
    let o = cee(r, n);
    if (
      (o !== void 0 &&
        (n.reference !== 'suffix' && i.push('//'),
        i.push(o),
        r.path && r.path.charAt(0) !== '/' && i.push('/')),
      r.path !== void 0)
    ) {
      let a = r.path;
      !n.absolutePath && (!s || !s.absolutePath) && (a = Dd(a)),
        o === void 0 && (a = a.replace(/^\/\//u, '/%2F')),
        i.push(a);
    }
    return (
      r.query !== void 0 && (i.push('?'), i.push(r.query)),
      r.fragment !== void 0 && (i.push('#'), i.push(r.fragment)),
      i.join('')
    );
  }
  var pee = Array.from({ length: 127 }, (e, t) =>
    /[^!"$&'()*+,\-.;=_`a-z{}~]/u.test(String.fromCharCode(t)),
  );
  function mee(e) {
    let t = 0;
    for (let r = 0, n = e.length; r < n; ++r)
      if (((t = e.charCodeAt(r)), t > 126 || pee[t])) return !0;
    return !1;
  }
  var yee =
    /^(?:([^#/:?]+):)?(?:\/\/((?:([^#/?@]*)@)?(\[[^#/?\]]+\]|[^#/:?]*)(?::(\d*))?))?([^#?]*)(?:\?([^#]*))?(?:#((?:.|[\n\r])*))?/u;
  function ui(e, t) {
    let r = Object.assign({}, t),
      n = {
        scheme: void 0,
        userinfo: void 0,
        host: '',
        port: void 0,
        path: '',
        query: void 0,
        fragment: void 0,
      },
      i = e.indexOf('%') !== -1;
    r.reference === 'suffix' &&
      (e = (r.scheme ? r.scheme + ':' : '') + '//' + e);
    let s = e.match(yee);
    if (s) {
      if (
        ((n.scheme = s[1]),
        (n.userinfo = s[3]),
        (n.host = s[4]),
        (n.port = parseInt(s[5], 10)),
        (n.path = s[6] || ''),
        (n.query = s[7]),
        (n.fragment = s[8]),
        isNaN(n.port) && (n.port = s[5]),
        n.host)
      ) {
        let a = uee(n.host);
        a.isIPV4 === !1
          ? (n.host = lee(a.host, { isIPV4: !1 }).host.toLowerCase())
          : (n.host = a.host);
      }
      n.scheme === void 0 &&
      n.userinfo === void 0 &&
      n.host === void 0 &&
      n.port === void 0 &&
      !n.path &&
      n.query === void 0
        ? (n.reference = 'same-document')
        : n.scheme === void 0
          ? (n.reference = 'relative')
          : n.fragment === void 0
            ? (n.reference = 'absolute')
            : (n.reference = 'uri'),
        r.reference &&
          r.reference !== 'suffix' &&
          r.reference !== n.reference &&
          (n.error = n.error || 'URI is not a ' + r.reference + ' reference.');
      let o = VN[(r.scheme || n.scheme || '').toLowerCase()];
      if (
        !r.unicodeSupport &&
        (!o || !o.unicodeSupport) &&
        n.host &&
        (r.domainHost || (o && o.domainHost)) &&
        mee(n.host)
      )
        try {
          n.host = URL.domainToASCII(n.host.toLowerCase());
        } catch (a) {
          n.error =
            n.error || "Host's domain name can not be converted to ASCII: " + a;
        }
      (!o || (o && !o.skipNormalize)) &&
        (i && n.scheme !== void 0 && (n.scheme = unescape(n.scheme)),
        i && n.userinfo !== void 0 && (n.userinfo = unescape(n.userinfo)),
        i && n.host !== void 0 && (n.host = unescape(n.host)),
        n.path !== void 0 &&
          n.path.length &&
          (n.path = escape(unescape(n.path))),
        n.fragment !== void 0 &&
          n.fragment.length &&
          (n.fragment = encodeURI(decodeURI(n.fragment)))),
        o && o.parse && o.parse(n, r);
    } else n.error = n.error || 'URI can not be parsed.';
    return n;
  }
  var Nw = {
    normalize: fee,
    resolve: dee,
    resolveComponents: BN,
    equal: hee,
    serialize: Ts,
    parse: ui,
  };
  yy.exports = Nw;
  yy.exports.default = Nw;
  yy.exports.fastUri = Nw;
});
var gy = $((ks) => {
  'use strict';
  Object.defineProperty(ks, '__esModule', { value: !0 });
  ks.formatNames = ks.fastFormats = ks.fullFormats = void 0;
  function Ps(e, t) {
    return { validate: e, compare: t };
  }
  ks.fullFormats = {
    date: Ps(JN, qw),
    time: Ps(jw(!0), Mw),
    'date-time': Ps(WN(!0), XN),
    'iso-time': Ps(jw(), KN),
    'iso-date-time': Ps(WN(), ZN),
    duration:
      /^P(?!$)((\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?|(\d+W)?)$/,
    uri: wee,
    'uri-reference':
      /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,
    'uri-template':
      /^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,
    url: /^(?:https?|ftp):\/\/(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)(?:\.(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu,
    email:
      /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
    hostname:
      /^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,
    ipv4: /^(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)$/,
    ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i,
    regex: Cee,
    uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,
    'json-pointer': /^(?:\/(?:[^~/]|~0|~1)*)*$/,
    'json-pointer-uri-fragment':
      /^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,
    'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,
    byte: Eee,
    int32: { type: 'number', validate: Pee },
    int64: { type: 'number', validate: kee },
    float: { type: 'number', validate: YN },
    double: { type: 'number', validate: YN },
    password: !0,
    binary: !0,
  };
  ks.fastFormats = {
    ...ks.fullFormats,
    date: Ps(/^\d\d\d\d-[0-1]\d-[0-3]\d$/, qw),
    time: Ps(
      /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,
      Mw,
    ),
    'date-time': Ps(
      /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,
      XN,
    ),
    'iso-time': Ps(
      /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,
      KN,
    ),
    'iso-date-time': Ps(
      /^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,
      ZN,
    ),
    uri: /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/)?[^\s]*$/i,
    'uri-reference':
      /^(?:(?:[a-z][a-z0-9+\-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,
    email:
      /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,
  };
  ks.formatNames = Object.keys(ks.fullFormats);
  function gee(e) {
    return e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0);
  }
  var vee = /^(\d\d\d\d)-(\d\d)-(\d\d)$/,
    bee = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  function JN(e) {
    let t = vee.exec(e);
    if (!t) return !1;
    let r = +t[1],
      n = +t[2],
      i = +t[3];
    return (
      n >= 1 && n <= 12 && i >= 1 && i <= (n === 2 && gee(r) ? 29 : bee[n])
    );
  }
  function qw(e, t) {
    if (e && t) return e > t ? 1 : e < t ? -1 : 0;
  }
  var Dw = /^(\d\d):(\d\d):(\d\d(?:\.\d+)?)(z|([+-])(\d\d)(?::?(\d\d))?)?$/i;
  function jw(e) {
    return function (r) {
      let n = Dw.exec(r);
      if (!n) return !1;
      let i = +n[1],
        s = +n[2],
        o = +n[3],
        a = n[4],
        u = n[5] === '-' ? -1 : 1,
        c = +(n[6] || 0),
        d = +(n[7] || 0);
      if (c > 23 || d > 59 || (e && !a)) return !1;
      if (i <= 23 && s <= 59 && o < 60) return !0;
      let m = s - d * u,
        g = i - c * u - (m < 0 ? 1 : 0);
      return (g === 23 || g === -1) && (m === 59 || m === -1) && o < 61;
    };
  }
  function Mw(e, t) {
    if (!(e && t)) return;
    let r = new Date('2020-01-01T' + e).valueOf(),
      n = new Date('2020-01-01T' + t).valueOf();
    if (r && n) return r - n;
  }
  function KN(e, t) {
    if (!(e && t)) return;
    let r = Dw.exec(e),
      n = Dw.exec(t);
    if (r && n)
      return (
        (e = r[1] + r[2] + r[3]),
        (t = n[1] + n[2] + n[3]),
        e > t ? 1 : e < t ? -1 : 0
      );
  }
  var Fw = /t|\s/i;
  function WN(e) {
    let t = jw(e);
    return function (n) {
      let i = n.split(Fw);
      return i.length === 2 && JN(i[0]) && t(i[1]);
    };
  }
  function XN(e, t) {
    if (!(e && t)) return;
    let r = new Date(e).valueOf(),
      n = new Date(t).valueOf();
    if (r && n) return r - n;
  }
  function ZN(e, t) {
    if (!(e && t)) return;
    let [r, n] = e.split(Fw),
      [i, s] = t.split(Fw),
      o = qw(r, i);
    if (o !== void 0) return o || Mw(n, s);
  }
  var See = /\/|:/,
    _ee =
      /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;
  function wee(e) {
    return See.test(e) && _ee.test(e);
  }
  var GN = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;
  function Eee(e) {
    return (GN.lastIndex = 0), GN.test(e);
  }
  var Ree = -(2 ** 31),
    Tee = 2 ** 31 - 1;
  function Pee(e) {
    return Number.isInteger(e) && e <= Tee && e >= Ree;
  }
  function kee(e) {
    return Number.isInteger(e);
  }
  function YN() {
    return !0;
  }
  var xee = /[^\\]\\Z/;
  function Cee(e) {
    if (xee.test(e)) return !1;
    try {
      return new RegExp(e), !0;
    } catch {
      return !1;
    }
  }
});
var QN = $(($u) => {
  'use strict';
  Object.defineProperty($u, '__esModule', { value: !0 });
  $u.formatLimitDefinition = void 0;
  var Oee = Ld(),
    ns = be(),
    Eo = ns.operators,
    vy = {
      formatMaximum: { okStr: '<=', ok: Eo.LTE, fail: Eo.GT },
      formatMinimum: { okStr: '>=', ok: Eo.GTE, fail: Eo.LT },
      formatExclusiveMaximum: { okStr: '<', ok: Eo.LT, fail: Eo.GTE },
      formatExclusiveMinimum: { okStr: '>', ok: Eo.GT, fail: Eo.LTE },
    },
    Iee = {
      message: ({ keyword: e, schemaCode: t }) =>
        (0, ns.str)`should be ${vy[e].okStr} ${t}`,
      params: ({ keyword: e, schemaCode: t }) =>
        (0, ns._)`{comparison: ${vy[e].okStr}, limit: ${t}}`,
    };
  $u.formatLimitDefinition = {
    keyword: Object.keys(vy),
    type: 'string',
    schemaType: 'string',
    $data: !0,
    error: Iee,
    code(e) {
      let { gen: t, data: r, schemaCode: n, keyword: i, it: s } = e,
        { opts: o, self: a } = s;
      if (!o.validateFormats) return;
      let u = new Oee.KeywordCxt(s, a.RULES.all.format.definition, 'format');
      u.$data ? c() : d();
      function c() {
        let g = t.scopeValue('formats', {
            ref: a.formats,
            code: o.code.formats,
          }),
          v = t.const('fmt', (0, ns._)`${g}[${u.schemaCode}]`);
        e.fail$data(
          (0, ns.or)(
            (0, ns._)`typeof ${v} != "object"`,
            (0, ns._)`${v} instanceof RegExp`,
            (0, ns._)`typeof ${v}.compare != "function"`,
            m(v),
          ),
        );
      }
      function d() {
        let g = u.schema,
          v = a.formats[g];
        if (!v || v === !0) return;
        if (
          typeof v != 'object' ||
          v instanceof RegExp ||
          typeof v.compare != 'function'
        )
          throw new Error(
            `"${i}": format "${g}" does not define "compare" function`,
          );
        let S = t.scopeValue('formats', {
          key: g,
          ref: v,
          code: o.code.formats
            ? (0, ns._)`${o.code.formats}${(0, ns.getProperty)(g)}`
            : void 0,
        });
        e.fail$data(m(S));
      }
      function m(g) {
        return (0, ns._)`${g}.compare(${r}, ${n}) ${vy[i].fail} 0`;
      }
    },
    dependencies: ['format'],
  };
  var Aee = (e) => (e.addKeyword($u.formatLimitDefinition), e);
  $u.default = Aee;
});
var nL = $((jd, rL) => {
  'use strict';
  Object.defineProperty(jd, '__esModule', { value: !0 });
  var Nu = gy(),
    $ee = QN(),
    Hw = be(),
    eL = new Hw.Name('fullFormats'),
    Nee = new Hw.Name('fastFormats'),
    zw = (e, t = { keywords: !0 }) => {
      if (Array.isArray(t)) return tL(e, t, Nu.fullFormats, eL), e;
      let [r, n] =
          t.mode === 'fast' ? [Nu.fastFormats, Nee] : [Nu.fullFormats, eL],
        i = t.formats || Nu.formatNames;
      return tL(e, i, r, n), t.keywords && (0, $ee.default)(e), e;
    };
  zw.get = (e, t = 'full') => {
    let n = (t === 'fast' ? Nu.fastFormats : Nu.fullFormats)[e];
    if (!n) throw new Error(`Unknown format "${e}"`);
    return n;
  };
  function tL(e, t, r, n) {
    var i, s;
    ((i = (s = e.opts.code).formats) !== null && i !== void 0) ||
      (s.formats = (0, Hw._)`require("ajv-formats/dist/formats").${n}`);
    for (let o of t) e.addFormat(o, r[o]);
  }
  rL.exports = jd = zw;
  Object.defineProperty(jd, '__esModule', { value: !0 });
  jd.default = zw;
});
var Vw = $((jye, sL) => {
  'use strict';
  var Lee = Ld(),
    Dee = Lw(),
    jee = nL(),
    Fee = em()({ proto: !0 }),
    Uw = class e {
      constructor(t) {
        (this.ajv = new Lee({
          ...t,
          strictSchema: !1,
          validateSchema: !1,
          allowUnionTypes: !0,
          uriResolver: Dee,
        })),
          jee(this.ajv),
          this.ajv.addKeyword({
            keyword: 'fjs_type',
            type: 'object',
            errors: !1,
            validate: (r, n) => n instanceof Date,
          }),
          (this._ajvSchemas = {}),
          (this._ajvOptions = t || {});
      }
      addSchema(t, r) {
        let n = t.$id || r;
        if (
          (t.$id !== void 0 && t.$id[0] === '#' && (n = r + t.$id),
          this.ajv.refs[n] === void 0 && this.ajv.schemas[n] === void 0)
        ) {
          let i = Fee(t);
          this.convertSchemaToAjvFormat(i),
            this.ajv.addSchema(i, n),
            (this._ajvSchemas[n] = t);
        }
      }
      validate(t, r) {
        return this.ajv.validate(t, r);
      }
      convertSchemaToAjvFormat(t) {
        if (t !== null) {
          t.type === 'string'
            ? ((t.fjs_type = 'string'), (t.type = ['string', 'object']))
            : Array.isArray(t.type) &&
              t.type.includes('string') &&
              !t.type.includes('object') &&
              ((t.fjs_type = 'string'), t.type.push('object'));
          for (let r in t)
            typeof t[r] == 'object' && this.convertSchemaToAjvFormat(t[r]);
        }
      }
      getState() {
        return { ajvOptions: this._ajvOptions, ajvSchemas: this._ajvSchemas };
      }
      static restoreFromState(t) {
        let r = new e(t.ajvOptions);
        for (let [n, i] of Object.entries(t.ajvSchemas)) r.ajv.addSchema(i, n);
        return r;
      }
    };
  sL.exports = Uw;
});
var oL = $((Fye, iL) => {
  'use strict';
  var Bw = class e {
    constructor(t, r, n = '#') {
      (this.schema = t), (this.schemaId = r), (this.jsonPointer = n);
    }
    getPropertyLocation(t) {
      return new e(this.schema[t], this.schemaId, this.jsonPointer + '/' + t);
    }
    getSchemaRef() {
      return this.schemaId + this.jsonPointer;
    }
  };
  iL.exports = Bw;
});
var fL = $((qye, Gw) => {
  'use strict';
  Gw.exports = Q;
  Gw.exports.default = Q;
  var qee = {
      $schema: 'http://json-schema.org/draft-07/schema#',
      $id: 'http://json-schema.org/draft-07/schema#',
      title: 'Core schema meta-schema',
      definitions: {
        schemaArray: { type: 'array', minItems: 1, items: { $ref: '#' } },
        nonNegativeInteger: { type: 'integer', minimum: 0 },
        nonNegativeIntegerDefault0: {
          allOf: [{ $ref: '#/definitions/nonNegativeInteger' }, { default: 0 }],
        },
        simpleTypes: {
          enum: [
            'array',
            'boolean',
            'integer',
            'null',
            'number',
            'object',
            'string',
          ],
        },
        stringArray: {
          type: 'array',
          items: { type: 'string' },
          uniqueItems: !0,
          default: [],
        },
      },
      type: ['object', 'boolean'],
      properties: {
        $id: { type: 'string', format: 'uri-reference' },
        $schema: { type: 'string', format: 'uri' },
        $ref: { type: 'string', format: 'uri-reference' },
        $comment: { type: 'string' },
        title: { type: 'string' },
        description: { type: 'string' },
        default: !0,
        readOnly: { type: 'boolean', default: !1 },
        examples: { type: 'array', items: !0 },
        multipleOf: { type: 'number', exclusiveMinimum: 0 },
        maximum: { type: 'number' },
        exclusiveMaximum: { type: 'number' },
        minimum: { type: 'number' },
        exclusiveMinimum: { type: 'number' },
        maxLength: { $ref: '#/definitions/nonNegativeInteger' },
        minLength: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
        pattern: { type: 'string', format: 'regex' },
        additionalItems: { $ref: '#' },
        items: {
          anyOf: [{ $ref: '#' }, { $ref: '#/definitions/schemaArray' }],
          default: !0,
        },
        maxItems: { $ref: '#/definitions/nonNegativeInteger' },
        minItems: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
        uniqueItems: { type: 'boolean', default: !1 },
        contains: { $ref: '#' },
        maxProperties: { $ref: '#/definitions/nonNegativeInteger' },
        minProperties: { $ref: '#/definitions/nonNegativeIntegerDefault0' },
        required: { $ref: '#/definitions/stringArray' },
        additionalProperties: { $ref: '#' },
        definitions: {
          type: 'object',
          additionalProperties: { $ref: '#' },
          default: {},
        },
        properties: {
          type: 'object',
          additionalProperties: { $ref: '#' },
          default: {},
        },
        patternProperties: {
          type: 'object',
          additionalProperties: { $ref: '#' },
          propertyNames: { format: 'regex' },
          default: {},
        },
        dependencies: {
          type: 'object',
          additionalProperties: {
            anyOf: [{ $ref: '#' }, { $ref: '#/definitions/stringArray' }],
          },
        },
        propertyNames: { $ref: '#' },
        const: !0,
        enum: { type: 'array', items: !0, minItems: 1, uniqueItems: !0 },
        type: {
          anyOf: [
            { $ref: '#/definitions/simpleTypes' },
            {
              type: 'array',
              items: { $ref: '#/definitions/simpleTypes' },
              minItems: 1,
              uniqueItems: !0,
            },
          ],
        },
        format: { type: 'string' },
        contentMediaType: { type: 'string' },
        contentEncoding: { type: 'string' },
        if: { $ref: '#' },
        then: { $ref: '#' },
        else: { $ref: '#' },
        allOf: { $ref: '#/definitions/schemaArray' },
        anyOf: { $ref: '#/definitions/schemaArray' },
        oneOf: { $ref: '#/definitions/schemaArray' },
        not: { $ref: '#' },
      },
      default: !0,
    },
    aL = {
      enum: [
        'array',
        'boolean',
        'integer',
        'null',
        'number',
        'object',
        'string',
      ],
    },
    lL =
      /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,
    Mee = gy().fullFormats.uri,
    uL = gy().fullFormats.regex;
  function An(
    e,
    {
      instancePath: t = '',
      parentData: r,
      parentDataProperty: n,
      rootData: i = e,
    } = {},
  ) {
    let s = null,
      o = 0,
      a = o;
    return typeof e == 'number' && !(e % 1) && !isNaN(e) && isFinite(e)
      ? o === a && typeof e == 'number' && isFinite(e) && (e < 0 || isNaN(e))
        ? ((An.errors = [
            {
              instancePath: t,
              schemaPath: '#/definitions/nonNegativeInteger/minimum',
              keyword: 'minimum',
              params: { comparison: '>=', limit: 0 },
              message: 'must be >= 0',
            },
          ]),
          !1)
        : ((An.errors = s), o === 0)
      : ((An.errors = [
          {
            instancePath: t,
            schemaPath: '#/definitions/nonNegativeInteger/type',
            keyword: 'type',
            params: { type: 'integer' },
            message: 'must be integer',
          },
        ]),
        !1);
  }
  var Ww = { validate: Q };
  function Fr(
    e,
    {
      instancePath: t = '',
      parentData: r,
      parentDataProperty: n,
      rootData: i = e,
    } = {},
  ) {
    let s = null,
      o = 0;
    if (o === 0)
      if (Array.isArray(e)) {
        if (e.length < 1)
          return (
            (Fr.errors = [
              {
                instancePath: t,
                schemaPath: '#/minItems',
                keyword: 'minItems',
                params: { limit: 1 },
                message: 'must NOT have fewer than 1 items',
              },
            ]),
            !1
          );
        {
          var a = !0;
          let u = e.length;
          for (let c = 0; c < u; c++) {
            let d = o;
            Ww.validate(e[c], {
              instancePath: t + '/' + c,
              parentData: e,
              parentDataProperty: c,
              rootData: i,
            }) ||
              ((s =
                s === null ? Ww.validate.errors : s.concat(Ww.validate.errors)),
              (o = s.length));
            var a = d === o;
            if (!a) break;
          }
        }
      } else
        return (
          (Fr.errors = [
            {
              instancePath: t,
              schemaPath: '#/type',
              keyword: 'type',
              params: { type: 'array' },
              message: 'must be array',
            },
          ]),
          !1
        );
    return (Fr.errors = s), o === 0;
  }
  var cL = Od().default;
  function Q(
    e,
    {
      instancePath: t = '',
      parentData: r,
      parentDataProperty: n,
      rootData: i = e,
    } = {},
  ) {
    let s = null,
      o = 0;
    if (
      !(e && typeof e == 'object' && !Array.isArray(e)) &&
      typeof e != 'boolean'
    )
      return (
        (Q.errors = [
          {
            instancePath: t,
            schemaPath: '#/type',
            keyword: 'type',
            params: { type: qee.type },
            message: 'must be object,boolean',
          },
        ]),
        !1
      );
    if (o === 0 && e && typeof e == 'object' && !Array.isArray(e)) {
      if (e.$id !== void 0) {
        let x = e.$id,
          E = o;
        if (o === E && o === E)
          if (typeof x == 'string') {
            if (!lL.test(x))
              return (
                (Q.errors = [
                  {
                    instancePath: t + '/$id',
                    schemaPath: '#/properties/%24id/format',
                    keyword: 'format',
                    params: { format: 'uri-reference' },
                    message: 'must match format "uri-reference"',
                  },
                ]),
                !1
              );
          } else
            return (
              (Q.errors = [
                {
                  instancePath: t + '/$id',
                  schemaPath: '#/properties/%24id/type',
                  keyword: 'type',
                  params: { type: 'string' },
                  message: 'must be string',
                },
              ]),
              !1
            );
        var a = E === o;
      } else var a = !0;
      if (a) {
        if (e.$schema !== void 0) {
          let x = e.$schema,
            E = o;
          if (o === E && o === E)
            if (typeof x == 'string') {
              if (!Mee(x))
                return (
                  (Q.errors = [
                    {
                      instancePath: t + '/$schema',
                      schemaPath: '#/properties/%24schema/format',
                      keyword: 'format',
                      params: { format: 'uri' },
                      message: 'must match format "uri"',
                    },
                  ]),
                  !1
                );
            } else
              return (
                (Q.errors = [
                  {
                    instancePath: t + '/$schema',
                    schemaPath: '#/properties/%24schema/type',
                    keyword: 'type',
                    params: { type: 'string' },
                    message: 'must be string',
                  },
                ]),
                !1
              );
          var a = E === o;
        } else var a = !0;
        if (a) {
          if (e.$ref !== void 0) {
            let x = e.$ref,
              E = o;
            if (o === E && o === E)
              if (typeof x == 'string') {
                if (!lL.test(x))
                  return (
                    (Q.errors = [
                      {
                        instancePath: t + '/$ref',
                        schemaPath: '#/properties/%24ref/format',
                        keyword: 'format',
                        params: { format: 'uri-reference' },
                        message: 'must match format "uri-reference"',
                      },
                    ]),
                    !1
                  );
              } else
                return (
                  (Q.errors = [
                    {
                      instancePath: t + '/$ref',
                      schemaPath: '#/properties/%24ref/type',
                      keyword: 'type',
                      params: { type: 'string' },
                      message: 'must be string',
                    },
                  ]),
                  !1
                );
            var a = E === o;
          } else var a = !0;
          if (a) {
            if (e.$comment !== void 0) {
              let x = o;
              if (typeof e.$comment != 'string')
                return (
                  (Q.errors = [
                    {
                      instancePath: t + '/$comment',
                      schemaPath: '#/properties/%24comment/type',
                      keyword: 'type',
                      params: { type: 'string' },
                      message: 'must be string',
                    },
                  ]),
                  !1
                );
              var a = x === o;
            } else var a = !0;
            if (a) {
              if (e.title !== void 0) {
                let x = o;
                if (typeof e.title != 'string')
                  return (
                    (Q.errors = [
                      {
                        instancePath: t + '/title',
                        schemaPath: '#/properties/title/type',
                        keyword: 'type',
                        params: { type: 'string' },
                        message: 'must be string',
                      },
                    ]),
                    !1
                  );
                var a = x === o;
              } else var a = !0;
              if (a) {
                if (e.description !== void 0) {
                  let x = o;
                  if (typeof e.description != 'string')
                    return (
                      (Q.errors = [
                        {
                          instancePath: t + '/description',
                          schemaPath: '#/properties/description/type',
                          keyword: 'type',
                          params: { type: 'string' },
                          message: 'must be string',
                        },
                      ]),
                      !1
                    );
                  var a = x === o;
                } else var a = !0;
                if (a) {
                  if (e.readOnly !== void 0) {
                    let x = o;
                    if (typeof e.readOnly != 'boolean')
                      return (
                        (Q.errors = [
                          {
                            instancePath: t + '/readOnly',
                            schemaPath: '#/properties/readOnly/type',
                            keyword: 'type',
                            params: { type: 'boolean' },
                            message: 'must be boolean',
                          },
                        ]),
                        !1
                      );
                    var a = x === o;
                  } else var a = !0;
                  if (a) {
                    if (e.examples !== void 0) {
                      let x = o;
                      if (o === x && !Array.isArray(e.examples))
                        return (
                          (Q.errors = [
                            {
                              instancePath: t + '/examples',
                              schemaPath: '#/properties/examples/type',
                              keyword: 'type',
                              params: { type: 'array' },
                              message: 'must be array',
                            },
                          ]),
                          !1
                        );
                      var a = x === o;
                    } else var a = !0;
                    if (a) {
                      if (e.multipleOf !== void 0) {
                        let x = e.multipleOf,
                          E = o;
                        if (o === E)
                          if (typeof x == 'number' && isFinite(x)) {
                            if (x <= 0 || isNaN(x))
                              return (
                                (Q.errors = [
                                  {
                                    instancePath: t + '/multipleOf',
                                    schemaPath:
                                      '#/properties/multipleOf/exclusiveMinimum',
                                    keyword: 'exclusiveMinimum',
                                    params: { comparison: '>', limit: 0 },
                                    message: 'must be > 0',
                                  },
                                ]),
                                !1
                              );
                          } else
                            return (
                              (Q.errors = [
                                {
                                  instancePath: t + '/multipleOf',
                                  schemaPath: '#/properties/multipleOf/type',
                                  keyword: 'type',
                                  params: { type: 'number' },
                                  message: 'must be number',
                                },
                              ]),
                              !1
                            );
                        var a = E === o;
                      } else var a = !0;
                      if (a) {
                        if (e.maximum !== void 0) {
                          let x = e.maximum,
                            E = o;
                          if (!(typeof x == 'number' && isFinite(x)))
                            return (
                              (Q.errors = [
                                {
                                  instancePath: t + '/maximum',
                                  schemaPath: '#/properties/maximum/type',
                                  keyword: 'type',
                                  params: { type: 'number' },
                                  message: 'must be number',
                                },
                              ]),
                              !1
                            );
                          var a = E === o;
                        } else var a = !0;
                        if (a) {
                          if (e.exclusiveMaximum !== void 0) {
                            let x = e.exclusiveMaximum,
                              E = o;
                            if (!(typeof x == 'number' && isFinite(x)))
                              return (
                                (Q.errors = [
                                  {
                                    instancePath: t + '/exclusiveMaximum',
                                    schemaPath:
                                      '#/properties/exclusiveMaximum/type',
                                    keyword: 'type',
                                    params: { type: 'number' },
                                    message: 'must be number',
                                  },
                                ]),
                                !1
                              );
                            var a = E === o;
                          } else var a = !0;
                          if (a) {
                            if (e.minimum !== void 0) {
                              let x = e.minimum,
                                E = o;
                              if (!(typeof x == 'number' && isFinite(x)))
                                return (
                                  (Q.errors = [
                                    {
                                      instancePath: t + '/minimum',
                                      schemaPath: '#/properties/minimum/type',
                                      keyword: 'type',
                                      params: { type: 'number' },
                                      message: 'must be number',
                                    },
                                  ]),
                                  !1
                                );
                              var a = E === o;
                            } else var a = !0;
                            if (a) {
                              if (e.exclusiveMinimum !== void 0) {
                                let x = e.exclusiveMinimum,
                                  E = o;
                                if (!(typeof x == 'number' && isFinite(x)))
                                  return (
                                    (Q.errors = [
                                      {
                                        instancePath: t + '/exclusiveMinimum',
                                        schemaPath:
                                          '#/properties/exclusiveMinimum/type',
                                        keyword: 'type',
                                        params: { type: 'number' },
                                        message: 'must be number',
                                      },
                                    ]),
                                    !1
                                  );
                                var a = E === o;
                              } else var a = !0;
                              if (a) {
                                if (e.maxLength !== void 0) {
                                  let x = e.maxLength,
                                    E = o,
                                    j = o;
                                  if (
                                    !(
                                      typeof x == 'number' &&
                                      !(x % 1) &&
                                      !isNaN(x) &&
                                      isFinite(x)
                                    )
                                  )
                                    return (
                                      (Q.errors = [
                                        {
                                          instancePath: t + '/maxLength',
                                          schemaPath:
                                            '#/definitions/nonNegativeInteger/type',
                                          keyword: 'type',
                                          params: { type: 'integer' },
                                          message: 'must be integer',
                                        },
                                      ]),
                                      !1
                                    );
                                  if (
                                    o === j &&
                                    typeof x == 'number' &&
                                    isFinite(x) &&
                                    (x < 0 || isNaN(x))
                                  )
                                    return (
                                      (Q.errors = [
                                        {
                                          instancePath: t + '/maxLength',
                                          schemaPath:
                                            '#/definitions/nonNegativeInteger/minimum',
                                          keyword: 'minimum',
                                          params: {
                                            comparison: '>=',
                                            limit: 0,
                                          },
                                          message: 'must be >= 0',
                                        },
                                      ]),
                                      !1
                                    );
                                  var a = E === o;
                                } else var a = !0;
                                if (a) {
                                  if (e.minLength !== void 0) {
                                    let x = o;
                                    An(e.minLength, {
                                      instancePath: t + '/minLength',
                                      parentData: e,
                                      parentDataProperty: 'minLength',
                                      rootData: i,
                                    }) ||
                                      ((s =
                                        s === null
                                          ? An.errors
                                          : s.concat(An.errors)),
                                      (o = s.length));
                                    var a = x === o;
                                  } else var a = !0;
                                  if (a) {
                                    if (e.pattern !== void 0) {
                                      let x = e.pattern,
                                        E = o;
                                      if (o === E && o === E)
                                        if (typeof x == 'string') {
                                          if (!uL(x))
                                            return (
                                              (Q.errors = [
                                                {
                                                  instancePath: t + '/pattern',
                                                  schemaPath:
                                                    '#/properties/pattern/format',
                                                  keyword: 'format',
                                                  params: { format: 'regex' },
                                                  message:
                                                    'must match format "regex"',
                                                },
                                              ]),
                                              !1
                                            );
                                        } else
                                          return (
                                            (Q.errors = [
                                              {
                                                instancePath: t + '/pattern',
                                                schemaPath:
                                                  '#/properties/pattern/type',
                                                keyword: 'type',
                                                params: { type: 'string' },
                                                message: 'must be string',
                                              },
                                            ]),
                                            !1
                                          );
                                      var a = E === o;
                                    } else var a = !0;
                                    if (a) {
                                      if (e.additionalItems !== void 0) {
                                        let x = o;
                                        Q(e.additionalItems, {
                                          instancePath: t + '/additionalItems',
                                          parentData: e,
                                          parentDataProperty: 'additionalItems',
                                          rootData: i,
                                        }) ||
                                          ((s =
                                            s === null
                                              ? Q.errors
                                              : s.concat(Q.errors)),
                                          (o = s.length));
                                        var a = x === o;
                                      } else var a = !0;
                                      if (a) {
                                        if (e.items !== void 0) {
                                          let x = e.items,
                                            E = o,
                                            j = o,
                                            q = !1,
                                            O = o;
                                          Q(x, {
                                            instancePath: t + '/items',
                                            parentData: e,
                                            parentDataProperty: 'items',
                                            rootData: i,
                                          }) ||
                                            ((s =
                                              s === null
                                                ? Q.errors
                                                : s.concat(Q.errors)),
                                            (o = s.length));
                                          var u = O === o;
                                          if (((q = q || u), !q)) {
                                            let U = o;
                                            Fr(x, {
                                              instancePath: t + '/items',
                                              parentData: e,
                                              parentDataProperty: 'items',
                                              rootData: i,
                                            }) ||
                                              ((s =
                                                s === null
                                                  ? Fr.errors
                                                  : s.concat(Fr.errors)),
                                              (o = s.length));
                                            var u = U === o;
                                            q = q || u;
                                          }
                                          if (q)
                                            (o = j),
                                              s !== null &&
                                                (j
                                                  ? (s.length = j)
                                                  : (s = null));
                                          else {
                                            let U = {
                                              instancePath: t + '/items',
                                              schemaPath:
                                                '#/properties/items/anyOf',
                                              keyword: 'anyOf',
                                              params: {},
                                              message:
                                                'must match a schema in anyOf',
                                            };
                                            return (
                                              s === null
                                                ? (s = [U])
                                                : s.push(U),
                                              o++,
                                              (Q.errors = s),
                                              !1
                                            );
                                          }
                                          var a = E === o;
                                        } else var a = !0;
                                        if (a) {
                                          if (e.maxItems !== void 0) {
                                            let x = e.maxItems,
                                              E = o,
                                              j = o;
                                            if (
                                              !(
                                                typeof x == 'number' &&
                                                !(x % 1) &&
                                                !isNaN(x) &&
                                                isFinite(x)
                                              )
                                            )
                                              return (
                                                (Q.errors = [
                                                  {
                                                    instancePath:
                                                      t + '/maxItems',
                                                    schemaPath:
                                                      '#/definitions/nonNegativeInteger/type',
                                                    keyword: 'type',
                                                    params: { type: 'integer' },
                                                    message: 'must be integer',
                                                  },
                                                ]),
                                                !1
                                              );
                                            if (
                                              o === j &&
                                              typeof x == 'number' &&
                                              isFinite(x) &&
                                              (x < 0 || isNaN(x))
                                            )
                                              return (
                                                (Q.errors = [
                                                  {
                                                    instancePath:
                                                      t + '/maxItems',
                                                    schemaPath:
                                                      '#/definitions/nonNegativeInteger/minimum',
                                                    keyword: 'minimum',
                                                    params: {
                                                      comparison: '>=',
                                                      limit: 0,
                                                    },
                                                    message: 'must be >= 0',
                                                  },
                                                ]),
                                                !1
                                              );
                                            var a = E === o;
                                          } else var a = !0;
                                          if (a) {
                                            if (e.minItems !== void 0) {
                                              let x = o;
                                              An(e.minItems, {
                                                instancePath: t + '/minItems',
                                                parentData: e,
                                                parentDataProperty: 'minItems',
                                                rootData: i,
                                              }) ||
                                                ((s =
                                                  s === null
                                                    ? An.errors
                                                    : s.concat(An.errors)),
                                                (o = s.length));
                                              var a = x === o;
                                            } else var a = !0;
                                            if (a) {
                                              if (e.uniqueItems !== void 0) {
                                                let x = o;
                                                if (
                                                  typeof e.uniqueItems !=
                                                  'boolean'
                                                )
                                                  return (
                                                    (Q.errors = [
                                                      {
                                                        instancePath:
                                                          t + '/uniqueItems',
                                                        schemaPath:
                                                          '#/properties/uniqueItems/type',
                                                        keyword: 'type',
                                                        params: {
                                                          type: 'boolean',
                                                        },
                                                        message:
                                                          'must be boolean',
                                                      },
                                                    ]),
                                                    !1
                                                  );
                                                var a = x === o;
                                              } else var a = !0;
                                              if (a) {
                                                if (e.contains !== void 0) {
                                                  let x = o;
                                                  Q(e.contains, {
                                                    instancePath:
                                                      t + '/contains',
                                                    parentData: e,
                                                    parentDataProperty:
                                                      'contains',
                                                    rootData: i,
                                                  }) ||
                                                    ((s =
                                                      s === null
                                                        ? Q.errors
                                                        : s.concat(Q.errors)),
                                                    (o = s.length));
                                                  var a = x === o;
                                                } else var a = !0;
                                                if (a) {
                                                  if (
                                                    e.maxProperties !== void 0
                                                  ) {
                                                    let x = e.maxProperties,
                                                      E = o,
                                                      j = o;
                                                    if (
                                                      !(
                                                        typeof x == 'number' &&
                                                        !(x % 1) &&
                                                        !isNaN(x) &&
                                                        isFinite(x)
                                                      )
                                                    )
                                                      return (
                                                        (Q.errors = [
                                                          {
                                                            instancePath:
                                                              t +
                                                              '/maxProperties',
                                                            schemaPath:
                                                              '#/definitions/nonNegativeInteger/type',
                                                            keyword: 'type',
                                                            params: {
                                                              type: 'integer',
                                                            },
                                                            message:
                                                              'must be integer',
                                                          },
                                                        ]),
                                                        !1
                                                      );
                                                    if (
                                                      o === j &&
                                                      typeof x == 'number' &&
                                                      isFinite(x) &&
                                                      (x < 0 || isNaN(x))
                                                    )
                                                      return (
                                                        (Q.errors = [
                                                          {
                                                            instancePath:
                                                              t +
                                                              '/maxProperties',
                                                            schemaPath:
                                                              '#/definitions/nonNegativeInteger/minimum',
                                                            keyword: 'minimum',
                                                            params: {
                                                              comparison: '>=',
                                                              limit: 0,
                                                            },
                                                            message:
                                                              'must be >= 0',
                                                          },
                                                        ]),
                                                        !1
                                                      );
                                                    var a = E === o;
                                                  } else var a = !0;
                                                  if (a) {
                                                    if (
                                                      e.minProperties !== void 0
                                                    ) {
                                                      let x = o;
                                                      An(e.minProperties, {
                                                        instancePath:
                                                          t + '/minProperties',
                                                        parentData: e,
                                                        parentDataProperty:
                                                          'minProperties',
                                                        rootData: i,
                                                      }) ||
                                                        ((s =
                                                          s === null
                                                            ? An.errors
                                                            : s.concat(
                                                                An.errors,
                                                              )),
                                                        (o = s.length));
                                                      var a = x === o;
                                                    } else var a = !0;
                                                    if (a) {
                                                      if (
                                                        e.required !== void 0
                                                      ) {
                                                        let x = e.required,
                                                          E = o;
                                                        if (o === o)
                                                          if (
                                                            Array.isArray(x)
                                                          ) {
                                                            var c = !0;
                                                            let O = x.length;
                                                            for (
                                                              let F = 0;
                                                              F < O;
                                                              F++
                                                            ) {
                                                              let U = o;
                                                              if (
                                                                typeof x[F] !=
                                                                'string'
                                                              )
                                                                return (
                                                                  (Q.errors = [
                                                                    {
                                                                      instancePath:
                                                                        t +
                                                                        '/required/' +
                                                                        F,
                                                                      schemaPath:
                                                                        '#/definitions/stringArray/items/type',
                                                                      keyword:
                                                                        'type',
                                                                      params: {
                                                                        type: 'string',
                                                                      },
                                                                      message:
                                                                        'must be string',
                                                                    },
                                                                  ]),
                                                                  !1
                                                                );
                                                              var c = U === o;
                                                              if (!c) break;
                                                            }
                                                            if (c) {
                                                              let F = x.length,
                                                                U;
                                                              if (F > 1) {
                                                                let D = {};
                                                                for (; F--; ) {
                                                                  let G = x[F];
                                                                  if (
                                                                    typeof G ==
                                                                    'string'
                                                                  ) {
                                                                    if (
                                                                      typeof D[
                                                                        G
                                                                      ] ==
                                                                      'number'
                                                                    ) {
                                                                      return (
                                                                        (U =
                                                                          D[G]),
                                                                        (Q.errors =
                                                                          [
                                                                            {
                                                                              instancePath:
                                                                                t +
                                                                                '/required',
                                                                              schemaPath:
                                                                                '#/definitions/stringArray/uniqueItems',
                                                                              keyword:
                                                                                'uniqueItems',
                                                                              params:
                                                                                {
                                                                                  i: F,
                                                                                  j: U,
                                                                                },
                                                                              message:
                                                                                'must NOT have duplicate items (items ## ' +
                                                                                U +
                                                                                ' and ' +
                                                                                F +
                                                                                ' are identical)',
                                                                            },
                                                                          ]),
                                                                        !1
                                                                      );
                                                                      break;
                                                                    }
                                                                    D[G] = F;
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          } else
                                                            return (
                                                              (Q.errors = [
                                                                {
                                                                  instancePath:
                                                                    t +
                                                                    '/required',
                                                                  schemaPath:
                                                                    '#/definitions/stringArray/type',
                                                                  keyword:
                                                                    'type',
                                                                  params: {
                                                                    type: 'array',
                                                                  },
                                                                  message:
                                                                    'must be array',
                                                                },
                                                              ]),
                                                              !1
                                                            );
                                                        var a = E === o;
                                                      } else var a = !0;
                                                      if (a) {
                                                        if (
                                                          e.additionalProperties !==
                                                          void 0
                                                        ) {
                                                          let x = o;
                                                          Q(
                                                            e.additionalProperties,
                                                            {
                                                              instancePath:
                                                                t +
                                                                '/additionalProperties',
                                                              parentData: e,
                                                              parentDataProperty:
                                                                'additionalProperties',
                                                              rootData: i,
                                                            },
                                                          ) ||
                                                            ((s =
                                                              s === null
                                                                ? Q.errors
                                                                : s.concat(
                                                                    Q.errors,
                                                                  )),
                                                            (o = s.length));
                                                          var a = x === o;
                                                        } else var a = !0;
                                                        if (a) {
                                                          if (
                                                            e.definitions !==
                                                            void 0
                                                          ) {
                                                            let x =
                                                                e.definitions,
                                                              E = o;
                                                            if (o === E)
                                                              if (
                                                                x &&
                                                                typeof x ==
                                                                  'object' &&
                                                                !Array.isArray(
                                                                  x,
                                                                )
                                                              )
                                                                for (let q in x) {
                                                                  let O = o;
                                                                  Q(x[q], {
                                                                    instancePath:
                                                                      t +
                                                                      '/definitions/' +
                                                                      q
                                                                        .replace(
                                                                          /~/g,
                                                                          '~0',
                                                                        )
                                                                        .replace(
                                                                          /\//g,
                                                                          '~1',
                                                                        ),
                                                                    parentData:
                                                                      x,
                                                                    parentDataProperty:
                                                                      q,
                                                                    rootData: i,
                                                                  }) ||
                                                                    ((s =
                                                                      s === null
                                                                        ? Q.errors
                                                                        : s.concat(
                                                                            Q.errors,
                                                                          )),
                                                                    (o =
                                                                      s.length));
                                                                  var d =
                                                                    O === o;
                                                                  if (!d) break;
                                                                }
                                                              else
                                                                return (
                                                                  (Q.errors = [
                                                                    {
                                                                      instancePath:
                                                                        t +
                                                                        '/definitions',
                                                                      schemaPath:
                                                                        '#/properties/definitions/type',
                                                                      keyword:
                                                                        'type',
                                                                      params: {
                                                                        type: 'object',
                                                                      },
                                                                      message:
                                                                        'must be object',
                                                                    },
                                                                  ]),
                                                                  !1
                                                                );
                                                            var a = E === o;
                                                          } else var a = !0;
                                                          if (a) {
                                                            if (
                                                              e.properties !==
                                                              void 0
                                                            ) {
                                                              let x =
                                                                  e.properties,
                                                                E = o;
                                                              if (o === E)
                                                                if (
                                                                  x &&
                                                                  typeof x ==
                                                                    'object' &&
                                                                  !Array.isArray(
                                                                    x,
                                                                  )
                                                                )
                                                                  for (let q in x) {
                                                                    let O = o;
                                                                    Q(x[q], {
                                                                      instancePath:
                                                                        t +
                                                                        '/properties/' +
                                                                        q
                                                                          .replace(
                                                                            /~/g,
                                                                            '~0',
                                                                          )
                                                                          .replace(
                                                                            /\//g,
                                                                            '~1',
                                                                          ),
                                                                      parentData:
                                                                        x,
                                                                      parentDataProperty:
                                                                        q,
                                                                      rootData:
                                                                        i,
                                                                    }) ||
                                                                      ((s =
                                                                        s ===
                                                                        null
                                                                          ? Q.errors
                                                                          : s.concat(
                                                                              Q.errors,
                                                                            )),
                                                                      (o =
                                                                        s.length));
                                                                    var m =
                                                                      O === o;
                                                                    if (!m)
                                                                      break;
                                                                  }
                                                                else
                                                                  return (
                                                                    (Q.errors =
                                                                      [
                                                                        {
                                                                          instancePath:
                                                                            t +
                                                                            '/properties',
                                                                          schemaPath:
                                                                            '#/properties/properties/type',
                                                                          keyword:
                                                                            'type',
                                                                          params:
                                                                            {
                                                                              type: 'object',
                                                                            },
                                                                          message:
                                                                            'must be object',
                                                                        },
                                                                      ]),
                                                                    !1
                                                                  );
                                                              var a = E === o;
                                                            } else var a = !0;
                                                            if (a) {
                                                              if (
                                                                e.patternProperties !==
                                                                void 0
                                                              ) {
                                                                let x =
                                                                    e.patternProperties,
                                                                  E = o;
                                                                if (o === E)
                                                                  if (
                                                                    x &&
                                                                    typeof x ==
                                                                      'object' &&
                                                                    !Array.isArray(
                                                                      x,
                                                                    )
                                                                  ) {
                                                                    for (let q in x) {
                                                                      let O = o;
                                                                      if (
                                                                        o ===
                                                                          O &&
                                                                        typeof q ==
                                                                          'string' &&
                                                                        !uL(q)
                                                                      ) {
                                                                        let F =
                                                                          {
                                                                            instancePath:
                                                                              t +
                                                                              '/patternProperties',
                                                                            schemaPath:
                                                                              '#/properties/patternProperties/propertyNames/format',
                                                                            keyword:
                                                                              'format',
                                                                            params:
                                                                              {
                                                                                format:
                                                                                  'regex',
                                                                              },
                                                                            message:
                                                                              'must match format "regex"',
                                                                            propertyName:
                                                                              q,
                                                                          };
                                                                        s ===
                                                                        null
                                                                          ? (s =
                                                                              [
                                                                                F,
                                                                              ])
                                                                          : s.push(
                                                                              F,
                                                                            ),
                                                                          o++;
                                                                      }
                                                                      var g =
                                                                        O === o;
                                                                      if (!g) {
                                                                        let F =
                                                                          {
                                                                            instancePath:
                                                                              t +
                                                                              '/patternProperties',
                                                                            schemaPath:
                                                                              '#/properties/patternProperties/propertyNames',
                                                                            keyword:
                                                                              'propertyNames',
                                                                            params:
                                                                              {
                                                                                propertyName:
                                                                                  q,
                                                                              },
                                                                            message:
                                                                              'property name must be valid',
                                                                          };
                                                                        return (
                                                                          s ===
                                                                          null
                                                                            ? (s =
                                                                                [
                                                                                  F,
                                                                                ])
                                                                            : s.push(
                                                                                F,
                                                                              ),
                                                                          o++,
                                                                          (Q.errors =
                                                                            s),
                                                                          !1
                                                                        );
                                                                        break;
                                                                      }
                                                                    }
                                                                    if (g)
                                                                      for (let q in x) {
                                                                        let O =
                                                                          o;
                                                                        Q(
                                                                          x[q],
                                                                          {
                                                                            instancePath:
                                                                              t +
                                                                              '/patternProperties/' +
                                                                              q
                                                                                .replace(
                                                                                  /~/g,
                                                                                  '~0',
                                                                                )
                                                                                .replace(
                                                                                  /\//g,
                                                                                  '~1',
                                                                                ),
                                                                            parentData:
                                                                              x,
                                                                            parentDataProperty:
                                                                              q,
                                                                            rootData:
                                                                              i,
                                                                          },
                                                                        ) ||
                                                                          ((s =
                                                                            s ===
                                                                            null
                                                                              ? Q.errors
                                                                              : s.concat(
                                                                                  Q.errors,
                                                                                )),
                                                                          (o =
                                                                            s.length));
                                                                        var v =
                                                                          O ===
                                                                          o;
                                                                        if (!v)
                                                                          break;
                                                                      }
                                                                  } else
                                                                    return (
                                                                      (Q.errors =
                                                                        [
                                                                          {
                                                                            instancePath:
                                                                              t +
                                                                              '/patternProperties',
                                                                            schemaPath:
                                                                              '#/properties/patternProperties/type',
                                                                            keyword:
                                                                              'type',
                                                                            params:
                                                                              {
                                                                                type: 'object',
                                                                              },
                                                                            message:
                                                                              'must be object',
                                                                          },
                                                                        ]),
                                                                      !1
                                                                    );
                                                                var a = E === o;
                                                              } else var a = !0;
                                                              if (a) {
                                                                if (
                                                                  e.dependencies !==
                                                                  void 0
                                                                ) {
                                                                  let x =
                                                                      e.dependencies,
                                                                    E = o;
                                                                  if (o === E)
                                                                    if (
                                                                      x &&
                                                                      typeof x ==
                                                                        'object' &&
                                                                      !Array.isArray(
                                                                        x,
                                                                      )
                                                                    )
                                                                      for (let q in x) {
                                                                        let O =
                                                                            x[
                                                                              q
                                                                            ],
                                                                          F = o,
                                                                          U = o,
                                                                          D =
                                                                            !1,
                                                                          G = o;
                                                                        Q(O, {
                                                                          instancePath:
                                                                            t +
                                                                            '/dependencies/' +
                                                                            q
                                                                              .replace(
                                                                                /~/g,
                                                                                '~0',
                                                                              )
                                                                              .replace(
                                                                                /\//g,
                                                                                '~1',
                                                                              ),
                                                                          parentData:
                                                                            x,
                                                                          parentDataProperty:
                                                                            q,
                                                                          rootData:
                                                                            i,
                                                                        }) ||
                                                                          ((s =
                                                                            s ===
                                                                            null
                                                                              ? Q.errors
                                                                              : s.concat(
                                                                                  Q.errors,
                                                                                )),
                                                                          (o =
                                                                            s.length));
                                                                        var S =
                                                                          G ===
                                                                          o;
                                                                        if (
                                                                          ((D =
                                                                            D ||
                                                                            S),
                                                                          !D)
                                                                        ) {
                                                                          let Y =
                                                                            o;
                                                                          if (
                                                                            o ===
                                                                            o
                                                                          )
                                                                            if (
                                                                              Array.isArray(
                                                                                O,
                                                                              )
                                                                            ) {
                                                                              var w =
                                                                                !0;
                                                                              let X =
                                                                                O.length;
                                                                              for (
                                                                                let se = 0;
                                                                                se <
                                                                                X;
                                                                                se++
                                                                              ) {
                                                                                let ae =
                                                                                  o;
                                                                                if (
                                                                                  typeof O[
                                                                                    se
                                                                                  ] !=
                                                                                  'string'
                                                                                ) {
                                                                                  let re =
                                                                                    {
                                                                                      instancePath:
                                                                                        t +
                                                                                        '/dependencies/' +
                                                                                        q
                                                                                          .replace(
                                                                                            /~/g,
                                                                                            '~0',
                                                                                          )
                                                                                          .replace(
                                                                                            /\//g,
                                                                                            '~1',
                                                                                          ) +
                                                                                        '/' +
                                                                                        se,
                                                                                      schemaPath:
                                                                                        '#/definitions/stringArray/items/type',
                                                                                      keyword:
                                                                                        'type',
                                                                                      params:
                                                                                        {
                                                                                          type: 'string',
                                                                                        },
                                                                                      message:
                                                                                        'must be string',
                                                                                    };
                                                                                  s ===
                                                                                  null
                                                                                    ? (s =
                                                                                        [
                                                                                          re,
                                                                                        ])
                                                                                    : s.push(
                                                                                        re,
                                                                                      ),
                                                                                    o++;
                                                                                }
                                                                                var w =
                                                                                  ae ===
                                                                                  o;
                                                                                if (
                                                                                  !w
                                                                                )
                                                                                  break;
                                                                              }
                                                                              if (
                                                                                w
                                                                              ) {
                                                                                let se =
                                                                                    O.length,
                                                                                  ae;
                                                                                if (
                                                                                  se >
                                                                                  1
                                                                                ) {
                                                                                  let qe =
                                                                                    {};
                                                                                  for (
                                                                                    ;
                                                                                    se--;

                                                                                  ) {
                                                                                    let re =
                                                                                      O[
                                                                                        se
                                                                                      ];
                                                                                    if (
                                                                                      typeof re ==
                                                                                      'string'
                                                                                    ) {
                                                                                      if (
                                                                                        typeof qe[
                                                                                          re
                                                                                        ] ==
                                                                                        'number'
                                                                                      ) {
                                                                                        ae =
                                                                                          qe[
                                                                                            re
                                                                                          ];
                                                                                        let Ie =
                                                                                          {
                                                                                            instancePath:
                                                                                              t +
                                                                                              '/dependencies/' +
                                                                                              q
                                                                                                .replace(
                                                                                                  /~/g,
                                                                                                  '~0',
                                                                                                )
                                                                                                .replace(
                                                                                                  /\//g,
                                                                                                  '~1',
                                                                                                ),
                                                                                            schemaPath:
                                                                                              '#/definitions/stringArray/uniqueItems',
                                                                                            keyword:
                                                                                              'uniqueItems',
                                                                                            params:
                                                                                              {
                                                                                                i: se,
                                                                                                j: ae,
                                                                                              },
                                                                                            message:
                                                                                              'must NOT have duplicate items (items ## ' +
                                                                                              ae +
                                                                                              ' and ' +
                                                                                              se +
                                                                                              ' are identical)',
                                                                                          };
                                                                                        s ===
                                                                                        null
                                                                                          ? (s =
                                                                                              [
                                                                                                Ie,
                                                                                              ])
                                                                                          : s.push(
                                                                                              Ie,
                                                                                            ),
                                                                                          o++;
                                                                                        break;
                                                                                      }
                                                                                      qe[
                                                                                        re
                                                                                      ] =
                                                                                        se;
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            } else {
                                                                              let X =
                                                                                {
                                                                                  instancePath:
                                                                                    t +
                                                                                    '/dependencies/' +
                                                                                    q
                                                                                      .replace(
                                                                                        /~/g,
                                                                                        '~0',
                                                                                      )
                                                                                      .replace(
                                                                                        /\//g,
                                                                                        '~1',
                                                                                      ),
                                                                                  schemaPath:
                                                                                    '#/definitions/stringArray/type',
                                                                                  keyword:
                                                                                    'type',
                                                                                  params:
                                                                                    {
                                                                                      type: 'array',
                                                                                    },
                                                                                  message:
                                                                                    'must be array',
                                                                                };
                                                                              s ===
                                                                              null
                                                                                ? (s =
                                                                                    [
                                                                                      X,
                                                                                    ])
                                                                                : s.push(
                                                                                    X,
                                                                                  ),
                                                                                o++;
                                                                            }
                                                                          var S =
                                                                            Y ===
                                                                            o;
                                                                          D =
                                                                            D ||
                                                                            S;
                                                                        }
                                                                        if (D)
                                                                          (o =
                                                                            U),
                                                                            s !==
                                                                              null &&
                                                                              (U
                                                                                ? (s.length =
                                                                                    U)
                                                                                : (s =
                                                                                    null));
                                                                        else {
                                                                          let Y =
                                                                            {
                                                                              instancePath:
                                                                                t +
                                                                                '/dependencies/' +
                                                                                q
                                                                                  .replace(
                                                                                    /~/g,
                                                                                    '~0',
                                                                                  )
                                                                                  .replace(
                                                                                    /\//g,
                                                                                    '~1',
                                                                                  ),
                                                                              schemaPath:
                                                                                '#/properties/dependencies/additionalProperties/anyOf',
                                                                              keyword:
                                                                                'anyOf',
                                                                              params:
                                                                                {},
                                                                              message:
                                                                                'must match a schema in anyOf',
                                                                            };
                                                                          return (
                                                                            s ===
                                                                            null
                                                                              ? (s =
                                                                                  [
                                                                                    Y,
                                                                                  ])
                                                                              : s.push(
                                                                                  Y,
                                                                                ),
                                                                            o++,
                                                                            (Q.errors =
                                                                              s),
                                                                            !1
                                                                          );
                                                                        }
                                                                        var T =
                                                                          F ===
                                                                          o;
                                                                        if (!T)
                                                                          break;
                                                                      }
                                                                    else
                                                                      return (
                                                                        (Q.errors =
                                                                          [
                                                                            {
                                                                              instancePath:
                                                                                t +
                                                                                '/dependencies',
                                                                              schemaPath:
                                                                                '#/properties/dependencies/type',
                                                                              keyword:
                                                                                'type',
                                                                              params:
                                                                                {
                                                                                  type: 'object',
                                                                                },
                                                                              message:
                                                                                'must be object',
                                                                            },
                                                                          ]),
                                                                        !1
                                                                      );
                                                                  var a =
                                                                    E === o;
                                                                } else
                                                                  var a = !0;
                                                                if (a) {
                                                                  if (
                                                                    e.propertyNames !==
                                                                    void 0
                                                                  ) {
                                                                    let x = o;
                                                                    Q(
                                                                      e.propertyNames,
                                                                      {
                                                                        instancePath:
                                                                          t +
                                                                          '/propertyNames',
                                                                        parentData:
                                                                          e,
                                                                        parentDataProperty:
                                                                          'propertyNames',
                                                                        rootData:
                                                                          i,
                                                                      },
                                                                    ) ||
                                                                      ((s =
                                                                        s ===
                                                                        null
                                                                          ? Q.errors
                                                                          : s.concat(
                                                                              Q.errors,
                                                                            )),
                                                                      (o =
                                                                        s.length));
                                                                    var a =
                                                                      x === o;
                                                                  } else
                                                                    var a = !0;
                                                                  if (a) {
                                                                    if (
                                                                      e.enum !==
                                                                      void 0
                                                                    ) {
                                                                      let x =
                                                                          e.enum,
                                                                        E = o;
                                                                      if (
                                                                        o === E
                                                                      )
                                                                        if (
                                                                          Array.isArray(
                                                                            x,
                                                                          )
                                                                        ) {
                                                                          if (
                                                                            x.length <
                                                                            1
                                                                          )
                                                                            return (
                                                                              (Q.errors =
                                                                                [
                                                                                  {
                                                                                    instancePath:
                                                                                      t +
                                                                                      '/enum',
                                                                                    schemaPath:
                                                                                      '#/properties/enum/minItems',
                                                                                    keyword:
                                                                                      'minItems',
                                                                                    params:
                                                                                      {
                                                                                        limit: 1,
                                                                                      },
                                                                                    message:
                                                                                      'must NOT have fewer than 1 items',
                                                                                  },
                                                                                ]),
                                                                              !1
                                                                            );
                                                                          {
                                                                            let q =
                                                                                x.length,
                                                                              O;
                                                                            if (
                                                                              q >
                                                                              1
                                                                            ) {
                                                                              e: for (
                                                                                ;
                                                                                q--;

                                                                              )
                                                                                for (
                                                                                  O =
                                                                                    q;
                                                                                  O--;

                                                                                )
                                                                                  if (
                                                                                    cL(
                                                                                      x[
                                                                                        q
                                                                                      ],
                                                                                      x[
                                                                                        O
                                                                                      ],
                                                                                    )
                                                                                  ) {
                                                                                    return (
                                                                                      (Q.errors =
                                                                                        [
                                                                                          {
                                                                                            instancePath:
                                                                                              t +
                                                                                              '/enum',
                                                                                            schemaPath:
                                                                                              '#/properties/enum/uniqueItems',
                                                                                            keyword:
                                                                                              'uniqueItems',
                                                                                            params:
                                                                                              {
                                                                                                i: q,
                                                                                                j: O,
                                                                                              },
                                                                                            message:
                                                                                              'must NOT have duplicate items (items ## ' +
                                                                                              O +
                                                                                              ' and ' +
                                                                                              q +
                                                                                              ' are identical)',
                                                                                          },
                                                                                        ]),
                                                                                      !1
                                                                                    );
                                                                                    break e;
                                                                                  }
                                                                            }
                                                                          }
                                                                        } else
                                                                          return (
                                                                            (Q.errors =
                                                                              [
                                                                                {
                                                                                  instancePath:
                                                                                    t +
                                                                                    '/enum',
                                                                                  schemaPath:
                                                                                    '#/properties/enum/type',
                                                                                  keyword:
                                                                                    'type',
                                                                                  params:
                                                                                    {
                                                                                      type: 'array',
                                                                                    },
                                                                                  message:
                                                                                    'must be array',
                                                                                },
                                                                              ]),
                                                                            !1
                                                                          );
                                                                      var a =
                                                                        E === o;
                                                                    } else
                                                                      var a =
                                                                        !0;
                                                                    if (a) {
                                                                      if (
                                                                        e.type !==
                                                                        void 0
                                                                      ) {
                                                                        let x =
                                                                            e.type,
                                                                          E = o,
                                                                          j = o,
                                                                          q =
                                                                            !1,
                                                                          O = o;
                                                                        if (
                                                                          !(
                                                                            x ===
                                                                              'array' ||
                                                                            x ===
                                                                              'boolean' ||
                                                                            x ===
                                                                              'integer' ||
                                                                            x ===
                                                                              'null' ||
                                                                            x ===
                                                                              'number' ||
                                                                            x ===
                                                                              'object' ||
                                                                            x ===
                                                                              'string'
                                                                          )
                                                                        ) {
                                                                          let U =
                                                                            {
                                                                              instancePath:
                                                                                t +
                                                                                '/type',
                                                                              schemaPath:
                                                                                '#/definitions/simpleTypes/enum',
                                                                              keyword:
                                                                                'enum',
                                                                              params:
                                                                                {
                                                                                  allowedValues:
                                                                                    aL.enum,
                                                                                },
                                                                              message:
                                                                                'must be equal to one of the allowed values',
                                                                            };
                                                                          s ===
                                                                          null
                                                                            ? (s =
                                                                                [
                                                                                  U,
                                                                                ])
                                                                            : s.push(
                                                                                U,
                                                                              ),
                                                                            o++;
                                                                        }
                                                                        var C =
                                                                          O ===
                                                                          o;
                                                                        if (
                                                                          ((q =
                                                                            q ||
                                                                            C),
                                                                          !q)
                                                                        ) {
                                                                          let U =
                                                                            o;
                                                                          if (
                                                                            o ===
                                                                            U
                                                                          )
                                                                            if (
                                                                              Array.isArray(
                                                                                x,
                                                                              )
                                                                            )
                                                                              if (
                                                                                x.length <
                                                                                1
                                                                              ) {
                                                                                let G =
                                                                                  {
                                                                                    instancePath:
                                                                                      t +
                                                                                      '/type',
                                                                                    schemaPath:
                                                                                      '#/properties/type/anyOf/1/minItems',
                                                                                    keyword:
                                                                                      'minItems',
                                                                                    params:
                                                                                      {
                                                                                        limit: 1,
                                                                                      },
                                                                                    message:
                                                                                      'must NOT have fewer than 1 items',
                                                                                  };
                                                                                s ===
                                                                                null
                                                                                  ? (s =
                                                                                      [
                                                                                        G,
                                                                                      ])
                                                                                  : s.push(
                                                                                      G,
                                                                                    ),
                                                                                  o++;
                                                                              } else {
                                                                                var I =
                                                                                  !0;
                                                                                let G =
                                                                                  x.length;
                                                                                for (
                                                                                  let Y = 0;
                                                                                  Y <
                                                                                  G;
                                                                                  Y++
                                                                                ) {
                                                                                  let W =
                                                                                      x[
                                                                                        Y
                                                                                      ],
                                                                                    de =
                                                                                      o;
                                                                                  if (
                                                                                    !(
                                                                                      W ===
                                                                                        'array' ||
                                                                                      W ===
                                                                                        'boolean' ||
                                                                                      W ===
                                                                                        'integer' ||
                                                                                      W ===
                                                                                        'null' ||
                                                                                      W ===
                                                                                        'number' ||
                                                                                      W ===
                                                                                        'object' ||
                                                                                      W ===
                                                                                        'string'
                                                                                    )
                                                                                  ) {
                                                                                    let se =
                                                                                      {
                                                                                        instancePath:
                                                                                          t +
                                                                                          '/type/' +
                                                                                          Y,
                                                                                        schemaPath:
                                                                                          '#/definitions/simpleTypes/enum',
                                                                                        keyword:
                                                                                          'enum',
                                                                                        params:
                                                                                          {
                                                                                            allowedValues:
                                                                                              aL.enum,
                                                                                          },
                                                                                        message:
                                                                                          'must be equal to one of the allowed values',
                                                                                      };
                                                                                    s ===
                                                                                    null
                                                                                      ? (s =
                                                                                          [
                                                                                            se,
                                                                                          ])
                                                                                      : s.push(
                                                                                          se,
                                                                                        ),
                                                                                      o++;
                                                                                  }
                                                                                  var I =
                                                                                    de ===
                                                                                    o;
                                                                                  if (
                                                                                    !I
                                                                                  )
                                                                                    break;
                                                                                }
                                                                                if (
                                                                                  I
                                                                                ) {
                                                                                  let Y =
                                                                                      x.length,
                                                                                    W;
                                                                                  if (
                                                                                    Y >
                                                                                    1
                                                                                  ) {
                                                                                    e: for (
                                                                                      ;
                                                                                      Y--;

                                                                                    )
                                                                                      for (
                                                                                        W =
                                                                                          Y;
                                                                                        W--;

                                                                                      )
                                                                                        if (
                                                                                          cL(
                                                                                            x[
                                                                                              Y
                                                                                            ],
                                                                                            x[
                                                                                              W
                                                                                            ],
                                                                                          )
                                                                                        ) {
                                                                                          let de =
                                                                                            {
                                                                                              instancePath:
                                                                                                t +
                                                                                                '/type',
                                                                                              schemaPath:
                                                                                                '#/properties/type/anyOf/1/uniqueItems',
                                                                                              keyword:
                                                                                                'uniqueItems',
                                                                                              params:
                                                                                                {
                                                                                                  i: Y,
                                                                                                  j: W,
                                                                                                },
                                                                                              message:
                                                                                                'must NOT have duplicate items (items ## ' +
                                                                                                W +
                                                                                                ' and ' +
                                                                                                Y +
                                                                                                ' are identical)',
                                                                                            };
                                                                                          s ===
                                                                                          null
                                                                                            ? (s =
                                                                                                [
                                                                                                  de,
                                                                                                ])
                                                                                            : s.push(
                                                                                                de,
                                                                                              ),
                                                                                            o++;
                                                                                          break e;
                                                                                        }
                                                                                  }
                                                                                }
                                                                              }
                                                                            else {
                                                                              let G =
                                                                                {
                                                                                  instancePath:
                                                                                    t +
                                                                                    '/type',
                                                                                  schemaPath:
                                                                                    '#/properties/type/anyOf/1/type',
                                                                                  keyword:
                                                                                    'type',
                                                                                  params:
                                                                                    {
                                                                                      type: 'array',
                                                                                    },
                                                                                  message:
                                                                                    'must be array',
                                                                                };
                                                                              s ===
                                                                              null
                                                                                ? (s =
                                                                                    [
                                                                                      G,
                                                                                    ])
                                                                                : s.push(
                                                                                    G,
                                                                                  ),
                                                                                o++;
                                                                            }
                                                                          var C =
                                                                            U ===
                                                                            o;
                                                                          q =
                                                                            q ||
                                                                            C;
                                                                        }
                                                                        if (q)
                                                                          (o =
                                                                            j),
                                                                            s !==
                                                                              null &&
                                                                              (j
                                                                                ? (s.length =
                                                                                    j)
                                                                                : (s =
                                                                                    null));
                                                                        else {
                                                                          let U =
                                                                            {
                                                                              instancePath:
                                                                                t +
                                                                                '/type',
                                                                              schemaPath:
                                                                                '#/properties/type/anyOf',
                                                                              keyword:
                                                                                'anyOf',
                                                                              params:
                                                                                {},
                                                                              message:
                                                                                'must match a schema in anyOf',
                                                                            };
                                                                          return (
                                                                            s ===
                                                                            null
                                                                              ? (s =
                                                                                  [
                                                                                    U,
                                                                                  ])
                                                                              : s.push(
                                                                                  U,
                                                                                ),
                                                                            o++,
                                                                            (Q.errors =
                                                                              s),
                                                                            !1
                                                                          );
                                                                        }
                                                                        var a =
                                                                          E ===
                                                                          o;
                                                                      } else
                                                                        var a =
                                                                          !0;
                                                                      if (a) {
                                                                        if (
                                                                          e.format !==
                                                                          void 0
                                                                        ) {
                                                                          let x =
                                                                            o;
                                                                          if (
                                                                            typeof e.format !=
                                                                            'string'
                                                                          )
                                                                            return (
                                                                              (Q.errors =
                                                                                [
                                                                                  {
                                                                                    instancePath:
                                                                                      t +
                                                                                      '/format',
                                                                                    schemaPath:
                                                                                      '#/properties/format/type',
                                                                                    keyword:
                                                                                      'type',
                                                                                    params:
                                                                                      {
                                                                                        type: 'string',
                                                                                      },
                                                                                    message:
                                                                                      'must be string',
                                                                                  },
                                                                                ]),
                                                                              !1
                                                                            );
                                                                          var a =
                                                                            x ===
                                                                            o;
                                                                        } else
                                                                          var a =
                                                                            !0;
                                                                        if (a) {
                                                                          if (
                                                                            e.contentMediaType !==
                                                                            void 0
                                                                          ) {
                                                                            let x =
                                                                              o;
                                                                            if (
                                                                              typeof e.contentMediaType !=
                                                                              'string'
                                                                            )
                                                                              return (
                                                                                (Q.errors =
                                                                                  [
                                                                                    {
                                                                                      instancePath:
                                                                                        t +
                                                                                        '/contentMediaType',
                                                                                      schemaPath:
                                                                                        '#/properties/contentMediaType/type',
                                                                                      keyword:
                                                                                        'type',
                                                                                      params:
                                                                                        {
                                                                                          type: 'string',
                                                                                        },
                                                                                      message:
                                                                                        'must be string',
                                                                                    },
                                                                                  ]),
                                                                                !1
                                                                              );
                                                                            var a =
                                                                              x ===
                                                                              o;
                                                                          } else
                                                                            var a =
                                                                              !0;
                                                                          if (
                                                                            a
                                                                          ) {
                                                                            if (
                                                                              e.contentEncoding !==
                                                                              void 0
                                                                            ) {
                                                                              let x =
                                                                                o;
                                                                              if (
                                                                                typeof e.contentEncoding !=
                                                                                'string'
                                                                              )
                                                                                return (
                                                                                  (Q.errors =
                                                                                    [
                                                                                      {
                                                                                        instancePath:
                                                                                          t +
                                                                                          '/contentEncoding',
                                                                                        schemaPath:
                                                                                          '#/properties/contentEncoding/type',
                                                                                        keyword:
                                                                                          'type',
                                                                                        params:
                                                                                          {
                                                                                            type: 'string',
                                                                                          },
                                                                                        message:
                                                                                          'must be string',
                                                                                      },
                                                                                    ]),
                                                                                  !1
                                                                                );
                                                                              var a =
                                                                                x ===
                                                                                o;
                                                                            } else
                                                                              var a =
                                                                                !0;
                                                                            if (
                                                                              a
                                                                            ) {
                                                                              if (
                                                                                e.if !==
                                                                                void 0
                                                                              ) {
                                                                                let x =
                                                                                  o;
                                                                                Q(
                                                                                  e.if,
                                                                                  {
                                                                                    instancePath:
                                                                                      t +
                                                                                      '/if',
                                                                                    parentData:
                                                                                      e,
                                                                                    parentDataProperty:
                                                                                      'if',
                                                                                    rootData:
                                                                                      i,
                                                                                  },
                                                                                ) ||
                                                                                  ((s =
                                                                                    s ===
                                                                                    null
                                                                                      ? Q.errors
                                                                                      : s.concat(
                                                                                          Q.errors,
                                                                                        )),
                                                                                  (o =
                                                                                    s.length));
                                                                                var a =
                                                                                  x ===
                                                                                  o;
                                                                              } else
                                                                                var a =
                                                                                  !0;
                                                                              if (
                                                                                a
                                                                              ) {
                                                                                if (
                                                                                  e.then !==
                                                                                  void 0
                                                                                ) {
                                                                                  let x =
                                                                                    o;
                                                                                  Q(
                                                                                    e.then,
                                                                                    {
                                                                                      instancePath:
                                                                                        t +
                                                                                        '/then',
                                                                                      parentData:
                                                                                        e,
                                                                                      parentDataProperty:
                                                                                        'then',
                                                                                      rootData:
                                                                                        i,
                                                                                    },
                                                                                  ) ||
                                                                                    ((s =
                                                                                      s ===
                                                                                      null
                                                                                        ? Q.errors
                                                                                        : s.concat(
                                                                                            Q.errors,
                                                                                          )),
                                                                                    (o =
                                                                                      s.length));
                                                                                  var a =
                                                                                    x ===
                                                                                    o;
                                                                                } else
                                                                                  var a =
                                                                                    !0;
                                                                                if (
                                                                                  a
                                                                                ) {
                                                                                  if (
                                                                                    e.else !==
                                                                                    void 0
                                                                                  ) {
                                                                                    let x =
                                                                                      o;
                                                                                    Q(
                                                                                      e.else,
                                                                                      {
                                                                                        instancePath:
                                                                                          t +
                                                                                          '/else',
                                                                                        parentData:
                                                                                          e,
                                                                                        parentDataProperty:
                                                                                          'else',
                                                                                        rootData:
                                                                                          i,
                                                                                      },
                                                                                    ) ||
                                                                                      ((s =
                                                                                        s ===
                                                                                        null
                                                                                          ? Q.errors
                                                                                          : s.concat(
                                                                                              Q.errors,
                                                                                            )),
                                                                                      (o =
                                                                                        s.length));
                                                                                    var a =
                                                                                      x ===
                                                                                      o;
                                                                                  } else
                                                                                    var a =
                                                                                      !0;
                                                                                  if (
                                                                                    a
                                                                                  ) {
                                                                                    if (
                                                                                      e.allOf !==
                                                                                      void 0
                                                                                    ) {
                                                                                      let x =
                                                                                        o;
                                                                                      Fr(
                                                                                        e.allOf,
                                                                                        {
                                                                                          instancePath:
                                                                                            t +
                                                                                            '/allOf',
                                                                                          parentData:
                                                                                            e,
                                                                                          parentDataProperty:
                                                                                            'allOf',
                                                                                          rootData:
                                                                                            i,
                                                                                        },
                                                                                      ) ||
                                                                                        ((s =
                                                                                          s ===
                                                                                          null
                                                                                            ? Fr.errors
                                                                                            : s.concat(
                                                                                                Fr.errors,
                                                                                              )),
                                                                                        (o =
                                                                                          s.length));
                                                                                      var a =
                                                                                        x ===
                                                                                        o;
                                                                                    } else
                                                                                      var a =
                                                                                        !0;
                                                                                    if (
                                                                                      a
                                                                                    ) {
                                                                                      if (
                                                                                        e.anyOf !==
                                                                                        void 0
                                                                                      ) {
                                                                                        let x =
                                                                                          o;
                                                                                        Fr(
                                                                                          e.anyOf,
                                                                                          {
                                                                                            instancePath:
                                                                                              t +
                                                                                              '/anyOf',
                                                                                            parentData:
                                                                                              e,
                                                                                            parentDataProperty:
                                                                                              'anyOf',
                                                                                            rootData:
                                                                                              i,
                                                                                          },
                                                                                        ) ||
                                                                                          ((s =
                                                                                            s ===
                                                                                            null
                                                                                              ? Fr.errors
                                                                                              : s.concat(
                                                                                                  Fr.errors,
                                                                                                )),
                                                                                          (o =
                                                                                            s.length));
                                                                                        var a =
                                                                                          x ===
                                                                                          o;
                                                                                      } else
                                                                                        var a =
                                                                                          !0;
                                                                                      if (
                                                                                        a
                                                                                      ) {
                                                                                        if (
                                                                                          e.oneOf !==
                                                                                          void 0
                                                                                        ) {
                                                                                          let x =
                                                                                            o;
                                                                                          Fr(
                                                                                            e.oneOf,
                                                                                            {
                                                                                              instancePath:
                                                                                                t +
                                                                                                '/oneOf',
                                                                                              parentData:
                                                                                                e,
                                                                                              parentDataProperty:
                                                                                                'oneOf',
                                                                                              rootData:
                                                                                                i,
                                                                                            },
                                                                                          ) ||
                                                                                            ((s =
                                                                                              s ===
                                                                                              null
                                                                                                ? Fr.errors
                                                                                                : s.concat(
                                                                                                    Fr.errors,
                                                                                                  )),
                                                                                            (o =
                                                                                              s.length));
                                                                                          var a =
                                                                                            x ===
                                                                                            o;
                                                                                        } else
                                                                                          var a =
                                                                                            !0;
                                                                                        if (
                                                                                          a
                                                                                        )
                                                                                          if (
                                                                                            e.not !==
                                                                                            void 0
                                                                                          ) {
                                                                                            let x =
                                                                                              o;
                                                                                            Q(
                                                                                              e.not,
                                                                                              {
                                                                                                instancePath:
                                                                                                  t +
                                                                                                  '/not',
                                                                                                parentData:
                                                                                                  e,
                                                                                                parentDataProperty:
                                                                                                  'not',
                                                                                                rootData:
                                                                                                  i,
                                                                                              },
                                                                                            ) ||
                                                                                              ((s =
                                                                                                s ===
                                                                                                null
                                                                                                  ? Q.errors
                                                                                                  : s.concat(
                                                                                                      Q.errors,
                                                                                                    )),
                                                                                              (o =
                                                                                                s.length));
                                                                                            var a =
                                                                                              x ===
                                                                                              o;
                                                                                          } else
                                                                                            var a =
                                                                                              !0;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return (Q.errors = s), o === 0;
  }
});
var Xw = $((Mye, dL) => {
  'use strict';
  var Yw = class extends Error {
      constructor(t, r) {
        super(),
          (this.name = 'JsonSchemaMergeError'),
          (this.code = 'JSON_SCHEMA_MERGE_ERROR'),
          (this.message = `Failed to merge "${t}" keyword schemas.`),
          (this.schemas = r);
      }
    },
    Jw = class extends Error {
      constructor(t, r) {
        super(),
          (this.name = 'JsonSchemaMergeError'),
          (this.code = 'JSON_SCHEMA_MERGE_ERROR'),
          (this.message = `Resolver for "${t}" keyword not found.`),
          (this.schemas = r);
      }
    },
    Kw = class extends Error {
      constructor(t) {
        super(),
          (this.name = 'JsonSchemaMergeError'),
          (this.code = 'JSON_SCHEMA_MERGE_ERROR'),
          (this.message = `Invalid "onConflict" option: "${t}".`);
      }
    };
  dL.exports = {
    MergeError: Yw,
    ResolverNotFoundError: Jw,
    InvalidOnConflictOptionError: Kw,
  };
});
var mL = $((Hye, pL) => {
  'use strict';
  var Hee = mo(),
    { MergeError: Zw } = Xw();
  function hL(e) {
    let t = e[0];
    for (let r = 1; r < e.length; r++) t = t.filter((n) => e[r].includes(n));
    return t;
  }
  function zee(e, t, r) {
    let n = hL(t);
    if (n.length === 0) throw new Zw(e, t);
    r[e] = n;
  }
  function Uee(e, t, r) {
    for (let i = 0; i < t.length; i++) Array.isArray(t[i]) || (t[i] = [t[i]]);
    let n = hL(t);
    if (n.length === 0) throw new Zw(e, t);
    n.length === 1 ? (r[e] = n[0]) : (r[e] = n);
  }
  function Vee(e, t, r) {
    let n = [];
    for (let i of t) for (let s of i) n.includes(s) || n.push(s);
    r[e] = n;
  }
  function Bee(e, t, r) {
    r[e] = Math.min(...t);
  }
  function Wee(e, t, r) {
    r[e] = Math.max(...t);
  }
  function Gee(e, t, r) {
    let n = (a, u) => (u ? n(u, a % u) : a),
      i = (a, u) => (a * u) / n(a, u),
      s = 1;
    for (let a of t) for (; (a * s) % 1 !== 0; ) s *= 10;
    let o = t[0] * s;
    for (let a of t) o = i(o, a * s);
    r[e] = o / s;
  }
  function Yee(e, t, r) {
    let n = t[0];
    for (let i = 1; i < t.length; i++) if (!Hee(t[i], n)) throw new Zw(e, t);
    r[e] = n;
  }
  function Jee() {}
  function Kee(e, t, r) {
    for (let n of t)
      if (n === !1) {
        r[e] = !1;
        return;
      }
    r[e] = !0;
  }
  function Xee(e, t, r) {
    for (let n of t)
      if (n === !0) {
        r[e] = !0;
        return;
      }
    r[e] = !1;
  }
  pL.exports = {
    arraysIntersection: zee,
    hybridArraysIntersection: Uee,
    arraysUnion: Vee,
    minNumber: Bee,
    maxNumber: Wee,
    commonMultiple: Gee,
    allEqual: Yee,
    booleanAnd: Kee,
    booleanOr: Xee,
    skip: Jee,
  };
});
var _L = $((zye, SL) => {
  'use strict';
  var Zee = mo(),
    xt = mL(),
    _y = Xw(),
    vL = {
      $id: xt.skip,
      type: xt.hybridArraysIntersection,
      enum: xt.arraysIntersection,
      minLength: xt.maxNumber,
      maxLength: xt.minNumber,
      minimum: xt.maxNumber,
      maximum: xt.minNumber,
      multipleOf: xt.commonMultiple,
      exclusiveMinimum: xt.maxNumber,
      exclusiveMaximum: xt.minNumber,
      minItems: xt.maxNumber,
      maxItems: xt.minNumber,
      maxProperties: xt.minNumber,
      minProperties: xt.maxNumber,
      const: xt.allEqual,
      default: xt.allEqual,
      format: xt.allEqual,
      required: xt.arraysUnion,
      properties: ste,
      patternProperties: Sy,
      additionalProperties: by,
      items: tte,
      additionalItems: rte,
      definitions: Sy,
      $defs: Sy,
      nullable: xt.booleanAnd,
      oneOf: yL,
      anyOf: yL,
      allOf: xt.arraysUnion,
      not: by,
      if: ite,
      then: xt.skip,
      else: xt.skip,
      dependencies: gL,
      dependentRequired: gL,
      dependentSchemas: Sy,
      propertyNames: by,
      uniqueItems: xt.booleanOr,
      contains: by,
    };
  function by(e, t, r, n, i) {
    r[e] = ss(t, i);
  }
  function Qee(e) {
    let t = [[]];
    for (let r of e) {
      let n = [];
      for (let i of t) for (let s of r) n.push([...i, s]);
      t = n;
    }
    return t;
  }
  function yL(e, t, r, n, i) {
    if (t.length === 1) {
      r[e] = t[0];
      return;
    }
    let s = Qee(t),
      o = [];
    for (let a of s)
      try {
        let u = ss(a, i);
        u !== void 0 && o.push(u);
      } catch (u) {
        if (u instanceof _y.MergeError) continue;
        throw u;
      }
    r[e] = o;
  }
  function ete(e, t) {
    let { items: r, additionalItems: n } = e;
    return Array.isArray(r) ? (t < r.length ? r[t] : n) : r !== void 0 ? r : n;
  }
  function tte(e, t, r, n, i) {
    let s = 0;
    for (let a of t) Array.isArray(a) && (s = Math.max(s, a.length));
    if (s === 0) {
      r[e] = ss(t, i);
      return;
    }
    let o = [];
    for (let a = 0; a < s; a++) {
      let u = [];
      for (let c of n) {
        let d = ete(c, a);
        d !== void 0 && u.push(d);
      }
      o[a] = ss(u, i);
    }
    r[e] = o;
  }
  function rte(e, t, r, n, i) {
    let s = !1;
    for (let a of n)
      if (Array.isArray(a.items)) {
        s = !0;
        break;
      }
    if (!s) {
      r[e] = ss(t, i);
      return;
    }
    let o = [];
    for (let a of n) {
      let u = a.additionalItems;
      u === void 0 && !Array.isArray(a.items) && (u = a.items),
        u !== void 0 && o.push(u);
    }
    r[e] = ss(o, i);
  }
  function nte(e, t) {
    let { properties: r, patternProperties: n, additionalProperties: i } = e;
    if (r?.[t] !== void 0) return r[t];
    for (let s of Object.keys(n ?? {})) if (new RegExp(s).test(t)) return n[s];
    return i;
  }
  function ste(e, t, r, n, i) {
    let s = {};
    for (let a of n) {
      let u = a.properties ?? {};
      for (let c of Object.keys(u)) {
        if (s[c] !== void 0) continue;
        let d = u[c];
        s[c] = [d];
        for (let m of n) {
          if (a === m) continue;
          let g = nte(m, c);
          g !== void 0 && s[c].push(g);
        }
      }
    }
    let o = {};
    for (let a of Object.keys(s)) {
      let u = s[a];
      o[a] = ss(u, i);
    }
    r[e] = o;
  }
  function Sy(e, t, r, n, i) {
    let s = {};
    for (let a of t)
      for (let u of Object.keys(a))
        s[u] === void 0 && (s[u] = []), s[u].push(a[u]);
    let o = {};
    for (let a of Object.keys(s)) {
      let u = s[a],
        c = ss(u, i);
      o[a] = c;
    }
    r[e] = o;
  }
  function ite(e, t, r, n, i) {
    for (let s = 0; s < n.length; s++) {
      let o = { if: n[s].if, then: n[s].then, else: n[s].else };
      if (o.if !== void 0) {
        if (r.if === void 0) {
          (r.if = o.if),
            o.then !== void 0 && (r.then = o.then),
            o.else !== void 0 && (r.else = o.else);
          continue;
        }
        r.then !== void 0 && (r.then = ss([r.then, o], i)),
          r.else !== void 0 && (r.else = ss([r.else, o], i));
      }
    }
  }
  function gL(e, t, r) {
    let n = {};
    for (let i of t)
      for (let s of Object.keys(i)) {
        n[s] === void 0 && (n[s] = []);
        let o = n[s];
        for (let a of i[s]) o.includes(a) || o.push(a);
      }
    r[e] = n;
  }
  function ss(e, t) {
    if (e.length === 0) return {};
    if (e.length === 1) return e[0];
    let r = {},
      n = {},
      i = !0;
    for (let s of e) {
      if (s === !1) return !1;
      if (s !== !0) {
        i = !1;
        for (let o of Object.keys(s))
          n[o] === void 0 && (n[o] = []), n[o].push(s[o]);
      }
    }
    if (i) return !0;
    for (let s of Object.keys(n)) {
      let o = n[s];
      (t.resolvers[s] ?? t.defaultResolver)(s, o, r, e, t);
    }
    return r;
  }
  function bL(e, t, r, n, i) {
    let s = i.onConflict ?? 'throw';
    if (t.length === 1 || s === 'first') {
      r[e] = t[0];
      return;
    }
    let o = !0;
    for (let a = 1; a < t.length; a++)
      if (!Zee(t[a], t[0])) {
        o = !1;
        break;
      }
    if (o) {
      r[e] = t[0];
      return;
    }
    if (s === 'throw') throw new _y.ResolverNotFoundError(e, t);
    if (s !== 'skip') throw new _y.InvalidOnConflictOptionError(s);
  }
  function ote(e, t = {}) {
    return (
      t.defaultResolver === void 0 && (t.defaultResolver = bL),
      (t.resolvers = { ...vL, ...t.resolvers }),
      ss(e, t)
    );
  }
  SL.exports = {
    mergeSchemas: ote,
    keywordsResolvers: vL,
    defaultResolver: bL,
    ..._y,
  };
});
var EL = $((Uye, wL) => {
  'use strict';
  var { mergeSchemas: ate } = _L();
  function lte(e) {
    return ate(e, { onConflict: 'skip' });
  }
  wL.exports = lte;
});
var RL = $((Vye, Qw) => {
  'use strict';
  function ute(e, t, r, n) {
    let i = '';
    t.validatorSchemasIds.size > 0
      ? ((i += `const Validator = require('fast-json-stringify/lib/validator')
`),
        (i += `const validatorState = ${JSON.stringify(n.getState())}
`),
        (i += `const validator = Validator.restoreFromState(validatorState)
`))
      : (i += `const validator = null
`);
    let { schema: s, ...o } = r.getState();
    return `
  'use strict'

  const Serializer = require('fast-json-stringify/lib/serializer')
  const serializerState = ${JSON.stringify(o)}
  const serializer = Serializer.restoreFromState(serializerState)

  ${i}

  module.exports = ${e.toString()}(validator, serializer)`;
  }
  Qw.exports = ute;
  Qw.exports.dependencies = { Serializer: rm(), Validator: Vw() };
});
var $L = $((Bye, Lu) => {
  'use strict';
  var { RefResolver: cte } = QI(),
    fte = rm(),
    dte = Vw(),
    Ga = oL(),
    TL = fL(),
    hte = EL(),
    pte = /'/g,
    wy = 2e4,
    kL = 'default',
    mte = ['floor', 'ceil', 'round', 'trunc'],
    xL = ['default', 'json-stringify'],
    Fd = 0;
  function eE(e, t) {
    if (!TL(e)) {
      t ? (t = `"${t}" `) : (t = '');
      let r = TL.errors[0],
        n = new Error(
          `${t}schema is invalid: data${r.instancePath} ${r.message}`,
        );
      throw ((n.errors = eE.errors), n);
    }
  }
  function qd(e, t) {
    let r = t.schema.$ref,
      n = r.indexOf('#');
    n === -1 && (n = r.length);
    let i = r.slice(0, n) || t.schemaId,
      s = r.slice(n) || '#',
      o = e.refResolver.getSchema(i, s);
    if (o === null) throw new Error(`Cannot find reference "${r}"`);
    let a = new Ga(o, i, s);
    return o.$ref !== void 0 ? qd(e, a) : a;
  }
  function Ey(e, t) {
    let r = e.refResolver.getSchema(t, '#');
    return new Ga(r, t, '#');
  }
  function PL(e, t) {
    return e.$id && e.$id.charAt(0) !== '#' ? e.$id : t;
  }
  function tE(e, t) {
    eE(e), (t = t || {});
    let r = {
        functions: [],
        functionsCounter: 0,
        functionsNamesBySchema: new Map(),
        options: t,
        refResolver: new cte(),
        rootSchemaId: e.$id || `__fjs_root_${Fd++}`,
        validatorSchemasIds: new Set(),
        mergedSchemasIds: new Map(),
      },
      n = PL(e, r.rootSchemaId);
    if (
      (r.refResolver.hasSchema(n) || r.refResolver.addSchema(e, r.rootSchemaId),
      t.schema)
    )
      for (let d in t.schema) {
        let m = t.schema[d],
          g = PL(m, d);
        r.refResolver.hasSchema(g) || (eE(m, d), r.refResolver.addSchema(m, d));
      }
    if (t.rounding && !mte.includes(t.rounding))
      throw new Error(`Unsupported integer rounding method ${t.rounding}`);
    if (t.largeArrayMechanism)
      if (xL.includes(t.largeArrayMechanism)) kL = t.largeArrayMechanism;
      else
        throw new Error(
          `Unsupported large array mechanism ${t.largeArrayMechanism}`,
        );
    if (t.largeArraySize)
      if (
        typeof t.largeArraySize == 'string' &&
        Number.isFinite(Number.parseInt(t.largeArraySize, 10))
      )
        wy = Number.parseInt(t.largeArraySize, 10);
      else if (
        typeof t.largeArraySize == 'number' &&
        Number.isInteger(t.largeArraySize)
      )
        wy = t.largeArraySize;
      else if (typeof t.largeArraySize == 'bigint')
        wy = Number(t.largeArraySize);
      else
        throw new Error(
          `Unsupported large array size. Expected integer-like, got ${typeof t.largeArraySize} with value ${t.largeArraySize}`,
        );
    let i = new Ga(e, r.rootSchemaId),
      s = pn(r, i, 'input'),
      o = `
    const JSON_STR_BEGIN_OBJECT = '{'
    const JSON_STR_END_OBJECT = '}'
    const JSON_STR_BEGIN_ARRAY = '['
    const JSON_STR_END_ARRAY = ']'
    const JSON_STR_COMMA = ','
    const JSON_STR_COLONS = ':'
    const JSON_STR_QUOTE = '"'
    const JSON_STR_EMPTY_OBJECT = JSON_STR_BEGIN_OBJECT + JSON_STR_END_OBJECT
    const JSON_STR_EMPTY_ARRAY = JSON_STR_BEGIN_ARRAY + JSON_STR_END_ARRAY
    const JSON_STR_EMPTY_STRING = JSON_STR_QUOTE + JSON_STR_QUOTE
    const JSON_STR_NULL = 'null'
  `;
    s === 'json += anonymous0(input)'
      ? (o += `
    ${r.functions.join(`
`)}
    const main = anonymous0
    return main
    `)
      : (o += `
    function main (input) {
      let json = ''
      ${s}
      return json
    }
    ${r.functions.join(`
`)}
    return main
    `);
    let a = new fte(t),
      u = new dte(t.ajv);
    for (let d of r.validatorSchemasIds) {
      let m = r.refResolver.getSchema(d);
      u.addSchema(m, d);
      let g = r.refResolver.getSchemaDependencies(d);
      for (let [v, S] of Object.entries(g)) u.addSchema(S, v);
    }
    if ((t.debugMode && (t.mode = 'debug'), t.mode === 'debug'))
      return {
        validator: u,
        serializer: a,
        code: `validator
serializer
${o}`,
        ajv: u.ajv,
      };
    let c = new Function('validator', 'serializer', o);
    return t.mode === 'standalone' ? RL()(c, r, a, u) : c(u, a);
  }
  var yte = [
      'properties',
      'required',
      'additionalProperties',
      'patternProperties',
      'maxProperties',
      'minProperties',
      'dependencies',
    ],
    gte = [
      'items',
      'additionalItems',
      'maxItems',
      'minItems',
      'uniqueItems',
      'contains',
    ],
    vte = ['maxLength', 'minLength', 'pattern'],
    bte = [
      'multipleOf',
      'maximum',
      'exclusiveMaximum',
      'minimum',
      'exclusiveMinimum',
    ];
  function Ste(e) {
    for (var t of yte) if (t in e) return 'object';
    for (var t of gte) if (t in e) return 'array';
    for (var t of vte) if (t in e) return 'string';
    for (var t of bte) if (t in e) return 'number';
    return e.type;
  }
  function _te(e, t, r) {
    let n = t.schema,
      i = Object.keys(n.properties || {}),
      s = `
    const propertiesKeys = ${JSON.stringify(i)}
    for (const [key, value] of Object.entries(obj)) {
      if (
        propertiesKeys.includes(key) ||
        value === undefined ||
        typeof value === 'function' ||
        typeof value === 'symbol'
      ) continue
  `,
      o = t.getPropertyLocation('patternProperties'),
      a = o.schema;
    if (a !== void 0)
      for (let d in a) {
        let m = o.getPropertyLocation(d);
        s += `
        if (/${d.replace(/\\*\//g, '\\/')}/.test(key)) {
          ${r}
          json += serializer.asString(key) + JSON_STR_COLONS
          ${pn(e, m, 'value')}
          continue
        }
      `;
      }
    let c = t.getPropertyLocation('additionalProperties').schema;
    if (c !== void 0)
      if (c === !0)
        s += `
        ${r}
        json += serializer.asString(key) + JSON_STR_COLONS + JSON.stringify(value)
      `;
      else {
        let d = t.getPropertyLocation('additionalProperties');
        s += `
        ${r}
        json += serializer.asString(key) + JSON_STR_COLONS
        ${pn(e, d, 'value')}
      `;
      }
    return (
      (s += `
    }
  `),
      s
    );
  }
  function wte(e, t) {
    let r = t.schema,
      n = t.getPropertyLocation('properties'),
      i = r.required || [],
      s = Object.keys(r.properties || {}).sort((c, d) => {
        let m = i.includes(c),
          g = i.includes(d);
        return m === g ? 0 : m ? -1 : 1;
      }),
      o = i.includes(s[0]),
      a = `let value
`;
    for (let c of i)
      if (!s.includes(c)) {
        let d = JSON.stringify(c);
        a += `if (obj[${d}] === undefined) throw new Error('${d.replace(/'/g, "\\'")} is required!')
`;
      }
    a += `let json = JSON_STR_BEGIN_OBJECT
`;
    let u = '';
    o ||
      ((a += `let addComma = false
`),
      (u = '!addComma && (addComma = true) || (json += JSON_STR_COMMA)'));
    for (let c of s) {
      let d = n.getPropertyLocation(c);
      d.schema.$ref && (d = qd(e, d));
      let m = JSON.stringify(c),
        g = d.schema.default,
        v = i.includes(c);
      (a += `
      value = obj[${m}]
      if (value !== undefined) {
        ${u}
        json += ${JSON.stringify(m + ':')}
        ${pn(e, d, 'value')}
      }`),
        g !== void 0
          ? (a += ` else {
        ${u}
        json += ${JSON.stringify(m + ':' + JSON.stringify(g))}
      }
      `)
          : v
            ? (a += ` else {
        throw new Error('${m.replace(/'/g, "\\'")} is required!')
      }
      `)
            : (a += `
`),
        o && (u = "json += ','");
    }
    return (
      (r.patternProperties || r.additionalProperties) && (a += _te(e, t, u)),
      (a += `
    return json + JSON_STR_END_OBJECT
  `),
      a
    );
  }
  function Ry(e, t, r) {
    for (let o = 0; o < r.length; o++) {
      let a = r[o];
      a.schema.$ref && (r[o] = qd(e, a));
    }
    let n = [];
    for (let o of r) {
      let a = CL(e, o.schema, o.schemaId);
      delete a.$id, n.push(a);
    }
    let i = hte(n),
      s = new Ga(i, t);
    return e.refResolver.addSchema(i, t), s;
  }
  function CL(e, t, r) {
    let n = Array.isArray(t) ? [] : {};
    t.$id !== void 0 && t.$id.charAt(0) !== '#' && (r = t.$id);
    let i = e.mergedSchemasIds.get(t);
    i && e.mergedSchemasIds.set(n, i);
    for (let s in t) {
      let o = t[s];
      s === '$ref' &&
        typeof o == 'string' &&
        o.charAt(0) === '#' &&
        (o = r + o),
        typeof o == 'object' && o !== null && (o = CL(e, o, r)),
        (n[s] = o);
    }
    return n;
  }
  function Ete(e) {
    return `(${e} && typeof ${e}.toJSON === 'function')
    ? ${e}.toJSON()
    : ${e}
  `;
  }
  function Rte(e, t) {
    let r = t.schema;
    if (e.functionsNamesBySchema.has(r)) return e.functionsNamesBySchema.get(r);
    let n = IL(e);
    e.functionsNamesBySchema.set(r, n);
    let i = t.getSchemaRef();
    i.startsWith(e.rootSchemaId) && (i = i.replace(e.rootSchemaId, ''));
    let s = `
  `,
      o = r.nullable === !0;
    return (
      (s += `
    // ${i}
    function ${n} (input) {
      const obj = ${Ete('input')}
      ${o ? '' : 'if (obj === null) return JSON_STR_EMPTY_OBJECT'}

      ${wte(e, t)}
    }
  `),
      e.functions.push(s),
      n
    );
  }
  function Tte(e, t) {
    let r = t.schema,
      n = t.getPropertyLocation('items');
    (n.schema = n.schema || {}), n.schema.$ref && (n = qd(e, n));
    let i = n.schema;
    if (e.functionsNamesBySchema.has(r)) return e.functionsNamesBySchema.get(r);
    let s = IL(e);
    e.functionsNamesBySchema.set(r, s);
    let o = t.getSchemaRef();
    o.startsWith(e.rootSchemaId) && (o = o.replace(e.rootSchemaId, ''));
    let a = `
    function ${s} (obj) {
      // ${o}
  `,
      u = r.nullable === !0;
    if (
      ((a += `
    ${u ? '' : 'if (obj === null) return JSON_STR_EMPTY_ARRAY'}
    if (!Array.isArray(obj)) {
      throw new TypeError(\`The value of '${o}' does not match schema definition.\`)
    }
    const arrayLength = obj.length
  `),
      !r.additionalItems &&
        Array.isArray(i) &&
        (a += `
      if (arrayLength > ${i.length}) {
        throw new Error(\`Item at ${i.length} does not match schema definition.\`)
      }
    `),
      kL === 'json-stringify' &&
        (a += `if (arrayLength >= ${wy}) return JSON.stringify(obj)
`),
      (a += `
    const arrayEnd = arrayLength - 1
    let value
    let json = ''
  `),
      Array.isArray(i))
    ) {
      for (let c = 0; c < i.length; c++) {
        let d = i[c];
        a += `value = obj[${c}]`;
        let m = pn(e, n.getPropertyLocation(c), 'value');
        a += `
        if (${c} < arrayLength) {
          if (${OL(d.type, `[${c}]`)}) {
            ${m}
            if (${c} < arrayEnd) {
              json += JSON_STR_COMMA
            }
          } else {
            throw new Error(\`Item at ${c} does not match schema definition.\`)
          }
        }
        `;
      }
      r.additionalItems &&
        (a += `
        for (let i = ${i.length}; i < arrayLength; i++) {
          json += JSON.stringify(obj[i])
          if (i < arrayEnd) {
            json += JSON_STR_COMMA
          }
        }`);
    } else {
      let c = pn(e, n, 'obj[i]');
      a += `
      for (let i = 0; i < arrayLength; i++) {
        ${c}
        if (i < arrayEnd) {
          json += JSON_STR_COMMA
        }
      }`;
    }
    return (
      (a += `
    return JSON_STR_BEGIN_ARRAY + json + JSON_STR_END_ARRAY
  }`),
      e.functions.push(a),
      s
    );
  }
  function OL(e, t) {
    let r;
    switch (e) {
      case 'null':
        r = 'value === null';
        break;
      case 'string':
        r = `typeof value === 'string' ||
      value === null ||
      value instanceof Date ||
      value instanceof RegExp ||
      (
        typeof value === "object" &&
        typeof value.toString === "function" &&
        value.toString !== Object.prototype.toString
      )`;
        break;
      case 'integer':
        r = 'Number.isInteger(value)';
        break;
      case 'number':
        r = 'Number.isFinite(value)';
        break;
      case 'boolean':
        r = "typeof value === 'boolean'";
        break;
      case 'object':
        r =
          "value && typeof value === 'object' && value.constructor === Object";
        break;
      case 'array':
        r = 'Array.isArray(value)';
        break;
      default:
        Array.isArray(e) && (r = `(${e.map((i) => OL(i, t)).join(' || ')})`);
    }
    return r;
  }
  function IL(e) {
    return 'anonymous' + e.functionsCounter++;
  }
  function Pte(e, t, r) {
    let i = t.schema.type.sort((a) => (a === 'null' ? -1 : 1)),
      s = '';
    i.forEach((a, u) => {
      t.schema = { ...t.schema, type: a };
      let c = AL(e, t, r),
        d = u === 0 ? 'if' : 'else if';
      switch (a) {
        case 'null':
          s += `
          ${d} (${r} === null)
            ${c}
          `;
          break;
        case 'string': {
          s += `
          ${d}(
            typeof ${r} === "string" ||
            ${r} === null ||
            ${r} instanceof Date ||
            ${r} instanceof RegExp ||
            (
              typeof ${r} === "object" &&
              typeof ${r}.toString === "function" &&
              ${r}.toString !== Object.prototype.toString
            )
          )
            ${c}
        `;
          break;
        }
        case 'array': {
          s += `
          ${d}(Array.isArray(${r}))
            ${c}
        `;
          break;
        }
        case 'integer': {
          s += `
          ${d}(Number.isInteger(${r}) || ${r} === null)
            ${c}
        `;
          break;
        }
        default: {
          s += `
          ${d}(typeof ${r} === "${a}" || ${r} === null)
            ${c}
        `;
          break;
        }
      }
    });
    let o = t.getSchemaRef();
    return (
      o.startsWith(e.rootSchemaId) && (o = o.replace(e.rootSchemaId, '')),
      (s += `
    else throw new TypeError(\`The value of '${o}' does not match schema definition.\`)
  `),
      s
    );
  }
  function AL(e, t, r) {
    let n = t.schema;
    switch (n.type) {
      case 'null':
        return 'json += JSON_STR_NULL';
      case 'string':
        return n.format === 'date-time'
          ? `json += serializer.asDateTime(${r})`
          : n.format === 'date'
            ? `json += serializer.asDate(${r})`
            : n.format === 'time'
              ? `json += serializer.asTime(${r})`
              : n.format === 'unsafe'
                ? `json += serializer.asUnsafeString(${r})`
                : `
        if (typeof ${r} !== 'string') {
          if (${r} === null) {
            json += JSON_STR_EMPTY_STRING
          } else if (${r} instanceof Date) {
            json += JSON_STR_QUOTE + ${r}.toISOString() + JSON_STR_QUOTE
          } else if (${r} instanceof RegExp) {
            json += serializer.asString(${r}.source)
          } else {
            json += serializer.asString(${r}.toString())
          }
        } else {
          json += serializer.asString(${r})
        }
        `;
      case 'integer':
        return `json += serializer.asInteger(${r})`;
      case 'number':
        return `json += serializer.asNumber(${r})`;
      case 'boolean':
        return `json += serializer.asBoolean(${r})`;
      case 'object':
        return `json += ${Rte(e, t)}(${r})`;
      case 'array':
        return `json += ${Tte(e, t)}(${r})`;
      case void 0:
        return `json += JSON.stringify(${r})`;
      default:
        throw new Error(`${n.type} unsupported`);
    }
  }
  function kte(e, t) {
    let r = e.schema,
      n = r.type,
      i = Array.isArray(n) && n.includes('null'),
      s = '';
    return (
      i &&
        (s += `
      if (${t} === null) {
        json += JSON_STR_NULL
      } else {
    `),
      (s += `json += '${JSON.stringify(r.const).replace(pte, "\\'")}'`),
      i &&
        (s += `
      }
    `),
      s
    );
  }
  function xte(e, t, r) {
    let n = t.schema,
      i = e.mergedSchemasIds.get(n);
    if (i) {
      let d = Ey(e, i);
      return pn(e, d, r);
    }
    (i = `__fjs_merged_${Fd++}`), e.mergedSchemasIds.set(n, i);
    let { allOf: s, ...o } = t.schema,
      a = [new Ga(o, t.schemaId, t.jsonPointer)],
      u = t.getPropertyLocation('allOf');
    for (let d = 0; d < s.length; d++) a.push(u.getPropertyLocation(d));
    let c = Ry(e, i, a);
    return pn(e, c, r);
  }
  function Cte(e, t, r) {
    e.validatorSchemasIds.add(t.schemaId);
    let i = t.schema.anyOf ? 'anyOf' : 'oneOf',
      { [i]: s, ...o } = t.schema,
      a = new Ga(o, t.schemaId, t.jsonPointer),
      u = t.getPropertyLocation(i),
      c = '';
    for (let m = 0; m < s.length; m++) {
      let g = u.getPropertyLocation(m),
        v = g.schema,
        S = e.mergedSchemasIds.get(v),
        w = null;
      S
        ? (w = Ey(e, S))
        : ((S = `__fjs_merged_${Fd++}`),
          e.mergedSchemasIds.set(v, S),
          (w = Ry(e, S, [a, g])));
      let T = pn(e, w, r),
        C = g.getSchemaRef();
      c += `
      ${m === 0 ? 'if' : 'else if'}(validator.validate("${C}", ${r}))
        ${T}
    `;
    }
    let d = t.getSchemaRef();
    return (
      d.startsWith(e.rootSchemaId) && (d = d.replace(e.rootSchemaId, '')),
      (c += `
    else throw new TypeError(\`The value of '${d}' does not match schema definition.\`)
  `),
      c
    );
  }
  function Ote(e, t, r) {
    e.validatorSchemasIds.add(t.schemaId);
    let { if: n, then: i, else: s, ...o } = t.schema,
      a = new Ga(o, t.schemaId, t.jsonPointer),
      c = t.getPropertyLocation('if').getSchemaRef(),
      d = t.getPropertyLocation('then'),
      m = e.mergedSchemasIds.get(i),
      g = null;
    if (
      (m
        ? (g = Ey(e, m))
        : ((m = `__fjs_merged_${Fd++}`),
          e.mergedSchemasIds.set(i, m),
          (g = Ry(e, m, [a, d]))),
      !s)
    )
      return `
      if (validator.validate("${c}", ${r})) {
        ${pn(e, g, r)}
      } else {
        ${pn(e, a, r)}
      }
    `;
    let v = t.getPropertyLocation('else'),
      S = e.mergedSchemasIds.get(s),
      w = null;
    return (
      S
        ? (w = Ey(e, S))
        : ((S = `__fjs_merged_${Fd++}`),
          e.mergedSchemasIds.set(s, S),
          (w = Ry(e, S, [a, v]))),
      `
    if (validator.validate("${c}", ${r})) {
      ${pn(e, g, r)}
    } else {
      ${pn(e, w, r)}
    }
  `
    );
  }
  function pn(e, t, r) {
    let n = t.schema;
    if (typeof n == 'boolean') return `json += JSON.stringify(${r})`;
    if ((n.$ref && ((t = qd(e, t)), (n = t.schema)), n.allOf))
      return xte(e, t, r);
    if (n.anyOf || n.oneOf) return Cte(e, t, r);
    if (n.if && n.then) return Ote(e, t, r);
    if (n.type === void 0) {
      let a = Ste(n);
      a && (n.type = a);
    }
    let i = '',
      s = n.type,
      o = n.nullable === !0;
    return (
      o &&
        (i += `
      if (${r} === null) {
        json += JSON_STR_NULL
      } else {
    `),
      n.const !== void 0
        ? (i += kte(t, r))
        : Array.isArray(s)
          ? (i += Pte(e, t, r))
          : (i += AL(e, t, r)),
      o &&
        (i += `
      }
    `),
      i
    );
  }
  Lu.exports = tE;
  Lu.exports.default = tE;
  Lu.exports.build = tE;
  Lu.exports.validLargeArrayMechanisms = xL;
  Lu.exports.restore = function ({ code: e, validator: t, serializer: r }) {
    return Function.apply(null, ['validator', 'serializer', e]).apply(null, [
      t,
      r,
    ]);
  };
});
var LL = $((Wye, rE) => {
  'use strict';
  var Ite = nE();
  function NL(e = { readMode: !0 }) {
    if (e.readMode === !0 && typeof e.restoreFunction != 'function')
      throw new Error(
        'You must provide a function for the restoreFunction-option when readMode ON',
      );
    if (e.readMode !== !0 && typeof e.storeFunction != 'function')
      throw new Error(
        'You must provide a function for the storeFunction-option when readMode OFF',
      );
    if (e.readMode === !0)
      return function () {
        return function (n) {
          return e.restoreFunction(n);
        };
      };
    let t = Ite();
    return function (n, i = {}) {
      i.mode = 'standalone';
      let s = t(n, i);
      return function (o) {
        let a = s(o);
        return e.storeFunction(o, a), new Function(a);
      };
    };
  }
  rE.exports = NL;
  rE.exports.default = NL;
});
var nE = $((Gye, Md) => {
  'use strict';
  var Ate = $L();
  function sE() {
    return function (t, r) {
      let n = Object.assign({}, r, { schema: t });
      return $te.bind(null, n);
    };
  }
  function $te(e, { schema: t }) {
    return (
      e.schema &&
        t.$id &&
        e.schema[t.$id] &&
        ((e.schema = { ...e.schema }), delete e.schema[t.$id]),
      Ate(t, e)
    );
  }
  Md.exports = sE;
  Md.exports.default = sE;
  Md.exports.SerializerSelector = sE;
  Md.exports.StandaloneSerializer = LL();
});
var ci = $((Hd) => {
  'use strict';
  Object.defineProperty(Hd, '__esModule', { value: !0 });
  Hd.checkMetadata = void 0;
  var Nte = xe(),
    Lte = {
      keyword: 'metadata',
      schemaType: 'object',
      code(e) {
        DL(e);
        let { gen: t, schema: r, it: n } = e;
        if ((0, Nte.alwaysValidSchema)(n, r)) return;
        let i = t.name('valid');
        e.subschema({ keyword: 'metadata', jtdMetadata: !0 }, i), e.ok(i);
      },
    };
  function DL({ it: e, keyword: t }, r) {
    if (e.jtdMetadata !== r)
      throw new Error(`JTD: "${t}" cannot be used in this schema location`);
  }
  Hd.checkMetadata = DL;
  Hd.default = Lte;
});
var Ty = $((Ud) => {
  'use strict';
  Object.defineProperty(Ud, '__esModule', { value: !0 });
  Ud.hasRef = void 0;
  var jL = Ua(),
    zd = be(),
    Dte = ai(),
    FL = Cn(),
    qL = z_(),
    jte = ci(),
    Fte = {
      keyword: 'ref',
      schemaType: 'string',
      code(e) {
        (0, jte.checkMetadata)(e);
        let { gen: t, data: r, schema: n, parentSchema: i, it: s } = e,
          {
            schemaEnv: { root: o },
          } = s,
          a = t.name('valid');
        i.nullable
          ? (t.var(a, (0, zd._)`${r} === null`), t.if((0, zd.not)(a), u))
          : (t.var(a, !1), u()),
          e.ok(a);
        function u() {
          var m;
          let g =
            (m = o.schema.definitions) === null || m === void 0 ? void 0 : m[n];
          if (!g)
            throw new Dte.default(
              s.opts.uriResolver,
              '',
              n,
              `No definition ${n}`,
            );
          iE(g) || !s.opts.inlineRefs ? c(g) : d(g);
        }
        function c(m) {
          let g = jL.compileSchema.call(
              s.self,
              new jL.SchemaEnv({
                schema: m,
                root: o,
                schemaPath: `/definitions/${n}`,
              }),
            ),
            v = (0, qL.getValidate)(e, g),
            S = t.const('_errs', FL.default.errors);
          (0, qL.callRef)(e, v, g, g.$async),
            t.assign(a, (0, zd._)`${S} === ${FL.default.errors}`);
        }
        function d(m) {
          let g = t.scopeValue(
            'schema',
            s.opts.code.source === !0
              ? { ref: m, code: (0, zd.stringify)(m) }
              : { ref: m },
          );
          e.subschema(
            {
              schema: m,
              dataTypes: [],
              schemaPath: zd.nil,
              topSchemaRef: g,
              errSchemaPath: `/definitions/${n}`,
            },
            a,
          );
        }
      },
    };
  function iE(e) {
    for (let t in e) {
      let r;
      if (t === 'ref' || (typeof (r = e[t]) == 'object' && iE(r))) return !0;
    }
    return !1;
  }
  Ud.hasRef = iE;
  Ud.default = Fte;
});
var aE = $((oE) => {
  'use strict';
  Object.defineProperty(oE, '__esModule', { value: !0 });
  var qte = /t|\s/i,
    Mte = /^(\d\d\d\d)-(\d\d)-(\d\d)$/,
    Hte = /^(\d\d):(\d\d):(\d\d)(?:\.\d+)?(?:z|([+-]\d\d)(?::?(\d\d))?)$/i,
    zte = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  function HL(e, t) {
    let r = e.split(qte);
    return (
      (r.length === 2 && ML(r[0]) && Ute(r[1])) ||
      (t && r.length === 1 && ML(r[0]))
    );
  }
  oE.default = HL;
  function ML(e) {
    let t = Mte.exec(e);
    if (!t) return !1;
    let r = +t[1],
      n = +t[2],
      i = +t[3];
    return (
      n >= 1 &&
      n <= 12 &&
      i >= 1 &&
      (i <= zte[n] ||
        (n === 2 && i === 29 && (r % 100 === 0 ? r % 400 === 0 : r % 4 === 0)))
    );
  }
  function Ute(e) {
    let t = Hte.exec(e);
    if (!t) return !1;
    let r = +t[1],
      n = +t[2],
      i = +t[3],
      s = +(t[4] || 0),
      o = +(t[5] || 0);
    return (
      (r <= 23 && n <= 59 && i <= 59) ||
      (r - s === 23 && n - o === 59 && i === 60)
    );
  }
  HL.code = 'require("ajv/dist/runtime/timestamp").default';
});
var Du = $((Ro) => {
  'use strict';
  Object.defineProperty(Ro, '__esModule', { value: !0 });
  Ro.typeErrorParams = Ro.typeErrorMessage = Ro.typeError = void 0;
  var Vte = be();
  function Bte(e) {
    return { message: (t) => zL(t, e), params: (t) => UL(t, e) };
  }
  Ro.typeError = Bte;
  function zL({ parentSchema: e }, t) {
    return e?.nullable ? `must be ${t} or null` : `must be ${t}`;
  }
  Ro.typeErrorMessage = zL;
  function UL({ parentSchema: e }, t) {
    return (0, Vte._)`{type: ${t}, nullable: ${!!e?.nullable}}`;
  }
  Ro.typeErrorParams = UL;
});
var lE = $((ju) => {
  'use strict';
  Object.defineProperty(ju, '__esModule', { value: !0 });
  ju.intRange = void 0;
  var mn = be(),
    Wte = aE(),
    Gte = xe(),
    Yte = ci(),
    VL = Du();
  ju.intRange = {
    int8: [-128, 127, 3],
    uint8: [0, 255, 3],
    int16: [-32768, 32767, 5],
    uint16: [0, 65535, 5],
    int32: [-2147483648, 2147483647, 10],
    uint32: [0, 4294967295, 10],
  };
  var Jte = {
    message: (e) => (0, VL.typeErrorMessage)(e, e.schema),
    params: (e) => (0, VL.typeErrorParams)(e, e.schema),
  };
  function Kte(e) {
    let { gen: t, data: r, it: n } = e,
      { timestamp: i, allowDate: s } = n.opts;
    if (i === 'date') return (0, mn._)`${r} instanceof Date `;
    let o = (0, Gte.useFunc)(t, Wte.default),
      a = s ? (0, mn._)`, true` : mn.nil,
      u = (0, mn._)`typeof ${r} == "string" && ${o}(${r}${a})`;
    return i === 'string' ? u : (0, mn.or)((0, mn._)`${r} instanceof Date`, u);
  }
  var Xte = {
    keyword: 'type',
    schemaType: 'string',
    error: Jte,
    code(e) {
      (0, Yte.checkMetadata)(e);
      let { data: t, schema: r, parentSchema: n, it: i } = e,
        s;
      switch (r) {
        case 'boolean':
        case 'string':
          s = (0, mn._)`typeof ${t} == ${r}`;
          break;
        case 'timestamp': {
          s = Kte(e);
          break;
        }
        case 'float32':
        case 'float64':
          s = (0, mn._)`typeof ${t} == "number"`;
          break;
        default: {
          let o = r;
          if (
            ((s = (0,
            mn._)`typeof ${t} == "number" && isFinite(${t}) && !(${t} % 1)`),
            !i.opts.int32range && (o === 'int32' || o === 'uint32'))
          )
            o === 'uint32' && (s = (0, mn._)`${s} && ${t} >= 0`);
          else {
            let [a, u] = ju.intRange[o];
            s = (0, mn._)`${s} && ${t} >= ${a} && ${t} <= ${u}`;
          }
        }
      }
      e.pass(n.nullable ? (0, mn.or)((0, mn._)`${t} === null`, s) : s);
    },
  };
  ju.default = Xte;
});
var qu = $((Fu) => {
  'use strict';
  Object.defineProperty(Fu, '__esModule', { value: !0 });
  Fu.checkNullableObject = Fu.checkNullable = void 0;
  var Py = be();
  function BL({ gen: e, data: t, parentSchema: r }, n = Py.nil) {
    let i = e.name('valid');
    return (
      r.nullable
        ? (e.let(i, (0, Py._)`${t} === null`), (n = (0, Py.not)(i)))
        : e.let(i, !1),
      [i, n]
    );
  }
  Fu.checkNullable = BL;
  function Zte(e, t) {
    let [r, n] = BL(e, t);
    return [
      r,
      (0,
      Py._)`${n} && typeof ${e.data} == "object" && !Array.isArray(${e.data})`,
    ];
  }
  Fu.checkNullableObject = Zte;
});
var WL = $((uE) => {
  'use strict';
  Object.defineProperty(uE, '__esModule', { value: !0 });
  var To = be(),
    Qte = ci(),
    ere = qu(),
    tre = {
      message: 'must be equal to one of the allowed values',
      params: ({ schemaCode: e }) => (0, To._)`{allowedValues: ${e}}`,
    },
    rre = {
      keyword: 'enum',
      schemaType: 'array',
      error: tre,
      code(e) {
        (0, Qte.checkMetadata)(e);
        let {
          gen: t,
          data: r,
          schema: n,
          schemaValue: i,
          parentSchema: s,
          it: o,
        } = e;
        if (n.length === 0) throw new Error('enum must have non-empty array');
        if (n.length !== new Set(n).size)
          throw new Error('enum items must be unique');
        let a,
          u = (0, To._)`typeof ${r} == "string"`;
        if (n.length >= o.opts.loopEnum) {
          let d;
          ([a, d] = (0, ere.checkNullable)(e, u)), t.if(d, c);
        } else {
          if (!Array.isArray(n)) throw new Error('ajv implementation error');
          (a = (0, To.and)(
            u,
            (0, To.or)(...n.map((d) => (0, To._)`${r} === ${d}`)),
          )),
            s.nullable && (a = (0, To.or)((0, To._)`${r} === null`, a));
        }
        e.pass(a);
        function c() {
          t.forOf('v', i, (d) =>
            t.if((0, To._)`${a} = ${r} === ${d}`, () => t.break()),
          );
        }
      },
    };
  uE.default = rre;
});
var YL = $((cE) => {
  'use strict';
  Object.defineProperty(cE, '__esModule', { value: !0 });
  var nre = xe(),
    sre = lr(),
    GL = be(),
    ire = ci(),
    ore = qu(),
    are = Du(),
    lre = {
      keyword: 'elements',
      schemaType: 'object',
      error: (0, are.typeError)('array'),
      code(e) {
        (0, ire.checkMetadata)(e);
        let { gen: t, data: r, schema: n, it: i } = e;
        if ((0, nre.alwaysValidSchema)(i, n)) return;
        let [s] = (0, ore.checkNullable)(e);
        t.if((0, GL.not)(s), () =>
          t.if(
            (0, GL._)`Array.isArray(${r})`,
            () => t.assign(s, (0, sre.validateArray)(e)),
            () => e.error(),
          ),
        ),
          e.ok(s);
      },
    };
  cE.default = lre;
});
var dE = $((Po) => {
  'use strict';
  Object.defineProperty(Po, '__esModule', { value: !0 });
  Po.validateProperties = Po.error = void 0;
  var fE = lr(),
    JL = xe(),
    fi = be(),
    ure = ci(),
    cre = qu(),
    KL = Du(),
    Mu;
  (function (e) {
    (e.Additional = 'additional'), (e.Missing = 'missing');
  })(Mu || (Mu = {}));
  Po.error = {
    message: (e) => {
      let { params: t } = e;
      return t.propError
        ? t.propError === Mu.Additional
          ? 'must NOT have additional properties'
          : `must have property '${t.missingProperty}'`
        : (0, KL.typeErrorMessage)(e, 'object');
    },
    params: (e) => {
      let { params: t } = e;
      return t.propError
        ? t.propError === Mu.Additional
          ? (0,
            fi._)`{error: ${t.propError}, additionalProperty: ${t.additionalProperty}}`
          : (0,
            fi._)`{error: ${t.propError}, missingProperty: ${t.missingProperty}}`
        : (0, KL.typeErrorParams)(e, 'object');
    },
  };
  var fre = {
    keyword: 'properties',
    schemaType: 'object',
    error: Po.error,
    code: XL,
  };
  function XL(e) {
    (0, ure.checkMetadata)(e);
    let { gen: t, data: r, parentSchema: n, it: i } = e,
      { additionalProperties: s, nullable: o } = n;
    if (i.jtdDiscriminator && o)
      throw new Error('JTD: nullable inside discriminator mapping');
    if (v())
      throw new Error(
        'JTD: properties and optionalProperties have common members',
      );
    let [a, u] = S('properties'),
      [c, d] = S('optionalProperties');
    if (u.length === 0 && d.length === 0 && s) return;
    let [m, g] =
      i.jtdDiscriminator === void 0
        ? (0, cre.checkNullableObject)(e, r)
        : [t.let('valid', !1), !0];
    t.if(g, () =>
      t.assign(m, !0).block(() => {
        w(u, 'properties', !0), w(d, 'optionalProperties'), s || C();
      }),
    ),
      e.pass(m);
    function v() {
      let x = n.properties,
        E = n.optionalProperties;
      if (!(x && E)) return !1;
      for (let j in x)
        if (Object.prototype.hasOwnProperty.call(E, j)) return !0;
      return !1;
    }
    function S(x) {
      let E = n[x],
        j = E ? (0, fE.allSchemaProperties)(E) : [];
      if (i.jtdDiscriminator && j.some((O) => O === i.jtdDiscriminator))
        throw new Error(`JTD: discriminator tag used in ${x}`);
      let q = j.filter((O) => !(0, JL.alwaysValidSchema)(i, E[O]));
      return [j, q];
    }
    function w(x, E, j) {
      let q = t.var('valid');
      for (let F of x)
        t.if(
          (0, fE.propertyInData)(t, r, F, i.opts.ownProperties),
          () => T(F, E, q),
          () => O(F),
        ),
          e.ok(q);
      function O(F) {
        j
          ? (t.assign(q, !1),
            e.error(
              !1,
              { propError: Mu.Missing, missingProperty: F },
              { schemaPath: F },
            ))
          : t.assign(q, !0);
      }
    }
    function T(x, E, j) {
      e.subschema({ keyword: E, schemaProp: x, dataProp: x }, j);
    }
    function C() {
      t.forIn('key', r, (x) => {
        let E = I(x, a, 'properties', i.jtdDiscriminator),
          j = I(x, c, 'optionalProperties'),
          q = E === !0 ? j : j === !0 ? E : (0, fi.and)(E, j);
        t.if(q, () => {
          i.opts.removeAdditional
            ? t.code((0, fi._)`delete ${r}[${x}]`)
            : (e.error(
                !1,
                { propError: Mu.Additional, additionalProperty: x },
                { instancePath: x, parentSchema: !0 },
              ),
              i.opts.allErrors || t.break());
        });
      });
    }
    function I(x, E, j, q) {
      let O;
      if (E.length > 8) {
        let F = (0, JL.schemaRefOrVal)(i, n[j], j);
        (O = (0, fi.not)((0, fE.isOwnProperty)(t, F, x))),
          q !== void 0 && (O = (0, fi.and)(O, (0, fi._)`${x} !== ${q}`));
      } else if (E.length || q !== void 0) {
        let F = q === void 0 ? E : [q].concat(E);
        O = (0, fi.and)(...F.map((U) => (0, fi._)`${x} !== ${U}`));
      } else O = !0;
      return O;
    }
  }
  Po.validateProperties = XL;
  Po.default = fre;
});
var QL = $((hE) => {
  'use strict';
  Object.defineProperty(hE, '__esModule', { value: !0 });
  var ZL = dE(),
    dre = {
      keyword: 'optionalProperties',
      schemaType: 'object',
      error: ZL.error,
      code(e) {
        e.parentSchema.properties || (0, ZL.validateProperties)(e);
      },
    };
  hE.default = dre;
});
var tD = $((pE) => {
  'use strict';
  Object.defineProperty(pE, '__esModule', { value: !0 });
  var Ya = be(),
    hre = ci(),
    pre = qu(),
    eD = Du(),
    ky = xw(),
    mre = {
      message: (e) => {
        let { schema: t, params: r } = e;
        return r.discrError
          ? r.discrError === ky.DiscrError.Tag
            ? `tag "${t}" must be string`
            : `value of tag "${t}" must be in mapping`
          : (0, eD.typeErrorMessage)(e, 'object');
      },
      params: (e) => {
        let { schema: t, params: r } = e;
        return r.discrError
          ? (0, Ya._)`{error: ${r.discrError}, tag: ${t}, tagValue: ${r.tag}}`
          : (0, eD.typeErrorParams)(e, 'object');
      },
    },
    yre = {
      keyword: 'discriminator',
      schemaType: 'string',
      implements: ['mapping'],
      error: mre,
      code(e) {
        (0, hre.checkMetadata)(e);
        let { gen: t, data: r, schema: n, parentSchema: i } = e,
          [s, o] = (0, pre.checkNullableObject)(e, r);
        t.if(o), a(), t.elseIf((0, Ya.not)(s)), e.error(), t.endIf(), e.ok(s);
        function a() {
          let d = t.const('tag', (0, Ya._)`${r}${(0, Ya.getProperty)(n)}`);
          t.if((0, Ya._)`${d} === undefined`),
            e.error(!1, { discrError: ky.DiscrError.Tag, tag: d }),
            t.elseIf((0, Ya._)`typeof ${d} == "string"`),
            u(d),
            t.else(),
            e.error(
              !1,
              { discrError: ky.DiscrError.Tag, tag: d },
              { instancePath: n },
            ),
            t.endIf();
        }
        function u(d) {
          t.if(!1);
          for (let m in i.mapping)
            t.elseIf((0, Ya._)`${d} === ${m}`), t.assign(s, c(m));
          t.else(),
            e.error(
              !1,
              { discrError: ky.DiscrError.Mapping, tag: d },
              { instancePath: n, schemaPath: 'mapping', parentSchema: !0 },
            ),
            t.endIf();
        }
        function c(d) {
          let m = t.name('valid');
          return (
            e.subschema(
              { keyword: 'mapping', schemaProp: d, jtdDiscriminator: n },
              m,
            ),
            m
          );
        }
      },
    };
  pE.default = yre;
});
var nD = $((mE) => {
  'use strict';
  Object.defineProperty(mE, '__esModule', { value: !0 });
  var rD = xe(),
    xy = be(),
    gre = ci(),
    vre = qu(),
    bre = Du(),
    Sre = {
      keyword: 'values',
      schemaType: 'object',
      error: (0, bre.typeError)('object'),
      code(e) {
        (0, gre.checkMetadata)(e);
        let { gen: t, data: r, schema: n, it: i } = e,
          [s, o] = (0, vre.checkNullableObject)(e, r);
        (0, rD.alwaysValidSchema)(i, n)
          ? t.if((0, xy.not)((0, xy.or)(o, s)), () => e.error())
          : (t.if(o),
            t.assign(s, a()),
            t.elseIf((0, xy.not)(s)),
            e.error(),
            t.endIf()),
          e.ok(s);
        function a() {
          let u = t.name('valid');
          if (i.allErrors) {
            let d = t.let('valid', !0);
            return c(() => t.assign(d, !1)), d;
          }
          return t.var(u, !0), c(() => t.break()), u;
          function c(d) {
            t.forIn('key', r, (m) => {
              e.subschema(
                { keyword: 'values', dataProp: m, dataPropType: rD.Type.Str },
                u,
              ),
                t.if((0, xy.not)(u), d);
            });
          }
        }
      },
    };
  mE.default = Sre;
});
var sD = $((yE) => {
  'use strict';
  Object.defineProperty(yE, '__esModule', { value: !0 });
  var _re = lr(),
    wre = {
      keyword: 'union',
      schemaType: 'array',
      trackErrors: !0,
      code: _re.validateUnion,
      error: { message: 'must match a schema in union' },
    };
  yE.default = wre;
});
var iD = $((gE) => {
  'use strict';
  Object.defineProperty(gE, '__esModule', { value: !0 });
  var Ere = Ty(),
    Rre = lE(),
    Tre = WL(),
    Pre = YL(),
    kre = dE(),
    xre = QL(),
    Cre = tD(),
    Ore = nD(),
    Ire = sD(),
    Are = ci(),
    $re = [
      'definitions',
      Ere.default,
      Rre.default,
      Tre.default,
      Pre.default,
      kre.default,
      xre.default,
      Cre.default,
      Ore.default,
      Ire.default,
      Are.default,
      { keyword: 'additionalProperties', schemaType: 'boolean' },
      { keyword: 'nullable', schemaType: 'boolean' },
    ];
  gE.default = $re;
});
var uD = $((vE) => {
  'use strict';
  Object.defineProperty(vE, '__esModule', { value: !0 });
  var di = (e) => {
      let t = {
        nullable: { type: 'boolean' },
        metadata: {
          optionalProperties: { union: { elements: { ref: 'schema' } } },
          additionalProperties: !0,
        },
      };
      return e && (t.definitions = { values: { ref: 'schema' } }), t;
    },
    Nre = (e) => ({ optionalProperties: di(e) }),
    Lre = (e) => ({
      properties: { ref: { type: 'string' } },
      optionalProperties: di(e),
    }),
    Dre = (e) => ({
      properties: {
        type: {
          enum: [
            'boolean',
            'timestamp',
            'string',
            'float32',
            'float64',
            'int8',
            'uint8',
            'int16',
            'uint16',
            'int32',
            'uint32',
          ],
        },
      },
      optionalProperties: di(e),
    }),
    jre = (e) => ({
      properties: { enum: { elements: { type: 'string' } } },
      optionalProperties: di(e),
    }),
    Fre = (e) => ({
      properties: { elements: { ref: 'schema' } },
      optionalProperties: di(e),
    }),
    aD = (e) => ({
      properties: { properties: { values: { ref: 'schema' } } },
      optionalProperties: {
        optionalProperties: { values: { ref: 'schema' } },
        additionalProperties: { type: 'boolean' },
        ...di(e),
      },
    }),
    lD = (e) => ({
      properties: { optionalProperties: { values: { ref: 'schema' } } },
      optionalProperties: {
        additionalProperties: { type: 'boolean' },
        ...di(e),
      },
    }),
    qre = (e) => ({
      properties: {
        discriminator: { type: 'string' },
        mapping: { values: { metadata: { union: [aD(!1), lD(!1)] } } },
      },
      optionalProperties: di(e),
    }),
    Mre = (e) => ({
      properties: { values: { ref: 'schema' } },
      optionalProperties: di(e),
    }),
    oD = (e) => ({
      metadata: {
        union: [Nre, Lre, Dre, jre, Fre, aD, lD, qre, Mre].map((t) => t(e)),
      },
    }),
    Hre = { definitions: { schema: oD(!1) }, ...oD(!0) };
  vE.default = Hre;
});
var bE = $((Cy) => {
  'use strict';
  Object.defineProperty(Cy, '__esModule', { value: !0 });
  Cy.jtdForms = void 0;
  Cy.jtdForms = [
    'elements',
    'values',
    'discriminator',
    'properties',
    'optionalProperties',
    'enum',
    'type',
    'ref',
  ];
});
var fD = $((_E) => {
  'use strict';
  Object.defineProperty(_E, '__esModule', { value: !0 });
  var SE =
      /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    zre = {
      '\b': '\\b',
      '	': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\\': '\\\\',
    };
  function cD(e) {
    return (
      (SE.lastIndex = 0),
      '"' +
        (SE.test(e)
          ? e.replace(SE, (t) => {
              let r = zre[t];
              return typeof r == 'string'
                ? r
                : '\\u' + ('0000' + t.charCodeAt(0).toString(16)).slice(-4);
            })
          : e) +
        '"'
    );
  }
  _E.default = cD;
  cD.code = 'require("ajv/dist/runtime/quote").default';
});
var gD = $((EE) => {
  'use strict';
  Object.defineProperty(EE, '__esModule', { value: !0 });
  var Ure = bE(),
    hD = Ua(),
    Me = be(),
    Vre = ai(),
    dt = Cn(),
    Bre = lr(),
    Wre = Ty(),
    Gre = xe(),
    Yre = fD(),
    Jre = {
      elements: Xre,
      values: Zre,
      discriminator: Qre,
      properties: dD,
      optionalProperties: dD,
      enum: Vd,
      type: ene,
      ref: rne,
    };
  function pD(e, t) {
    let r = hD.getCompilingSchema.call(this, e);
    if (r) return r;
    let { es5: n, lines: i } = this.opts.code,
      { ownProperties: s } = this.opts,
      o = new Me.CodeGen(this.scope, { es5: n, lines: i, ownProperties: s }),
      a = o.scopeName('serialize'),
      u = {
        self: this,
        gen: o,
        schema: e.schema,
        schemaEnv: e,
        definitions: t,
        data: dt.default.data,
      },
      c;
    try {
      this._compilations.add(e),
        (e.serializeName = a),
        o.func(a, dt.default.data, !1, () => {
          o.let(dt.default.json, (0, Me.str)``),
            Bd(u),
            o.return(dt.default.json);
        }),
        o.optimize(this.opts.code.optimize);
      let d = o.toString();
      c = `${o.scopeRefs(dt.default.scope)}return ${d}`;
      let g = new Function(`${dt.default.scope}`, c)(this.scope.get());
      this.scope.value(a, { ref: g }), (e.serialize = g);
    } catch (d) {
      throw (
        (c &&
          this.logger.error('Error compiling serializer, function code:', c),
        delete e.serialize,
        delete e.serializeName,
        d)
      );
    } finally {
      this._compilations.delete(e);
    }
    return e;
  }
  EE.default = pD;
  function Bd(e) {
    let t;
    for (let r of Ure.jtdForms)
      if (r in e.schema) {
        t = r;
        break;
      }
    Kre(e, t ? Jre[t] : sne);
  }
  function Kre(e, t) {
    let { gen: r, schema: n, data: i } = e;
    if (!n.nullable) return t(e);
    r.if(
      (0, Me._)`${i} === undefined || ${i} === null`,
      () => r.add(dt.default.json, (0, Me._)`"null"`),
      () => t(e),
    );
  }
  function Xre(e) {
    let { gen: t, schema: r, data: n } = e;
    t.add(dt.default.json, (0, Me.str)`[`);
    let i = t.let('first', !0);
    t.forOf('el', n, (s) => {
      wE(e, i), Bd({ ...e, schema: r.elements, data: s });
    }),
      t.add(dt.default.json, (0, Me.str)`]`);
  }
  function Zre(e) {
    let { gen: t, schema: r, data: n } = e;
    t.add(dt.default.json, (0, Me.str)`{`);
    let i = t.let('first', !0);
    t.forIn('key', n, (s) => mD(e, s, r.values, i)),
      t.add(dt.default.json, (0, Me.str)`}`);
  }
  function mD(e, t, r, n) {
    let { gen: i, data: s } = e;
    wE(e, n), Vd({ ...e, data: t }), i.add(dt.default.json, (0, Me.str)`:`);
    let o = i.const('value', (0, Me._)`${s}${(0, Me.getProperty)(t)}`);
    Bd({ ...e, schema: r, data: o });
  }
  function Qre(e) {
    let { gen: t, schema: r, data: n } = e,
      { discriminator: i } = r;
    t.add(dt.default.json, (0, Me.str)`{${JSON.stringify(i)}:`);
    let s = t.const('tag', (0, Me._)`${n}${(0, Me.getProperty)(i)}`);
    Vd({ ...e, data: s }), t.if(!1);
    for (let o in r.mapping) {
      t.elseIf((0, Me._)`${s} === ${o}`);
      let a = r.mapping[o];
      yD({ ...e, schema: a }, i);
    }
    t.endIf(), t.add(dt.default.json, (0, Me.str)`}`);
  }
  function dD(e) {
    let { gen: t } = e;
    t.add(dt.default.json, (0, Me.str)`{`),
      yD(e),
      t.add(dt.default.json, (0, Me.str)`}`);
  }
  function yD(e, t) {
    let { gen: r, schema: n, data: i } = e,
      { properties: s, optionalProperties: o } = n,
      a = g(s),
      u = g(o),
      c = v(a.concat(u)),
      d = !t,
      m;
    for (let C of a)
      d ? (d = !1) : r.add(dt.default.json, (0, Me.str)`,`), w(C, s[C], S(C));
    d && (m = r.let('first', !0));
    for (let C of u) {
      let I = S(C);
      r.if(
        (0, Me.and)(
          (0, Me._)`${I} !== undefined`,
          (0, Bre.isOwnProperty)(r, i, C),
        ),
        () => {
          wE(e, m), w(C, o[C], I);
        },
      );
    }
    n.additionalProperties &&
      r.forIn('key', i, (C) => r.if(T(C, c), () => mD(e, C, {}, m)));
    function g(C) {
      return C ? Object.keys(C) : [];
    }
    function v(C) {
      if ((t && C.push(t), new Set(C).size !== C.length))
        throw new Error(
          'JTD: properties/optionalProperties/disciminator overlap',
        );
      return C;
    }
    function S(C) {
      return r.const('value', (0, Me._)`${i}${(0, Me.getProperty)(C)}`);
    }
    function w(C, I, x) {
      r.add(dt.default.json, (0, Me.str)`${JSON.stringify(C)}:`),
        Bd({ ...e, schema: I, data: x });
    }
    function T(C, I) {
      return I.length
        ? (0, Me.and)(...I.map((x) => (0, Me._)`${C} !== ${x}`))
        : !0;
    }
  }
  function ene(e) {
    let { gen: t, schema: r, data: n } = e;
    switch (r.type) {
      case 'boolean':
        t.add(dt.default.json, (0, Me._)`${n} ? "true" : "false"`);
        break;
      case 'string':
        Vd(e);
        break;
      case 'timestamp':
        t.if(
          (0, Me._)`${n} instanceof Date`,
          () =>
            t.add(dt.default.json, (0, Me._)`'"' + ${n}.toISOString() + '"'`),
          () => Vd(e),
        );
        break;
      default:
        tne(e);
    }
  }
  function Vd({ gen: e, data: t }) {
    e.add(
      dt.default.json,
      (0, Me._)`${(0, Gre.useFunc)(e, Yre.default)}(${t})`,
    );
  }
  function tne({ gen: e, data: t }) {
    e.add(dt.default.json, (0, Me._)`"" + ${t}`);
  }
  function rne(e) {
    let {
        gen: t,
        self: r,
        data: n,
        definitions: i,
        schema: s,
        schemaEnv: o,
      } = e,
      { ref: a } = s,
      u = i[a];
    if (!u)
      throw new Vre.default(r.opts.uriResolver, '', a, `No definition ${a}`);
    if (!(0, Wre.hasRef)(u)) return Bd({ ...e, schema: u });
    let { root: c } = o,
      d = pD.call(r, new hD.SchemaEnv({ schema: u, root: c }), i);
    t.add(dt.default.json, (0, Me._)`${nne(t, d)}(${n})`);
  }
  function nne(e, t) {
    return t.serialize
      ? e.scopeValue('serialize', { ref: t.serialize })
      : (0, Me._)`${e.scopeValue('wrapper', { ref: t })}.serialize`;
  }
  function sne({ gen: e, data: t }) {
    e.add(dt.default.json, (0, Me._)`JSON.stringify(${t})`);
  }
  function wE({ gen: e }, t) {
    t
      ? e.if(
          t,
          () => e.assign(t, !1),
          () => e.add(dt.default.json, (0, Me.str)`,`),
        )
      : e.add(dt.default.json, (0, Me.str)`,`);
  }
});
var bD = $((xo) => {
  'use strict';
  Object.defineProperty(xo, '__esModule', { value: !0 });
  xo.parseJsonString = xo.parseJsonNumber = xo.parseJson = void 0;
  var ine = /position\s(\d+)(?: \(line \d+ column \d+\))?$/;
  function hi(e, t) {
    let r;
    hi.message = void 0;
    let n;
    t && (e = e.slice(t));
    try {
      return (hi.position = t + e.length), JSON.parse(e);
    } catch (i) {
      if (((n = ine.exec(i.message)), !n)) {
        hi.message = 'unexpected end';
        return;
      }
      r = +n[1];
      let s = e[r];
      (e = e.slice(0, r)), (hi.position = t + r);
      try {
        return JSON.parse(e);
      } catch {
        hi.message = `unexpected token ${s}`;
        return;
      }
    }
  }
  xo.parseJson = hi;
  hi.message = void 0;
  hi.position = 0;
  hi.code = 'require("ajv/dist/runtime/parseJson").parseJson';
  function pi(e, t, r) {
    let n = '',
      i;
    if (
      ((pi.message = void 0), e[t] === '-' && ((n += '-'), t++), e[t] === '0')
    )
      (n += '0'), t++;
    else if (!s(r)) {
      o();
      return;
    }
    if (r) return (pi.position = t), +n;
    if (e[t] === '.' && ((n += '.'), t++, !s())) {
      o();
      return;
    }
    if (
      ((i = e[t]),
      (i === 'e' || i === 'E') &&
        ((n += 'e'),
        t++,
        (i = e[t]),
        (i === '+' || i === '-') && ((n += i), t++),
        !s()))
    ) {
      o();
      return;
    }
    return (pi.position = t), +n;
    function s(a) {
      let u = !1;
      for (; (i = e[t]), i >= '0' && i <= '9' && (a === void 0 || a-- > 0); )
        (u = !0), (n += i), t++;
      return u;
    }
    function o() {
      (pi.position = t),
        (pi.message =
          t < e.length ? `unexpected token ${e[t]}` : 'unexpected end');
    }
  }
  xo.parseJsonNumber = pi;
  pi.message = void 0;
  pi.position = 0;
  pi.code = 'require("ajv/dist/runtime/parseJson").parseJsonNumber';
  var vD = {
      b: '\b',
      f: '\f',
      n: `
`,
      r: '\r',
      t: '	',
      '"': '"',
      '/': '/',
      '\\': '\\',
    },
    one = 97,
    ane = 48;
  function ko(e, t) {
    let r = '',
      n;
    for (ko.message = void 0; (n = e[t++]), n !== '"'; )
      if (n === '\\')
        if (((n = e[t]), n in vD)) (r += vD[n]), t++;
        else if (n === 'u') {
          t++;
          let s = 4,
            o = 0;
          for (; s--; ) {
            if (((o <<= 4), (n = e[t]), n === void 0)) {
              i('unexpected end');
              return;
            }
            if (((n = n.toLowerCase()), n >= 'a' && n <= 'f'))
              o += n.charCodeAt(0) - one + 10;
            else if (n >= '0' && n <= '9') o += n.charCodeAt(0) - ane;
            else {
              i(`unexpected token ${n}`);
              return;
            }
            t++;
          }
          r += String.fromCharCode(o);
        } else {
          i(`unexpected token ${n}`);
          return;
        }
      else if (n === void 0) {
        i('unexpected end');
        return;
      } else if (n.charCodeAt(0) >= 32) r += n;
      else {
        i(`unexpected token ${n}`);
        return;
      }
    return (ko.position = t), r;
    function i(s) {
      (ko.position = t), (ko.message = s);
    }
  }
  xo.parseJsonString = ko;
  ko.message = void 0;
  ko.position = 0;
  ko.code = 'require("ajv/dist/runtime/parseJson").parseJsonString';
});
var OD = $((IE) => {
  'use strict';
  Object.defineProperty(IE, '__esModule', { value: !0 });
  var lne = bE(),
    ED = Ua(),
    ye = be(),
    une = ai(),
    De = Cn(),
    cne = lr(),
    fne = Ty(),
    dne = lE(),
    PE = bD(),
    RD = xe(),
    hne = aE(),
    pne = {
      elements: vne,
      values: bne,
      discriminator: _ne,
      properties: SD,
      optionalProperties: SD,
      enum: Ene,
      type: wne,
      ref: Rne,
    };
  function TD(e, t) {
    let r = ED.getCompilingSchema.call(this, e);
    if (r) return r;
    let { es5: n, lines: i } = this.opts.code,
      { ownProperties: s } = this.opts,
      o = new ye.CodeGen(this.scope, { es5: n, lines: i, ownProperties: s }),
      a = o.scopeName('parse'),
      u = {
        self: this,
        gen: o,
        schema: e.schema,
        schemaEnv: e,
        definitions: t,
        data: De.default.data,
        parseName: a,
        char: o.name('c'),
      },
      c;
    try {
      this._compilations.add(e),
        (e.parseName = a),
        mne(u),
        o.optimize(this.opts.code.optimize);
      let d = o.toString();
      c = `${o.scopeRefs(De.default.scope)}return ${d}`;
      let g = new Function(`${De.default.scope}`, c)(this.scope.get());
      this.scope.value(a, { ref: g }), (e.parse = g);
    } catch (d) {
      throw (
        (c && this.logger.error('Error compiling parser, function code:', c),
        delete e.parse,
        delete e.parseName,
        d)
      );
    } finally {
      this._compilations.delete(e);
    }
    return e;
  }
  IE.default = TD;
  var TE = (0, ye._)`undefined`;
  function mne(e) {
    let { gen: t, parseName: r, char: n } = e;
    t.func(
      r,
      (0,
      ye._)`${De.default.json}, ${De.default.jsonPos}, ${De.default.jsonPart}`,
      !1,
      () => {
        t.let(De.default.data),
          t.let(n),
          t.assign((0, ye._)`${r}.message`, TE),
          t.assign((0, ye._)`${r}.position`, TE),
          t.assign(De.default.jsonPos, (0, ye._)`${De.default.jsonPos} || 0`),
          t.const(De.default.jsonLen, (0, ye._)`${De.default.json}.length`),
          Oy(e),
          OE(e),
          t.if(De.default.jsonPart, () => {
            t.assign((0, ye._)`${r}.position`, De.default.jsonPos),
              t.return(De.default.data);
          }),
          t.if((0, ye._)`${De.default.jsonPos} === ${De.default.jsonLen}`, () =>
            t.return(De.default.data),
          ),
          Hu(e);
      },
    );
  }
  function Oy(e) {
    let t;
    for (let r of lne.jtdForms)
      if (r in e.schema) {
        t = r;
        break;
      }
    t ? gne(e, pne[t]) : xE(e);
  }
  var yne = wD(!0, wD(!1, Hu));
  function gne(e, t) {
    let { gen: r, schema: n, data: i } = e;
    if (!n.nullable) return t(e);
    Wd(e, 'null', t, () => r.assign(i, null));
  }
  function vne(e) {
    let { gen: t, schema: r, data: n } = e;
    xs(e, '[');
    let i = t.let('i', 0);
    t.assign(n, (0, ye._)`[]`),
      kE(e, ']', () => {
        let s = t.let('el');
        Oy({ ...e, schema: r.elements, data: s }),
          t.assign((0, ye._)`${n}[${i}++]`, s);
      });
  }
  function bne(e) {
    let { gen: t, schema: r, data: n } = e;
    xs(e, '{'), t.assign(n, (0, ye._)`{}`), kE(e, '}', () => Sne(e, r.values));
  }
  function kE(e, t, r) {
    PD(e, t, r), xs(e, t);
  }
  function PD(e, t, r) {
    let { gen: n } = e;
    n.for(
      (0,
      ye._)`;${De.default.jsonPos}<${De.default.jsonLen} && ${Iy(1)}!==${t};`,
      () => {
        r(), Wd(e, ',', () => n.break(), i);
      },
    );
    function i() {
      Wd(e, t, () => {}, Hu);
    }
  }
  function Sne(e, t) {
    let { gen: r } = e,
      n = r.let('key');
    Ja({ ...e, data: n }), xs(e, ':'), xD(e, n, t);
  }
  function _ne(e) {
    let { gen: t, data: r, schema: n } = e,
      { discriminator: i, mapping: s } = n;
    xs(e, '{'), t.assign(r, (0, ye._)`{}`);
    let o = t.const('pos', De.default.jsonPos),
      a = t.let('value'),
      u = t.let('tag');
    PD(e, '}', () => {
      let c = t.let('key');
      Ja({ ...e, data: c }),
        xs(e, ':'),
        t.if(
          (0, ye._)`${c} === ${i}`,
          () => {
            Ja({ ...e, data: u }),
              t.assign((0, ye._)`${r}[${c}]`, u),
              t.break();
          },
          () => xE({ ...e, data: a }),
        );
    }),
      t.assign(De.default.jsonPos, o),
      t.if((0, ye._)`${u} === undefined`),
      mi(e, (0, ye.str)`discriminator tag not found`);
    for (let c in s)
      t.elseIf((0, ye._)`${u} === ${c}`), kD({ ...e, schema: s[c] }, i);
    t.else(), mi(e, (0, ye.str)`discriminator value not in schema`), t.endIf();
  }
  function SD(e) {
    let { gen: t, data: r } = e;
    xs(e, '{'), t.assign(r, (0, ye._)`{}`), kD(e);
  }
  function kD(e, t) {
    let { gen: r, schema: n, data: i } = e,
      { properties: s, optionalProperties: o, additionalProperties: a } = n;
    if (
      (kE(e, '}', () => {
        let u = r.let('key');
        if (
          (Ja({ ...e, data: u }),
          xs(e, ':'),
          r.if(!1),
          _D(e, u, s),
          _D(e, u, o),
          t)
        ) {
          r.elseIf((0, ye._)`${u} === ${t}`);
          let c = r.let('tag');
          Ja({ ...e, data: c });
        }
        r.else(),
          a
            ? xE({ ...e, data: (0, ye._)`${i}[${u}]` })
            : mi(e, (0, ye.str)`property ${u} not allowed`),
          r.endIf();
      }),
      s)
    ) {
      let u = (0, cne.hasPropFunc)(r),
        c = (0, ye.and)(
          ...Object.keys(s).map((d) => (0, ye._)`${u}.call(${i}, ${d})`),
        );
      r.if((0, ye.not)(c), () =>
        mi(e, (0, ye.str)`missing required properties`),
      );
    }
  }
  function _D(e, t, r = {}) {
    let { gen: n } = e;
    for (let i in r) n.elseIf((0, ye._)`${t} === ${i}`), xD(e, t, r[i]);
  }
  function xD(e, t, r) {
    Oy({ ...e, schema: r, data: (0, ye._)`${e.data}[${t}]` });
  }
  function wne(e) {
    let { gen: t, schema: r, data: n, self: i } = e;
    switch (r.type) {
      case 'boolean':
        yne(e);
        break;
      case 'string':
        Ja(e);
        break;
      case 'timestamp': {
        Ja(e);
        let s = (0, RD.useFunc)(t, hne.default),
          { allowDate: o, parseDate: a } = i.opts,
          u = o ? (0, ye._)`!${s}(${n}, true)` : (0, ye._)`!${s}(${n})`,
          c = a
            ? (0, ye.or)(
                u,
                (0, ye._)`(${n} = new Date(${n}), false)`,
                (0, ye._)`isNaN(${n}.valueOf())`,
              )
            : u;
        t.if(c, () => mi(e, (0, ye.str)`invalid timestamp`));
        break;
      }
      case 'float32':
      case 'float64':
        RE(e);
        break;
      default: {
        let s = r.type;
        if (!i.opts.int32range && (s === 'int32' || s === 'uint32'))
          RE(e, 16),
            s === 'uint32' &&
              t.if((0, ye._)`${n} < 0`, () =>
                mi(e, (0, ye.str)`integer out of range`),
              );
        else {
          let [o, a, u] = dne.intRange[s];
          RE(e, u),
            t.if((0, ye._)`${n} < ${o} || ${n} > ${a}`, () =>
              mi(e, (0, ye.str)`integer out of range`),
            );
        }
      }
    }
  }
  function Ja(e) {
    xs(e, '"'), CE(e, PE.parseJsonString);
  }
  function Ene(e) {
    let { gen: t, data: r, schema: n } = e,
      i = n.enum;
    xs(e, '"'), t.if(!1);
    for (let s of i) {
      let o = JSON.stringify(s).slice(1);
      t.elseIf((0, ye._)`${Iy(o.length)} === ${o}`),
        t.assign(r, (0, ye.str)`${s}`),
        t.add(De.default.jsonPos, o.length);
    }
    t.else(), Hu(e), t.endIf();
  }
  function RE(e, t) {
    let { gen: r } = e;
    OE(e),
      r.if(
        (0, ye._)`"-0123456789".indexOf(${Iy(1)}) < 0`,
        () => Hu(e),
        () => CE(e, PE.parseJsonNumber, t),
      );
  }
  function wD(e, t) {
    return (r) => {
      let { gen: n, data: i } = r;
      Wd(
        r,
        `${e}`,
        () => t(r),
        () => n.assign(i, e),
      );
    };
  }
  function Rne(e) {
    let { gen: t, self: r, definitions: n, schema: i, schemaEnv: s } = e,
      { ref: o } = i,
      a = n[o];
    if (!a)
      throw new une.default(r.opts.uriResolver, '', o, `No definition ${o}`);
    if (!(0, fne.hasRef)(a)) return Oy({ ...e, schema: a });
    let { root: u } = s,
      c = TD.call(r, new ED.SchemaEnv({ schema: a, root: u }), n);
    CD(e, Tne(t, c), !0);
  }
  function Tne(e, t) {
    return t.parse
      ? e.scopeValue('parse', { ref: t.parse })
      : (0, ye._)`${e.scopeValue('wrapper', { ref: t })}.parse`;
  }
  function xE(e) {
    CE(e, PE.parseJson);
  }
  function CE(e, t, r) {
    CD(e, (0, RD.useFunc)(e.gen, t), r);
  }
  function CD(e, t, r) {
    let { gen: n, data: i } = e;
    n.assign(
      i,
      (0,
      ye._)`${t}(${De.default.json}, ${De.default.jsonPos}${r ? (0, ye._)`, ${r}` : ye.nil})`,
    ),
      n.assign(De.default.jsonPos, (0, ye._)`${t}.position`),
      n.if((0, ye._)`${i} === undefined`, () => mi(e, (0, ye._)`${t}.message`));
  }
  function xs(e, t) {
    Wd(e, t, Hu);
  }
  function Wd(e, t, r, n) {
    let { gen: i } = e,
      s = t.length;
    OE(e),
      i.if(
        (0, ye._)`${Iy(s)} === ${t}`,
        () => {
          i.add(De.default.jsonPos, s), n?.(e);
        },
        () => r(e),
      );
  }
  function OE({ gen: e, char: t }) {
    e.code(
      (0,
      ye._)`while((${t}=${De.default.json}[${De.default.jsonPos}],${t}===" "||${t}==="\\n"||${t}==="\\r"||${t}==="\\t"))${De.default.jsonPos}++;`,
    );
  }
  function Iy(e) {
    return e === 1
      ? (0, ye._)`${De.default.json}[${De.default.jsonPos}]`
      : (0,
        ye._)`${De.default.json}.slice(${De.default.jsonPos}, ${De.default.jsonPos}+${e})`;
  }
  function Hu(e) {
    mi(
      e,
      (0,
      ye._)`"unexpected token " + ${De.default.json}[${De.default.jsonPos}]`,
    );
  }
  function mi({ gen: e, parseName: t }, r) {
    e.assign((0, ye._)`${t}.message`, r),
      e.assign((0, ye._)`${t}.position`, De.default.jsonPos),
      e.return(TE);
  }
});
var NE = $((vt, $E) => {
  'use strict';
  Object.defineProperty(vt, '__esModule', { value: !0 });
  vt.MissingRefError =
    vt.ValidationError =
    vt.CodeGen =
    vt.Name =
    vt.nil =
    vt.stringify =
    vt.str =
    vt._ =
    vt.KeywordCxt =
    vt.Ajv =
      void 0;
  var Pne = M_(),
    kne = iD(),
    xne = uD(),
    Cne = gD(),
    One = OD(),
    AE = 'JTD-meta-schema',
    zu = class extends Pne.default {
      constructor(t = {}) {
        super({ ...t, jtd: !0 });
      }
      _addVocabularies() {
        super._addVocabularies(), this.addVocabulary(kne.default);
      }
      _addDefaultMetaSchema() {
        super._addDefaultMetaSchema(),
          this.opts.meta && this.addMetaSchema(xne.default, AE, !1);
      }
      defaultMeta() {
        return (this.opts.defaultMeta =
          super.defaultMeta() || (this.getSchema(AE) ? AE : void 0));
      }
      compileSerializer(t) {
        let r = this._addSchema(t);
        return r.serialize || this._compileSerializer(r);
      }
      compileParser(t) {
        let r = this._addSchema(t);
        return r.parse || this._compileParser(r);
      }
      _compileSerializer(t) {
        if (
          (Cne.default.call(this, t, t.schema.definitions || {}), !t.serialize)
        )
          throw new Error('ajv implementation error');
        return t.serialize;
      }
      _compileParser(t) {
        if ((One.default.call(this, t, t.schema.definitions || {}), !t.parse))
          throw new Error('ajv implementation error');
        return t.parse;
      }
    };
  vt.Ajv = zu;
  $E.exports = vt = zu;
  $E.exports.Ajv = zu;
  Object.defineProperty(vt, '__esModule', { value: !0 });
  vt.default = zu;
  var Ine = Tu();
  Object.defineProperty(vt, 'KeywordCxt', {
    enumerable: !0,
    get: function () {
      return Ine.KeywordCxt;
    },
  });
  var Uu = be();
  Object.defineProperty(vt, '_', {
    enumerable: !0,
    get: function () {
      return Uu._;
    },
  });
  Object.defineProperty(vt, 'str', {
    enumerable: !0,
    get: function () {
      return Uu.str;
    },
  });
  Object.defineProperty(vt, 'stringify', {
    enumerable: !0,
    get: function () {
      return Uu.stringify;
    },
  });
  Object.defineProperty(vt, 'nil', {
    enumerable: !0,
    get: function () {
      return Uu.nil;
    },
  });
  Object.defineProperty(vt, 'Name', {
    enumerable: !0,
    get: function () {
      return Uu.Name;
    },
  });
  Object.defineProperty(vt, 'CodeGen', {
    enumerable: !0,
    get: function () {
      return Uu.CodeGen;
    },
  });
  var Ane = Sd();
  Object.defineProperty(vt, 'ValidationError', {
    enumerable: !0,
    get: function () {
      return Ane.default;
    },
  });
  var $ne = ai();
  Object.defineProperty(vt, 'MissingRefError', {
    enumerable: !0,
    get: function () {
      return $ne.default;
    },
  });
});
var LE = $((pge, ID) => {
  'use strict';
  var Nne = Lw();
  ID.exports = Object.freeze({
    coerceTypes: 'array',
    useDefaults: !0,
    removeAdditional: !0,
    uriResolver: Nne,
    addUsedSchema: !1,
    allErrors: !1,
  });
});
var jD = $((Cs) => {
  'use strict';
  Object.defineProperty(Cs, '__esModule', { value: !0 });
  Cs.formatNames = Cs.fastFormats = Cs.fullFormats = void 0;
  function Vu(e, t) {
    return { validate: e, compare: t };
  }
  Cs.fullFormats = {
    date: Vu(ND, FE),
    time: Vu(LD, qE),
    'date-time': Vu(Fne, DD),
    duration:
      /^P(?!$)((\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?|(\d+W)?)$/,
    uri: Hne,
    'uri-reference':
      /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,
    'uri-template':
      /^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,
    url: /^(?:https?|ftp):\/\/(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)(?:\.(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu,
    email:
      /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
    hostname:
      /^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,
    ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
    ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i,
    regex: Yne,
    uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,
    'json-pointer': /^(?:\/(?:[^~/]|~0|~1)*)*$/,
    'json-pointer-uri-fragment':
      /^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,
    'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,
    byte: zne,
    int32: { type: 'number', validate: Bne },
    int64: { type: 'number', validate: Wne },
    float: { type: 'number', validate: $D },
    double: { type: 'number', validate: $D },
    password: !0,
    binary: !0,
  };
  Cs.fastFormats = {
    ...Cs.fullFormats,
    date: Vu(/^\d\d\d\d-[0-1]\d-[0-3]\d$/, FE),
    time: Vu(
      /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,
      qE,
    ),
    'date-time': Vu(
      /^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,
      DD,
    ),
    uri: /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/)?[^\s]*$/i,
    'uri-reference':
      /^(?:(?:[a-z][a-z0-9+\-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,
    email:
      /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,
  };
  Cs.formatNames = Object.keys(Cs.fullFormats);
  function Lne(e) {
    return e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0);
  }
  var Dne = /^(\d\d\d\d)-(\d\d)-(\d\d)$/,
    jne = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  function ND(e) {
    let t = Dne.exec(e);
    if (!t) return !1;
    let r = +t[1],
      n = +t[2],
      i = +t[3];
    return (
      n >= 1 && n <= 12 && i >= 1 && i <= (n === 2 && Lne(r) ? 29 : jne[n])
    );
  }
  function FE(e, t) {
    if (e && t) return e > t ? 1 : e < t ? -1 : 0;
  }
  var DE = /^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d(?::?\d\d)?)?$/i;
  function LD(e, t) {
    let r = DE.exec(e);
    if (!r) return !1;
    let n = +r[1],
      i = +r[2],
      s = +r[3],
      o = r[5];
    return (
      ((n <= 23 && i <= 59 && s <= 59) || (n === 23 && i === 59 && s === 60)) &&
      (!t || o !== '')
    );
  }
  function qE(e, t) {
    if (!(e && t)) return;
    let r = DE.exec(e),
      n = DE.exec(t);
    if (r && n)
      return (
        (e = r[1] + r[2] + r[3] + (r[4] || '')),
        (t = n[1] + n[2] + n[3] + (n[4] || '')),
        e > t ? 1 : e < t ? -1 : 0
      );
  }
  var jE = /t|\s/i;
  function Fne(e) {
    let t = e.split(jE);
    return t.length === 2 && ND(t[0]) && LD(t[1], !0);
  }
  function DD(e, t) {
    if (!(e && t)) return;
    let [r, n] = e.split(jE),
      [i, s] = t.split(jE),
      o = FE(r, i);
    if (o !== void 0) return o || qE(n, s);
  }
  var qne = /\/|:/,
    Mne =
      /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;
  function Hne(e) {
    return qne.test(e) && Mne.test(e);
  }
  var AD = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;
  function zne(e) {
    return (AD.lastIndex = 0), AD.test(e);
  }
  var Une = -(2 ** 31),
    Vne = 2 ** 31 - 1;
  function Bne(e) {
    return Number.isInteger(e) && e <= Vne && e >= Une;
  }
  function Wne(e) {
    return Number.isInteger(e);
  }
  function $D() {
    return !0;
  }
  var Gne = /[^\\]\\Z/;
  function Yne(e) {
    if (Gne.test(e)) return !1;
    try {
      return new RegExp(e), !0;
    } catch {
      return !1;
    }
  }
});
var FD = $((Bu) => {
  'use strict';
  Object.defineProperty(Bu, '__esModule', { value: !0 });
  Bu.formatLimitDefinition = void 0;
  var Jne = Ld(),
    is = be(),
    Co = is.operators,
    Ay = {
      formatMaximum: { okStr: '<=', ok: Co.LTE, fail: Co.GT },
      formatMinimum: { okStr: '>=', ok: Co.GTE, fail: Co.LT },
      formatExclusiveMaximum: { okStr: '<', ok: Co.LT, fail: Co.GTE },
      formatExclusiveMinimum: { okStr: '>', ok: Co.GT, fail: Co.LTE },
    },
    Kne = {
      message: ({ keyword: e, schemaCode: t }) =>
        is.str`should be ${Ay[e].okStr} ${t}`,
      params: ({ keyword: e, schemaCode: t }) =>
        is._`{comparison: ${Ay[e].okStr}, limit: ${t}}`,
    };
  Bu.formatLimitDefinition = {
    keyword: Object.keys(Ay),
    type: 'string',
    schemaType: 'string',
    $data: !0,
    error: Kne,
    code(e) {
      let { gen: t, data: r, schemaCode: n, keyword: i, it: s } = e,
        { opts: o, self: a } = s;
      if (!o.validateFormats) return;
      let u = new Jne.KeywordCxt(s, a.RULES.all.format.definition, 'format');
      u.$data ? c() : d();
      function c() {
        let g = t.scopeValue('formats', {
            ref: a.formats,
            code: o.code.formats,
          }),
          v = t.const('fmt', is._`${g}[${u.schemaCode}]`);
        e.fail$data(
          is.or(
            is._`typeof ${v} != "object"`,
            is._`${v} instanceof RegExp`,
            is._`typeof ${v}.compare != "function"`,
            m(v),
          ),
        );
      }
      function d() {
        let g = u.schema,
          v = a.formats[g];
        if (!v || v === !0) return;
        if (
          typeof v != 'object' ||
          v instanceof RegExp ||
          typeof v.compare != 'function'
        )
          throw new Error(
            `"${i}": format "${g}" does not define "compare" function`,
          );
        let S = t.scopeValue('formats', {
          key: g,
          ref: v,
          code: o.code.formats
            ? is._`${o.code.formats}${is.getProperty(g)}`
            : void 0,
        });
        e.fail$data(m(S));
      }
      function m(g) {
        return is._`${g}.compare(${r}, ${n}) ${Ay[i].fail} 0`;
      }
    },
    dependencies: ['format'],
  };
  var Xne = (e) => (e.addKeyword(Bu.formatLimitDefinition), e);
  Bu.default = Xne;
});
var zD = $((Gd, HD) => {
  'use strict';
  Object.defineProperty(Gd, '__esModule', { value: !0 });
  var Wu = jD(),
    Zne = FD(),
    ME = be(),
    qD = new ME.Name('fullFormats'),
    Qne = new ME.Name('fastFormats'),
    HE = (e, t = { keywords: !0 }) => {
      if (Array.isArray(t)) return MD(e, t, Wu.fullFormats, qD), e;
      let [r, n] =
          t.mode === 'fast' ? [Wu.fastFormats, Qne] : [Wu.fullFormats, qD],
        i = t.formats || Wu.formatNames;
      return MD(e, i, r, n), t.keywords && Zne.default(e), e;
    };
  HE.get = (e, t = 'full') => {
    let n = (t === 'fast' ? Wu.fastFormats : Wu.fullFormats)[e];
    if (!n) throw new Error(`Unknown format "${e}"`);
    return n;
  };
  function MD(e, t, r, n) {
    var i, s;
    ((i = (s = e.opts.code).formats) !== null && i !== void 0) ||
      (s.formats = ME._`require("ajv-formats/dist/formats").${n}`);
    for (let o of t) e.addFormat(o, r[o]);
  }
  HD.exports = Gd = HE;
  Object.defineProperty(Gd, '__esModule', { value: !0 });
  Gd.default = HE;
});
var BD = $((gge, VD) => {
  'use strict';
  var ese = Ld().default,
    tse = NE(),
    UD = LE(),
    zE = class {
      constructor(t, r) {
        r.mode === 'JTD'
          ? (this.ajv = new tse(Object.assign({}, UD, r.customOptions)))
          : (this.ajv = new ese(Object.assign({}, UD, r.customOptions)));
        let n = !0;
        if (r.plugins && r.plugins.length > 0)
          for (let s of r.plugins)
            Array.isArray(s)
              ? ((n = n && s[0].name !== 'formatsPlugin'), s[0](this.ajv, s[1]))
              : ((n = n && s.name !== 'formatsPlugin'), s(this.ajv));
        n && zD()(this.ajv), r.onCreate?.(this.ajv);
        let i = Object.values(t);
        for (let s of i) this.ajv.addSchema(s);
      }
      buildValidatorFunction({ schema: t }) {
        if (t.$id) {
          let r = this.ajv.getSchema(t.$id);
          if (r) return r;
        }
        return this.ajv.compile(t);
      }
    };
  VD.exports = zE;
});
var GD = $((vge, WD) => {
  'use strict';
  var rse = NE(),
    nse = LE(),
    UE = class {
      constructor(t, r) {
        this.ajv = new rse(Object.assign({}, nse, r));
      }
      buildSerializerFunction({ schema: t }) {
        return this.ajv.compileSerializer(t);
      }
    };
  WD.exports = UE;
});
var KD = $((Jd, JD) => {
  'use strict';
  Object.defineProperty(Jd, '__esModule', { value: !0 });
  var Yd = qm(),
    os = gu();
  function YD(e, t) {
    if (!e.opts.code.source)
      throw new Error('moduleCode: ajv instance must have code.source option');
    let { _n: r } = e.scope.opts;
    return typeof t == 'function'
      ? i(t.source)
      : t !== void 0
        ? s(t, n)
        : s(e.schemas, (a) => (a.meta ? void 0 : e.compile(a.schema)));
    function n(a) {
      let u = e.getSchema(a);
      if (!u) throw new Error(`moduleCode: no schema with id ${a}`);
      return u;
    }
    function i(a) {
      let u = {},
        c = a?.validateName,
        d = o(u, a);
      return e.opts.code.esm
        ? `"use strict";${r}export const validate = ${c};${r}export default ${c};${r}${d}`
        : `"use strict";${r}module.exports = ${c};${r}module.exports.default = ${c};${r}${d}`;
    }
    function s(a, u) {
      var c;
      let d = {},
        m = (0, os._)`"use strict";`;
      for (let g in a) {
        let v = u(a[g]);
        if (v) {
          let S = o(d, v.source),
            w = e.opts.code.esm
              ? (0, os._)`export const ${(0, os.getEsmExportName)(g)}`
              : (0, os._)`exports${(0, os.getProperty)(g)}`;
          m = (0,
          os._)`${m}${r}${w} = ${(c = v.source) === null || c === void 0 ? void 0 : c.validateName};${r}${S}`;
        }
      }
      return `${m}`;
    }
    function o(a, u) {
      if (!u)
        throw new Error('moduleCode: function does not have "source" property');
      if (g(u.validateName) === Yd.UsedValueState.Completed) return os.nil;
      v(u.validateName, Yd.UsedValueState.Started);
      let c = e.scope.scopeCode(u.scopeValues, a, m),
        d = new os._Code(`${c}${r}${u.validateCode}`);
      return u.evaluated
        ? (0, os._)`${d}${u.validateName}.evaluated = ${u.evaluated};${r}`
        : d;
      function m(S) {
        var w;
        let T = (w = S.value) === null || w === void 0 ? void 0 : w.ref;
        if (S.prefix === 'validate' && typeof T == 'function')
          return o(a, T.source);
        if (
          (S.prefix === 'root' || S.prefix === 'wrapper') &&
          typeof T == 'object'
        ) {
          let { validate: C, validateName: I } = T;
          if (!I) throw new Error('ajv internal error');
          let x = e.opts.code.es5 ? Yd.varKinds.var : Yd.varKinds.const,
            E = (0, os._)`${x} ${S} = {validate: ${I}};`;
          if (g(I) === Yd.UsedValueState.Started) return E;
          let j = o(a, C?.source);
          return (0, os._)`${E}${r}${j}`;
        }
      }
      function g(S) {
        var w;
        return (w = a[S.prefix]) === null || w === void 0 ? void 0 : w.get(S);
      }
      function v(S, w) {
        let { prefix: T } = S;
        (a[T] = a[T] || new Map()).set(S, w);
      }
    }
  }
  JD.exports = Jd = YD;
  Object.defineProperty(Jd, '__esModule', { value: !0 });
  Jd.default = YD;
});
var QD = $((bge, ZD) => {
  'use strict';
  var XD = VE(),
    sse = KD().default;
  function ise(e = { readMode: !0 }) {
    if (e.readMode === !0 && !e.restoreFunction)
      throw new Error(
        'You must provide a restoreFunction options when readMode ON',
      );
    if (e.readMode !== !0 && !e.storeFunction)
      throw new Error(
        'You must provide a storeFunction options when readMode OFF',
      );
    if (e.readMode === !0)
      return function () {
        return function (n) {
          return e.restoreFunction(n);
        };
      };
    let t = XD();
    return function (n, i = {}) {
      (!i.customOptions || !i.customOptions.code) &&
        (i.customOptions = Object.assign({}, i.customOptions, {
          code: { source: !0 },
        }));
      let s = t(n, i);
      return function (o) {
        let a = s(o),
          u = sse(s[XD.AjvReference].ajv, a);
        return e.storeFunction(o, u), a;
      };
    };
  }
  ZD.exports = ise;
});
var VE = $((Sge, Gu) => {
  'use strict';
  var tj = Symbol.for('fastify.ajv-compiler.reference'),
    ose = BD(),
    ase = GD();
  function BE(e) {
    let t = new Map(),
      r = new Map();
    return e && e.jtdSerializer === !0
      ? function (i, s) {
          let o = ej({}, s);
          if (r.has(o)) return r.get(o);
          let a = new ase(i, s),
            u = a.buildSerializerFunction.bind(a);
          return r.set(o, u), u;
        }
      : function (i, s) {
          let o = ej(i, s.customOptions);
          if (t.has(o)) return t.get(o);
          let a = new ose(i, s),
            u = a.buildValidatorFunction.bind(a);
          return t.set(o, u), s.customOptions.code !== void 0 && (u[tj] = a), u;
        };
  }
  function ej(e, t) {
    let r = JSON.stringify(e),
      n = JSON.stringify(t);
    return `${r}${n}`;
  }
  Gu.exports = BE;
  Gu.exports.default = BE;
  Gu.exports.AjvCompiler = BE;
  Gu.exports.AjvReference = tj;
  Gu.exports.StandaloneValidator = QD();
});
var WE = $((_ge, rj) => {
  'use strict';
  var { buildSchemas: lse } = Bf(),
    use = nE(),
    cse = VE();
  function fse(e, t) {
    if (e) return new Yu(e, t);
    let r = Object.assign(
      { buildValidator: null, buildSerializer: null },
      t?.compilersFactory,
    );
    r.buildValidator || (r.buildValidator = cse()),
      r.buildSerializer || (r.buildSerializer = use());
    let n = {
      bucket: (t && t.bucket) || lse,
      compilersFactory: r,
      isCustomValidatorCompiler:
        typeof t?.compilersFactory?.buildValidator == 'function',
      isCustomSerializerCompiler:
        typeof t?.compilersFactory?.buildValidator == 'function',
    };
    return new Yu(void 0, n);
  }
  var Yu = class {
    constructor(t, r) {
      (this.opts = r || t?.opts),
        (this.addedSchemas = !1),
        (this.compilersFactory = this.opts.compilersFactory),
        t
          ? ((this.schemaBucket = this.opts.bucket(t.getSchemas())),
            (this.validatorCompiler = t.getValidatorCompiler()),
            (this.serializerCompiler = t.getSerializerCompiler()),
            (this.isCustomValidatorCompiler = t.isCustomValidatorCompiler),
            (this.isCustomSerializerCompiler = t.isCustomSerializerCompiler),
            (this.parent = t))
          : ((this.schemaBucket = this.opts.bucket()),
            (this.isCustomValidatorCompiler =
              this.opts.isCustomValidatorCompiler || !1),
            (this.isCustomSerializerCompiler =
              this.opts.isCustomSerializerCompiler || !1));
    }
    add(t) {
      return (this.addedSchemas = !0), this.schemaBucket.add(t);
    }
    getSchema(t) {
      return this.schemaBucket.getSchema(t);
    }
    getSchemas() {
      return this.schemaBucket.getSchemas();
    }
    setValidatorCompiler(t) {
      (this.compilersFactory = Object.assign({}, this.compilersFactory, {
        buildValidator: () => t,
      })),
        (this.validatorCompiler = t),
        (this.isCustomValidatorCompiler = !0);
    }
    setSerializerCompiler(t) {
      (this.compilersFactory = Object.assign({}, this.compilersFactory, {
        buildSerializer: () => t,
      })),
        (this.serializerCompiler = t),
        (this.isCustomSerializerCompiler = !0);
    }
    getValidatorCompiler() {
      return (
        this.validatorCompiler ||
        (this.parent && this.parent.getValidatorCompiler())
      );
    }
    getSerializerCompiler() {
      return (
        this.serializerCompiler ||
        (this.parent && this.parent.getSerializerCompiler())
      );
    }
    getSerializerBuilder() {
      return (
        this.compilersFactory.buildSerializer ||
        (this.parent && this.parent.getSerializerBuilder())
      );
    }
    getValidatorBuilder() {
      return (
        this.compilersFactory.buildValidator ||
        (this.parent && this.parent.getValidatorBuilder())
      );
    }
    setupValidator(t) {
      (this.validatorCompiler !== void 0 && !this.addedSchemas) ||
        (this.validatorCompiler = this.getValidatorBuilder()(
          this.schemaBucket.getSchemas(),
          t.ajv,
        ));
    }
    setupSerializer(t) {
      (this.serializerCompiler !== void 0 && !this.addedSchemas) ||
        (this.serializerCompiler = this.getSerializerBuilder()(
          this.schemaBucket.getSchemas(),
          t.serializerOpts,
        ));
    }
  };
  Yu.buildSchemaController = fse;
  rj.exports = Yu;
});
var ZE = $((wge, XE) => {
  'use strict';
  var GE = kS(),
    JE = require('node:assert'),
    KE = Symbol.for('registered-plugin'),
    { kTestInternals: dse } = rr(),
    { exist: hse, existReply: pse, existRequest: mse } = jS(),
    {
      FST_ERR_PLUGIN_VERSION_MISMATCH: yse,
      FST_ERR_PLUGIN_NOT_PRESENT_IN_INSTANCE: gse,
    } = br(),
    { FSTWRN002: vse } = Qs();
  function Kd(e) {
    return e[Symbol.for('plugin-meta')];
  }
  function nj(e) {
    let t = sj(e);
    if (t) return t;
    let r = require.cache;
    if (r) {
      let n = Object.keys(r);
      for (let i = 0; i < n.length; i++) {
        let s = n[i];
        if (r[s].exports === e) return s;
      }
    }
    return e.name ? e.name : null;
  }
  function bse(e) {
    return e
      .toString()
      .split(
        `
`,
      )
      .slice(0, 2)
      .map((t) => t.trim())
      .join(' -- ');
  }
  function sj(e) {
    return e[Symbol.for('fastify.display-name')];
  }
  function ij(e) {
    return !!e[Symbol.for('skip-override')];
  }
  function oj(e) {
    let t = Kd(e);
    if (!t) return;
    let r = t.dependencies;
    r &&
      (JE(Array.isArray(r), 'The dependencies should be an array of strings'),
      r.forEach((n) => {
        JE(
          this[KE].indexOf(n) > -1,
          `The dependency '${n}' of plugin '${t.name}' is not registered`,
        );
      }));
  }
  function aj(e) {
    let t = Kd(e);
    if (!t) return;
    let { decorators: r, name: n } = t;
    r &&
      (r.fastify && YE(this, 'Fastify', r.fastify, n),
      r.reply && YE(this, 'Reply', r.reply, n),
      r.request && YE(this, 'Request', r.request, n));
  }
  var Sse = { Fastify: hse, Request: mse, Reply: pse };
  function YE(e, t, r, n) {
    JE(Array.isArray(r), 'The decorators should be an array of strings'),
      r.forEach((i) => {
        let s = typeof n == 'string' ? ` required by '${n}'` : '';
        if (!Sse[t].call(e, i)) throw new gse(i, s, t);
      });
  }
  function _se(e) {
    let t = Kd(e);
    if (!t) return;
    let r = t.fastify,
      n = /-rc.+$/.test(this.version);
    if (
      !(n === !0 && GE.gt(this.version, GE.coerce(r)) === !0) &&
      r &&
      GE.satisfies(this.version, r, { includePrerelease: n }) === !1
    )
      throw new yse(t.name, r, this.version);
  }
  function wse(e) {
    let t = Kd(e);
    if (!t) return;
    let r = t.name;
    if (r) return this[KE].push(r), r;
  }
  function Ese(e, t) {
    e.constructor.name === 'AsyncFunction' &&
      e.length === 3 &&
      vse(t || 'anonymous');
  }
  function Rse(e) {
    let t = wse.call(this, e) || nj(e);
    return (
      Ese.call(this, e, t),
      _se.call(this, e),
      aj.call(this, e),
      oj.call(this, e),
      ij(e)
    );
  }
  XE.exports = {
    getPluginName: nj,
    getFuncPreview: bse,
    kRegisteredPlugins: KE,
    getDisplayName: sj,
    registerPlugin: Rse,
  };
  XE.exports[dse] = {
    shouldSkipOverride: ij,
    getMeta: Kd,
    checkDecorators: aj,
    checkDependencies: oj,
  };
});
var $y = $((Ege, lj) => {
  'use strict';
  function Tse(e, t) {
    let r = t || kse();
    return e ? xse(e, r) : r;
  }
  function Pse(e, t) {
    return e.genReqId(t);
  }
  function kse() {
    let t = 0;
    return function () {
      return (t = (t + 1) & 2147483647), `req-${t.toString(36)}`;
    };
  }
  function xse(e, t) {
    return function (r) {
      return r.headers[e] || t(r);
    };
  }
  lj.exports = { getGenReqId: Pse, reqIdGenFactory: Tse };
});
var dj = $((Rge, fj) => {
  'use strict';
  var uj = 12,
    Cse = 0,
    QE = [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
      2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
      3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5,
      5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6,
      7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 10, 9, 9, 9, 11, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0,
      24, 36, 48, 60, 72, 84, 96, 0, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      127, 63, 63, 63, 0, 31, 15, 15, 15, 7, 7, 7,
    ];
  function Ose(e) {
    var t = e.indexOf('%');
    if (t === -1) return e;
    for (
      var r = e.length, n = '', i = 0, s = 0, o = t, a = uj;
      t > -1 && t < r;

    ) {
      var u = cj(e[t + 1], 4),
        c = cj(e[t + 2], 0),
        d = u | c,
        m = QE[d];
      if (((a = QE[256 + a + m]), (s = (s << 6) | (d & QE[364 + m])), a === uj))
        (n += e.slice(i, o)),
          (n +=
            s <= 65535
              ? String.fromCharCode(s)
              : String.fromCharCode(55232 + (s >> 10), 56320 + (s & 1023))),
          (s = 0),
          (i = t + 3),
          (t = o = e.indexOf('%', i));
      else {
        if (a === Cse) return null;
        if (((t += 3), t < r && e.charCodeAt(t) === 37)) continue;
        return null;
      }
    }
    return n + e.slice(i);
  }
  var Ise = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    a: 10,
    A: 10,
    b: 11,
    B: 11,
    c: 12,
    C: 12,
    d: 13,
    D: 13,
    e: 14,
    E: 14,
    f: 15,
    F: 15,
  };
  function cj(e, t) {
    var r = Ise[e];
    return r === void 0 ? 255 : r << t;
  }
  fj.exports = Ose;
});
var gj = $((Tge, yj) => {
  'use strict';
  var hj = dj(),
    pj = /\+/g,
    mj = function () {};
  mj.prototype = Object.create(null);
  function Ase(e) {
    let t = new mj();
    if (typeof e != 'string') return t;
    let r = e.length,
      n = '',
      i = '',
      s = -1,
      o = -1,
      a = !1,
      u = !1,
      c = !1,
      d = !1,
      m = !1,
      g = 0;
    for (let v = 0; v < r + 1; v++)
      if (((g = v !== r ? e.charCodeAt(v) : 38), g === 38)) {
        if (
          ((m = o > s),
          m || (o = v),
          (n = e.slice(s + 1, o)),
          m || n.length > 0)
        ) {
          c && (n = n.replace(pj, ' ')),
            a && (n = hj(n) || n),
            m &&
              ((i = e.slice(o + 1, v)),
              d && (i = i.replace(pj, ' ')),
              u && (i = hj(i) || i));
          let S = t[n];
          S === void 0 ? (t[n] = i) : S.pop ? S.push(i) : (t[n] = [S, i]);
        }
        (i = ''), (s = v), (o = v), (a = !1), (u = !1), (c = !1), (d = !1);
      } else
        g === 61
          ? o <= s
            ? (o = v)
            : (u = !0)
          : g === 43
            ? o > s
              ? (d = !0)
              : (c = !0)
            : g === 37 && (o > s ? (u = !0) : (a = !0));
    return t;
  }
  yj.exports = Ase;
});
var bj = $((Pge, vj) => {
  var Os = Array.from(
      { length: 256 },
      (e, t) => '%' + ((t < 16 ? '0' : '') + t.toString(16)).toUpperCase(),
    ),
    $se = new Int8Array([
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
      0, 1, 0,
    ]);
  function Nse(e) {
    let t = e.length;
    if (t === 0) return '';
    let r = '',
      n = 0,
      i = 0;
    e: for (; i < t; i++) {
      let s = e.charCodeAt(i);
      for (; s < 128; ) {
        if (
          ($se[s] !== 1 &&
            (n < i && (r += e.slice(n, i)), (n = i + 1), (r += Os[s])),
          ++i === t)
        )
          break e;
        s = e.charCodeAt(i);
      }
      if ((n < i && (r += e.slice(n, i)), s < 2048)) {
        (n = i + 1), (r += Os[192 | (s >> 6)] + Os[128 | (s & 63)]);
        continue;
      }
      if (s < 55296 || s >= 57344) {
        (n = i + 1),
          (r +=
            Os[224 | (s >> 12)] +
            Os[128 | ((s >> 6) & 63)] +
            Os[128 | (s & 63)]);
        continue;
      }
      if ((++i, i >= t)) throw new Error('URI malformed');
      let o = e.charCodeAt(i) & 1023;
      (n = i + 1),
        (s = 65536 + (((s & 1023) << 10) | o)),
        (r +=
          Os[240 | (s >> 18)] +
          Os[128 | ((s >> 12) & 63)] +
          Os[128 | ((s >> 6) & 63)] +
          Os[128 | (s & 63)]);
    }
    return n === 0 ? e : n < t ? r + e.slice(n) : r;
  }
  vj.exports = { encodeString: Nse };
});
var wj = $((kge, _j) => {
  'use strict';
  var { encodeString: eR } = bj();
  function Sj(e) {
    let t = typeof e;
    return t === 'string'
      ? eR(e)
      : t === 'bigint'
        ? e.toString()
        : t === 'boolean'
          ? e
            ? 'true'
            : 'false'
          : t === 'number' && Number.isFinite(e)
            ? e < 1e21
              ? '' + e
              : eR('' + e)
            : '';
  }
  function Lse(e) {
    let t = '';
    if (e === null || typeof e != 'object') return t;
    let r = '&',
      n = Object.keys(e),
      i = n.length,
      s = 0;
    for (let o = 0; o < i; o++) {
      let a = n[o],
        u = e[a],
        c = eR(a) + '=';
      if ((o && (t += r), Array.isArray(u))) {
        s = u.length;
        for (let d = 0; d < s; d++) d && (t += r), (t += c), (t += Sj(u[d]));
      } else (t += c), (t += Sj(u));
    }
    return t;
  }
  _j.exports = Lse;
});
var Pj = $((xge, Xd) => {
  'use strict';
  var Ej = gj(),
    Rj = wj(),
    Tj = { parse: Ej, stringify: Rj };
  Xd.exports = Tj;
  Xd.exports.default = Tj;
  Xd.exports.parse = Ej;
  Xd.exports.stringify = Rj;
});
var xj = $((kj) => {
  'use strict';
  Object.defineProperty(kj, '__esModule', { value: !0 });
});
var Cj = $((Zd) => {
  'use strict';
  Object.defineProperty(Zd, '__esModule', { value: !0 });
  Zd.types = void 0;
  var Dse;
  (function (e) {
    (e[(e.ROOT = 0)] = 'ROOT'),
      (e[(e.GROUP = 1)] = 'GROUP'),
      (e[(e.POSITION = 2)] = 'POSITION'),
      (e[(e.SET = 3)] = 'SET'),
      (e[(e.RANGE = 4)] = 'RANGE'),
      (e[(e.REPETITION = 5)] = 'REPETITION'),
      (e[(e.REFERENCE = 6)] = 'REFERENCE'),
      (e[(e.CHAR = 7)] = 'CHAR');
  })((Dse = Zd.types || (Zd.types = {})));
});
var Ij = $((Oj) => {
  'use strict';
  Object.defineProperty(Oj, '__esModule', { value: !0 });
});
var gi = $((yi) => {
  'use strict';
  var jse =
      (yi && yi.__createBinding) ||
      (Object.create
        ? function (e, t, r, n) {
            n === void 0 && (n = r),
              Object.defineProperty(e, n, {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              });
          }
        : function (e, t, r, n) {
            n === void 0 && (n = r), (e[n] = t[r]);
          }),
    tR =
      (yi && yi.__exportStar) ||
      function (e, t) {
        for (var r in e)
          r !== 'default' &&
            !Object.prototype.hasOwnProperty.call(t, r) &&
            jse(t, e, r);
      };
  Object.defineProperty(yi, '__esModule', { value: !0 });
  tR(xj(), yi);
  tR(Cj(), yi);
  tR(Ij(), yi);
});
var Ny = $((Tr) => {
  'use strict';
  Object.defineProperty(Tr, '__esModule', { value: !0 });
  Tr.anyChar =
    Tr.notWhitespace =
    Tr.whitespace =
    Tr.notInts =
    Tr.ints =
    Tr.notWords =
    Tr.words =
      void 0;
  var Ke = gi(),
    Aj = () => [{ type: Ke.types.RANGE, from: 48, to: 57 }],
    $j = () => [
      { type: Ke.types.CHAR, value: 95 },
      { type: Ke.types.RANGE, from: 97, to: 122 },
      { type: Ke.types.RANGE, from: 65, to: 90 },
      { type: Ke.types.RANGE, from: 48, to: 57 },
    ],
    Nj = () => [
      { type: Ke.types.CHAR, value: 9 },
      { type: Ke.types.CHAR, value: 10 },
      { type: Ke.types.CHAR, value: 11 },
      { type: Ke.types.CHAR, value: 12 },
      { type: Ke.types.CHAR, value: 13 },
      { type: Ke.types.CHAR, value: 32 },
      { type: Ke.types.CHAR, value: 160 },
      { type: Ke.types.CHAR, value: 5760 },
      { type: Ke.types.RANGE, from: 8192, to: 8202 },
      { type: Ke.types.CHAR, value: 8232 },
      { type: Ke.types.CHAR, value: 8233 },
      { type: Ke.types.CHAR, value: 8239 },
      { type: Ke.types.CHAR, value: 8287 },
      { type: Ke.types.CHAR, value: 12288 },
      { type: Ke.types.CHAR, value: 65279 },
    ],
    Fse = () => [
      { type: Ke.types.CHAR, value: 10 },
      { type: Ke.types.CHAR, value: 13 },
      { type: Ke.types.CHAR, value: 8232 },
      { type: Ke.types.CHAR, value: 8233 },
    ];
  Tr.words = () => ({ type: Ke.types.SET, set: $j(), not: !1 });
  Tr.notWords = () => ({ type: Ke.types.SET, set: $j(), not: !0 });
  Tr.ints = () => ({ type: Ke.types.SET, set: Aj(), not: !1 });
  Tr.notInts = () => ({ type: Ke.types.SET, set: Aj(), not: !0 });
  Tr.whitespace = () => ({ type: Ke.types.SET, set: Nj(), not: !1 });
  Tr.notWhitespace = () => ({ type: Ke.types.SET, set: Nj(), not: !0 });
  Tr.anyChar = () => ({ type: Ke.types.SET, set: Fse(), not: !0 });
});
var Dj = $(($n) => {
  'use strict';
  var qse =
      ($n && $n.__createBinding) ||
      (Object.create
        ? function (e, t, r, n) {
            n === void 0 && (n = r),
              Object.defineProperty(e, n, {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              });
          }
        : function (e, t, r, n) {
            n === void 0 && (n = r), (e[n] = t[r]);
          }),
    Mse =
      ($n && $n.__setModuleDefault) ||
      (Object.create
        ? function (e, t) {
            Object.defineProperty(e, 'default', { enumerable: !0, value: t });
          }
        : function (e, t) {
            e.default = t;
          }),
    Hse =
      ($n && $n.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (e != null)
          for (var r in e)
            r !== 'default' &&
              Object.prototype.hasOwnProperty.call(e, r) &&
              qse(t, e, r);
        return Mse(t, e), t;
      };
  Object.defineProperty($n, '__esModule', { value: !0 });
  $n.tokenizeClass = $n.strToChars = void 0;
  var Lj = gi(),
    Ju = Hse(Ny()),
    zse = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^ ?';
  $n.strToChars = (e) => {
    let t =
      /(\[\\b\])|(\\)?\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|c([@A-Z[\\\]^?])|([0tnvfr]))/g;
    return e.replace(t, (r, n, i, s, o, a, u) => {
      if (i) return r;
      let c = n
          ? 8
          : s
            ? parseInt(s, 16)
            : o
              ? parseInt(o, 16)
              : a
                ? zse.indexOf(a)
                : { 0: 0, t: 9, n: 10, v: 11, f: 12, r: 13 }[u],
        d = String.fromCharCode(c);
      return /[[\]{}^$.|?*+()]/.test(d) ? `\\${d}` : d;
    });
  };
  $n.tokenizeClass = (e, t) => {
    var r, n, i, s, o, a, u;
    let c = [],
      d,
      m,
      g =
        /\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\)(.)|([^\]\\]))-(((?:\\)])|(((?:\\)?([^\]])))))|(\])|(?:\\)?([^])/g;
    for (; (d = g.exec(e)) !== null; ) {
      let v =
        (u =
          (a =
            (o =
              (s =
                (i =
                  (n =
                    (r = d[1] && Ju.words()) !== null && r !== void 0
                      ? r
                      : d[2] && Ju.ints()) !== null && n !== void 0
                    ? n
                    : d[3] && Ju.whitespace()) !== null && i !== void 0
                  ? i
                  : d[4] && Ju.notWords()) !== null && s !== void 0
                ? s
                : d[5] && Ju.notInts()) !== null && o !== void 0
              ? o
              : d[6] && Ju.notWhitespace()) !== null && a !== void 0
            ? a
            : d[7] && {
                type: Lj.types.RANGE,
                from: (d[8] || d[9]).charCodeAt(0),
                to: (m = d[10]).charCodeAt(m.length - 1),
              }) !== null && u !== void 0
          ? u
          : (m = d[16]) && { type: Lj.types.CHAR, value: m.charCodeAt(0) };
      if (v) c.push(v);
      else return [c, g.lastIndex];
    }
    throw new SyntaxError(
      `Invalid regular expression: /${t}/: Unterminated character class`,
    );
  };
});
var rR = $((Is) => {
  'use strict';
  var Use =
      (Is && Is.__createBinding) ||
      (Object.create
        ? function (e, t, r, n) {
            n === void 0 && (n = r),
              Object.defineProperty(e, n, {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              });
          }
        : function (e, t, r, n) {
            n === void 0 && (n = r), (e[n] = t[r]);
          }),
    Vse =
      (Is && Is.__setModuleDefault) ||
      (Object.create
        ? function (e, t) {
            Object.defineProperty(e, 'default', { enumerable: !0, value: t });
          }
        : function (e, t) {
            e.default = t;
          }),
    Fj =
      (Is && Is.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (e != null)
          for (var r in e)
            r !== 'default' &&
              Object.prototype.hasOwnProperty.call(e, r) &&
              Use(t, e, r);
        return Vse(t, e), t;
      };
  Object.defineProperty(Is, '__esModule', { value: !0 });
  Is.tokenizer = void 0;
  var jj = Fj(Dj()),
    fr = gi(),
    Ka = Fj(Ny());
  Is.tokenizer = (e) => {
    let t = 0,
      r,
      n = { type: fr.types.ROOT, stack: [] },
      i = n,
      s = n.stack,
      o = [],
      a = [],
      u = 0,
      c = (m) => {
        throw new SyntaxError(
          `Invalid regular expression: /${e}/: Nothing to repeat at column ${m - 1}`,
        );
      },
      d = jj.strToChars(e);
    for (; t < d.length; )
      switch ((r = d[t++])) {
        case '\\':
          if (t === d.length)
            throw new SyntaxError(
              `Invalid regular expression: /${e}/: \\ at end of pattern`,
            );
          switch ((r = d[t++])) {
            case 'b':
              s.push({ type: fr.types.POSITION, value: 'b' });
              break;
            case 'B':
              s.push({ type: fr.types.POSITION, value: 'B' });
              break;
            case 'w':
              s.push(Ka.words());
              break;
            case 'W':
              s.push(Ka.notWords());
              break;
            case 'd':
              s.push(Ka.ints());
              break;
            case 'D':
              s.push(Ka.notInts());
              break;
            case 's':
              s.push(Ka.whitespace());
              break;
            case 'S':
              s.push(Ka.notWhitespace());
              break;
            default:
              if (/\d/.test(r)) {
                let m = r;
                for (; t < d.length && /\d/.test(d[t]); ) m += d[t++];
                let g = parseInt(m, 10),
                  v = { type: fr.types.REFERENCE, value: g };
                s.push(v),
                  a.push({ reference: v, stack: s, index: s.length - 1 });
              } else s.push({ type: fr.types.CHAR, value: r.charCodeAt(0) });
          }
          break;
        case '^':
          s.push({ type: fr.types.POSITION, value: '^' });
          break;
        case '$':
          s.push({ type: fr.types.POSITION, value: '$' });
          break;
        case '[': {
          let m;
          d[t] === '^' ? ((m = !0), t++) : (m = !1);
          let g = jj.tokenizeClass(d.slice(t), e);
          (t += g[1]), s.push({ type: fr.types.SET, set: g[0], not: m });
          break;
        }
        case '.':
          s.push(Ka.anyChar());
          break;
        case '(': {
          let m = { type: fr.types.GROUP, stack: [], remember: !0 };
          if (d[t] === '?') {
            if (((r = d[t + 1]), (t += 2), r === '=')) m.followedBy = !0;
            else if (r === '!') m.notFollowedBy = !0;
            else if (r !== ':')
              throw new SyntaxError(
                `Invalid regular expression: /${e}/: Invalid group, character '${r}' after '?' at column ${t - 1}`,
              );
            m.remember = !1;
          } else u += 1;
          s.push(m), o.push(i), (i = m), (s = m.stack);
          break;
        }
        case ')':
          if (o.length === 0)
            throw new SyntaxError(
              `Invalid regular expression: /${e}/: Unmatched ) at column ${t - 1}`,
            );
          (i = o.pop()),
            (s = i.options ? i.options[i.options.length - 1] : i.stack);
          break;
        case '|': {
          i.options || ((i.options = [i.stack]), delete i.stack);
          let m = [];
          i.options.push(m), (s = m);
          break;
        }
        case '{': {
          let m = /^(\d+)(,(\d+)?)?\}/.exec(d.slice(t)),
            g,
            v;
          m !== null
            ? (s.length === 0 && c(t),
              (g = parseInt(m[1], 10)),
              (v = m[2] ? (m[3] ? parseInt(m[3], 10) : 1 / 0) : g),
              (t += m[0].length),
              s.push({
                type: fr.types.REPETITION,
                min: g,
                max: v,
                value: s.pop(),
              }))
            : s.push({ type: fr.types.CHAR, value: 123 });
          break;
        }
        case '?':
          s.length === 0 && c(t),
            s.push({
              type: fr.types.REPETITION,
              min: 0,
              max: 1,
              value: s.pop(),
            });
          break;
        case '+':
          s.length === 0 && c(t),
            s.push({
              type: fr.types.REPETITION,
              min: 1,
              max: 1 / 0,
              value: s.pop(),
            });
          break;
        case '*':
          s.length === 0 && c(t),
            s.push({
              type: fr.types.REPETITION,
              min: 0,
              max: 1 / 0,
              value: s.pop(),
            });
          break;
        default:
          s.push({ type: fr.types.CHAR, value: r.charCodeAt(0) });
      }
    if (o.length !== 0)
      throw new SyntaxError(
        `Invalid regular expression: /${e}/: Unterminated group`,
      );
    return Bse(a, u), n;
  };
  function Bse(e, t) {
    for (let r of e.reverse())
      if (t < r.reference.value) {
        r.reference.type = fr.types.CHAR;
        let n = r.reference.value.toString();
        if (((r.reference.value = parseInt(n, 8)), !/^[0-7]+$/.test(n))) {
          let i = 0;
          for (; n[i] !== '8' && n[i] !== '9'; ) i += 1;
          if (
            (i === 0
              ? ((r.reference.value = n.charCodeAt(0)), (i += 1))
              : (r.reference.value = parseInt(n.slice(0, i), 8)),
            n.length > i)
          ) {
            let s = r.stack.splice(r.index + 1);
            for (let o of n.slice(i))
              r.stack.push({ type: fr.types.CHAR, value: o.charCodeAt(0) });
            r.stack.push(...s);
          }
        }
      }
  }
});
var Mj = $((Pr) => {
  'use strict';
  var Wse =
      (Pr && Pr.__createBinding) ||
      (Object.create
        ? function (e, t, r, n) {
            n === void 0 && (n = r),
              Object.defineProperty(e, n, {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              });
          }
        : function (e, t, r, n) {
            n === void 0 && (n = r), (e[n] = t[r]);
          }),
    Gse =
      (Pr && Pr.__setModuleDefault) ||
      (Object.create
        ? function (e, t) {
            Object.defineProperty(e, 'default', { enumerable: !0, value: t });
          }
        : function (e, t) {
            e.default = t;
          }),
    Yse =
      (Pr && Pr.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (e != null)
          for (var r in e)
            r !== 'default' &&
              Object.prototype.hasOwnProperty.call(e, r) &&
              Wse(t, e, r);
        return Gse(t, e), t;
      };
  Object.defineProperty(Pr, '__esModule', { value: !0 });
  Pr.NOTANYCHAR = Pr.WHITESPACE = Pr.WORDS = Pr.INTS = void 0;
  var Ly = Yse(Ny()),
    qj = gi();
  function Dy(e) {
    let t = {},
      r = 0;
    for (let n of e)
      n.type === qj.types.CHAR && (t[n.value] = !0),
        n.type === qj.types.RANGE && (t[`${n.from}-${n.to}`] = !0),
        (r += 1);
    return { lookup: () => Object.assign({}, t), len: r };
  }
  Pr.INTS = Dy(Ly.ints().set);
  Pr.WORDS = Dy(Ly.words().set);
  Pr.WHITESPACE = Dy(Ly.whitespace().set);
  Pr.NOTANYCHAR = Dy(Ly.anyChar().set);
});
var zj = $((Nn) => {
  'use strict';
  var Jse =
      (Nn && Nn.__createBinding) ||
      (Object.create
        ? function (e, t, r, n) {
            n === void 0 && (n = r),
              Object.defineProperty(e, n, {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              });
          }
        : function (e, t, r, n) {
            n === void 0 && (n = r), (e[n] = t[r]);
          }),
    Kse =
      (Nn && Nn.__setModuleDefault) ||
      (Object.create
        ? function (e, t) {
            Object.defineProperty(e, 'default', { enumerable: !0, value: t });
          }
        : function (e, t) {
            e.default = t;
          }),
    Xse =
      (Nn && Nn.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (e != null)
          for (var r in e)
            r !== 'default' &&
              Object.prototype.hasOwnProperty.call(e, r) &&
              Jse(t, e, r);
        return Kse(t, e), t;
      };
  Object.defineProperty(Nn, '__esModule', { value: !0 });
  Nn.writeSetTokens = Nn.setChar = void 0;
  var My = gi(),
    jy = Xse(Mj());
  function qy(e) {
    return e === 94
      ? '\\^'
      : e === 92
        ? '\\\\'
        : e === 93
          ? '\\]'
          : e === 45
            ? '\\-'
            : String.fromCharCode(e);
  }
  Nn.setChar = qy;
  function Fy(e, { lookup: t, len: r }) {
    if (r !== e.length) return !1;
    let n = t();
    for (let i of e) {
      if (i.type === My.types.SET) return !1;
      let s = i.type === My.types.CHAR ? i.value : `${i.from}-${i.to}`;
      if (n[s]) n[s] = !1;
      else return !1;
    }
    return !0;
  }
  function Hj(e, t = !1) {
    if (Fy(e.set, jy.INTS)) return e.not ? '\\D' : '\\d';
    if (Fy(e.set, jy.WORDS)) return e.not ? '\\W' : '\\w';
    if (e.not && Fy(e.set, jy.NOTANYCHAR)) return '.';
    if (Fy(e.set, jy.WHITESPACE)) return e.not ? '\\S' : '\\s';
    let r = '';
    for (let i = 0; i < e.set.length; i++) {
      let s = e.set[i];
      r += Zse(s);
    }
    let n = `${e.not ? '^' : ''}${r}`;
    return t ? n : `[${n}]`;
  }
  Nn.writeSetTokens = Hj;
  function Zse(e) {
    return e.type === My.types.CHAR
      ? qy(e.value)
      : e.type === My.types.RANGE
        ? `${qy(e.from)}-${qy(e.to)}`
        : Hj(e, !0);
  }
});
var sR = $((Ku) => {
  'use strict';
  Object.defineProperty(Ku, '__esModule', { value: !0 });
  Ku.reconstruct = void 0;
  var Oo = gi(),
    nR = zj(),
    Uj = (e) => e.map(Ku.reconstruct).join(''),
    Vj = (e) => {
      if ('options' in e) return e.options.map(Uj).join('|');
      if ('stack' in e) return Uj(e.stack);
      throw new Error('options or stack must be Root or Group token');
    };
  Ku.reconstruct = (e) => {
    switch (e.type) {
      case Oo.types.ROOT:
        return Vj(e);
      case Oo.types.CHAR: {
        let t = String.fromCharCode(e.value);
        return (/[[\\{}$^.|?*+()]/.test(t) ? '\\' : '') + t;
      }
      case Oo.types.POSITION:
        return e.value === '^' || e.value === '$' ? e.value : `\\${e.value}`;
      case Oo.types.REFERENCE:
        return `\\${e.value}`;
      case Oo.types.SET:
        return nR.writeSetTokens(e);
      case Oo.types.GROUP:
        return `(${e.remember ? '' : e.followedBy ? '?=' : e.notFollowedBy ? '?!' : '?:'}${Vj(e)})`;
      case Oo.types.REPETITION: {
        let { min: t, max: r } = e,
          n;
        return (
          t === 0 && r === 1
            ? (n = '?')
            : t === 1 && r === 1 / 0
              ? (n = '+')
              : t === 0 && r === 1 / 0
                ? (n = '*')
                : r === 1 / 0
                  ? (n = `{${t},}`)
                  : t === r
                    ? (n = `{${t}}`)
                    : (n = `{${t},${r}}`),
          `${Ku.reconstruct(e.value)}${n}`
        );
      }
      case Oo.types.RANGE:
        return `${nR.setChar(e.from)}-${nR.setChar(e.to)}`;
      default:
        throw new Error(`Invalid token type ${e}`);
    }
  };
});
var Gj = $((Ln, Hy) => {
  'use strict';
  var Qse =
      (Ln && Ln.__createBinding) ||
      (Object.create
        ? function (e, t, r, n) {
            n === void 0 && (n = r),
              Object.defineProperty(e, n, {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              });
          }
        : function (e, t, r, n) {
            n === void 0 && (n = r), (e[n] = t[r]);
          }),
    iR =
      (Ln && Ln.__exportStar) ||
      function (e, t) {
        for (var r in e)
          r !== 'default' &&
            !Object.prototype.hasOwnProperty.call(t, r) &&
            Qse(t, e, r);
      };
  Object.defineProperty(Ln, '__esModule', { value: !0 });
  Ln.types = void 0;
  var Bj = gi();
  Object.defineProperty(Ln, 'types', {
    enumerable: !0,
    get: function () {
      return Bj.types;
    },
  });
  iR(rR(), Ln);
  iR(sR(), Ln);
  var Wj = rR(),
    eie = sR();
  iR(gi(), Ln);
  Ln.default = Wj.tokenizer;
  Hy.exports = Wj.tokenizer;
  Hy.exports.types = Bj.types;
  Hy.exports.reconstruct = eie.reconstruct;
});
var Jj = $((qge, zy) => {
  'use strict';
  var Yj = Gj(),
    tie = Yj.types;
  function oR(e, t) {
    t || (t = {});
    let r = t.limit === void 0 ? 25 : t.limit;
    rie(e) ? (e = e.source) : typeof e != 'string' && (e = String(e));
    try {
      e = Yj(e);
    } catch {
      return !1;
    }
    let n = 0;
    return (function i(s, o) {
      let a, u, c;
      if (s.type === tie.REPETITION && (o++, n++, o > 1 || n > r)) return !1;
      if (s.options) {
        for (a = 0, c = s.options.length; a < c; a++)
          if (((u = i({ stack: s.options[a] }, o)), !u)) return !1;
      }
      let d = s.stack || (s.value && s.value.stack);
      if (!d) return !0;
      for (a = 0; a < d.length; a++) if (((u = i(d[a], o)), !u)) return !1;
      return !0;
    })(e, 0);
  }
  function rie(e) {
    return {}.toString.call(e) === '[object RegExp]';
  }
  zy.exports = oR;
  zy.exports.default = oR;
  zy.exports.safeRegex = oR;
});
var Uy = $((Mge, Kj) => {
  'use strict';
  Kj.exports = {
    name: '__fmw_internal_strategy_merged_tree_http_method__',
    storage: function () {
      let e = {};
      return {
        get: (t) => e[t] || null,
        set: (t, r) => {
          e[t] = r;
        },
      };
    },
    deriveConstraint: (e) => e.method,
    mustMatchWhenDerived: !0,
  };
});
var nF = $((Hge, rF) => {
  'use strict';
  var Xj = mo(),
    Zj = Uy(),
    Qj = Symbol('treeData');
  function eF(e, t = '') {
    let r = '',
      n = Object.keys(e);
    for (let i = 0; i < n.length; i++) {
      let s = n[i],
        o = e[s],
        a = i === n.length - 1,
        u = a ? '\u2514\u2500\u2500 ' : '\u251C\u2500\u2500 ',
        c = a ? '    ' : '\u2502   ',
        m = (o[Qj] || '')
          .split(
            `
`,
          )
          .join(
            `
` +
              t +
              c,
          );
      (r +=
        t +
        u +
        s +
        m +
        `
`),
        (r += eF(o, t + c));
    }
    return r;
  }
  function nie(e) {
    let t = e.name || '';
    return (
      (t = t.replace('bound', '').trim()), (t = (t || 'anonymous') + '()'), t
    );
  }
  function tF(e) {
    return Array.isArray(e)
      ? e.map((t) => tF(t))
      : typeof e == 'symbol'
        ? e.toString()
        : typeof e == 'function'
          ? nie(e)
          : e;
  }
  function sie(e, t) {
    if (!t.includeMeta) return {};
    let r = t.buildPrettyMeta(e),
      n = {},
      i = t.includeMeta;
    Array.isArray(i) || (i = Reflect.ownKeys(r));
    for (let s of i) {
      if (!Object.prototype.hasOwnProperty.call(r, s)) continue;
      let o = s.toString(),
        a = r[s];
      if (a != null) {
        let u = JSON.stringify(tF(a));
        n[o] = u;
      }
    }
    return n;
  }
  function iie(e) {
    let t = '';
    for (let [r, n] of Object.entries(e))
      t += `
\u2022 (${r}) ${n}`;
    return t;
  }
  function oie(e) {
    let t = { ...e.opts.constraints },
      r = t[Zj.name];
    return delete t[Zj.name], { ...e, method: r, opts: { constraints: t } };
  }
  function aie(e) {
    let t = ` (${e.method})`,
      r = e.opts.constraints || {};
    return (
      Object.keys(r).length !== 0 && (t += ' ' + JSON.stringify(r)),
      (t += iie(e.metaData)),
      t
    );
  }
  function lie(e) {
    return e.reduce((t, r) => {
      for (let n of t)
        if (
          Xj(r.opts.constraints, n.opts.constraints) &&
          Xj(r.metaData, n.metaData)
        )
          return (n.method += ', ' + r.method), t;
      return t.push(r), t;
    }, []);
  }
  function uie(e, t, r) {
    let n = e.routes;
    return (
      r.method === void 0 && (n = n.map(oie)),
      (n = n.map((i) => ((i.metaData = sie(i, r)), i))),
      r.method === void 0 && (n = lie(n)),
      n.map(aie).join(`
${t}`)
    );
  }
  function Vy(e, t, r, n) {
    if (
      ((e.isLeafNode || n.commonPrefix !== !1) &&
        ((r = r || '(empty root node)'),
        (t = t[r] = {}),
        e.isLeafNode && (t[Qj] = uie(e, r, n)),
        (r = '')),
      e.staticChildren)
    )
      for (let i of Object.values(e.staticChildren)) Vy(i, t, r + i.prefix, n);
    if (e.parametricChildren)
      for (let i of Object.values(e.parametricChildren)) {
        let s = Array.from(i.nodePaths).join('|');
        Vy(i, t, r + s, n);
      }
    e.wildcardChild && Vy(e.wildcardChild, t, '*', n);
  }
  function cie(e, t) {
    let r = {};
    return Vy(e, r, e.prefix, t), eF(r);
  }
  rF.exports = { prettyPrintTree: cie };
});
var iF = $((zge, sF) => {
  'use strict';
  var fie = Uy(),
    aR = class {
      constructor() {
        (this.unconstrainedHandler = null),
          (this.constraints = []),
          (this.handlers = []),
          (this.constrainedHandlerStores = null);
      }
      getMatchingHandler(t) {
        return t === void 0
          ? this.unconstrainedHandler
          : this._getHandlerMatchingConstraints(t);
      }
      addHandler(t, r) {
        let n = r.params,
          i = r.opts.constraints || {},
          s = {
            params: n,
            constraints: i,
            handler: r.handler,
            store: r.store || null,
            _createParamsObject: this._compileCreateParamsObject(n),
          },
          o = Object.keys(i);
        o.length === 0 && (this.unconstrainedHandler = s);
        for (let u of o)
          this.constraints.includes(u) ||
            (u === 'version'
              ? this.constraints.unshift(u)
              : this.constraints.push(u));
        let a = o.includes(fie.name);
        if (!a && this.handlers.length >= 31)
          throw new Error(
            'find-my-way supports a maximum of 31 route handlers per node when there are constraints, limit reached',
          );
        this.handlers.push(s),
          this.handlers.sort(
            (u, c) =>
              Object.keys(u.constraints).length -
              Object.keys(c.constraints).length,
          ),
          a || this._compileGetHandlerMatchingConstraints(t, i);
      }
      _compileCreateParamsObject(t) {
        let r = [];
        for (let n = 0; n < t.length; n++)
          r.push(`'${t[n]}': paramsArray[${n}]`);
        return new Function('paramsArray', `return {${r.join(',')}}`);
      }
      _getHandlerMatchingConstraints() {
        return null;
      }
      _buildConstraintStore(t, r) {
        for (let n = 0; n < this.handlers.length; n++) {
          let s = this.handlers[n].constraints[r];
          if (s !== void 0) {
            let o = t.get(s) || 0;
            (o |= 1 << n), t.set(s, o);
          }
        }
      }
      _constrainedIndexBitmask(t) {
        let r = 0;
        for (let n = 0; n < this.handlers.length; n++)
          this.handlers[n].constraints[t] !== void 0 && (r |= 1 << n);
        return ~r;
      }
      _compileGetHandlerMatchingConstraints(t) {
        this.constrainedHandlerStores = {};
        for (let n of this.constraints) {
          let i = t.newStoreForConstraint(n);
          (this.constrainedHandlerStores[n] = i),
            this._buildConstraintStore(i, n);
        }
        let r = [];
        r.push(`
    let candidates = ${(1 << this.handlers.length) - 1}
    let mask, matches
    `);
        for (let n of this.constraints) {
          r.push(`
      mask = ${this._constrainedIndexBitmask(n)}
      value = derivedConstraints.${n}
      `);
          let s = t.strategies[n].mustMatchWhenDerived
            ? 'matches'
            : '(matches | mask)';
          r.push(`
      if (value === undefined) {
        candidates &= mask
      } else {
        matches = this.constrainedHandlerStores.${n}.get(value) || 0
        candidates &= ${s}
      }
      if (candidates === 0) return null;
      `);
        }
        for (let n in t.strategies)
          t.strategies[n].mustMatchWhenDerived &&
            !this.constraints.includes(n) &&
            r.push(`if (derivedConstraints.${n} !== undefined) return null`);
        r.push('return this.handlers[Math.floor(Math.log2(candidates))]'),
          (this._getHandlerMatchingConstraints = new Function(
            'derivedConstraints',
            r.join(`
`),
          ));
      }
    };
  sF.exports = aR;
});
var aF = $((Uge, oF) => {
  'use strict';
  var die = iF(),
    Ky = { STATIC: 0, PARAMETRIC: 1, WILDCARD: 2 },
    By = class {
      constructor() {
        (this.isLeafNode = !1),
          (this.routes = null),
          (this.handlerStorage = null);
      }
      addRoute(t, r) {
        this.routes === null && (this.routes = []),
          this.handlerStorage === null && (this.handlerStorage = new die()),
          (this.isLeafNode = !0),
          this.routes.push(t),
          this.handlerStorage.addHandler(r, t);
      }
    },
    Wy = class extends By {
      constructor() {
        super(), (this.staticChildren = {});
      }
      findStaticMatchingChild(t, r) {
        let n = this.staticChildren[t.charAt(r)];
        return n === void 0 || !n.matchPrefix(t, r) ? null : n;
      }
      getStaticChild(t, r = 0) {
        if (t.length === r) return this;
        let n = this.findStaticMatchingChild(t, r);
        return n ? n.getStaticChild(t, r + n.prefix.length) : null;
      }
      createStaticChild(t) {
        if (t.length === 0) return this;
        let r = this.staticChildren[t.charAt(0)];
        if (r) {
          let i = 1;
          for (; i < r.prefix.length; i++)
            if (t.charCodeAt(i) !== r.prefix.charCodeAt(i)) {
              r = r.split(this, i);
              break;
            }
          return r.createStaticChild(t.slice(i));
        }
        let n = t.charAt(0);
        return (this.staticChildren[n] = new Gy(t)), this.staticChildren[n];
      }
    },
    Gy = class e extends Wy {
      constructor(t) {
        super(),
          (this.prefix = t),
          (this.wildcardChild = null),
          (this.parametricChildren = []),
          (this.kind = Ky.STATIC),
          this._compilePrefixMatch();
      }
      getParametricChild(t) {
        let r = t && t.source,
          n = this.parametricChildren.find(
            (i) => (i.regex && i.regex.source) === r,
          );
        return n || null;
      }
      createParametricChild(t, r, n) {
        let i = this.getParametricChild(t);
        return i
          ? (i.nodePaths.add(n), i)
          : ((i = new Yy(t, r, n)),
            this.parametricChildren.push(i),
            this.parametricChildren.sort((s, o) =>
              s.isRegex
                ? o.isRegex
                  ? s.staticSuffix === null
                    ? 1
                    : o.staticSuffix === null
                      ? -1
                      : o.staticSuffix.endsWith(s.staticSuffix)
                        ? 1
                        : s.staticSuffix.endsWith(o.staticSuffix)
                          ? -1
                          : 0
                  : -1
                : 1,
            ),
            i);
      }
      getWildcardChild() {
        return this.wildcardChild;
      }
      createWildcardChild() {
        return (
          (this.wildcardChild = this.getWildcardChild() || new Jy()),
          this.wildcardChild
        );
      }
      split(t, r) {
        let n = this.prefix.slice(0, r),
          i = this.prefix.slice(r);
        (this.prefix = i), this._compilePrefixMatch();
        let s = new e(n);
        return (
          (s.staticChildren[i.charAt(0)] = this),
          (t.staticChildren[n.charAt(0)] = s),
          s
        );
      }
      getNextNode(t, r, n, i) {
        let s = this.findStaticMatchingChild(t, r),
          o = 0;
        if (s === null) {
          if (this.parametricChildren.length === 0) return this.wildcardChild;
          (s = this.parametricChildren[0]), (o = 1);
        }
        this.wildcardChild !== null &&
          n.push({
            paramsCount: i,
            brotherPathIndex: r,
            brotherNode: this.wildcardChild,
          });
        for (let a = this.parametricChildren.length - 1; a >= o; a--)
          n.push({
            paramsCount: i,
            brotherPathIndex: r,
            brotherNode: this.parametricChildren[a],
          });
        return s;
      }
      _compilePrefixMatch() {
        if (this.prefix.length === 1) {
          this.matchPrefix = () => !0;
          return;
        }
        let t = [];
        for (let r = 1; r < this.prefix.length; r++) {
          let n = this.prefix.charCodeAt(r);
          t.push(`path.charCodeAt(i + ${r}) === ${n}`);
        }
        this.matchPrefix = new Function(
          'path',
          'i',
          `return ${t.join(' && ')}`,
        );
      }
    },
    Yy = class extends Wy {
      constructor(t, r, n) {
        super(),
          (this.isRegex = !!t),
          (this.regex = t || null),
          (this.staticSuffix = r || null),
          (this.kind = Ky.PARAMETRIC),
          (this.nodePaths = new Set([n]));
      }
      getNextNode(t, r) {
        return this.findStaticMatchingChild(t, r);
      }
    },
    Jy = class extends By {
      constructor() {
        super(), (this.kind = Ky.WILDCARD);
      }
      getNextNode() {
        return null;
      }
    };
  oF.exports = {
    StaticNode: Gy,
    ParametricNode: Yy,
    WildcardNode: Jy,
    NODE_TYPES: Ky,
  };
});
var uF = $((Vge, lF) => {
  'use strict';
  var hie = require('node:assert');
  function Qd() {
    if (!(this instanceof Qd)) return new Qd();
    (this.store = {}),
      (this.maxMajor = 0),
      (this.maxMinors = {}),
      (this.maxPatches = {});
  }
  Qd.prototype.set = function (e, t) {
    if (typeof e != 'string') throw new TypeError('Version should be a string');
    let [r, n, i] = e.split('.');
    if (isNaN(r)) throw new TypeError('Major version must be a numeric value');
    return (
      (r = Number(r)),
      (n = Number(n) || 0),
      (i = Number(i) || 0),
      r >= this.maxMajor &&
        ((this.maxMajor = r),
        (this.store.x = t),
        (this.store['*'] = t),
        (this.store['x.x'] = t),
        (this.store['x.x.x'] = t)),
      n >= (this.maxMinors[r] || 0) &&
        ((this.maxMinors[r] = n),
        (this.store[`${r}.x`] = t),
        (this.store[`${r}.x.x`] = t)),
      i >= (this.maxPatches[`${r}.${n}`] || 0) &&
        ((this.maxPatches[`${r}.${n}`] = i), (this.store[`${r}.${n}.x`] = t)),
      (this.store[`${r}.${n}.${i}`] = t),
      this
    );
  };
  Qd.prototype.get = function (e) {
    return this.store[e];
  };
  lF.exports = {
    name: 'version',
    mustMatchWhenDerived: !0,
    storage: Qd,
    validate(e) {
      hie(typeof e == 'string', 'Version should be a string');
    },
  };
});
var fF = $((Bge, cF) => {
  'use strict';
  var pie = require('node:assert');
  function mie() {
    let e = {},
      t = [];
    return {
      get: (r) => {
        let n = e[r];
        if (n) return n;
        for (let i of t) if (i.host.test(r)) return i.value;
      },
      set: (r, n) => {
        r instanceof RegExp ? t.push({ host: r, value: n }) : (e[r] = n);
      },
    };
  }
  cF.exports = {
    name: 'host',
    mustMatchWhenDerived: !1,
    storage: mie,
    validate(e) {
      pie(
        typeof e == 'string' ||
          Object.prototype.toString.call(e) === '[object RegExp]',
        'Host should be a string or a RegExp',
      );
    },
  };
});
var hF = $((Wge, dF) => {
  'use strict';
  var yie = uF(),
    gie = fF(),
    lR = require('node:assert'),
    uR = class {
      constructor(t) {
        if (
          ((this.strategies = { version: yie, host: gie }),
          (this.strategiesInUse = new Set()),
          (this.asyncStrategiesInUse = new Set()),
          t)
        )
          for (let r of Object.values(t)) this.addConstraintStrategy(r);
      }
      isStrategyUsed(t) {
        return this.strategiesInUse.has(t) || this.asyncStrategiesInUse.has(t);
      }
      hasConstraintStrategy(t) {
        let r = this.strategies[t];
        return r !== void 0 ? r.isCustom || this.isStrategyUsed(t) : !1;
      }
      addConstraintStrategy(t) {
        if (
          (lR(
            typeof t.name == 'string' && t.name !== '',
            'strategy.name is required.',
          ),
          lR(
            t.storage && typeof t.storage == 'function',
            'strategy.storage function is required.',
          ),
          lR(
            t.deriveConstraint && typeof t.deriveConstraint == 'function',
            'strategy.deriveConstraint function is required.',
          ),
          this.strategies[t.name] && this.strategies[t.name].isCustom)
        )
          throw new Error(
            `There already exists a custom constraint with the name ${t.name}.`,
          );
        if (this.isStrategyUsed(t.name))
          throw new Error(
            `There already exists a route with ${t.name} constraint.`,
          );
        (t.isCustom = !0),
          (t.isAsync = t.deriveConstraint.length === 3),
          (this.strategies[t.name] = t),
          t.mustMatchWhenDerived && this.noteUsage({ [t.name]: t });
      }
      deriveConstraints(t, r, n) {
        let i = this.deriveSyncConstraints(t, r);
        if (n === void 0) return i;
        this.deriveAsyncConstraints(i, t, r, n);
      }
      deriveSyncConstraints(t, r) {}
      noteUsage(t) {
        if (t) {
          let r = this.strategiesInUse.size;
          for (let n in t)
            this.strategies[n].isAsync
              ? this.asyncStrategiesInUse.add(n)
              : this.strategiesInUse.add(n);
          r !== this.strategiesInUse.size && this._buildDeriveConstraints();
        }
      }
      newStoreForConstraint(t) {
        if (!this.strategies[t])
          throw new Error(`No strategy registered for constraint key ${t}`);
        return this.strategies[t].storage();
      }
      validateConstraints(t) {
        for (let r in t) {
          let n = t[r];
          if (typeof n > 'u')
            throw new Error(
              "Can't pass an undefined constraint value, must pass null or no key at all",
            );
          let i = this.strategies[r];
          if (!i)
            throw new Error(`No strategy registered for constraint key ${r}`);
          i.validate && i.validate(n);
        }
      }
      deriveAsyncConstraints(t, r, n, i) {
        let s = this.asyncStrategiesInUse.size;
        if (s === 0) {
          i(null, t);
          return;
        }
        t = t || {};
        for (let o of this.asyncStrategiesInUse)
          this.strategies[o].deriveConstraint(r, n, (u, c) => {
            if (u !== null) {
              i(u);
              return;
            }
            (t[o] = c), --s === 0 && i(null, t);
          });
      }
      _buildDeriveConstraints() {
        if (this.strategiesInUse.size === 0) return;
        let t = ['return {'];
        for (let r of this.strategiesInUse) {
          let n = this.strategies[r];
          n.isCustom
            ? t.push(
                `  ${n.name}: this.strategies.${r}.deriveConstraint(req, ctx),`,
              )
            : r === 'version'
              ? t.push("   version: req.headers['accept-version'],")
              : t.push(
                  "   host: req.headers.host || req.headers[':authority'],",
                );
        }
        t.push('}'),
          (this.deriveSyncConstraints = new Function(
            'req',
            'ctx',
            t.join(`
`),
          ).bind(this));
      }
    };
  dF.exports = uR;
});
var mF = $((Gge, pF) => {
  'use strict';
  var vie = [
    'ACL',
    'BIND',
    'CHECKOUT',
    'CONNECT',
    'COPY',
    'DELETE',
    'GET',
    'HEAD',
    'LINK',
    'LOCK',
    'M-SEARCH',
    'MERGE',
    'MKACTIVITY',
    'MKCALENDAR',
    'MKCOL',
    'MOVE',
    'NOTIFY',
    'OPTIONS',
    'PATCH',
    'POST',
    'PROPFIND',
    'PROPPATCH',
    'PURGE',
    'PUT',
    'REBIND',
    'REPORT',
    'SEARCH',
    'SOURCE',
    'SUBSCRIBE',
    'TRACE',
    'UNBIND',
    'UNLINK',
    'UNLOCK',
    'UNSUBSCRIBE',
  ];
  pF.exports = vie;
});
var vF = $((Yge, gF) => {
  'use strict';
  function yF(e, t) {
    return e === 50
      ? t === 53
        ? '%'
        : t === 51
          ? '#'
          : t === 52
            ? '$'
            : t === 54
              ? '&'
              : t === 66 || t === 98
                ? '+'
                : t === 67 || t === 99
                  ? ','
                  : t === 70 || t === 102
                    ? '/'
                    : null
      : e === 51
        ? t === 65 || t === 97
          ? ':'
          : t === 66 || t === 98
            ? ';'
            : t === 68 || t === 100
              ? '='
              : t === 70 || t === 102
                ? '?'
                : null
        : e === 52 && t === 48
          ? '@'
          : null;
  }
  function bie(e, t) {
    let r = !1,
      n = !1,
      i = '';
    for (let o = 1; o < e.length; o++) {
      let a = e.charCodeAt(o);
      if (a === 37) {
        let u = e.charCodeAt(o + 1),
          c = e.charCodeAt(o + 2);
        yF(u, c) === null
          ? (r = !0)
          : ((n = !0),
            u === 50 &&
              c === 53 &&
              ((r = !0),
              (e = e.slice(0, o + 1) + '25' + e.slice(o + 1)),
              (o += 2)),
            (o += 2));
      } else if (a === 63 || a === 35 || (a === 59 && t)) {
        (i = e.slice(o + 1)), (e = e.slice(0, o));
        break;
      }
    }
    return { path: r ? decodeURI(e) : e, querystring: i, shouldDecodeParam: n };
  }
  function Sie(e) {
    let t = e.indexOf('%');
    if (t === -1) return e;
    let r = '',
      n = t;
    for (let i = t; i < e.length; i++)
      if (e.charCodeAt(i) === 37) {
        let s = e.charCodeAt(i + 1),
          o = e.charCodeAt(i + 2),
          a = yF(s, o);
        (r += e.slice(n, i) + a), (n = i + 3);
      }
    return e.slice(0, t) + r + e.slice(n);
  }
  gF.exports = { safeDecodeURI: bie, safeDecodeURIComponent: Sie };
});
var pR = $((Jge, PF) => {
  'use strict';
  var Mt = require('node:assert'),
    _ie = Pj(),
    Xy = Jj(),
    fR = mo(),
    { prettyPrintTree: wie } = nF(),
    { StaticNode: bF, NODE_TYPES: SF } = aF(),
    Eie = hF(),
    Xu = mF(),
    cR = Uy(),
    { safeDecodeURI: Rie, safeDecodeURIComponent: _F } = vF(),
    wF = /^https?:\/\/.*?\//,
    Xa = /(\/:[^/()]*?)\?(\/?)/;
  if (!Xy(wF))
    throw new Error('the FULL_PATH_REGEXP is not safe, update this module');
  if (!Xy(Xa))
    throw new Error(
      'the OPTIONAL_PARAM_REGEXP is not safe, update this module',
    );
  function Ot(e) {
    if (!(this instanceof Ot)) return new Ot(e);
    (e = e || {}),
      (this._opts = e),
      e.defaultRoute
        ? (Mt(
            typeof e.defaultRoute == 'function',
            'The default route must be a function',
          ),
          (this.defaultRoute = e.defaultRoute))
        : (this.defaultRoute = null),
      e.onBadUrl
        ? (Mt(
            typeof e.onBadUrl == 'function',
            'The bad url handler must be a function',
          ),
          (this.onBadUrl = e.onBadUrl))
        : (this.onBadUrl = null),
      e.buildPrettyMeta
        ? (Mt(
            typeof e.buildPrettyMeta == 'function',
            'buildPrettyMeta must be a function',
          ),
          (this.buildPrettyMeta = e.buildPrettyMeta))
        : (this.buildPrettyMeta = Tie),
      e.querystringParser
        ? (Mt(
            typeof e.querystringParser == 'function',
            'querystringParser must be a function',
          ),
          (this.querystringParser = e.querystringParser))
        : (this.querystringParser = (t) => (t === '' ? {} : _ie.parse(t))),
      (this.caseSensitive = e.caseSensitive === void 0 ? !0 : e.caseSensitive),
      (this.ignoreTrailingSlash = e.ignoreTrailingSlash || !1),
      (this.ignoreDuplicateSlashes = e.ignoreDuplicateSlashes || !1),
      (this.maxParamLength = e.maxParamLength || 100),
      (this.allowUnsafeRegex = e.allowUnsafeRegex || !1),
      (this.constrainer = new Eie(e.constraints)),
      (this.useSemicolonDelimiter = e.useSemicolonDelimiter || !1),
      (this.routes = []),
      (this.trees = {});
  }
  Ot.prototype.on = function (t, r, n, i, s) {
    typeof n == 'function' && (i !== void 0 && (s = i), (i = n), (n = {})),
      Mt(typeof r == 'string', 'Path should be a string'),
      Mt(r.length > 0, 'The path could not be empty'),
      Mt(
        r[0] === '/' || r[0] === '*',
        'The first character of a path should be `/` or `*`',
      ),
      Mt(typeof i == 'function', 'Handler should be a function');
    let o = r.match(Xa);
    if (o) {
      Mt(
        r.length === o.index + o[0].length,
        'Optional Parameter needs to be the last parameter of the path',
      );
      let c = r.replace(Xa, '$1$2'),
        d = r.replace(Xa, '$2') || '/';
      this.on(t, c, n, i, s), this.on(t, d, n, i, s);
      return;
    }
    let a = r;
    this.ignoreDuplicateSlashes && (r = dR(r)),
      this.ignoreTrailingSlash && (r = hR(r));
    let u = Array.isArray(t) ? t : [t];
    for (let c of u)
      Mt(typeof c == 'string', 'Method should be a string'),
        Mt(Xu.includes(c), `Method '${c}' is not an http method.`),
        this._on(c, r, n, i, s, a);
  };
  Ot.prototype._on = function (t, r, n, i, s) {
    let o = {};
    n.constraints !== void 0 &&
      (Mt(
        typeof n.constraints == 'object' && n.constraints !== null,
        'Constraints should be an object',
      ),
      Object.keys(n.constraints).length !== 0 && (o = n.constraints)),
      this.constrainer.validateConstraints(o),
      this.constrainer.noteUsage(o),
      this.trees[t] === void 0 && (this.trees[t] = new bF('/'));
    let a = r;
    if (a === '*' && this.trees[t].prefix.length !== 0) {
      let g = this.trees[t];
      (this.trees[t] = new bF('')), (this.trees[t].staticChildren['/'] = g);
    }
    let u = this.trees[t],
      c = u.prefix.length,
      d = [];
    for (let g = 0; g <= a.length; g++) {
      if (a.charCodeAt(g) === 58 && a.charCodeAt(g + 1) === 58) {
        g++;
        continue;
      }
      let v = a.charCodeAt(g) === 58 && a.charCodeAt(g + 1) !== 58,
        S = a.charCodeAt(g) === 42;
      if (v || S || (g === a.length && g !== c)) {
        let w = a.slice(c, g);
        this.caseSensitive || (w = w.toLowerCase()),
          (w = w.split('::').join(':')),
          (w = w.split('%').join('%25')),
          (u = u.createStaticChild(w));
      }
      if (v) {
        let w = !1,
          T = [],
          C = g + 1;
        for (let I = C; ; I++) {
          let x = a.charCodeAt(I),
            E = x === 40,
            j = x === 45 || x === 46,
            q = x === 47 || I === a.length;
          if (E || j || q) {
            let O = a.slice(C, I);
            if ((d.push(O), (w = w || E || j), E)) {
              let D = TF(a, I),
                G = a.slice(I, D + 1);
              this.allowUnsafeRegex ||
                Mt(Xy(new RegExp(G)), `The regex '${G}' is not safe!`),
                T.push(RF(G)),
                (I = D + 1);
            } else T.push('(.*?)');
            let F = I;
            for (; I < a.length; I++) {
              let D = a.charCodeAt(I);
              if (D === 47) break;
              if (D === 58)
                if (a.charCodeAt(I + 1) === 58) I++;
                else break;
            }
            let U = a.slice(F, I);
            if (
              (U &&
                ((U = U.split('::').join(':')),
                (U = U.split('%').join('%25')),
                T.push(EF(U))),
              (C = I + 1),
              q || a.charCodeAt(I) === 47 || I === a.length)
            ) {
              let D = w ? '()' + U : U,
                G = a.slice(g, I);
              (a = a.slice(0, g + 1) + D + a.slice(I)), (g += D.length);
              let Y = w ? new RegExp('^' + T.join('') + '$') : null;
              (u = u.createParametricChild(Y, U || null, G)), (c = g + 1);
              break;
            }
          }
        }
      } else if (
        S &&
        (d.push('*'),
        (u = u.createWildcardChild()),
        (c = g + 1),
        g !== a.length - 1)
      )
        throw new Error('Wildcard must be the last character in the route');
    }
    this.caseSensitive || (a = a.toLowerCase()), a === '*' && (a = '/*');
    for (let g of this.routes) {
      let v = g.opts.constraints || {};
      if (g.method === t && g.pattern === a && fR(v, o))
        throw new Error(
          `Method '${t}' already declared for route '${a}' with constraints '${JSON.stringify(o)}'`,
        );
    }
    let m = {
      method: t,
      path: r,
      pattern: a,
      params: d,
      opts: n,
      handler: i,
      store: s,
    };
    this.routes.push(m), u.addRoute(m, this.constrainer);
  };
  Ot.prototype.hasRoute = function (t, r, n) {
    return this.findRoute(t, r, n) !== null;
  };
  Ot.prototype.findRoute = function (t, r, n = {}) {
    if (this.trees[t] === void 0) return null;
    let i = r,
      s = this.trees[t],
      o = s.prefix.length,
      a = [];
    for (let u = 0; u <= i.length; u++) {
      if (i.charCodeAt(u) === 58 && i.charCodeAt(u + 1) === 58) {
        u++;
        continue;
      }
      let c = i.charCodeAt(u) === 58 && i.charCodeAt(u + 1) !== 58,
        d = i.charCodeAt(u) === 42;
      if (c || d || (u === i.length && u !== o)) {
        let m = i.slice(o, u);
        if (
          (this.caseSensitive || (m = m.toLowerCase()),
          (m = m.split('::').join(':')),
          (m = m.split('%').join('%25')),
          (s = s.getStaticChild(m)),
          s === null)
        )
          return null;
      }
      if (c) {
        let m = !1,
          g = [],
          v = u + 1;
        for (let S = v; ; S++) {
          let w = i.charCodeAt(S),
            T = w === 40,
            C = w === 45 || w === 46,
            I = w === 47 || S === i.length;
          if (T || C || I) {
            let x = i.slice(v, S);
            if ((a.push(x), (m = m || T || C), T)) {
              let q = TF(i, S),
                O = i.slice(S, q + 1);
              this.allowUnsafeRegex ||
                Mt(Xy(new RegExp(O)), `The regex '${O}' is not safe!`),
                g.push(RF(O)),
                (S = q + 1);
            } else g.push('(.*?)');
            let E = S;
            for (; S < i.length; S++) {
              let q = i.charCodeAt(S);
              if (q === 47) break;
              if (q === 58)
                if (i.charCodeAt(S + 1) === 58) S++;
                else break;
            }
            let j = i.slice(E, S);
            if (
              (j &&
                ((j = j.split('::').join(':')),
                (j = j.split('%').join('%25')),
                g.push(EF(j))),
              (v = S + 1),
              I || i.charCodeAt(S) === 47 || S === i.length)
            ) {
              let q = m ? '()' + j : j,
                O = i.slice(u, S);
              (i = i.slice(0, u + 1) + q + i.slice(S)), (u += q.length);
              let F = m ? new RegExp('^' + g.join('') + '$') : null;
              if (((s = s.getParametricChild(F, j || null, O)), s === null))
                return null;
              o = u + 1;
              break;
            }
          }
        }
      } else if (
        d &&
        (a.push('*'),
        (s = s.getWildcardChild()),
        (o = u + 1),
        u !== i.length - 1)
      )
        throw new Error('Wildcard must be the last character in the route');
    }
    this.caseSensitive || (i = i.toLowerCase());
    for (let u of this.routes) {
      let c = u.opts.constraints || {};
      if (u.method === t && u.pattern === i && fR(c, n))
        return { handler: u.handler, store: u.store, params: u.params };
    }
    return null;
  };
  Ot.prototype.hasConstraintStrategy = function (e) {
    return this.constrainer.hasConstraintStrategy(e);
  };
  Ot.prototype.addConstraintStrategy = function (e) {
    this.constrainer.addConstraintStrategy(e), this._rebuild(this.routes);
  };
  Ot.prototype.reset = function () {
    (this.trees = {}), (this.routes = []);
  };
  Ot.prototype.off = function (t, r, n) {
    Mt(typeof r == 'string', 'Path should be a string'),
      Mt(r.length > 0, 'The path could not be empty'),
      Mt(
        r[0] === '/' || r[0] === '*',
        'The first character of a path should be `/` or `*`',
      ),
      Mt(
        typeof n > 'u' ||
          (typeof n == 'object' && !Array.isArray(n) && n !== null),
        'Constraints should be an object or undefined.',
      );
    let i = r.match(Xa);
    if (i) {
      Mt(
        r.length === i.index + i[0].length,
        'Optional Parameter needs to be the last parameter of the path',
      );
      let o = r.replace(Xa, '$1$2'),
        a = r.replace(Xa, '$2');
      this.off(t, o, n), this.off(t, a, n);
      return;
    }
    this.ignoreDuplicateSlashes && (r = dR(r)),
      this.ignoreTrailingSlash && (r = hR(r));
    let s = Array.isArray(t) ? t : [t];
    for (let o of s) this._off(o, r, n);
  };
  Ot.prototype._off = function (t, r, n) {
    Mt(typeof t == 'string', 'Method should be a string'),
      Mt(Xu.includes(t), `Method '${t}' is not an http method.`);
    function i(u) {
      return t !== u.method || r !== u.path;
    }
    function s(u) {
      return i(u) || !fR(n, u.opts.constraints || {});
    }
    let o = n ? s : i,
      a = this.routes.filter(o);
    this._rebuild(a);
  };
  Ot.prototype.lookup = function (t, r, n, i) {
    if ((typeof n == 'function' && ((i = n), (n = void 0)), i === void 0)) {
      let s = this.constrainer.deriveConstraints(t, n),
        o = this.find(t.method, t.url, s);
      return this.callHandler(o, t, r, n);
    }
    this.constrainer.deriveConstraints(t, n, (s, o) => {
      if (s !== null) {
        i(s);
        return;
      }
      try {
        let a = this.find(t.method, t.url, o),
          u = this.callHandler(a, t, r, n);
        i(null, u);
      } catch (a) {
        i(a);
      }
    });
  };
  Ot.prototype.callHandler = function (t, r, n, i) {
    return t === null
      ? this._defaultRoute(r, n, i)
      : i === void 0
        ? t.handler(r, n, t.params, t.store, t.searchParams)
        : t.handler.call(i, r, n, t.params, t.store, t.searchParams);
  };
  Ot.prototype.find = function (t, r, n) {
    let i = this.trees[t];
    if (i === void 0) return null;
    r.charCodeAt(0) !== 47 && (r = r.replace(wF, '/')),
      this.ignoreDuplicateSlashes && (r = dR(r));
    let s, o, a;
    try {
      (s = Rie(r, this.useSemicolonDelimiter)),
        (r = s.path),
        (o = s.querystring),
        (a = s.shouldDecodeParam);
    } catch {
      return this._onBadUrl(r);
    }
    this.ignoreTrailingSlash && (r = hR(r));
    let u = r;
    this.caseSensitive === !1 && (r = r.toLowerCase());
    let c = this.maxParamLength,
      d = i.prefix.length,
      m = [],
      g = r.length,
      v = [];
    for (;;) {
      if (d === g && i.isLeafNode) {
        let C = i.handlerStorage.getMatchingHandler(n);
        if (C !== null)
          return {
            handler: C.handler,
            store: C.store,
            params: C._createParamsObject(m),
            searchParams: this.querystringParser(o),
          };
      }
      let S = i.getNextNode(r, d, v, m.length);
      if (S === null) {
        if (v.length === 0) return null;
        let C = v.pop();
        (d = C.brotherPathIndex), m.splice(C.paramsCount), (S = C.brotherNode);
      }
      if (((i = S), i.kind === SF.STATIC)) {
        d += i.prefix.length;
        continue;
      }
      if (i.kind === SF.WILDCARD) {
        let C = u.slice(d);
        a && (C = _F(C)), m.push(C), (d = g);
        continue;
      }
      let w = u.indexOf('/', d);
      w === -1 && (w = g);
      let T = u.slice(d, w);
      if ((a && (T = _F(T)), i.isRegex)) {
        let C = i.regex.exec(T);
        if (C === null) continue;
        for (let I = 1; I < C.length; I++) {
          let x = C[I];
          if (x.length > c) return null;
          m.push(x);
        }
      } else {
        if (T.length > c) return null;
        m.push(T);
      }
      d = w;
    }
  };
  Ot.prototype._rebuild = function (e) {
    this.reset();
    for (let t of e) {
      let { method: r, path: n, opts: i, handler: s, store: o } = t;
      this._on(r, n, i, s, o);
    }
  };
  Ot.prototype._defaultRoute = function (e, t, r) {
    if (this.defaultRoute !== null)
      return r === void 0
        ? this.defaultRoute(e, t)
        : this.defaultRoute.call(r, e, t);
    (t.statusCode = 404), t.end();
  };
  Ot.prototype._onBadUrl = function (e) {
    if (this.onBadUrl === null) return null;
    let t = this.onBadUrl;
    return { handler: (r, n, i) => t(e, r, n), params: {}, store: null };
  };
  Ot.prototype.prettyPrint = function (e = {}) {
    let t = e.method;
    e.buildPrettyMeta = this.buildPrettyMeta.bind(this);
    let r = null;
    if (t === void 0) {
      let { version: n, host: i, ...s } = this.constrainer.strategies;
      s[cR.name] = cR;
      let o = new Ot({ ...this._opts, constraints: s }),
        a = this.routes.map((u) => {
          let c = { ...u.opts.constraints, [cR.name]: u.method };
          return { ...u, method: 'MERGED', opts: { constraints: c } };
        });
      o._rebuild(a), (r = o.trees.MERGED);
    } else r = this.trees[t];
    return r == null ? '(empty tree)' : wie(r, e);
  };
  for (let e in Xu) {
    if (!Xu.hasOwnProperty(e)) continue;
    let t = Xu[e],
      r = t.toLowerCase();
    Ot.prototype[r] = function (n, i, s) {
      return this.on(t, n, i, s);
    };
  }
  Ot.prototype.all = function (e, t, r) {
    this.on(Xu, e, t, r);
  };
  PF.exports = Ot;
  function EF(e) {
    return e.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
  }
  function dR(e) {
    return e.replace(/\/\/+/g, '/');
  }
  function hR(e) {
    return e.length > 1 && e.charCodeAt(e.length - 1) === 47
      ? e.slice(0, -1)
      : e;
  }
  function RF(e) {
    return (
      e.charCodeAt(1) === 94 && (e = e.slice(0, 1) + e.slice(2)),
      e.charCodeAt(e.length - 2) === 36 &&
        (e = e.slice(0, e.length - 2) + e.slice(e.length - 1)),
      e
    );
  }
  function TF(e, t) {
    let r = 1;
    for (; t < e.length; ) {
      if ((t++, e[t] === '\\')) {
        t++;
        continue;
      }
      if ((e[t] === ')' ? r-- : e[t] === '(' && r++, !r)) return t;
    }
    throw new TypeError('Invalid regexp expression in "' + e + '"');
  }
  function Tie(e) {
    return e ? (e.store ? Object.assign({}, e.store) : {}) : {};
  }
});
var xF = $((Kge, kF) => {
  'use strict';
  function mR(e, t, r, n) {
    if (r === void 0) return t.header('content-length', '0'), n(null, null);
    if (typeof r.resume == 'function')
      return (
        r.on('error', (s) => {
          t.log.error({ err: s }, 'Error on Stream found for HEAD route');
        }),
        r.resume(),
        n(null, null)
      );
    let i = '' + Buffer.byteLength(r);
    t.header('content-length', i), n(null, null);
  }
  function Pie(e) {
    return e == null ? mR : Array.isArray(e) ? [...e, mR] : [e, mR];
  }
  kF.exports = { parseHeadOnSendHandlers: Pie };
});
var BF = $((Xge, VF) => {
  'use strict';
  var kie = pR(),
    xie = Pm(),
    CF = tb(),
    {
      onRequestAbortHookRunner: Cie,
      lifecycleHooks: OF,
      preParsingHookRunner: Oie,
      onTimeoutHookRunner: Iie,
      onRequestHookRunner: Aie,
    } = ao(),
    { supportedMethods: $ie } = AS(),
    { normalizeSchema: Nie } = Bf(),
    { parseHeadOnSendHandlers: Lie } = xF(),
    { FSTDEP007: Die, FSTDEP008: jie, FSTDEP014: IF } = Qs(),
    { compileSchemasForValidation: Fie, compileSchemasForSerialization: qie } =
      K0(),
    {
      FST_ERR_SCH_VALIDATION_BUILD: Mie,
      FST_ERR_SCH_SERIALIZATION_BUILD: Hie,
      FST_ERR_DEFAULT_ROUTE_INVALID_TYPE: zie,
      FST_ERR_DUPLICATED_ROUTE: Uie,
      FST_ERR_INVALID_URL: Vie,
      FST_ERR_HOOK_INVALID_HANDLER: AF,
      FST_ERR_ROUTE_OPTIONS_NOT_OBJ: Bie,
      FST_ERR_ROUTE_DUPLICATED_HANDLER: Wie,
      FST_ERR_ROUTE_HANDLER_NOT_FN: $F,
      FST_ERR_ROUTE_MISSING_HANDLER: Gie,
      FST_ERR_ROUTE_METHOD_NOT_SUPPORTED: Yie,
      FST_ERR_ROUTE_METHOD_INVALID: Jie,
      FST_ERR_ROUTE_BODY_VALIDATION_SCHEMA_NOT_SUPPORTED: Kie,
      FST_ERR_ROUTE_BODY_LIMIT_OPTION_NOT_INT: Xie,
      FST_ERR_HOOK_INVALID_ASYNC_HANDLER: yR,
    } = br(),
    {
      kRoutePrefix: Zie,
      kLogLevel: Qie,
      kLogSerializers: NF,
      kHooks: LF,
      kSchemaController: eoe,
      kOptions: DF,
      kReplySerializerDefault: gR,
      kReplyIsError: toe,
      kRequestPayloadStream: roe,
      kDisableRequestLogging: noe,
      kSchemaErrorFormatter: soe,
      kErrorHandler: jF,
      kHasBeenDecorated: FF,
      kRequestAcceptVersion: vR,
      kRouteByFastify: bR,
      kRouteContext: qF,
    } = rr(),
    { buildErrorHandler: ioe } = Wf(),
    { createChildLogger: ooe } = Vf(),
    { getGenReqId: aoe } = $y();
  function loe(e) {
    let t = kie(e.config),
      r,
      n,
      i,
      s,
      o,
      a,
      u,
      c,
      d,
      m,
      g,
      v,
      S,
      w = !1;
    return {
      setup(F, U) {
        (r = U.avvio),
          (n = U.fourOhFour),
          (i = U.logger),
          (s = U.hasLogger),
          (o = U.setupResponseListeners),
          (a = U.throwIfAlreadyStarted),
          (v = U.validateHTTPVersion),
          (g = F.exposeHeadRoutes),
          (u = F.disableRequestLogging),
          (c = F.ignoreTrailingSlash),
          (d = F.ignoreDuplicateSlashes),
          (m = Object.prototype.hasOwnProperty.call(F, 'return503OnClosing')
            ? F.return503OnClosing
            : !0),
          (S = U.keepAliveConnections);
      },
      routing: t.lookup.bind(t),
      route: q,
      hasRoute: E,
      prepareRoute: x,
      getDefaultRoute: function () {
        return IF(), t.defaultRoute;
      },
      setDefaultRoute: function (F) {
        if ((IF(), typeof F != 'function')) throw new zie();
        t.defaultRoute = F;
      },
      routeHandler: O,
      closeRoutes: () => {
        w = !0;
      },
      printRoutes: t.prettyPrint.bind(t),
      addConstraintStrategy: T,
      hasConstraintStrategy: C,
      isAsyncConstraint: I,
      findRoute: j,
    };
    function T(F) {
      return a('Cannot add constraint strategy!'), t.addConstraintStrategy(F);
    }
    function C(F) {
      return t.hasConstraintStrategy(F);
    }
    function I() {
      return t.constrainer.asyncStrategiesInUse.size > 0;
    }
    function x({ method: F, url: U, options: D, handler: G, isFastify: Y }) {
      if (typeof U != 'string') throw new Vie(typeof U);
      if (!G && typeof D == 'function') (G = D), (D = {});
      else if (G && typeof G == 'function') {
        if (Object.prototype.toString.call(D) !== '[object Object]')
          throw new Bie(F, U);
        if (D.handler)
          throw typeof D.handler == 'function' ? new Wie(F, U) : new $F(F, U);
      }
      return (
        (D = Object.assign({}, D, {
          method: F,
          url: U,
          path: U,
          handler: G || (D && D.handler),
        })),
        q.call(this, { options: D, isFastify: Y })
      );
    }
    function E({ options: F }) {
      let U = F.method?.toUpperCase() ?? '';
      return j({ ...F, method: U }) !== null;
    }
    function j(F) {
      let U = t.find(F.method, F.url || '', F.constraints);
      return U
        ? { handler: U.handler, params: U.params, searchParams: U.searchParams }
        : null;
    }
    function q({ options: F, isFastify: U }) {
      let D = { ...F },
        { exposeHeadRoute: G } = D,
        W = G != null ? G : g,
        de =
          D.method === 'GET' ||
          (Array.isArray(D.method) && D.method.includes('GET')),
        X =
          D.method === 'HEAD' ||
          (Array.isArray(D.method) && D.method.includes('HEAD')),
        se = W && de ? { ...F } : null;
      a('Cannot add route!');
      let ae = D.url || D.path || '';
      if (Array.isArray(D.method))
        for (var qe = 0; qe < D.method.length; ++qe)
          (D.method[qe] = MF(D.method[qe])), HF(D.method[qe], ae, D.schema);
      else (D.method = MF(D.method)), HF(D.method, ae, D.schema);
      if (!D.handler) throw new Gie(D.method, ae);
      if (D.errorHandler !== void 0 && typeof D.errorHandler != 'function')
        throw new $F(D.method, ae);
      UF(D.bodyLimit);
      let re = this[Zie];
      if (ae === '/' && re.length > 0 && D.method !== 'HEAD')
        switch (D.prefixTrailingSlash) {
          case 'slash':
            Ie.call(this, { path: ae, isFastify: U });
            break;
          case 'no-slash':
            Ie.call(this, { path: '', isFastify: U });
            break;
          case 'both':
          default:
            Ie.call(this, { path: '', isFastify: U }),
              c !== !0 &&
                (d !== !0 || !re.endsWith('/')) &&
                Ie.call(this, { path: ae, prefixing: !0, isFastify: U });
        }
      else
        ae[0] === '/' && re.endsWith('/')
          ? Ie.call(this, { path: ae.slice(1), isFastify: U })
          : Ie.call(this, { path: ae, isFastify: U });
      return this;
      function Ie({ path: Wt, prefixing: ve = !1, isFastify: Ye = !1 }) {
        let It = re + Wt;
        if (
          ((D.url = It),
          (D.path = It),
          (D.routePath = Wt),
          (D.prefix = re),
          (D.logLevel = D.logLevel || this[Qie]),
          (this[NF] || D.logSerializers) &&
            (D.logSerializers = Object.assign(
              Object.create(this[NF]),
              D.logSerializers,
            )),
          D.attachValidation == null && (D.attachValidation = !1),
          ve === !1)
        )
          for (let Ve of this[LF].onRoute) Ve.call(this, D);
        for (let Ve of OF)
          if (D && Ve in D) {
            if (Array.isArray(D[Ve]))
              for (let ge of D[Ve]) {
                if (typeof ge != 'function')
                  throw new AF(Ve, Object.prototype.toString.call(ge));
                if (
                  Ve === 'onSend' ||
                  Ve === 'preSerialization' ||
                  Ve === 'onError' ||
                  Ve === 'preParsing'
                ) {
                  if (
                    ge.constructor.name === 'AsyncFunction' &&
                    ge.length === 4
                  )
                    throw new yR();
                } else if (Ve === 'onRequestAbort') {
                  if (
                    ge.constructor.name === 'AsyncFunction' &&
                    ge.length !== 1
                  )
                    throw new yR();
                } else if (
                  ge.constructor.name === 'AsyncFunction' &&
                  ge.length === 3
                )
                  throw new yR();
              }
            else if (D[Ve] !== void 0 && typeof D[Ve] != 'function')
              throw new AF(Ve, Object.prototype.toString.call(D[Ve]));
          }
        let Ue = D.constraints || {},
          Gt = { ...D.config, url: It, method: D.method },
          Re = new xie({
            schema: D.schema,
            handler: D.handler.bind(this),
            config: Gt,
            errorHandler: D.errorHandler,
            childLoggerFactory: D.childLoggerFactory,
            bodyLimit: D.bodyLimit,
            logLevel: D.logLevel,
            logSerializers: D.logSerializers,
            attachValidation: D.attachValidation,
            schemaErrorFormatter: D.schemaErrorFormatter,
            replySerializer: this[gR],
            validatorCompiler: D.validatorCompiler,
            serializerCompiler: D.serializerCompiler,
            exposeHeadRoute: W,
            prefixTrailingSlash: D.prefixTrailingSlash || 'both',
            server: this,
            isFastify: Ye,
          });
        D.version && (jie(), (Ue.version = D.version));
        let Ce = t.findRoute('HEAD', D.url, Ue),
          mr = Ce !== null;
        X && mr && !Re[bR] && Ce.store[bR] && t.off('HEAD', D.url, Ue);
        try {
          t.on(D.method, D.url, { constraints: Ue }, O, Re);
        } catch (Ve) {
          if (!Re[bR])
            throw Ve.message.includes(
              `Method '${D.method}' already declared for route '${D.url}'`,
            )
              ? new Uie(D.method, D.url)
              : Ve;
        }
        if (
          (this.after((Ve, ge) => {
            (Re.errorHandler = D.errorHandler
              ? ioe(this[jF], D.errorHandler)
              : this[jF]),
              (Re._parserOptions.limit = D.bodyLimit || null),
              (Re.logLevel = D.logLevel),
              (Re.logSerializers = D.logSerializers),
              (Re.attachValidation = D.attachValidation),
              (Re[gR] = this[gR]),
              (Re.schemaErrorFormatter =
                D.schemaErrorFormatter || this[soe] || Re.schemaErrorFormatter),
              r.once('preReady', () => {
                for (let H of OF) {
                  let K = this[LF][H].concat(D[H] || []).map((te) =>
                    te.bind(this),
                  );
                  Re[H] = K.length ? K : null;
                }
                for (; !Re.Request[FF] && Re.Request.parent; )
                  Re.Request = Re.Request.parent;
                for (; !Re.Reply[FF] && Re.Reply.parent; )
                  Re.Reply = Re.Reply.parent;
                if ((n.setContext(this, Re), D.schema)) {
                  Re.schema = Nie(Re.schema, this.initialConfig);
                  let H = this[eoe];
                  !D.validatorCompiler &&
                    (D.schema.body ||
                      D.schema.headers ||
                      D.schema.querystring ||
                      D.schema.params) &&
                    H.setupValidator(this[DF]);
                  try {
                    let K =
                      typeof D?.validatorCompiler == 'function' ||
                      H.isCustomValidatorCompiler;
                    Fie(Re, D.validatorCompiler || H.validatorCompiler, K);
                  } catch (K) {
                    throw new Mie(D.method, It, K.message);
                  }
                  D.schema.response &&
                    !D.serializerCompiler &&
                    H.setupSerializer(this[DF]);
                  try {
                    qie(Re, D.serializerCompiler || H.serializerCompiler);
                  } catch (K) {
                    throw new Hie(D.method, It, K.message);
                  }
                }
              }),
              ge(Ve);
          }),
          W && de && !X && !mr)
        ) {
          let Ve = Lie(se.onSend);
          x.call(this, {
            method: 'HEAD',
            url: Wt,
            options: { ...se, onSend: Ve },
            isFastify: !0,
          });
        } else mr && G && Die();
      }
    }
    function O(F, U, D, G, Y) {
      let W = aoe(G.server, F),
        de = { level: G.logLevel };
      G.logSerializers && (de.serializers = G.logSerializers);
      let X = ooe(G, i, F, W, de);
      if (((X[noe] = u), !v(F.httpVersion))) {
        X.info(
          { res: { statusCode: 505 } },
          'request aborted - invalid HTTP version',
        );
        let re =
            '{"error":"HTTP Version Not Supported","message":"HTTP Version Not Supported","statusCode":505}',
          Ie = {
            'Content-Type': 'application/json',
            'Content-Length': re.length,
          };
        U.writeHead(505, Ie), U.end(re);
        return;
      }
      if (
        w === !0 &&
        (F.httpVersionMajor !== 2 && U.setHeader('Connection', 'close'), m)
      ) {
        let re = { 'Content-Type': 'application/json', 'Content-Length': '80' };
        U.writeHead(503, re),
          U.end(
            '{"error":"Service Unavailable","message":"Service Unavailable","statusCode":503}',
          ),
          X.info(
            { res: { statusCode: 503 } },
            'request aborted - refusing to accept new requests as server is closing',
          );
        return;
      }
      String.prototype.toLowerCase.call(F.headers.connection || '') ===
        'keep-alive' &&
        S.has(F.socket) === !1 &&
        (S.add(F.socket),
        F.socket.on(
          'close',
          foe.bind({ keepAliveConnections: S, socket: F.socket }),
        )),
        F.headers[vR] !== void 0 &&
          ((F.headers['accept-version'] = F.headers[vR]),
          (F.headers[vR] = void 0));
      let ae = new G.Request(W, D, F, Y, X, G),
        qe = new G.Reply(U, ae, X);
      u === !1 && X.info({ req: ae }, 'incoming request'),
        (s === !0 || G.onResponse !== null) && o(qe),
        G.onRequest !== null ? Aie(G.onRequest, ae, qe, zF) : zF(null, ae, qe),
        G.onRequestAbort !== null &&
          F.on('close', () => {
            F.aborted && Cie(G.onRequestAbort, ae, uoe.bind(null, qe));
          }),
        G.onTimeout !== null &&
          (ae.raw.socket._meta || ae.raw.socket.on('timeout', coe),
          (ae.raw.socket._meta = { context: G, request: ae, reply: qe }));
    }
  }
  function uoe(e, t) {
    t && e.log.error({ err: t }, 'onRequestAborted hook failed');
  }
  function coe() {
    let { context: e, request: t, reply: r } = this._meta;
    Iie(e.onTimeout, t, r, doe);
  }
  function MF(e) {
    if (typeof e != 'string') throw new Jie();
    if (((e = e.toUpperCase()), $ie.indexOf(e) === -1)) throw new Yie(e);
    return e;
  }
  function HF(e, t, r) {
    if ((e === 'GET' || e === 'HEAD') && r && r.body) throw new Kie(e, t);
  }
  function UF(e) {
    if (e !== void 0 && (!Number.isInteger(e) || e <= 0)) throw new Xie(e);
  }
  function zF(e, t, r) {
    if (r.sent !== !0) {
      if (e != null) {
        (r[toe] = !0), r.send(e);
        return;
      }
      (t[roe] = t.raw),
        t[qF].preParsing !== null
          ? Oie(t[qF].preParsing, t, r, CF)
          : CF(null, t, r);
    }
  }
  function foe() {
    this.keepAliveConnections.delete(this.socket);
  }
  function doe() {}
  VF.exports = { buildRouting: loe, validateBodyLimitOption: UF };
});
var ZF = $((Zge, XF) => {
  'use strict';
  var hoe = pR(),
    WF = cm(),
    GF = Tm(),
    poe = Pm(),
    {
      kRoutePrefix: moe,
      kCanSetNotFoundHandler: eh,
      kFourOhFourLevelInstance: th,
      kFourOhFourContext: As,
      kHooks: yoe,
      kErrorHandler: YF,
    } = rr(),
    { lifecycleHooks: goe } = ao(),
    { buildErrorHandler: voe } = Wf(),
    { FST_ERR_NOT_FOUND: boe } = br(),
    { createChildLogger: JF } = Vf(),
    { getGenReqId: KF } = $y();
  function Soe(e) {
    let { logger: t, disableRequestLogging: r } = e,
      n = hoe({ onBadUrl: a(), defaultRoute: m }),
      i = null;
    return { router: n, setNotFoundHandler: c, setContext: u, arrange404: s };
    function s(g) {
      (g[th] = g),
        (g[eh] = !0),
        (n.onBadUrl = n.onBadUrl.bind(g)),
        (n.defaultRoute = n.defaultRoute.bind(g));
    }
    function o(g, v) {
      let { url: S, method: w } = g.raw,
        T = `Route ${w}:${S} not found`;
      r || g.log.info(T),
        v.code(404).send({ message: T, error: 'Not Found', statusCode: 404 });
    }
    function a() {
      return function (v, S, w) {
        let T = this[th][As],
          C = KF(T.server, S),
          I = JF(T, t, S, C),
          x = new GF(C, null, S, null, I, T),
          E = new WF(w, x, I);
        i(x, E);
      };
    }
    function u(g, v) {
      let S = Object.assign({}, g[As]);
      (S.onSend = v.onSend), (v[As] = S);
    }
    function c(g, v, S, w) {
      this[eh] === void 0 && (this[eh] = !0),
        this[As] === void 0 && (this[As] = null);
      let T = this,
        C = this[moe] || '/';
      if (this[eh] === !1)
        throw new Error(
          `Not found handler already set for Fastify instance with prefix: '${C}'`,
        );
      typeof g == 'object' &&
        (g.preHandler &&
          (Array.isArray(g.preHandler)
            ? (g.preHandler = g.preHandler.map((I) => I.bind(T)))
            : (g.preHandler = g.preHandler.bind(T))),
        g.preValidation &&
          (Array.isArray(g.preValidation)
            ? (g.preValidation = g.preValidation.map((I) => I.bind(T)))
            : (g.preValidation = g.preValidation.bind(T)))),
        typeof g == 'function' && ((v = g), (g = void 0)),
        (g = g || {}),
        v
          ? ((this[th][eh] = !1), (v = v.bind(this)), (i = v))
          : ((v = o), (i = o)),
        this.after((I, x) => {
          d.call(this, C, g, v, S, w), x(I);
        });
    }
    function d(g, v, S, w, T) {
      let C = new poe({
        schema: v.schema,
        handler: S,
        config: v.config || {},
        server: this,
      });
      if (
        (w.once('preReady', () => {
          let I = this[As];
          for (let x of goe) {
            let E = this[yoe][x].concat(v[x] || []).map((j) => j.bind(this));
            I[x] = E.length ? E : null;
          }
          I.errorHandler = v.errorHandler
            ? voe(this[YF], v.errorHandler)
            : this[YF];
        }),
        this[As] !== null && g === '/')
      ) {
        Object.assign(this[As], C);
        return;
      }
      (this[th][As] = C),
        n.all(g + (g.endsWith('/') ? '*' : '/*'), T, C),
        n.all(g, T, C);
    }
    function m(g, v) {
      let S = this[th][As],
        w = KF(S.server, g),
        T = JF(S, t, g, w);
      T.info({ req: g }, 'incoming request');
      let C = new GF(w, null, g, null, T, S),
        I = new WF(v, C, T);
      C.log.warn(
        'the default handler for 404 did not catch this, this is likely a fastify bug, please report it',
      ),
        C.log.warn(n.prettyPrint()),
        I.code(404).send(new boe());
    }
  }
  XF.exports = Soe;
});
var eq = $((Qge, Zy) => {
  'use strict';
  Zy.exports = Ge;
  Zy.exports.default = Ge;
  var QF = {
      type: 'object',
      additionalProperties: !1,
      properties: {
        connectionTimeout: { type: 'integer', default: 0 },
        keepAliveTimeout: { type: 'integer', default: 72e3 },
        forceCloseConnections: {
          oneOf: [{ type: 'string', pattern: 'idle' }, { type: 'boolean' }],
        },
        maxRequestsPerSocket: { type: 'integer', default: 0, nullable: !0 },
        requestTimeout: { type: 'integer', default: 0 },
        bodyLimit: { type: 'integer', default: 1048576 },
        caseSensitive: { type: 'boolean', default: !0 },
        allowUnsafeRegex: { type: 'boolean', default: !1 },
        http2: { type: 'boolean' },
        https: {
          if: {
            not: {
              oneOf: [
                { type: 'boolean' },
                { type: 'null' },
                {
                  type: 'object',
                  additionalProperties: !1,
                  required: ['allowHTTP1'],
                  properties: { allowHTTP1: { type: 'boolean' } },
                },
              ],
            },
          },
          then: { setDefaultValue: !0 },
        },
        ignoreTrailingSlash: { type: 'boolean', default: !1 },
        ignoreDuplicateSlashes: { type: 'boolean', default: !1 },
        disableRequestLogging: { type: 'boolean', default: !1 },
        jsonShorthand: { type: 'boolean', default: !0 },
        maxParamLength: { type: 'integer', default: 100 },
        onProtoPoisoning: { type: 'string', default: 'error' },
        onConstructorPoisoning: { type: 'string', default: 'error' },
        pluginTimeout: { type: 'integer', default: 1e4 },
        requestIdHeader: {
          anyOf: [{ enum: [!1] }, { type: 'string' }],
          default: 'request-id',
        },
        requestIdLogLabel: { type: 'string', default: 'reqId' },
        http2SessionTimeout: { type: 'integer', default: 72e3 },
        exposeHeadRoutes: { type: 'boolean', default: !0 },
        useSemicolonDelimiter: { type: 'boolean', default: !0 },
        versioning: {
          type: 'object',
          additionalProperties: !0,
          required: ['storage', 'deriveVersion'],
          properties: { storage: {}, deriveVersion: {} },
        },
        constraints: {
          type: 'object',
          additionalProperties: {
            type: 'object',
            required: ['name', 'storage', 'validate', 'deriveConstraint'],
            additionalProperties: !0,
            properties: {
              name: { type: 'string' },
              storage: {},
              validate: {},
              deriveConstraint: {},
            },
          },
        },
      },
    },
    _oe = Object.prototype.hasOwnProperty,
    woe = new RegExp('idle', 'u');
  function Ge(
    e,
    {
      instancePath: t = '',
      parentData: r,
      parentDataProperty: n,
      rootData: i = e,
    } = {},
  ) {
    let s = null,
      o = 0;
    if (o === 0)
      if (e && typeof e == 'object' && !Array.isArray(e)) {
        e.connectionTimeout === void 0 && (e.connectionTimeout = 0),
          e.keepAliveTimeout === void 0 && (e.keepAliveTimeout = 72e3),
          e.maxRequestsPerSocket === void 0 && (e.maxRequestsPerSocket = 0),
          e.requestTimeout === void 0 && (e.requestTimeout = 0),
          e.bodyLimit === void 0 && (e.bodyLimit = 1048576),
          e.caseSensitive === void 0 && (e.caseSensitive = !0),
          e.allowUnsafeRegex === void 0 && (e.allowUnsafeRegex = !1),
          e.ignoreTrailingSlash === void 0 && (e.ignoreTrailingSlash = !1),
          e.ignoreDuplicateSlashes === void 0 &&
            (e.ignoreDuplicateSlashes = !1),
          e.disableRequestLogging === void 0 && (e.disableRequestLogging = !1),
          e.jsonShorthand === void 0 && (e.jsonShorthand = !0),
          e.maxParamLength === void 0 && (e.maxParamLength = 100),
          e.onProtoPoisoning === void 0 && (e.onProtoPoisoning = 'error'),
          e.onConstructorPoisoning === void 0 &&
            (e.onConstructorPoisoning = 'error'),
          e.pluginTimeout === void 0 && (e.pluginTimeout = 1e4),
          e.requestIdHeader === void 0 && (e.requestIdHeader = 'request-id'),
          e.requestIdLogLabel === void 0 && (e.requestIdLogLabel = 'reqId'),
          e.http2SessionTimeout === void 0 && (e.http2SessionTimeout = 72e3),
          e.exposeHeadRoutes === void 0 && (e.exposeHeadRoutes = !0),
          e.useSemicolonDelimiter === void 0 && (e.useSemicolonDelimiter = !0);
        let S = o;
        for (let w in e) _oe.call(QF.properties, w) || delete e[w];
        if (S === o) {
          let w = e.connectionTimeout,
            T = o;
          if (!(typeof w == 'number' && !(w % 1) && !isNaN(w) && isFinite(w))) {
            let C = typeof w,
              I;
            if (I === void 0)
              if (
                C === 'boolean' ||
                w === null ||
                (C === 'string' && w && w == +w && !(w % 1))
              )
                I = +w;
              else
                return (
                  (Ge.errors = [
                    {
                      instancePath: t + '/connectionTimeout',
                      schemaPath: '#/properties/connectionTimeout/type',
                      keyword: 'type',
                      params: { type: 'integer' },
                      message: 'must be integer',
                    },
                  ]),
                  !1
                );
            I !== void 0 &&
              ((w = I), e !== void 0 && (e.connectionTimeout = I));
          }
          var a = T === o;
          if (a) {
            let C = e.keepAliveTimeout,
              I = o;
            if (
              !(typeof C == 'number' && !(C % 1) && !isNaN(C) && isFinite(C))
            ) {
              let E = typeof C,
                j;
              if (j === void 0)
                if (
                  E === 'boolean' ||
                  C === null ||
                  (E === 'string' && C && C == +C && !(C % 1))
                )
                  j = +C;
                else
                  return (
                    (Ge.errors = [
                      {
                        instancePath: t + '/keepAliveTimeout',
                        schemaPath: '#/properties/keepAliveTimeout/type',
                        keyword: 'type',
                        params: { type: 'integer' },
                        message: 'must be integer',
                      },
                    ]),
                    !1
                  );
              j !== void 0 &&
                ((C = j), e !== void 0 && (e.keepAliveTimeout = j));
            }
            var a = I === o;
            if (a) {
              if (e.forceCloseConnections !== void 0) {
                let E = e.forceCloseConnections,
                  j = o,
                  q = o,
                  O = !1,
                  F = null,
                  U = o;
                if (typeof E != 'string') {
                  let Y = typeof E,
                    W;
                  if (W === void 0)
                    if (Y == 'number' || Y == 'boolean') W = '' + E;
                    else if (E === null) W = '';
                    else {
                      let de = {
                        instancePath: t + '/forceCloseConnections',
                        schemaPath:
                          '#/properties/forceCloseConnections/oneOf/0/type',
                        keyword: 'type',
                        params: { type: 'string' },
                        message: 'must be string',
                      };
                      s === null ? (s = [de]) : s.push(de), o++;
                    }
                  W !== void 0 &&
                    ((E = W), e !== void 0 && (e.forceCloseConnections = W));
                }
                if (o === U && typeof E == 'string' && !woe.test(E)) {
                  let Y = {
                    instancePath: t + '/forceCloseConnections',
                    schemaPath:
                      '#/properties/forceCloseConnections/oneOf/0/pattern',
                    keyword: 'pattern',
                    params: { pattern: 'idle' },
                    message: 'must match pattern "idle"',
                  };
                  s === null ? (s = [Y]) : s.push(Y), o++;
                }
                var u = U === o;
                u && ((O = !0), (F = 0));
                let D = o;
                if (typeof E != 'boolean') {
                  let Y;
                  if (Y === void 0)
                    if (E === 'false' || E === 0 || E === null) Y = !1;
                    else if (E === 'true' || E === 1) Y = !0;
                    else {
                      let W = {
                        instancePath: t + '/forceCloseConnections',
                        schemaPath:
                          '#/properties/forceCloseConnections/oneOf/1/type',
                        keyword: 'type',
                        params: { type: 'boolean' },
                        message: 'must be boolean',
                      };
                      s === null ? (s = [W]) : s.push(W), o++;
                    }
                  Y !== void 0 &&
                    ((E = Y), e !== void 0 && (e.forceCloseConnections = Y));
                }
                var u = D === o;
                if (
                  (u && O ? ((O = !1), (F = [F, 1])) : u && ((O = !0), (F = 1)),
                  O)
                )
                  (o = q), s !== null && (q ? (s.length = q) : (s = null));
                else {
                  let Y = {
                    instancePath: t + '/forceCloseConnections',
                    schemaPath: '#/properties/forceCloseConnections/oneOf',
                    keyword: 'oneOf',
                    params: { passingSchemas: F },
                    message: 'must match exactly one schema in oneOf',
                  };
                  return (
                    s === null ? (s = [Y]) : s.push(Y), o++, (Ge.errors = s), !1
                  );
                }
                var a = j === o;
              } else var a = !0;
              if (a) {
                let E = e.maxRequestsPerSocket,
                  j = o;
                if (
                  !(
                    typeof E == 'number' &&
                    !(E % 1) &&
                    !isNaN(E) &&
                    isFinite(E)
                  ) &&
                  E !== null
                ) {
                  let O = typeof E,
                    F;
                  if (F === void 0)
                    if (
                      O === 'boolean' ||
                      E === null ||
                      (O === 'string' && E && E == +E && !(E % 1))
                    )
                      F = +E;
                    else if (E === '' || E === 0 || E === !1) F = null;
                    else
                      return (
                        (Ge.errors = [
                          {
                            instancePath: t + '/maxRequestsPerSocket',
                            schemaPath:
                              '#/properties/maxRequestsPerSocket/type',
                            keyword: 'type',
                            params: { type: 'integer' },
                            message: 'must be integer',
                          },
                        ]),
                        !1
                      );
                  F !== void 0 &&
                    ((E = F), e !== void 0 && (e.maxRequestsPerSocket = F));
                }
                var a = j === o;
                if (a) {
                  let O = e.requestTimeout,
                    F = o;
                  if (
                    !(
                      typeof O == 'number' &&
                      !(O % 1) &&
                      !isNaN(O) &&
                      isFinite(O)
                    )
                  ) {
                    let D = typeof O,
                      G;
                    if (G === void 0)
                      if (
                        D === 'boolean' ||
                        O === null ||
                        (D === 'string' && O && O == +O && !(O % 1))
                      )
                        G = +O;
                      else
                        return (
                          (Ge.errors = [
                            {
                              instancePath: t + '/requestTimeout',
                              schemaPath: '#/properties/requestTimeout/type',
                              keyword: 'type',
                              params: { type: 'integer' },
                              message: 'must be integer',
                            },
                          ]),
                          !1
                        );
                    G !== void 0 &&
                      ((O = G), e !== void 0 && (e.requestTimeout = G));
                  }
                  var a = F === o;
                  if (a) {
                    let D = e.bodyLimit,
                      G = o;
                    if (
                      !(
                        typeof D == 'number' &&
                        !(D % 1) &&
                        !isNaN(D) &&
                        isFinite(D)
                      )
                    ) {
                      let W = typeof D,
                        de;
                      if (de === void 0)
                        if (
                          W === 'boolean' ||
                          D === null ||
                          (W === 'string' && D && D == +D && !(D % 1))
                        )
                          de = +D;
                        else
                          return (
                            (Ge.errors = [
                              {
                                instancePath: t + '/bodyLimit',
                                schemaPath: '#/properties/bodyLimit/type',
                                keyword: 'type',
                                params: { type: 'integer' },
                                message: 'must be integer',
                              },
                            ]),
                            !1
                          );
                      de !== void 0 &&
                        ((D = de), e !== void 0 && (e.bodyLimit = de));
                    }
                    var a = G === o;
                    if (a) {
                      let W = e.caseSensitive,
                        de = o;
                      if (typeof W != 'boolean') {
                        let se;
                        if (se === void 0)
                          if (W === 'false' || W === 0 || W === null) se = !1;
                          else if (W === 'true' || W === 1) se = !0;
                          else
                            return (
                              (Ge.errors = [
                                {
                                  instancePath: t + '/caseSensitive',
                                  schemaPath: '#/properties/caseSensitive/type',
                                  keyword: 'type',
                                  params: { type: 'boolean' },
                                  message: 'must be boolean',
                                },
                              ]),
                              !1
                            );
                        se !== void 0 &&
                          ((W = se), e !== void 0 && (e.caseSensitive = se));
                      }
                      var a = de === o;
                      if (a) {
                        let se = e.allowUnsafeRegex,
                          ae = o;
                        if (typeof se != 'boolean') {
                          let re;
                          if (re === void 0)
                            if (se === 'false' || se === 0 || se === null)
                              re = !1;
                            else if (se === 'true' || se === 1) re = !0;
                            else
                              return (
                                (Ge.errors = [
                                  {
                                    instancePath: t + '/allowUnsafeRegex',
                                    schemaPath:
                                      '#/properties/allowUnsafeRegex/type',
                                    keyword: 'type',
                                    params: { type: 'boolean' },
                                    message: 'must be boolean',
                                  },
                                ]),
                                !1
                              );
                          re !== void 0 &&
                            ((se = re),
                            e !== void 0 && (e.allowUnsafeRegex = re));
                        }
                        var a = ae === o;
                        if (a) {
                          if (e.http2 !== void 0) {
                            let re = e.http2,
                              Ie = o;
                            if (typeof re != 'boolean') {
                              let ve;
                              if (ve === void 0)
                                if (re === 'false' || re === 0 || re === null)
                                  ve = !1;
                                else if (re === 'true' || re === 1) ve = !0;
                                else
                                  return (
                                    (Ge.errors = [
                                      {
                                        instancePath: t + '/http2',
                                        schemaPath: '#/properties/http2/type',
                                        keyword: 'type',
                                        params: { type: 'boolean' },
                                        message: 'must be boolean',
                                      },
                                    ]),
                                    !1
                                  );
                              ve !== void 0 &&
                                ((re = ve), e !== void 0 && (e.http2 = ve));
                            }
                            var a = Ie === o;
                          } else var a = !0;
                          if (a) {
                            if (e.https !== void 0) {
                              let re = e.https,
                                Ie = o,
                                Wt = o,
                                ve = !0,
                                Ye = o,
                                It = o,
                                Ue = o,
                                Gt = o,
                                Re = !1,
                                Ce = null,
                                mr = o;
                              if (typeof re != 'boolean') {
                                let H;
                                if (H === void 0)
                                  if (re === 'false' || re === 0 || re === null)
                                    H = !1;
                                  else if (re === 'true' || re === 1) H = !0;
                                  else {
                                    let K = {};
                                    s === null ? (s = [K]) : s.push(K), o++;
                                  }
                                H !== void 0 &&
                                  ((re = H), e !== void 0 && (e.https = H));
                              }
                              var c = mr === o;
                              c && ((Re = !0), (Ce = 0));
                              let Ve = o;
                              if (re !== null) {
                                let H;
                                if (H === void 0)
                                  if (re === '' || re === 0 || re === !1)
                                    H = null;
                                  else {
                                    let K = {};
                                    s === null ? (s = [K]) : s.push(K), o++;
                                  }
                                H !== void 0 &&
                                  ((re = H), e !== void 0 && (e.https = H));
                              }
                              var c = Ve === o;
                              if (c && Re) (Re = !1), (Ce = [Ce, 1]);
                              else {
                                c && ((Re = !0), (Ce = 1));
                                let H = o;
                                if (o === H)
                                  if (
                                    re &&
                                    typeof re == 'object' &&
                                    !Array.isArray(re)
                                  ) {
                                    let te;
                                    if (
                                      re.allowHTTP1 === void 0 &&
                                      (te = 'allowHTTP1')
                                    ) {
                                      let le = {};
                                      s === null ? (s = [le]) : s.push(le), o++;
                                    } else {
                                      let le = o;
                                      for (let Pe in re)
                                        Pe !== 'allowHTTP1' && delete re[Pe];
                                      if (
                                        le === o &&
                                        re.allowHTTP1 !== void 0
                                      ) {
                                        let Pe = re.allowHTTP1;
                                        if (typeof Pe != 'boolean') {
                                          let he;
                                          if (he === void 0)
                                            if (
                                              Pe === 'false' ||
                                              Pe === 0 ||
                                              Pe === null
                                            )
                                              he = !1;
                                            else if (Pe === 'true' || Pe === 1)
                                              he = !0;
                                            else {
                                              let Ae = {};
                                              s === null
                                                ? (s = [Ae])
                                                : s.push(Ae),
                                                o++;
                                            }
                                          he !== void 0 &&
                                            ((Pe = he),
                                            re !== void 0 &&
                                              (re.allowHTTP1 = he));
                                        }
                                      }
                                    }
                                  } else {
                                    let te = {};
                                    s === null ? (s = [te]) : s.push(te), o++;
                                  }
                                var c = H === o;
                                c && Re
                                  ? ((Re = !1), (Ce = [Ce, 2]))
                                  : c && ((Re = !0), (Ce = 2));
                              }
                              if (Re)
                                (o = Gt),
                                  s !== null &&
                                    (Gt ? (s.length = Gt) : (s = null));
                              else {
                                let H = {};
                                s === null ? (s = [H]) : s.push(H), o++;
                              }
                              var d = Ue === o;
                              if (d) {
                                let H = {};
                                s === null ? (s = [H]) : s.push(H), o++;
                              } else
                                (o = It),
                                  s !== null &&
                                    (It ? (s.length = It) : (s = null));
                              var m = Ye === o;
                              if (
                                ((o = Wt),
                                s !== null &&
                                  (Wt ? (s.length = Wt) : (s = null)),
                                m)
                              ) {
                                let H = o;
                                e.https = !0;
                                var m = H === o;
                                ve = m;
                              }
                              if (!ve) {
                                let H = {
                                  instancePath: t + '/https',
                                  schemaPath: '#/properties/https/if',
                                  keyword: 'if',
                                  params: { failingKeyword: 'then' },
                                  message: 'must match "then" schema',
                                };
                                return (
                                  s === null ? (s = [H]) : s.push(H),
                                  o++,
                                  (Ge.errors = s),
                                  !1
                                );
                              }
                              var a = Ie === o;
                            } else var a = !0;
                            if (a) {
                              let re = e.ignoreTrailingSlash,
                                Ie = o;
                              if (typeof re != 'boolean') {
                                let ve;
                                if (ve === void 0)
                                  if (re === 'false' || re === 0 || re === null)
                                    ve = !1;
                                  else if (re === 'true' || re === 1) ve = !0;
                                  else
                                    return (
                                      (Ge.errors = [
                                        {
                                          instancePath:
                                            t + '/ignoreTrailingSlash',
                                          schemaPath:
                                            '#/properties/ignoreTrailingSlash/type',
                                          keyword: 'type',
                                          params: { type: 'boolean' },
                                          message: 'must be boolean',
                                        },
                                      ]),
                                      !1
                                    );
                                ve !== void 0 &&
                                  ((re = ve),
                                  e !== void 0 && (e.ignoreTrailingSlash = ve));
                              }
                              var a = Ie === o;
                              if (a) {
                                let ve = e.ignoreDuplicateSlashes,
                                  Ye = o;
                                if (typeof ve != 'boolean') {
                                  let Ue;
                                  if (Ue === void 0)
                                    if (
                                      ve === 'false' ||
                                      ve === 0 ||
                                      ve === null
                                    )
                                      Ue = !1;
                                    else if (ve === 'true' || ve === 1) Ue = !0;
                                    else
                                      return (
                                        (Ge.errors = [
                                          {
                                            instancePath:
                                              t + '/ignoreDuplicateSlashes',
                                            schemaPath:
                                              '#/properties/ignoreDuplicateSlashes/type',
                                            keyword: 'type',
                                            params: { type: 'boolean' },
                                            message: 'must be boolean',
                                          },
                                        ]),
                                        !1
                                      );
                                  Ue !== void 0 &&
                                    ((ve = Ue),
                                    e !== void 0 &&
                                      (e.ignoreDuplicateSlashes = Ue));
                                }
                                var a = Ye === o;
                                if (a) {
                                  let Ue = e.disableRequestLogging,
                                    Gt = o;
                                  if (typeof Ue != 'boolean') {
                                    let Ce;
                                    if (Ce === void 0)
                                      if (
                                        Ue === 'false' ||
                                        Ue === 0 ||
                                        Ue === null
                                      )
                                        Ce = !1;
                                      else if (Ue === 'true' || Ue === 1)
                                        Ce = !0;
                                      else
                                        return (
                                          (Ge.errors = [
                                            {
                                              instancePath:
                                                t + '/disableRequestLogging',
                                              schemaPath:
                                                '#/properties/disableRequestLogging/type',
                                              keyword: 'type',
                                              params: { type: 'boolean' },
                                              message: 'must be boolean',
                                            },
                                          ]),
                                          !1
                                        );
                                    Ce !== void 0 &&
                                      ((Ue = Ce),
                                      e !== void 0 &&
                                        (e.disableRequestLogging = Ce));
                                  }
                                  var a = Gt === o;
                                  if (a) {
                                    let Ce = e.jsonShorthand,
                                      mr = o;
                                    if (typeof Ce != 'boolean') {
                                      let ge;
                                      if (ge === void 0)
                                        if (
                                          Ce === 'false' ||
                                          Ce === 0 ||
                                          Ce === null
                                        )
                                          ge = !1;
                                        else if (Ce === 'true' || Ce === 1)
                                          ge = !0;
                                        else
                                          return (
                                            (Ge.errors = [
                                              {
                                                instancePath:
                                                  t + '/jsonShorthand',
                                                schemaPath:
                                                  '#/properties/jsonShorthand/type',
                                                keyword: 'type',
                                                params: { type: 'boolean' },
                                                message: 'must be boolean',
                                              },
                                            ]),
                                            !1
                                          );
                                      ge !== void 0 &&
                                        ((Ce = ge),
                                        e !== void 0 && (e.jsonShorthand = ge));
                                    }
                                    var a = mr === o;
                                    if (a) {
                                      let ge = e.maxParamLength,
                                        H = o;
                                      if (
                                        !(
                                          typeof ge == 'number' &&
                                          !(ge % 1) &&
                                          !isNaN(ge) &&
                                          isFinite(ge)
                                        )
                                      ) {
                                        let te = typeof ge,
                                          le;
                                        if (le === void 0)
                                          if (
                                            te === 'boolean' ||
                                            ge === null ||
                                            (te === 'string' &&
                                              ge &&
                                              ge == +ge &&
                                              !(ge % 1))
                                          )
                                            le = +ge;
                                          else
                                            return (
                                              (Ge.errors = [
                                                {
                                                  instancePath:
                                                    t + '/maxParamLength',
                                                  schemaPath:
                                                    '#/properties/maxParamLength/type',
                                                  keyword: 'type',
                                                  params: { type: 'integer' },
                                                  message: 'must be integer',
                                                },
                                              ]),
                                              !1
                                            );
                                        le !== void 0 &&
                                          ((ge = le),
                                          e !== void 0 &&
                                            (e.maxParamLength = le));
                                      }
                                      var a = H === o;
                                      if (a) {
                                        let te = e.onProtoPoisoning,
                                          le = o;
                                        if (typeof te != 'string') {
                                          let he = typeof te,
                                            Ae;
                                          if (Ae === void 0)
                                            if (
                                              he == 'number' ||
                                              he == 'boolean'
                                            )
                                              Ae = '' + te;
                                            else if (te === null) Ae = '';
                                            else
                                              return (
                                                (Ge.errors = [
                                                  {
                                                    instancePath:
                                                      t + '/onProtoPoisoning',
                                                    schemaPath:
                                                      '#/properties/onProtoPoisoning/type',
                                                    keyword: 'type',
                                                    params: { type: 'string' },
                                                    message: 'must be string',
                                                  },
                                                ]),
                                                !1
                                              );
                                          Ae !== void 0 &&
                                            ((te = Ae),
                                            e !== void 0 &&
                                              (e.onProtoPoisoning = Ae));
                                        }
                                        var a = le === o;
                                        if (a) {
                                          let he = e.onConstructorPoisoning,
                                            Ae = o;
                                          if (typeof he != 'string') {
                                            let tt = typeof he,
                                              zt;
                                            if (zt === void 0)
                                              if (
                                                tt == 'number' ||
                                                tt == 'boolean'
                                              )
                                                zt = '' + he;
                                              else if (he === null) zt = '';
                                              else
                                                return (
                                                  (Ge.errors = [
                                                    {
                                                      instancePath:
                                                        t +
                                                        '/onConstructorPoisoning',
                                                      schemaPath:
                                                        '#/properties/onConstructorPoisoning/type',
                                                      keyword: 'type',
                                                      params: {
                                                        type: 'string',
                                                      },
                                                      message: 'must be string',
                                                    },
                                                  ]),
                                                  !1
                                                );
                                            zt !== void 0 &&
                                              ((he = zt),
                                              e !== void 0 &&
                                                (e.onConstructorPoisoning =
                                                  zt));
                                          }
                                          var a = Ae === o;
                                          if (a) {
                                            let tt = e.pluginTimeout,
                                              zt = o;
                                            if (
                                              !(
                                                typeof tt == 'number' &&
                                                !(tt % 1) &&
                                                !isNaN(tt) &&
                                                isFinite(tt)
                                              )
                                            ) {
                                              let Jt = typeof tt,
                                                Ut;
                                              if (Ut === void 0)
                                                if (
                                                  Jt === 'boolean' ||
                                                  tt === null ||
                                                  (Jt === 'string' &&
                                                    tt &&
                                                    tt == +tt &&
                                                    !(tt % 1))
                                                )
                                                  Ut = +tt;
                                                else
                                                  return (
                                                    (Ge.errors = [
                                                      {
                                                        instancePath:
                                                          t + '/pluginTimeout',
                                                        schemaPath:
                                                          '#/properties/pluginTimeout/type',
                                                        keyword: 'type',
                                                        params: {
                                                          type: 'integer',
                                                        },
                                                        message:
                                                          'must be integer',
                                                      },
                                                    ]),
                                                    !1
                                                  );
                                              Ut !== void 0 &&
                                                ((tt = Ut),
                                                e !== void 0 &&
                                                  (e.pluginTimeout = Ut));
                                            }
                                            var a = zt === o;
                                            if (a) {
                                              let Jt = e.requestIdHeader,
                                                Ut = o,
                                                wt = o,
                                                ln = !1,
                                                zo = o;
                                              if (Jt !== !1) {
                                                let At = {
                                                  instancePath:
                                                    t + '/requestIdHeader',
                                                  schemaPath:
                                                    '#/properties/requestIdHeader/anyOf/0/enum',
                                                  keyword: 'enum',
                                                  params: {
                                                    allowedValues:
                                                      QF.properties
                                                        .requestIdHeader
                                                        .anyOf[0].enum,
                                                  },
                                                  message:
                                                    'must be equal to one of the allowed values',
                                                };
                                                s === null
                                                  ? (s = [At])
                                                  : s.push(At),
                                                  o++;
                                              }
                                              var g = zo === o;
                                              if (((ln = ln || g), !ln)) {
                                                let At = o;
                                                if (typeof Jt != 'string') {
                                                  let Oi = typeof Jt,
                                                    Xe;
                                                  if (Xe === void 0)
                                                    if (
                                                      Oi == 'number' ||
                                                      Oi == 'boolean'
                                                    )
                                                      Xe = '' + Jt;
                                                    else if (Jt === null)
                                                      Xe = '';
                                                    else {
                                                      let Pt = {
                                                        instancePath:
                                                          t +
                                                          '/requestIdHeader',
                                                        schemaPath:
                                                          '#/properties/requestIdHeader/anyOf/1/type',
                                                        keyword: 'type',
                                                        params: {
                                                          type: 'string',
                                                        },
                                                        message:
                                                          'must be string',
                                                      };
                                                      s === null
                                                        ? (s = [Pt])
                                                        : s.push(Pt),
                                                        o++;
                                                    }
                                                  Xe !== void 0 &&
                                                    ((Jt = Xe),
                                                    e !== void 0 &&
                                                      (e.requestIdHeader = Xe));
                                                }
                                                var g = At === o;
                                                ln = ln || g;
                                              }
                                              if (ln)
                                                (o = wt),
                                                  s !== null &&
                                                    (wt
                                                      ? (s.length = wt)
                                                      : (s = null));
                                              else {
                                                let At = {
                                                  instancePath:
                                                    t + '/requestIdHeader',
                                                  schemaPath:
                                                    '#/properties/requestIdHeader/anyOf',
                                                  keyword: 'anyOf',
                                                  params: {},
                                                  message:
                                                    'must match a schema in anyOf',
                                                };
                                                return (
                                                  s === null
                                                    ? (s = [At])
                                                    : s.push(At),
                                                  o++,
                                                  (Ge.errors = s),
                                                  !1
                                                );
                                              }
                                              var a = Ut === o;
                                              if (a) {
                                                let At = e.requestIdLogLabel,
                                                  Ci = o;
                                                if (typeof At != 'string') {
                                                  let Xe = typeof At,
                                                    Pt;
                                                  if (Pt === void 0)
                                                    if (
                                                      Xe == 'number' ||
                                                      Xe == 'boolean'
                                                    )
                                                      Pt = '' + At;
                                                    else if (At === null)
                                                      Pt = '';
                                                    else
                                                      return (
                                                        (Ge.errors = [
                                                          {
                                                            instancePath:
                                                              t +
                                                              '/requestIdLogLabel',
                                                            schemaPath:
                                                              '#/properties/requestIdLogLabel/type',
                                                            keyword: 'type',
                                                            params: {
                                                              type: 'string',
                                                            },
                                                            message:
                                                              'must be string',
                                                          },
                                                        ]),
                                                        !1
                                                      );
                                                  Pt !== void 0 &&
                                                    ((At = Pt),
                                                    e !== void 0 &&
                                                      (e.requestIdLogLabel =
                                                        Pt));
                                                }
                                                var a = Ci === o;
                                                if (a) {
                                                  let Xe =
                                                      e.http2SessionTimeout,
                                                    Pt = o;
                                                  if (
                                                    !(
                                                      typeof Xe == 'number' &&
                                                      !(Xe % 1) &&
                                                      !isNaN(Xe) &&
                                                      isFinite(Xe)
                                                    )
                                                  ) {
                                                    let sr = typeof Xe,
                                                      Br;
                                                    if (Br === void 0)
                                                      if (
                                                        sr === 'boolean' ||
                                                        Xe === null ||
                                                        (sr === 'string' &&
                                                          Xe &&
                                                          Xe == +Xe &&
                                                          !(Xe % 1))
                                                      )
                                                        Br = +Xe;
                                                      else
                                                        return (
                                                          (Ge.errors = [
                                                            {
                                                              instancePath:
                                                                t +
                                                                '/http2SessionTimeout',
                                                              schemaPath:
                                                                '#/properties/http2SessionTimeout/type',
                                                              keyword: 'type',
                                                              params: {
                                                                type: 'integer',
                                                              },
                                                              message:
                                                                'must be integer',
                                                            },
                                                          ]),
                                                          !1
                                                        );
                                                    Br !== void 0 &&
                                                      ((Xe = Br),
                                                      e !== void 0 &&
                                                        (e.http2SessionTimeout =
                                                          Br));
                                                  }
                                                  var a = Pt === o;
                                                  if (a) {
                                                    let sr = e.exposeHeadRoutes,
                                                      Br = o;
                                                    if (
                                                      typeof sr != 'boolean'
                                                    ) {
                                                      let Ct;
                                                      if (Ct === void 0)
                                                        if (
                                                          sr === 'false' ||
                                                          sr === 0 ||
                                                          sr === null
                                                        )
                                                          Ct = !1;
                                                        else if (
                                                          sr === 'true' ||
                                                          sr === 1
                                                        )
                                                          Ct = !0;
                                                        else
                                                          return (
                                                            (Ge.errors = [
                                                              {
                                                                instancePath:
                                                                  t +
                                                                  '/exposeHeadRoutes',
                                                                schemaPath:
                                                                  '#/properties/exposeHeadRoutes/type',
                                                                keyword: 'type',
                                                                params: {
                                                                  type: 'boolean',
                                                                },
                                                                message:
                                                                  'must be boolean',
                                                              },
                                                            ]),
                                                            !1
                                                          );
                                                      Ct !== void 0 &&
                                                        ((sr = Ct),
                                                        e !== void 0 &&
                                                          (e.exposeHeadRoutes =
                                                            Ct));
                                                    }
                                                    var a = Br === o;
                                                    if (a) {
                                                      let Ct =
                                                          e.useSemicolonDelimiter,
                                                        Ms = o;
                                                      if (
                                                        typeof Ct != 'boolean'
                                                      ) {
                                                        let rt;
                                                        if (rt === void 0)
                                                          if (
                                                            Ct === 'false' ||
                                                            Ct === 0 ||
                                                            Ct === null
                                                          )
                                                            rt = !1;
                                                          else if (
                                                            Ct === 'true' ||
                                                            Ct === 1
                                                          )
                                                            rt = !0;
                                                          else
                                                            return (
                                                              (Ge.errors = [
                                                                {
                                                                  instancePath:
                                                                    t +
                                                                    '/useSemicolonDelimiter',
                                                                  schemaPath:
                                                                    '#/properties/useSemicolonDelimiter/type',
                                                                  keyword:
                                                                    'type',
                                                                  params: {
                                                                    type: 'boolean',
                                                                  },
                                                                  message:
                                                                    'must be boolean',
                                                                },
                                                              ]),
                                                              !1
                                                            );
                                                        rt !== void 0 &&
                                                          ((Ct = rt),
                                                          e !== void 0 &&
                                                            (e.useSemicolonDelimiter =
                                                              rt));
                                                      }
                                                      var a = Ms === o;
                                                      if (a) {
                                                        if (
                                                          e.versioning !==
                                                          void 0
                                                        ) {
                                                          let rt = e.versioning,
                                                            Wr = o;
                                                          if (o === Wr)
                                                            if (
                                                              rt &&
                                                              typeof rt ==
                                                                'object' &&
                                                              !Array.isArray(rt)
                                                            ) {
                                                              let xr;
                                                              if (
                                                                (rt.storage ===
                                                                  void 0 &&
                                                                  (xr =
                                                                    'storage')) ||
                                                                (rt.deriveVersion ===
                                                                  void 0 &&
                                                                  (xr =
                                                                    'deriveVersion'))
                                                              )
                                                                return (
                                                                  (Ge.errors = [
                                                                    {
                                                                      instancePath:
                                                                        t +
                                                                        '/versioning',
                                                                      schemaPath:
                                                                        '#/properties/versioning/required',
                                                                      keyword:
                                                                        'required',
                                                                      params: {
                                                                        missingProperty:
                                                                          xr,
                                                                      },
                                                                      message:
                                                                        "must have required property '" +
                                                                        xr +
                                                                        "'",
                                                                    },
                                                                  ]),
                                                                  !1
                                                                );
                                                            } else
                                                              return (
                                                                (Ge.errors = [
                                                                  {
                                                                    instancePath:
                                                                      t +
                                                                      '/versioning',
                                                                    schemaPath:
                                                                      '#/properties/versioning/type',
                                                                    keyword:
                                                                      'type',
                                                                    params: {
                                                                      type: 'object',
                                                                    },
                                                                    message:
                                                                      'must be object',
                                                                  },
                                                                ]),
                                                                !1
                                                              );
                                                          var a = Wr === o;
                                                        } else var a = !0;
                                                        if (a)
                                                          if (
                                                            e.constraints !==
                                                            void 0
                                                          ) {
                                                            let rt =
                                                                e.constraints,
                                                              Wr = o;
                                                            if (o === Wr)
                                                              if (
                                                                rt &&
                                                                typeof rt ==
                                                                  'object' &&
                                                                !Array.isArray(
                                                                  rt,
                                                                )
                                                              )
                                                                for (let xr in rt) {
                                                                  let Zt =
                                                                      rt[xr],
                                                                    un = o;
                                                                  if (o === un)
                                                                    if (
                                                                      Zt &&
                                                                      typeof Zt ==
                                                                        'object' &&
                                                                      !Array.isArray(
                                                                        Zt,
                                                                      )
                                                                    ) {
                                                                      let Gr;
                                                                      if (
                                                                        (Zt.name ===
                                                                          void 0 &&
                                                                          (Gr =
                                                                            'name')) ||
                                                                        (Zt.storage ===
                                                                          void 0 &&
                                                                          (Gr =
                                                                            'storage')) ||
                                                                        (Zt.validate ===
                                                                          void 0 &&
                                                                          (Gr =
                                                                            'validate')) ||
                                                                        (Zt.deriveConstraint ===
                                                                          void 0 &&
                                                                          (Gr =
                                                                            'deriveConstraint'))
                                                                      )
                                                                        return (
                                                                          (Ge.errors =
                                                                            [
                                                                              {
                                                                                instancePath:
                                                                                  t +
                                                                                  '/constraints/' +
                                                                                  xr
                                                                                    .replace(
                                                                                      /~/g,
                                                                                      '~0',
                                                                                    )
                                                                                    .replace(
                                                                                      /\//g,
                                                                                      '~1',
                                                                                    ),
                                                                                schemaPath:
                                                                                  '#/properties/constraints/additionalProperties/required',
                                                                                keyword:
                                                                                  'required',
                                                                                params:
                                                                                  {
                                                                                    missingProperty:
                                                                                      Gr,
                                                                                  },
                                                                                message:
                                                                                  "must have required property '" +
                                                                                  Gr +
                                                                                  "'",
                                                                              },
                                                                            ]),
                                                                          !1
                                                                        );
                                                                      if (
                                                                        Zt.name !==
                                                                        void 0
                                                                      ) {
                                                                        let yr =
                                                                          Zt.name;
                                                                        if (
                                                                          typeof yr !=
                                                                          'string'
                                                                        ) {
                                                                          let jn =
                                                                              typeof yr,
                                                                            Ze;
                                                                          if (
                                                                            Ze ===
                                                                            void 0
                                                                          )
                                                                            if (
                                                                              jn ==
                                                                                'number' ||
                                                                              jn ==
                                                                                'boolean'
                                                                            )
                                                                              Ze =
                                                                                '' +
                                                                                yr;
                                                                            else if (
                                                                              yr ===
                                                                              null
                                                                            )
                                                                              Ze =
                                                                                '';
                                                                            else
                                                                              return (
                                                                                (Ge.errors =
                                                                                  [
                                                                                    {
                                                                                      instancePath:
                                                                                        t +
                                                                                        '/constraints/' +
                                                                                        xr
                                                                                          .replace(
                                                                                            /~/g,
                                                                                            '~0',
                                                                                          )
                                                                                          .replace(
                                                                                            /\//g,
                                                                                            '~1',
                                                                                          ) +
                                                                                        '/name',
                                                                                      schemaPath:
                                                                                        '#/properties/constraints/additionalProperties/properties/name/type',
                                                                                      keyword:
                                                                                        'type',
                                                                                      params:
                                                                                        {
                                                                                          type: 'string',
                                                                                        },
                                                                                      message:
                                                                                        'must be string',
                                                                                    },
                                                                                  ]),
                                                                                !1
                                                                              );
                                                                          Ze !==
                                                                            void 0 &&
                                                                            ((yr =
                                                                              Ze),
                                                                            Zt !==
                                                                              void 0 &&
                                                                              (Zt.name =
                                                                                Ze));
                                                                        }
                                                                      }
                                                                    } else
                                                                      return (
                                                                        (Ge.errors =
                                                                          [
                                                                            {
                                                                              instancePath:
                                                                                t +
                                                                                '/constraints/' +
                                                                                xr
                                                                                  .replace(
                                                                                    /~/g,
                                                                                    '~0',
                                                                                  )
                                                                                  .replace(
                                                                                    /\//g,
                                                                                    '~1',
                                                                                  ),
                                                                              schemaPath:
                                                                                '#/properties/constraints/additionalProperties/type',
                                                                              keyword:
                                                                                'type',
                                                                              params:
                                                                                {
                                                                                  type: 'object',
                                                                                },
                                                                              message:
                                                                                'must be object',
                                                                            },
                                                                          ]),
                                                                        !1
                                                                      );
                                                                  var v =
                                                                    un === o;
                                                                  if (!v) break;
                                                                }
                                                              else
                                                                return (
                                                                  (Ge.errors = [
                                                                    {
                                                                      instancePath:
                                                                        t +
                                                                        '/constraints',
                                                                      schemaPath:
                                                                        '#/properties/constraints/type',
                                                                      keyword:
                                                                        'type',
                                                                      params: {
                                                                        type: 'object',
                                                                      },
                                                                      message:
                                                                        'must be object',
                                                                    },
                                                                  ]),
                                                                  !1
                                                                );
                                                            var a = Wr === o;
                                                          } else var a = !0;
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else
        return (
          (Ge.errors = [
            {
              instancePath: t,
              schemaPath: '#/type',
              keyword: 'type',
              params: { type: 'object' },
              message: 'must be object',
            },
          ]),
          !1
        );
    return (Ge.errors = s), o === 0;
  }
  Zy.exports.defaultInitOptions = {
    connectionTimeout: 0,
    keepAliveTimeout: 72e3,
    maxRequestsPerSocket: 0,
    requestTimeout: 0,
    bodyLimit: 1048576,
    caseSensitive: !0,
    allowUnsafeRegex: !1,
    disableRequestLogging: !1,
    jsonShorthand: !0,
    ignoreTrailingSlash: !1,
    ignoreDuplicateSlashes: !1,
    maxParamLength: 100,
    onProtoPoisoning: 'error',
    onConstructorPoisoning: 'error',
    pluginTimeout: 1e4,
    requestIdHeader: 'request-id',
    requestIdLogLabel: 'reqId',
    http2SessionTimeout: 72e3,
    exposeHeadRoutes: !0,
    useSemicolonDelimiter: !0,
  };
});
var tq = $((eve, eg) => {
  'use strict';
  var Qy = eq(),
    Eoe = em()({ circles: !0, proto: !1 }),
    { FST_ERR_INIT_OPTS_INVALID: Roe } = br();
  function Toe(e) {
    let t = Eoe(e);
    if (!Qy(t)) {
      let r = new Roe(JSON.stringify(Qy.errors.map((n) => n.message)));
      throw ((r.errors = Qy.errors), r);
    }
    return SR(t);
  }
  function SR(e) {
    let t = Object.getOwnPropertyNames(e);
    for (let r of t) {
      let n = e[r];
      (ArrayBuffer.isView(n) && !(n instanceof DataView)) ||
        (e[r] = n && typeof n == 'object' ? SR(n) : n);
    }
    return Object.freeze(e);
  }
  eg.exports = Toe;
  eg.exports.defaultInitOptions = Qy.defaultInitOptions;
  eg.exports.utils = { deepFreezeObject: SR };
});
var cq = $((tve, uq) => {
  'use strict';
  var {
      kAvvioBoot: Poe,
      kChildren: rq,
      kRoutePrefix: nq,
      kLogLevel: sq,
      kLogSerializers: _R,
      kHooks: wR,
      kSchemaController: Zu,
      kContentTypeParser: iq,
      kReply: oq,
      kRequest: aq,
      kFourOhFour: koe,
      kPluginNameChain: lq,
    } = rr(),
    xoe = cm(),
    Coe = Tm(),
    Ooe = WE(),
    Ioe = WS(),
    { buildHooks: Aoe } = ao(),
    rh = ZE();
  uq.exports = function (t, r, n) {
    let i = rh.registerPlugin.call(t, r),
      s = rh.getPluginName(r) || rh.getFuncPreview(r);
    if (i) return t[lq].push(s), t;
    let o = Object.create(t);
    t[rq].push(o),
      (o.ready = t[Poe].bind(o)),
      (o[rq] = []),
      (o[oq] = xoe.buildReply(o[oq])),
      (o[aq] = Coe.buildRequest(o[aq])),
      (o[iq] = Ioe.helpers.buildContentTypeParser(o[iq])),
      (o[wR] = Aoe(o[wR])),
      (o[nq] = $oe(o[nq], n.prefix)),
      (o[sq] = n.logLevel || o[sq]),
      (o[Zu] = Ooe.buildSchemaController(t[Zu])),
      (o.getSchema = o[Zu].getSchema.bind(o[Zu])),
      (o.getSchemas = o[Zu].getSchemas.bind(o[Zu])),
      (o[rh.kRegisteredPlugins] = Object.create(o[rh.kRegisteredPlugins])),
      (o[lq] = [s]),
      (o[_R] || n.logSerializers) &&
        (o[_R] = Object.assign(Object.create(o[_R]), n.logSerializers)),
      n.prefix && o[koe].arrange404(o);
    for (let a of o[wR].onRegister) a.call(this, o, n);
    return o;
  };
  function $oe(e, t) {
    return t
      ? (e.endsWith('/') && t[0] === '/'
          ? (t = t.slice(1))
          : t[0] !== '/' && (t = '/' + t),
        e + t)
      : e;
  }
});
var dq = $((rve, fq) => {
  'use strict';
  fq.exports = function () {
    return {
      [Symbol.iterator]: function* () {},
      add() {},
      delete() {},
      has() {
        return !0;
      },
    };
  };
});
var hq = $((ER) => {
  'use strict';
  ER.parse = Loe;
  ER.serialize = Doe;
  var Noe = Object.prototype.toString,
    tg = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
  function Loe(e, t) {
    if (typeof e != 'string')
      throw new TypeError('argument str must be a string');
    for (var r = {}, n = t || {}, i = n.decode || joe, s = 0; s < e.length; ) {
      var o = e.indexOf('=', s);
      if (o === -1) break;
      var a = e.indexOf(';', s);
      if (a === -1) a = e.length;
      else if (a < o) {
        s = e.lastIndexOf(';', o - 1) + 1;
        continue;
      }
      var u = e.slice(s, o).trim();
      if (r[u] === void 0) {
        var c = e.slice(o + 1, a).trim();
        c.charCodeAt(0) === 34 && (c = c.slice(1, -1)), (r[u] = Moe(c, i));
      }
      s = a + 1;
    }
    return r;
  }
  function Doe(e, t, r) {
    var n = r || {},
      i = n.encode || Foe;
    if (typeof i != 'function') throw new TypeError('option encode is invalid');
    if (!tg.test(e)) throw new TypeError('argument name is invalid');
    var s = i(t);
    if (s && !tg.test(s)) throw new TypeError('argument val is invalid');
    var o = e + '=' + s;
    if (n.maxAge != null) {
      var a = n.maxAge - 0;
      if (isNaN(a) || !isFinite(a))
        throw new TypeError('option maxAge is invalid');
      o += '; Max-Age=' + Math.floor(a);
    }
    if (n.domain) {
      if (!tg.test(n.domain)) throw new TypeError('option domain is invalid');
      o += '; Domain=' + n.domain;
    }
    if (n.path) {
      if (!tg.test(n.path)) throw new TypeError('option path is invalid');
      o += '; Path=' + n.path;
    }
    if (n.expires) {
      var u = n.expires;
      if (!qoe(u) || isNaN(u.valueOf()))
        throw new TypeError('option expires is invalid');
      o += '; Expires=' + u.toUTCString();
    }
    if (
      (n.httpOnly && (o += '; HttpOnly'),
      n.secure && (o += '; Secure'),
      n.partitioned && (o += '; Partitioned'),
      n.priority)
    ) {
      var c =
        typeof n.priority == 'string' ? n.priority.toLowerCase() : n.priority;
      switch (c) {
        case 'low':
          o += '; Priority=Low';
          break;
        case 'medium':
          o += '; Priority=Medium';
          break;
        case 'high':
          o += '; Priority=High';
          break;
        default:
          throw new TypeError('option priority is invalid');
      }
    }
    if (n.sameSite) {
      var d =
        typeof n.sameSite == 'string' ? n.sameSite.toLowerCase() : n.sameSite;
      switch (d) {
        case !0:
          o += '; SameSite=Strict';
          break;
        case 'lax':
          o += '; SameSite=Lax';
          break;
        case 'strict':
          o += '; SameSite=Strict';
          break;
        case 'none':
          o += '; SameSite=None';
          break;
        default:
          throw new TypeError('option sameSite is invalid');
      }
    }
    return o;
  }
  function joe(e) {
    return e.indexOf('%') !== -1 ? decodeURIComponent(e) : e;
  }
  function Foe(e) {
    return encodeURIComponent(e);
  }
  function qoe(e) {
    return Noe.call(e) === '[object Date]' || e instanceof Date;
  }
  function Moe(e, t) {
    try {
      return t(e);
    } catch {
      return e;
    }
  }
});
var yq = $((sve, mq) => {
  'use strict';
  var { URL: pq } = require('node:url'),
    RR = 'http://localhost';
  mq.exports = function (t, r) {
    (typeof t == 'string' ||
      Object.prototype.toString.call(t) === '[object String]') &&
      t.startsWith('//') &&
      (t = RR + t);
    let n = typeof t == 'object' ? Object.assign(new pq(RR), t) : new pq(t, RR);
    if (typeof r == 'string') {
      r = new URLSearchParams(r);
      for (let i of r.keys()) {
        n.searchParams.delete(i);
        for (let s of r.getAll(i)) n.searchParams.append(i, s);
      }
    } else {
      let i = Object.assign({}, t.query, r);
      for (let s in i) {
        let o = i[s];
        if (Array.isArray(o)) {
          n.searchParams.delete(s);
          for (let a of o) n.searchParams.append(s, a);
        } else n.searchParams.set(s, o);
      }
    }
    return n;
  };
});
var gq = $((ive, TR) => {
  'use strict';
  var { randomUUID: Hoe } = require('node:crypto'),
    { Readable: zoe } = require('node:stream'),
    Qu;
  function Uoe(e) {
    return (
      e &&
      typeof e == 'object' &&
      typeof e.append == 'function' &&
      typeof e.delete == 'function' &&
      typeof e.get == 'function' &&
      typeof e.getAll == 'function' &&
      typeof e.has == 'function' &&
      typeof e.set == 'function' &&
      e[Symbol.toStringTag] === 'FormData'
    );
  }
  function Voe(e) {
    Qu = Qu ?? new TextEncoder();
    let t = `----formdata-${Hoe()}`,
      r = `--${t}\r
Content-Disposition: form-data`;
    let n = (u) =>
        u.replace(/\n/g, '%0A').replace(/\r/g, '%0D').replace(/"/g, '%22'),
      i = (u) =>
        u.replace(
          /\r?\n|\r/g,
          `\r
`,
        ),
      s = new Uint8Array([13, 10]);
    async function* o() {
      for (let [u, c] of e)
        if (typeof c == 'string')
          yield Qu.encode(`${r}; name="${n(i(u))}"\r
\r
`),
            yield Qu.encode(`${i(c)}\r
`);
        else {
          let d = `${r}; name="${n(i(u))}"`;
          c.name && (d += `; filename="${n(c.name)}"`),
            (d += `\r
Content-Type: ${c.type || 'application/octet-stream'}\r
\r
`),
            yield Qu.encode(d),
            c.stream ? yield* c.stream() : yield c,
            yield s;
        }
      yield Qu.encode(`--${t}--`);
    }
    return {
      stream: zoe.from(o()),
      contentType: `multipart/form-data; boundary=${t}`,
    };
  }
  TR.exports.isFormDataLike = Uoe;
  TR.exports.formDataToStream = Voe;
});
var Sq = $((ove, rg) => {
  'use strict';
  var { Readable: vq, addAbortSignal: Boe } = require('node:stream'),
    kR = require('node:util'),
    Woe = hq(),
    Goe = require('node:assert'),
    { createDeprecation: Yoe } = V0(),
    Joe = yq(),
    { isFormDataLike: Koe, formDataToStream: Xoe } = gq(),
    { EventEmitter: Zoe } = require('node:events'),
    Qoe = Yoe({
      name: 'FastifyDeprecationLightMyRequest',
      code: 'FST_LIGHTMYREQUEST_DEP01',
      message:
        'You are accessing "request.connection", use "request.socket" instead.',
    });
  function eae(e) {
    return e.port
      ? e.host
      : e.hostname + (e.protocol === 'https:' ? ':443' : ':80');
  }
  var PR = class extends Zoe {
    constructor(t) {
      super(), (this.remoteAddress = t);
    }
  };
  function bq(e) {
    return new t(this);
    function t(r) {
      $s.call(r, { ...e, Request: void 0 }), Object.assign(this, r);
      for (let n of Object.keys($s.prototype))
        this.constructor.prototype[n] = $s.prototype[n];
      return kR.inherits(this.constructor, e.Request), this;
    }
  }
  function $s(e) {
    vq.call(this, { autoDestroy: !1 });
    let t = Joe(e.url || e.path, e.query);
    (this.url = t.pathname + t.search),
      (this.aborted = !1),
      (this.httpVersionMajor = 1),
      (this.httpVersionMinor = 1),
      (this.httpVersion = '1.1'),
      (this.method = e.method ? e.method.toUpperCase() : 'GET'),
      (this.headers = {}),
      (this.rawHeaders = []);
    let r = e.headers || {};
    for (let o in r) {
      let a = o.toLowerCase();
      if ((a === 'user-agent' || a === 'content-type') && r[o] === void 0) {
        this.headers[a] = void 0;
        continue;
      }
      let u = r[o];
      Goe(u !== void 0, 'invalid value "undefined" for header ' + o),
        (this.headers[a] = '' + u);
    }
    if (
      ('user-agent' in this.headers ||
        (this.headers['user-agent'] = 'lightMyRequest'),
      (this.headers.host = this.headers.host || e.authority || eae(t)),
      e.cookies)
    ) {
      let { cookies: o } = e,
        a = Object.keys(o).map((u) => Woe.serialize(u, o[u]));
      this.headers.cookie && a.unshift(this.headers.cookie),
        (this.headers.cookie = a.join('; '));
    }
    (this.socket = new PR(e.remoteAddress || '127.0.0.1')),
      Object.defineProperty(this, 'connection', {
        get() {
          return Qoe(), this.socket;
        },
        configurable: !0,
      });
    let n = e.payload || e.body || null,
      i = n && typeof n.resume == 'function';
    if (Koe(n)) {
      let o = Xoe(n);
      (n = o.stream), (i = !0), (this.headers['content-type'] = o.contentType);
    }
    n &&
      typeof n != 'string' &&
      !i &&
      !Buffer.isBuffer(n) &&
      ((n = JSON.stringify(n)),
      'content-type' in this.headers ||
        (this.headers['content-type'] = 'application/json')),
      n &&
        !i &&
        !Object.prototype.hasOwnProperty.call(this.headers, 'content-length') &&
        (this.headers['content-length'] = (
          Buffer.isBuffer(n) ? n.length : Buffer.byteLength(n)
        ).toString());
    for (let o of Object.keys(this.headers))
      this.rawHeaders.push(o, this.headers[o]);
    this._lightMyRequest = {
      payload: n,
      isDone: !1,
      simulate: e.simulate || {},
    };
    let s = e.signal;
    return s && Boe(s, this), this;
  }
  kR.inherits($s, vq);
  kR.inherits(bq, $s);
  $s.prototype.prepare = function (e) {
    let t = this._lightMyRequest.payload;
    if (!t || typeof t.resume != 'function') return e();
    let r = [];
    t.on('data', (n) => r.push(Buffer.from(n))),
      t.on('end', () => {
        let n = Buffer.concat(r);
        return (
          (this.headers['content-length'] =
            this.headers['content-length'] || '' + n.length),
          (this._lightMyRequest.payload = n),
          e()
        );
      }),
      t.resume();
  };
  $s.prototype._read = function (e) {
    setImmediate(() => {
      if (this._lightMyRequest.isDone) {
        this._lightMyRequest.simulate.end !== !1 && this.push(null);
        return;
      }
      (this._lightMyRequest.isDone = !0),
        this._lightMyRequest.payload &&
          (this._lightMyRequest.simulate.split
            ? (this.push(this._lightMyRequest.payload.slice(0, 1)),
              this.push(this._lightMyRequest.payload.slice(1)))
            : this.push(this._lightMyRequest.payload)),
        this._lightMyRequest.simulate.error &&
          this.emit('error', new Error('Simulated')),
        this._lightMyRequest.simulate.close && this.emit('close'),
        this._lightMyRequest.simulate.end !== !1 && this.push(null);
    });
  };
  $s.prototype.destroy = function (e) {
    this.destroyed ||
      this._lightMyRequest.isDone ||
      ((this.destroyed = !0),
      e && ((this._error = !0), process.nextTick(() => this.emit('error', e))),
      process.nextTick(() => this.emit('close')));
  };
  rg.exports = $s;
  rg.exports.Request = $s;
  rg.exports.CustomRequest = bq;
});
var wq = $((ave, nh) => {
  'use strict';
  var ec = { decodeValues: !0, map: !1, silent: !1 };
  function xR(e) {
    return typeof e == 'string' && !!e.trim();
  }
  function CR(e, t) {
    var r = e.split(';').filter(xR),
      n = r.shift(),
      i = tae(n),
      s = i.name,
      o = i.value;
    t = t ? Object.assign({}, ec, t) : ec;
    try {
      o = t.decodeValues ? decodeURIComponent(o) : o;
    } catch (u) {
      console.error(
        "set-cookie-parser encountered an error while decoding a cookie with value '" +
          o +
          "'. Set options.decodeValues to false to disable this feature.",
        u,
      );
    }
    var a = { name: s, value: o };
    return (
      r.forEach(function (u) {
        var c = u.split('='),
          d = c.shift().trimLeft().toLowerCase(),
          m = c.join('=');
        d === 'expires'
          ? (a.expires = new Date(m))
          : d === 'max-age'
            ? (a.maxAge = parseInt(m, 10))
            : d === 'secure'
              ? (a.secure = !0)
              : d === 'httponly'
                ? (a.httpOnly = !0)
                : d === 'samesite'
                  ? (a.sameSite = m)
                  : (a[d] = m);
      }),
      a
    );
  }
  function tae(e) {
    var t = '',
      r = '',
      n = e.split('=');
    return (
      n.length > 1 ? ((t = n.shift()), (r = n.join('='))) : (r = e),
      { name: t, value: r }
    );
  }
  function _q(e, t) {
    if (((t = t ? Object.assign({}, ec, t) : ec), !e)) return t.map ? {} : [];
    if (e.headers)
      if (typeof e.headers.getSetCookie == 'function')
        e = e.headers.getSetCookie();
      else if (e.headers['set-cookie']) e = e.headers['set-cookie'];
      else {
        var r =
          e.headers[
            Object.keys(e.headers).find(function (i) {
              return i.toLowerCase() === 'set-cookie';
            })
          ];
        !r &&
          e.headers.cookie &&
          !t.silent &&
          console.warn(
            'Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.',
          ),
          (e = r);
      }
    if (
      (Array.isArray(e) || (e = [e]),
      (t = t ? Object.assign({}, ec, t) : ec),
      t.map)
    ) {
      var n = {};
      return e.filter(xR).reduce(function (i, s) {
        var o = CR(s, t);
        return (i[o.name] = o), i;
      }, n);
    } else
      return e.filter(xR).map(function (i) {
        return CR(i, t);
      });
  }
  function rae(e) {
    if (Array.isArray(e)) return e;
    if (typeof e != 'string') return [];
    var t = [],
      r = 0,
      n,
      i,
      s,
      o,
      a;
    function u() {
      for (; r < e.length && /\s/.test(e.charAt(r)); ) r += 1;
      return r < e.length;
    }
    function c() {
      return (i = e.charAt(r)), i !== '=' && i !== ';' && i !== ',';
    }
    for (; r < e.length; ) {
      for (n = r, a = !1; u(); )
        if (((i = e.charAt(r)), i === ',')) {
          for (s = r, r += 1, u(), o = r; r < e.length && c(); ) r += 1;
          r < e.length && e.charAt(r) === '='
            ? ((a = !0), (r = o), t.push(e.substring(n, s)), (n = r))
            : (r = s + 1);
        } else r += 1;
      (!a || r >= e.length) && t.push(e.substring(n, e.length));
    }
    return t;
  }
  nh.exports = _q;
  nh.exports.parse = _q;
  nh.exports.parseString = CR;
  nh.exports.splitCookiesString = rae;
});
var Tq = $((lve, Rq) => {
  'use strict';
  var sh = require('node:http'),
    { Writable: nae, Readable: sae } = require('node:stream'),
    iae = require('node:util'),
    oae = wq();
  function Io(e, t, r) {
    sh.ServerResponse.call(this, e),
      (this._lightMyRequest = {
        headers: null,
        trailers: {},
        payloadChunks: [],
      }),
      this.setHeader('foo', 'bar'),
      this.removeHeader('foo'),
      this.assignSocket(lae()),
      (this._promiseCallback = typeof r == 'function');
    let n = !1,
      i = (o) => {
        if (((n = !0), this._promiseCallback))
          return process.nextTick(() => t(o));
        process.nextTick(() => t(null, o));
      },
      s = (o) => {
        if (!n) {
          if (((n = !0), this._promiseCallback))
            return process.nextTick(() => r(o));
          process.nextTick(() => t(o, null));
        }
      };
    this.once('finish', () => {
      let o = aae(this);
      (o.raw.req = e), i(o);
    }),
      this.connection.once('error', s),
      this.once('error', s),
      this.once('close', s);
  }
  iae.inherits(Io, sh.ServerResponse);
  Io.prototype.setTimeout = function (e, t) {
    return (
      (this.timeoutHandle = setTimeout(() => {
        this.emit('timeout');
      }, e)),
      this.on('timeout', t),
      this
    );
  };
  Io.prototype.writeHead = function () {
    let e = sh.ServerResponse.prototype.writeHead.apply(this, arguments);
    return Eq(this), e;
  };
  Io.prototype.write = function (e, t, r) {
    return (
      this.timeoutHandle && clearTimeout(this.timeoutHandle),
      sh.ServerResponse.prototype.write.call(this, e, t, r),
      this._lightMyRequest.payloadChunks.push(Buffer.from(e, t)),
      !0
    );
  };
  Io.prototype.end = function (e, t, r) {
    e && this.write(e, t),
      sh.ServerResponse.prototype.end.call(this, r),
      this.emit('finish'),
      this.destroy();
  };
  Io.prototype.destroy = function (e) {
    this.destroyed ||
      ((this.destroyed = !0),
      e && process.nextTick(() => this.emit('error', e)),
      process.nextTick(() => this.emit('close')));
  };
  Io.prototype.addTrailers = function (e) {
    for (let t in e)
      this._lightMyRequest.trailers[t.toLowerCase().trim()] = e[t]
        .toString()
        .trim();
  };
  function aae(e) {
    e._lightMyRequest.headers === null && Eq(e), uae(e);
    let t = {
        raw: { res: e },
        headers: e._lightMyRequest.headers,
        statusCode: e.statusCode,
        statusMessage: e.statusMessage,
        trailers: {},
        get cookies() {
          return oae.parse(this);
        },
      },
      r = Buffer.concat(e._lightMyRequest.payloadChunks);
    return (
      (t.rawPayload = r),
      (t.payload = r.toString()),
      (t.body = t.payload),
      (t.trailers = e._lightMyRequest.trailers),
      (t.json = function () {
        return JSON.parse(t.payload);
      }),
      (t.stream = function () {
        return sae.from(e._lightMyRequest.payloadChunks);
      }),
      t
    );
  }
  function lae() {
    return new nae({
      write(e, t, r) {
        setImmediate(r);
      },
    });
  }
  function uae(e) {
    let t = e._lightMyRequest.headers;
    for (let r of Object.keys(t)) {
      let n = t[r];
      Array.isArray(n) ? (t[r] = n.map((i) => '' + i)) : (t[r] = '' + n);
    }
  }
  function Eq(e) {
    (e._lightMyRequest.headers = Object.assign({}, e.getHeaders())),
      ['Date', 'Connection', 'Transfer-Encoding'].forEach((t) => {
        let r = new RegExp('\\r\\n' + t + ': ([^\\r]*)\\r\\n'),
          n = e._header.match(r);
        n && (e._lightMyRequest.headers[t.toLowerCase()] = n[1]);
      });
  }
  Rq.exports = Io;
});
var Pq = $((uve, OR) => {
  'use strict';
  OR.exports = Bt;
  OR.exports.default = Bt;
  var cae = {
    type: 'object',
    properties: {
      url: {
        oneOf: [
          { type: 'string' },
          {
            type: 'object',
            properties: {
              protocol: { type: 'string' },
              hostname: { type: 'string' },
              pathname: { type: 'string' },
            },
            additionalProperties: !0,
            required: ['pathname'],
          },
        ],
      },
      path: {
        oneOf: [
          { type: 'string' },
          {
            type: 'object',
            properties: {
              protocol: { type: 'string' },
              hostname: { type: 'string' },
              pathname: { type: 'string' },
            },
            additionalProperties: !0,
            required: ['pathname'],
          },
        ],
      },
      cookies: { type: 'object', additionalProperties: !0 },
      headers: { type: 'object', additionalProperties: !0 },
      query: {
        anyOf: [
          { type: 'object', additionalProperties: !0 },
          { type: 'string' },
        ],
      },
      simulate: {
        type: 'object',
        properties: {
          end: { type: 'boolean' },
          split: { type: 'boolean' },
          error: { type: 'boolean' },
          close: { type: 'boolean' },
        },
      },
      authority: { type: 'string' },
      remoteAddress: { type: 'string' },
      method: {
        type: 'string',
        enum: [
          'ACL',
          'BIND',
          'CHECKOUT',
          'CONNECT',
          'COPY',
          'DELETE',
          'GET',
          'HEAD',
          'LINK',
          'LOCK',
          'M-SEARCH',
          'MERGE',
          'MKACTIVITY',
          'MKCALENDAR',
          'MKCOL',
          'MOVE',
          'NOTIFY',
          'OPTIONS',
          'PATCH',
          'POST',
          'PROPFIND',
          'PROPPATCH',
          'PURGE',
          'PUT',
          'REBIND',
          'REPORT',
          'SEARCH',
          'SOURCE',
          'SUBSCRIBE',
          'TRACE',
          'UNBIND',
          'UNLINK',
          'UNLOCK',
          'UNSUBSCRIBE',
          'acl',
          'bind',
          'checkout',
          'connect',
          'copy',
          'delete',
          'get',
          'head',
          'link',
          'lock',
          'm-search',
          'merge',
          'mkactivity',
          'mkcalendar',
          'mkcol',
          'move',
          'notify',
          'options',
          'patch',
          'post',
          'propfind',
          'proppatch',
          'purge',
          'put',
          'rebind',
          'report',
          'search',
          'source',
          'subscribe',
          'trace',
          'unbind',
          'unlink',
          'unlock',
          'unsubscribe',
        ],
      },
      validate: { type: 'boolean' },
    },
    additionalProperties: !0,
    oneOf: [{ required: ['url'] }, { required: ['path'] }],
  };
  function Bt(
    e,
    {
      instancePath: t = '',
      parentData: r,
      parentDataProperty: n,
      rootData: i = e,
    } = {},
  ) {
    let s = null,
      o = 0,
      a = o,
      u = !1,
      c = null,
      d = o;
    if (e && typeof e == 'object' && !Array.isArray(e)) {
      let E;
      if (e.url === void 0 && (E = 'url')) {
        let j = {
          instancePath: t,
          schemaPath: '#/oneOf/0/required',
          keyword: 'required',
          params: { missingProperty: E },
          message: "must have required property '" + E + "'",
        };
        s === null ? (s = [j]) : s.push(j), o++;
      }
    }
    var g = d === o;
    g && ((u = !0), (c = 0));
    let m = o;
    if (e && typeof e == 'object' && !Array.isArray(e)) {
      let E;
      if (e.path === void 0 && (E = 'path')) {
        let j = {
          instancePath: t,
          schemaPath: '#/oneOf/1/required',
          keyword: 'required',
          params: { missingProperty: E },
          message: "must have required property '" + E + "'",
        };
        s === null ? (s = [j]) : s.push(j), o++;
      }
    }
    var g = m === o;
    if ((g && u ? ((u = !1), (c = [c, 1])) : g && ((u = !0), (c = 1)), u))
      (o = a), s !== null && (a ? (s.length = a) : (s = null));
    else {
      let E = {
        instancePath: t,
        schemaPath: '#/oneOf',
        keyword: 'oneOf',
        params: { passingSchemas: c },
        message: 'must match exactly one schema in oneOf',
      };
      return s === null ? (s = [E]) : s.push(E), o++, (Bt.errors = s), !1;
    }
    if (o === 0)
      if (e && typeof e == 'object' && !Array.isArray(e)) {
        if (e.url !== void 0) {
          let E = e.url,
            j = o,
            q = o,
            O = !1,
            F = null,
            U = o;
          if (typeof E != 'string') {
            let G = typeof E,
              Y;
            if (Y === void 0)
              if (G == 'number' || G == 'boolean') Y = '' + E;
              else if (E === null) Y = '';
              else {
                let W = {
                  instancePath: t + '/url',
                  schemaPath: '#/properties/url/oneOf/0/type',
                  keyword: 'type',
                  params: { type: 'string' },
                  message: 'must be string',
                };
                s === null ? (s = [W]) : s.push(W), o++;
              }
            Y !== void 0 && ((E = Y), e !== void 0 && (e.url = Y));
          }
          var S = U === o;
          S && ((O = !0), (F = 0));
          let D = o;
          if (o === D)
            if (E && typeof E == 'object' && !Array.isArray(E)) {
              let G;
              if (E.pathname === void 0 && (G = 'pathname')) {
                let Y = {
                  instancePath: t + '/url',
                  schemaPath: '#/properties/url/oneOf/1/required',
                  keyword: 'required',
                  params: { missingProperty: G },
                  message: "must have required property '" + G + "'",
                };
                s === null ? (s = [Y]) : s.push(Y), o++;
              } else {
                if (E.protocol !== void 0) {
                  let Y = E.protocol,
                    W = o;
                  if (typeof Y != 'string') {
                    let de = typeof Y,
                      X;
                    if (X === void 0)
                      if (de == 'number' || de == 'boolean') X = '' + Y;
                      else if (Y === null) X = '';
                      else {
                        let se = {
                          instancePath: t + '/url/protocol',
                          schemaPath:
                            '#/properties/url/oneOf/1/properties/protocol/type',
                          keyword: 'type',
                          params: { type: 'string' },
                          message: 'must be string',
                        };
                        s === null ? (s = [se]) : s.push(se), o++;
                      }
                    X !== void 0 && ((Y = X), E !== void 0 && (E.protocol = X));
                  }
                  var v = W === o;
                } else var v = !0;
                if (v) {
                  if (E.hostname !== void 0) {
                    let Y = E.hostname,
                      W = o;
                    if (typeof Y != 'string') {
                      let X = typeof Y,
                        se;
                      if (se === void 0)
                        if (X == 'number' || X == 'boolean') se = '' + Y;
                        else if (Y === null) se = '';
                        else {
                          let ae = {
                            instancePath: t + '/url/hostname',
                            schemaPath:
                              '#/properties/url/oneOf/1/properties/hostname/type',
                            keyword: 'type',
                            params: { type: 'string' },
                            message: 'must be string',
                          };
                          s === null ? (s = [ae]) : s.push(ae), o++;
                        }
                      se !== void 0 &&
                        ((Y = se), E !== void 0 && (E.hostname = se));
                    }
                    var v = W === o;
                  } else var v = !0;
                  if (v)
                    if (E.pathname !== void 0) {
                      let Y = E.pathname,
                        W = o;
                      if (typeof Y != 'string') {
                        let X = typeof Y,
                          se;
                        if (se === void 0)
                          if (X == 'number' || X == 'boolean') se = '' + Y;
                          else if (Y === null) se = '';
                          else {
                            let ae = {
                              instancePath: t + '/url/pathname',
                              schemaPath:
                                '#/properties/url/oneOf/1/properties/pathname/type',
                              keyword: 'type',
                              params: { type: 'string' },
                              message: 'must be string',
                            };
                            s === null ? (s = [ae]) : s.push(ae), o++;
                          }
                        se !== void 0 &&
                          ((Y = se), E !== void 0 && (E.pathname = se));
                      }
                      var v = W === o;
                    } else var v = !0;
                }
              }
            } else {
              let G = {
                instancePath: t + '/url',
                schemaPath: '#/properties/url/oneOf/1/type',
                keyword: 'type',
                params: { type: 'object' },
                message: 'must be object',
              };
              s === null ? (s = [G]) : s.push(G), o++;
            }
          var S = D === o;
          if ((S && O ? ((O = !1), (F = [F, 1])) : S && ((O = !0), (F = 1)), O))
            (o = q), s !== null && (q ? (s.length = q) : (s = null));
          else {
            let G = {
              instancePath: t + '/url',
              schemaPath: '#/properties/url/oneOf',
              keyword: 'oneOf',
              params: { passingSchemas: F },
              message: 'must match exactly one schema in oneOf',
            };
            return s === null ? (s = [G]) : s.push(G), o++, (Bt.errors = s), !1;
          }
          var w = j === o;
        } else var w = !0;
        if (w) {
          if (e.path !== void 0) {
            let E = e.path,
              j = o,
              q = o,
              O = !1,
              F = null,
              U = o;
            if (typeof E != 'string') {
              let Y = typeof E,
                W;
              if (W === void 0)
                if (Y == 'number' || Y == 'boolean') W = '' + E;
                else if (E === null) W = '';
                else {
                  let de = {
                    instancePath: t + '/path',
                    schemaPath: '#/properties/path/oneOf/0/type',
                    keyword: 'type',
                    params: { type: 'string' },
                    message: 'must be string',
                  };
                  s === null ? (s = [de]) : s.push(de), o++;
                }
              W !== void 0 && ((E = W), e !== void 0 && (e.path = W));
            }
            var C = U === o;
            C && ((O = !0), (F = 0));
            let D = o;
            if (o === D)
              if (E && typeof E == 'object' && !Array.isArray(E)) {
                let Y;
                if (E.pathname === void 0 && (Y = 'pathname')) {
                  let W = {
                    instancePath: t + '/path',
                    schemaPath: '#/properties/path/oneOf/1/required',
                    keyword: 'required',
                    params: { missingProperty: Y },
                    message: "must have required property '" + Y + "'",
                  };
                  s === null ? (s = [W]) : s.push(W), o++;
                } else {
                  if (E.protocol !== void 0) {
                    let W = E.protocol,
                      de = o;
                    if (typeof W != 'string') {
                      let X = typeof W,
                        se;
                      if (se === void 0)
                        if (X == 'number' || X == 'boolean') se = '' + W;
                        else if (W === null) se = '';
                        else {
                          let ae = {
                            instancePath: t + '/path/protocol',
                            schemaPath:
                              '#/properties/path/oneOf/1/properties/protocol/type',
                            keyword: 'type',
                            params: { type: 'string' },
                            message: 'must be string',
                          };
                          s === null ? (s = [ae]) : s.push(ae), o++;
                        }
                      se !== void 0 &&
                        ((W = se), E !== void 0 && (E.protocol = se));
                    }
                    var T = de === o;
                  } else var T = !0;
                  if (T) {
                    if (E.hostname !== void 0) {
                      let W = E.hostname,
                        de = o;
                      if (typeof W != 'string') {
                        let se = typeof W,
                          ae;
                        if (ae === void 0)
                          if (se == 'number' || se == 'boolean') ae = '' + W;
                          else if (W === null) ae = '';
                          else {
                            let qe = {
                              instancePath: t + '/path/hostname',
                              schemaPath:
                                '#/properties/path/oneOf/1/properties/hostname/type',
                              keyword: 'type',
                              params: { type: 'string' },
                              message: 'must be string',
                            };
                            s === null ? (s = [qe]) : s.push(qe), o++;
                          }
                        ae !== void 0 &&
                          ((W = ae), E !== void 0 && (E.hostname = ae));
                      }
                      var T = de === o;
                    } else var T = !0;
                    if (T)
                      if (E.pathname !== void 0) {
                        let W = E.pathname,
                          de = o;
                        if (typeof W != 'string') {
                          let se = typeof W,
                            ae;
                          if (ae === void 0)
                            if (se == 'number' || se == 'boolean') ae = '' + W;
                            else if (W === null) ae = '';
                            else {
                              let qe = {
                                instancePath: t + '/path/pathname',
                                schemaPath:
                                  '#/properties/path/oneOf/1/properties/pathname/type',
                                keyword: 'type',
                                params: { type: 'string' },
                                message: 'must be string',
                              };
                              s === null ? (s = [qe]) : s.push(qe), o++;
                            }
                          ae !== void 0 &&
                            ((W = ae), E !== void 0 && (E.pathname = ae));
                        }
                        var T = de === o;
                      } else var T = !0;
                  }
                }
              } else {
                let Y = {
                  instancePath: t + '/path',
                  schemaPath: '#/properties/path/oneOf/1/type',
                  keyword: 'type',
                  params: { type: 'object' },
                  message: 'must be object',
                };
                s === null ? (s = [Y]) : s.push(Y), o++;
              }
            var C = D === o;
            if (
              (C && O ? ((O = !1), (F = [F, 1])) : C && ((O = !0), (F = 1)), O)
            )
              (o = q), s !== null && (q ? (s.length = q) : (s = null));
            else {
              let Y = {
                instancePath: t + '/path',
                schemaPath: '#/properties/path/oneOf',
                keyword: 'oneOf',
                params: { passingSchemas: F },
                message: 'must match exactly one schema in oneOf',
              };
              return (
                s === null ? (s = [Y]) : s.push(Y), o++, (Bt.errors = s), !1
              );
            }
            var w = j === o;
          } else var w = !0;
          if (w) {
            if (e.cookies !== void 0) {
              let E = e.cookies,
                j = o;
              if (o === j && !(E && typeof E == 'object' && !Array.isArray(E)))
                return (
                  (Bt.errors = [
                    {
                      instancePath: t + '/cookies',
                      schemaPath: '#/properties/cookies/type',
                      keyword: 'type',
                      params: { type: 'object' },
                      message: 'must be object',
                    },
                  ]),
                  !1
                );
              var w = j === o;
            } else var w = !0;
            if (w) {
              if (e.headers !== void 0) {
                let E = e.headers,
                  j = o;
                if (
                  o === j &&
                  !(E && typeof E == 'object' && !Array.isArray(E))
                )
                  return (
                    (Bt.errors = [
                      {
                        instancePath: t + '/headers',
                        schemaPath: '#/properties/headers/type',
                        keyword: 'type',
                        params: { type: 'object' },
                        message: 'must be object',
                      },
                    ]),
                    !1
                  );
                var w = j === o;
              } else var w = !0;
              if (w) {
                if (e.query !== void 0) {
                  let E = e.query,
                    j = o,
                    q = o,
                    O = !1,
                    F = o;
                  if (
                    o === F &&
                    !(E && typeof E == 'object' && !Array.isArray(E))
                  ) {
                    let D = {
                      instancePath: t + '/query',
                      schemaPath: '#/properties/query/anyOf/0/type',
                      keyword: 'type',
                      params: { type: 'object' },
                      message: 'must be object',
                    };
                    s === null ? (s = [D]) : s.push(D), o++;
                  }
                  var I = F === o;
                  if (((O = O || I), !O)) {
                    let D = o;
                    if (typeof E != 'string') {
                      let Y = typeof E,
                        W;
                      if (W === void 0)
                        if (Y == 'number' || Y == 'boolean') W = '' + E;
                        else if (E === null) W = '';
                        else {
                          let de = {
                            instancePath: t + '/query',
                            schemaPath: '#/properties/query/anyOf/1/type',
                            keyword: 'type',
                            params: { type: 'string' },
                            message: 'must be string',
                          };
                          s === null ? (s = [de]) : s.push(de), o++;
                        }
                      W !== void 0 && ((E = W), e !== void 0 && (e.query = W));
                    }
                    var I = D === o;
                    O = O || I;
                  }
                  if (O)
                    (o = q), s !== null && (q ? (s.length = q) : (s = null));
                  else {
                    let D = {
                      instancePath: t + '/query',
                      schemaPath: '#/properties/query/anyOf',
                      keyword: 'anyOf',
                      params: {},
                      message: 'must match a schema in anyOf',
                    };
                    return (
                      s === null ? (s = [D]) : s.push(D),
                      o++,
                      (Bt.errors = s),
                      !1
                    );
                  }
                  var w = j === o;
                } else var w = !0;
                if (w) {
                  if (e.simulate !== void 0) {
                    let E = e.simulate,
                      j = o;
                    if (o === j)
                      if (E && typeof E == 'object' && !Array.isArray(E)) {
                        if (E.end !== void 0) {
                          let O = E.end,
                            F = o;
                          if (typeof O != 'boolean') {
                            let U;
                            if (U === void 0)
                              if (O === 'false' || O === 0 || O === null)
                                U = !1;
                              else if (O === 'true' || O === 1) U = !0;
                              else
                                return (
                                  (Bt.errors = [
                                    {
                                      instancePath: t + '/simulate/end',
                                      schemaPath:
                                        '#/properties/simulate/properties/end/type',
                                      keyword: 'type',
                                      params: { type: 'boolean' },
                                      message: 'must be boolean',
                                    },
                                  ]),
                                  !1
                                );
                            U !== void 0 &&
                              ((O = U), E !== void 0 && (E.end = U));
                          }
                          var x = F === o;
                        } else var x = !0;
                        if (x) {
                          if (E.split !== void 0) {
                            let O = E.split,
                              F = o;
                            if (typeof O != 'boolean') {
                              let D;
                              if (D === void 0)
                                if (O === 'false' || O === 0 || O === null)
                                  D = !1;
                                else if (O === 'true' || O === 1) D = !0;
                                else
                                  return (
                                    (Bt.errors = [
                                      {
                                        instancePath: t + '/simulate/split',
                                        schemaPath:
                                          '#/properties/simulate/properties/split/type',
                                        keyword: 'type',
                                        params: { type: 'boolean' },
                                        message: 'must be boolean',
                                      },
                                    ]),
                                    !1
                                  );
                              D !== void 0 &&
                                ((O = D), E !== void 0 && (E.split = D));
                            }
                            var x = F === o;
                          } else var x = !0;
                          if (x) {
                            if (E.error !== void 0) {
                              let O = E.error,
                                F = o;
                              if (typeof O != 'boolean') {
                                let D;
                                if (D === void 0)
                                  if (O === 'false' || O === 0 || O === null)
                                    D = !1;
                                  else if (O === 'true' || O === 1) D = !0;
                                  else
                                    return (
                                      (Bt.errors = [
                                        {
                                          instancePath: t + '/simulate/error',
                                          schemaPath:
                                            '#/properties/simulate/properties/error/type',
                                          keyword: 'type',
                                          params: { type: 'boolean' },
                                          message: 'must be boolean',
                                        },
                                      ]),
                                      !1
                                    );
                                D !== void 0 &&
                                  ((O = D), E !== void 0 && (E.error = D));
                              }
                              var x = F === o;
                            } else var x = !0;
                            if (x)
                              if (E.close !== void 0) {
                                let O = E.close,
                                  F = o;
                                if (typeof O != 'boolean') {
                                  let D;
                                  if (D === void 0)
                                    if (O === 'false' || O === 0 || O === null)
                                      D = !1;
                                    else if (O === 'true' || O === 1) D = !0;
                                    else
                                      return (
                                        (Bt.errors = [
                                          {
                                            instancePath: t + '/simulate/close',
                                            schemaPath:
                                              '#/properties/simulate/properties/close/type',
                                            keyword: 'type',
                                            params: { type: 'boolean' },
                                            message: 'must be boolean',
                                          },
                                        ]),
                                        !1
                                      );
                                  D !== void 0 &&
                                    ((O = D), E !== void 0 && (E.close = D));
                                }
                                var x = F === o;
                              } else var x = !0;
                          }
                        }
                      } else
                        return (
                          (Bt.errors = [
                            {
                              instancePath: t + '/simulate',
                              schemaPath: '#/properties/simulate/type',
                              keyword: 'type',
                              params: { type: 'object' },
                              message: 'must be object',
                            },
                          ]),
                          !1
                        );
                    var w = j === o;
                  } else var w = !0;
                  if (w) {
                    if (e.authority !== void 0) {
                      let E = e.authority,
                        j = o;
                      if (typeof E != 'string') {
                        let O = typeof E,
                          F;
                        if (F === void 0)
                          if (O == 'number' || O == 'boolean') F = '' + E;
                          else if (E === null) F = '';
                          else
                            return (
                              (Bt.errors = [
                                {
                                  instancePath: t + '/authority',
                                  schemaPath: '#/properties/authority/type',
                                  keyword: 'type',
                                  params: { type: 'string' },
                                  message: 'must be string',
                                },
                              ]),
                              !1
                            );
                        F !== void 0 &&
                          ((E = F), e !== void 0 && (e.authority = F));
                      }
                      var w = j === o;
                    } else var w = !0;
                    if (w) {
                      if (e.remoteAddress !== void 0) {
                        let E = e.remoteAddress,
                          j = o;
                        if (typeof E != 'string') {
                          let O = typeof E,
                            F;
                          if (F === void 0)
                            if (O == 'number' || O == 'boolean') F = '' + E;
                            else if (E === null) F = '';
                            else
                              return (
                                (Bt.errors = [
                                  {
                                    instancePath: t + '/remoteAddress',
                                    schemaPath:
                                      '#/properties/remoteAddress/type',
                                    keyword: 'type',
                                    params: { type: 'string' },
                                    message: 'must be string',
                                  },
                                ]),
                                !1
                              );
                          F !== void 0 &&
                            ((E = F), e !== void 0 && (e.remoteAddress = F));
                        }
                        var w = j === o;
                      } else var w = !0;
                      if (w) {
                        if (e.method !== void 0) {
                          let E = e.method,
                            j = o;
                          if (typeof E != 'string') {
                            let O = typeof E,
                              F;
                            if (F === void 0)
                              if (O == 'number' || O == 'boolean') F = '' + E;
                              else if (E === null) F = '';
                              else
                                return (
                                  (Bt.errors = [
                                    {
                                      instancePath: t + '/method',
                                      schemaPath: '#/properties/method/type',
                                      keyword: 'type',
                                      params: { type: 'string' },
                                      message: 'must be string',
                                    },
                                  ]),
                                  !1
                                );
                            F !== void 0 &&
                              ((E = F), e !== void 0 && (e.method = F));
                          }
                          if (
                            !(
                              E === 'ACL' ||
                              E === 'BIND' ||
                              E === 'CHECKOUT' ||
                              E === 'CONNECT' ||
                              E === 'COPY' ||
                              E === 'DELETE' ||
                              E === 'GET' ||
                              E === 'HEAD' ||
                              E === 'LINK' ||
                              E === 'LOCK' ||
                              E === 'M-SEARCH' ||
                              E === 'MERGE' ||
                              E === 'MKACTIVITY' ||
                              E === 'MKCALENDAR' ||
                              E === 'MKCOL' ||
                              E === 'MOVE' ||
                              E === 'NOTIFY' ||
                              E === 'OPTIONS' ||
                              E === 'PATCH' ||
                              E === 'POST' ||
                              E === 'PROPFIND' ||
                              E === 'PROPPATCH' ||
                              E === 'PURGE' ||
                              E === 'PUT' ||
                              E === 'REBIND' ||
                              E === 'REPORT' ||
                              E === 'SEARCH' ||
                              E === 'SOURCE' ||
                              E === 'SUBSCRIBE' ||
                              E === 'TRACE' ||
                              E === 'UNBIND' ||
                              E === 'UNLINK' ||
                              E === 'UNLOCK' ||
                              E === 'UNSUBSCRIBE' ||
                              E === 'acl' ||
                              E === 'bind' ||
                              E === 'checkout' ||
                              E === 'connect' ||
                              E === 'copy' ||
                              E === 'delete' ||
                              E === 'get' ||
                              E === 'head' ||
                              E === 'link' ||
                              E === 'lock' ||
                              E === 'm-search' ||
                              E === 'merge' ||
                              E === 'mkactivity' ||
                              E === 'mkcalendar' ||
                              E === 'mkcol' ||
                              E === 'move' ||
                              E === 'notify' ||
                              E === 'options' ||
                              E === 'patch' ||
                              E === 'post' ||
                              E === 'propfind' ||
                              E === 'proppatch' ||
                              E === 'purge' ||
                              E === 'put' ||
                              E === 'rebind' ||
                              E === 'report' ||
                              E === 'search' ||
                              E === 'source' ||
                              E === 'subscribe' ||
                              E === 'trace' ||
                              E === 'unbind' ||
                              E === 'unlink' ||
                              E === 'unlock' ||
                              E === 'unsubscribe'
                            )
                          )
                            return (
                              (Bt.errors = [
                                {
                                  instancePath: t + '/method',
                                  schemaPath: '#/properties/method/enum',
                                  keyword: 'enum',
                                  params: {
                                    allowedValues: cae.properties.method.enum,
                                  },
                                  message:
                                    'must be equal to one of the allowed values',
                                },
                              ]),
                              !1
                            );
                          var w = j === o;
                        } else var w = !0;
                        if (w)
                          if (e.validate !== void 0) {
                            let E = e.validate,
                              j = o;
                            if (typeof E != 'boolean') {
                              let O;
                              if (O === void 0)
                                if (E === 'false' || E === 0 || E === null)
                                  O = !1;
                                else if (E === 'true' || E === 1) O = !0;
                                else
                                  return (
                                    (Bt.errors = [
                                      {
                                        instancePath: t + '/validate',
                                        schemaPath:
                                          '#/properties/validate/type',
                                        keyword: 'type',
                                        params: { type: 'boolean' },
                                        message: 'must be boolean',
                                      },
                                    ]),
                                    !1
                                  );
                              O !== void 0 &&
                                ((E = O), e !== void 0 && (e.validate = O));
                            }
                            var w = j === o;
                          } else var w = !0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else
        return (
          (Bt.errors = [
            {
              instancePath: t,
              schemaPath: '#/type',
              keyword: 'type',
              params: { type: 'object' },
              message: 'must be object',
            },
          ]),
          !1
        );
    return (Bt.errors = s), o === 0;
  }
});
var Cq = $((cve, oh) => {
  'use strict';
  var fae = require('node:assert'),
    IR = Sq(),
    ng = Tq(),
    ig = 'The dispatch function has already been invoked',
    kq = Pq();
  function AR(e, t, r) {
    return r === void 0 ? new ih(e, t) : sg(e, t, r);
  }
  function xq(e, t, r, n) {
    return (
      r.once('error', function (i) {
        this.destroyed && n.destroy(i);
      }),
      r.once('close', function () {
        this.destroyed && !this._error && n.destroy();
      }),
      r.prepare(() => e.call(t, r, n))
    );
  }
  function sg(e, t, r) {
    if (
      ((t = typeof t == 'string' ? { url: t } : t),
      t.validate !== !1 &&
        (fae(typeof e == 'function', 'dispatchFunc should be a function'),
        !kq(t)))
    )
      throw new Error(kq.errors.map((o) => o.message));
    let n = t.server || {},
      i = t.Request ? IR.CustomRequest : IR;
    if (
      (e.request &&
        e.request.app === e &&
        (Object.setPrototypeOf(Object.getPrototypeOf(e.request), i.prototype),
        Object.setPrototypeOf(Object.getPrototypeOf(e.response), ng.prototype)),
      typeof r == 'function')
    ) {
      let s = new i(t),
        o = new ng(s, r);
      return xq(e, n, s, o);
    } else
      return new Promise((s, o) => {
        let a = new i(t),
          u = new ng(a, s, o);
        xq(e, n, a, u);
      });
  }
  function ih(e, t) {
    typeof t == 'string'
      ? (this.option = { url: t })
      : (this.option = Object.assign({}, t)),
      (this.dispatch = e),
      (this._hasInvoked = !1),
      (this._promise = null),
      this.option.autoStart !== !1 &&
        process.nextTick(() => {
          this._hasInvoked || this.end();
        });
  }
  var dae = [
    'delete',
    'get',
    'head',
    'options',
    'patch',
    'post',
    'put',
    'trace',
  ];
  dae.forEach((e) => {
    ih.prototype[e] = function (t) {
      if (this._hasInvoked === !0 || this._promise) throw new Error(ig);
      return (
        (this.option.url = t), (this.option.method = e.toUpperCase()), this
      );
    };
  });
  var hae = ['body', 'cookies', 'headers', 'payload', 'query'];
  hae.forEach((e) => {
    ih.prototype[e] = function (t) {
      if (this._hasInvoked === !0 || this._promise) throw new Error(ig);
      return (this.option[e] = t), this;
    };
  });
  ih.prototype.end = function (e) {
    if (this._hasInvoked === !0 || this._promise) throw new Error(ig);
    if (((this._hasInvoked = !0), typeof e == 'function'))
      sg(this.dispatch, this.option, e);
    else return (this._promise = sg(this.dispatch, this.option)), this._promise;
  };
  Object.getOwnPropertyNames(Promise.prototype).forEach((e) => {
    e !== 'constructor' &&
      (ih.prototype[e] = function (...t) {
        if (!this._promise) {
          if (this._hasInvoked === !0) throw new Error(ig);
          (this._hasInvoked = !0),
            (this._promise = sg(this.dispatch, this.option));
        }
        return this._promise[e](...t);
      });
  });
  function pae(e) {
    return (
      e instanceof IR ||
      e instanceof ng ||
      (e && e.constructor && e.constructor.name === '_CustomLMRRequest')
    );
  }
  oh.exports = AR;
  oh.exports.default = AR;
  oh.exports.inject = AR;
  oh.exports.isInjection = pae;
});
var Vq = $((fve, fh) => {
  'use strict';
  var mae = '4.28.1',
    yae = KP(),
    $R = require('node:http'),
    ah,
    {
      kAvvioBoot: lh,
      kChildren: NR,
      kServerBindings: Oq,
      kBodyLimit: gae,
      kRoutePrefix: Iq,
      kLogLevel: vae,
      kLogSerializers: bae,
      kHooks: LR,
      kSchemaController: Ao,
      kRequestAcceptVersion: Sae,
      kReplySerializerDefault: Aq,
      kContentTypeParser: _ae,
      kReply: wae,
      kRequest: Eae,
      kFourOhFour: Rae,
      kState: Ht,
      kOptions: DR,
      kPluginNameChain: uh,
      kSchemaErrorFormatter: jR,
      kErrorHandler: og,
      kKeepAliveConnections: FR,
      kChildLoggerFactory: qR,
      kGenReqId: MR,
    } = rr(),
    { createServer: Tae, compileValidateHTTPVersion: Pae } = bk(),
    ch = cm(),
    ag = Tm(),
    kae = Pm(),
    { supportedMethods: xae } = AS(),
    tc = jS(),
    Za = WS(),
    $q = WE(),
    { Hooks: Cae, hookRunnerApplication: Nq, supportedHooks: HR } = ao(),
    {
      createLogger: Oae,
      createChildLogger: Lq,
      defaultChildLoggerFactory: Iae,
    } = Vf(),
    Dq = ZE(),
    { getGenReqId: jq, reqIdGenFactory: Fq } = $y(),
    { buildRouting: Aae, validateBodyLimitOption: $ae } = BF(),
    Nae = ZF(),
    Uq = tq(),
    Lae = cq(),
    { FSTDEP009: Dae } = Qs(),
    jae = dq(),
    { appendStackTrace: Fae, AVVIO_ERRORS_MAP: qq, ...Qa } = br(),
    { defaultInitOptions: sn } = Uq,
    {
      FST_ERR_ASYNC_CONSTRAINT: qae,
      FST_ERR_BAD_URL: Mae,
      FST_ERR_FORCE_CLOSE_CONNECTIONS_IDLE_NOT_AVAILABLE: Hae,
      FST_ERR_OPTIONS_NOT_OBJ: zae,
      FST_ERR_QSP_NOT_FN: Uae,
      FST_ERR_SCHEMA_CONTROLLER_BUCKET_OPT_NOT_FN: Vae,
      FST_ERR_AJV_CUSTOM_OPTIONS_OPT_NOT_OBJ: Bae,
      FST_ERR_AJV_CUSTOM_OPTIONS_OPT_NOT_ARR: Wae,
      FST_ERR_VERSION_CONSTRAINT_NOT_STR: Gae,
      FST_ERR_INSTANCE_ALREADY_LISTENING: Yae,
      FST_ERR_REOPENED_CLOSE_SERVER: Jae,
      FST_ERR_ROUTE_REWRITE_NOT_STR: Kae,
      FST_ERR_SCHEMA_ERROR_FORMATTER_NOT_FN: Mq,
      FST_ERR_ERROR_HANDLER_NOT_FN: Xae,
    } = Qa,
    { buildErrorHandler: Hq } = Wf();
  function Zae(e) {
    let t = {};
    return (
      ['errorHandler', 'logLevel', 'logSerializers'].concat(HR).forEach((n) => {
        t[n] = e.store[n];
      }),
      Object.assign({}, t)
    );
  }
  function zR(e) {
    if (((e = e || {}), typeof e != 'object')) throw new zae();
    if (e.querystringParser && typeof e.querystringParser != 'function')
      throw new Uae(typeof e.querystringParser);
    if (
      e.schemaController &&
      e.schemaController.bucket &&
      typeof e.schemaController.bucket != 'function'
    )
      throw new Vae(typeof e.schemaController.bucket);
    $ae(e.bodyLimit);
    let t =
        e.requestIdHeader === !1
          ? !1
          : (e.requestIdHeader || sn.requestIdHeader).toLowerCase(),
      r = Fq(t, e.genReqId),
      n = e.requestIdLogLabel || 'reqId',
      i = e.bodyLimit || sn.bodyLimit,
      s = e.disableRequestLogging || !1,
      o = Object.assign({ customOptions: {}, plugins: [] }, e.ajv),
      a = e.frameworkErrors;
    if (
      !o.customOptions ||
      Object.prototype.toString.call(o.customOptions) !== '[object Object]'
    )
      throw new Bae(typeof o.customOptions);
    if (!o.plugins || !Array.isArray(o.plugins))
      throw new Wae(typeof o.plugins);
    let { logger: u, hasLogger: c } = Oae(e);
    (e.connectionTimeout = e.connectionTimeout || sn.connectionTimeout),
      (e.keepAliveTimeout = e.keepAliveTimeout || sn.keepAliveTimeout),
      (e.maxRequestsPerSocket =
        e.maxRequestsPerSocket || sn.maxRequestsPerSocket),
      (e.requestTimeout = e.requestTimeout || sn.requestTimeout),
      (e.logger = u),
      (e.requestIdHeader = t),
      (e.requestIdLogLabel = n),
      (e.disableRequestLogging = s),
      (e.ajv = o),
      (e.clientErrorHandler = e.clientErrorHandler || ae);
    let d = Uq(e);
    e.exposeHeadRoutes = d.exposeHeadRoutes;
    let m = e.constraints;
    e.versioning &&
      (Dae(),
      (m = {
        ...m,
        version: {
          name: 'version',
          mustMatchWhenDerived: !0,
          storage: e.versioning.storage,
          deriveConstraint: e.versioning.deriveVersion,
          validate(H) {
            if (typeof H != 'string') throw new Gae();
          },
        },
      }));
    let g = Aae({
        config: {
          defaultRoute: qe,
          onBadUrl: re,
          constraints: m,
          ignoreTrailingSlash: e.ignoreTrailingSlash || sn.ignoreTrailingSlash,
          ignoreDuplicateSlashes:
            e.ignoreDuplicateSlashes || sn.ignoreDuplicateSlashes,
          maxParamLength: e.maxParamLength || sn.maxParamLength,
          caseSensitive: e.caseSensitive,
          allowUnsafeRegex: e.allowUnsafeRegex || sn.allowUnsafeRegex,
          buildPrettyMeta: Zae,
          querystringParser: e.querystringParser,
          useSemicolonDelimiter:
            e.useSemicolonDelimiter ?? sn.useSemicolonDelimiter,
        },
      }),
      v = Nae(e),
      S = Ve(g, e);
    e.http2SessionTimeout = d.http2SessionTimeout;
    let { server: w, listen: T } = Tae(e, S),
      C = typeof w.closeAllConnections == 'function',
      I = typeof w.closeIdleConnections == 'function',
      x = e.forceCloseConnections;
    if (x === 'idle' && !I) throw new Hae();
    typeof x != 'boolean' && (x = I ? 'idle' : !1);
    let E = !C && x === !0 ? new Set() : jae(),
      j = ch.setupResponseListeners,
      q = $q.buildSchemaController(null, e.schemaController),
      O = {
        [Ht]: {
          listening: !1,
          closing: !1,
          started: !1,
          ready: !1,
          booting: !1,
          readyPromise: null,
        },
        [FR]: E,
        [DR]: e,
        [NR]: [],
        [Oq]: [],
        [gae]: i,
        [Iq]: '',
        [vae]: '',
        [bae]: null,
        [LR]: new Cae(),
        [Ao]: q,
        [jR]: null,
        [og]: Hq(),
        [qR]: Iae,
        [Aq]: null,
        [_ae]: new Za(
          i,
          e.onProtoPoisoning || sn.onProtoPoisoning,
          e.onConstructorPoisoning || sn.onConstructorPoisoning,
        ),
        [wae]: ch.buildReply(ch),
        [Eae]: ag.buildRequest(ag, e.trustProxy),
        [Rae]: v,
        [Dq.kRegisteredPlugins]: [],
        [uh]: ['fastify'],
        [lh]: null,
        [MR]: r,
        routing: S,
        getDefaultRoute: g.getDefaultRoute.bind(g),
        setDefaultRoute: g.setDefaultRoute.bind(g),
        delete: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: 'DELETE',
            url: K,
            options: te,
            handler: le,
          });
        },
        get: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: 'GET',
            url: K,
            options: te,
            handler: le,
          });
        },
        head: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: 'HEAD',
            url: K,
            options: te,
            handler: le,
          });
        },
        patch: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: 'PATCH',
            url: K,
            options: te,
            handler: le,
          });
        },
        post: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: 'POST',
            url: K,
            options: te,
            handler: le,
          });
        },
        put: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: 'PUT',
            url: K,
            options: te,
            handler: le,
          });
        },
        options: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: 'OPTIONS',
            url: K,
            options: te,
            handler: le,
          });
        },
        all: function (K, te, le) {
          return g.prepareRoute.call(this, {
            method: xae,
            url: K,
            options: te,
            handler: le,
          });
        },
        route: function (K) {
          return g.route.call(this, { options: K });
        },
        hasRoute: function (K) {
          return g.hasRoute.call(this, { options: K });
        },
        findRoute: function (K) {
          return g.findRoute(K);
        },
        log: u,
        withTypeProvider: de,
        addHook: X,
        addSchema: se,
        getSchema: q.getSchema.bind(q),
        getSchemas: q.getSchemas.bind(q),
        setValidatorCompiler: ve,
        setSerializerCompiler: It,
        setSchemaController: Ue,
        setReplySerializer: Gt,
        setSchemaErrorFormatter: Ye,
        setGenReqId: ge,
        addContentTypeParser: Za.helpers.addContentTypeParser,
        hasContentTypeParser: Za.helpers.hasContentTypeParser,
        getDefaultJsonParser: Za.defaultParsers.getDefaultJsonParser,
        defaultTextParser: Za.defaultParsers.defaultTextParser,
        removeContentTypeParser: Za.helpers.removeContentTypeParser,
        removeAllContentTypeParsers: Za.helpers.removeAllContentTypeParsers,
        register: null,
        after: null,
        ready: null,
        onClose: null,
        close: null,
        printPlugins: null,
        hasPlugin: function (H) {
          return (
            this[Dq.kRegisteredPlugins].includes(H) || this[uh].includes(H)
          );
        },
        listen: T,
        server: w,
        addresses: function () {
          let H = this[Oq].map((K) => K.address());
          return H.push(this.server.address()), H.filter((K) => K);
        },
        decorate: tc.add,
        hasDecorator: tc.exist,
        decorateReply: tc.decorateReply,
        decorateRequest: tc.decorateRequest,
        hasRequestDecorator: tc.existRequest,
        hasReplyDecorator: tc.existReply,
        inject: Y,
        printRoutes: mr,
        setNotFoundHandler: Wt,
        setErrorHandler: Re,
        setChildLoggerFactory: Ce,
        initialConfig: d,
        addConstraintStrategy: g.addConstraintStrategy.bind(g),
        hasConstraintStrategy: g.hasConstraintStrategy.bind(g),
      };
    Object.defineProperties(O, {
      listeningOrigin: {
        get() {
          let H = this.addresses().slice(-1).pop();
          if (typeof H == 'string') return H;
          let K = H.family === 'IPv6' ? `[${H.address}]` : H.address;
          return `${this[DR].https ? 'https' : 'http'}://${K}:${H.port}`;
        },
      },
      pluginName: {
        configurable: !0,
        get() {
          return this[uh].length > 1 ? this[uh].join(' -> ') : this[uh][0];
        },
      },
      prefix: {
        configurable: !0,
        get() {
          return this[Iq];
        },
      },
      validatorCompiler: {
        configurable: !0,
        get() {
          return this[Ao].getValidatorCompiler();
        },
      },
      serializerCompiler: {
        configurable: !0,
        get() {
          return this[Ao].getSerializerCompiler();
        },
      },
      childLoggerFactory: {
        configurable: !0,
        get() {
          return this[qR];
        },
      },
      version: {
        configurable: !0,
        get() {
          return mae;
        },
      },
      errorHandler: {
        configurable: !0,
        get() {
          return this[og].func;
        },
      },
      genReqId: {
        configurable: !0,
        get() {
          return this[MR];
        },
      },
    }),
      e.schemaErrorFormatter &&
        (zq(e.schemaErrorFormatter), (O[jR] = e.schemaErrorFormatter.bind(O)));
    let F = Number(e.pluginTimeout),
      U = yae(O, {
        autostart: !1,
        timeout: isNaN(F) === !1 ? F : sn.pluginTimeout,
        expose: { use: 'register' },
      });
    (U.override = Lae),
      U.on('start', () => (O[Ht].started = !0)),
      (O[lh] = O.ready),
      (O.ready = W),
      (O.printPlugins = U.prettyPrint.bind(U)),
      U.once('preReady', () => {
        O.onClose((H, K) => {
          (O[Ht].closing = !0),
            g.closeRoutes(),
            Nq('preClose', O[lh], O, function () {
              if (O[Ht].listening) {
                if (x === 'idle') H.server.closeIdleConnections();
                else if (C && x) H.server.closeAllConnections();
                else if (x === !0)
                  for (let te of O[FR]) te.destroy(), O[FR].delete(te);
              }
              !e.serverFactory || O[Ht].listening
                ? H.server.close(function (te) {
                    te && te.code !== 'ERR_SERVER_NOT_RUNNING' ? K(null) : K();
                  })
                : process.nextTick(K, null);
            });
        });
      });
    let D = new kae({ server: O, config: {} });
    O.setNotFoundHandler(),
      v.arrange404(O),
      g.setup(e, {
        avvio: U,
        fourOhFour: v,
        logger: u,
        hasLogger: c,
        setupResponseListeners: j,
        throwIfAlreadyStarted: G,
        validateHTTPVersion: Pae(e),
        keepAliveConnections: E,
      }),
      w.on('clientError', e.clientErrorHandler.bind(O));
    try {
      let K = require('node:diagnostics_channel').channel(
        'fastify.initialization',
      );
      K.hasSubscribers && K.publish({ fastify: O });
    } catch {}
    return (
      'asyncDispose' in Symbol &&
        (O[Symbol.asyncDispose] = function () {
          return O.close();
        }),
      O
    );
    function G(H) {
      if (O[Ht].started) throw new Yae(H);
    }
    function Y(H, K) {
      if ((ah === void 0 && (ah = Cq()), O[Ht].started)) {
        if (O[Ht].closing) {
          let te = new Jae();
          if (K) {
            K(te);
            return;
          } else return Promise.reject(te);
        }
        return ah(S, H, K);
      }
      if (K)
        this.ready((te) => {
          te ? K(te, null) : ah(S, H, K);
        });
      else
        return ah((te, le) => {
          this.ready(function (Pe) {
            if (Pe) {
              le.emit('error', Pe);
              return;
            }
            S(te, le);
          });
        }, H);
    }
    function W(H) {
      if (this[Ht].readyPromise !== null) {
        if (H != null) {
          this[Ht].readyPromise.then(() => H(null, O), H);
          return;
        }
        return this[Ht].readyPromise;
      }
      let K, te;
      if (
        (process.nextTick(le),
        (this[Ht].readyPromise = new Promise(function (he, Ae) {
          (K = he), (te = Ae);
        })),
        H)
      )
        this[Ht].readyPromise.then(() => H(null, O), H);
      else return this[Ht].readyPromise;
      function le() {
        O[lh]((he, Ae) => {
          he || O[Ht].started || O[Ht].ready || O[Ht].booting
            ? Pe(he)
            : ((O[Ht].booting = !0), Nq('onReady', O[lh], O, Pe)),
            Ae();
        });
      }
      function Pe(he) {
        if (
          ((he =
            he != null && qq[he.code] != null
              ? Fae(he, new qq[he.code](he.message))
              : he),
          he)
        )
          return te(he);
        K(O), (O[Ht].booting = !1), (O[Ht].ready = !0), (O[Ht].promise = null);
      }
    }
    function de() {
      return this;
    }
    function X(H, K) {
      if ((G('Cannot call "addHook"!'), K == null))
        throw new Qa.FST_ERR_HOOK_INVALID_HANDLER(H, K);
      if (
        H === 'onSend' ||
        H === 'preSerialization' ||
        H === 'onError' ||
        H === 'preParsing'
      ) {
        if (K.constructor.name === 'AsyncFunction' && K.length === 4)
          throw new Qa.FST_ERR_HOOK_INVALID_ASYNC_HANDLER();
      } else if (H === 'onReady' || H === 'onListen') {
        if (K.constructor.name === 'AsyncFunction' && K.length !== 0)
          throw new Qa.FST_ERR_HOOK_INVALID_ASYNC_HANDLER();
      } else if (H === 'onRequestAbort') {
        if (K.constructor.name === 'AsyncFunction' && K.length !== 1)
          throw new Qa.FST_ERR_HOOK_INVALID_ASYNC_HANDLER();
      } else if (K.constructor.name === 'AsyncFunction' && K.length === 3)
        throw new Qa.FST_ERR_HOOK_INVALID_ASYNC_HANDLER();
      return (
        H === 'onClose'
          ? this.onClose(K)
          : H === 'onReady' || H === 'onListen' || H === 'onRoute'
            ? this[LR].add(H, K)
            : this.after((le, Pe) => {
                te.call(this, H, K), Pe(le);
              }),
        this
      );
      function te(le, Pe) {
        this[LR].add(le, Pe), this[NR].forEach((he) => te.call(he, le, Pe));
      }
    }
    function se(H) {
      return (
        G('Cannot call "addSchema"!'),
        this[Ao].add(H),
        this[NR].forEach((K) => K.addSchema(H)),
        this
      );
    }
    function ae(H, K) {
      if (H.code === 'ECONNRESET' || K.destroyed) return;
      let te, le, Pe, he;
      H.code === 'ERR_HTTP_REQUEST_TIMEOUT'
        ? ((le = '408'),
          (Pe = $R.STATUS_CODES[le]),
          (te = `{"error":"${Pe}","message":"Client Timeout","statusCode":408}`),
          (he = 'timeout'))
        : H.code === 'HPE_HEADER_OVERFLOW'
          ? ((le = '431'),
            (Pe = $R.STATUS_CODES[le]),
            (te = `{"error":"${Pe}","message":"Exceeded maximum allowed HTTP header size","statusCode":431}`),
            (he = 'header_overflow'))
          : ((le = '400'),
            (Pe = $R.STATUS_CODES[le]),
            (te = `{"error":"${Pe}","message":"Client Error","statusCode":400}`),
            (he = 'error')),
        this.log.trace({ err: H }, `client ${he}`),
        K.writable &&
          K.write(`HTTP/1.1 ${le} ${Pe}\r
Content-Length: ${te.length}\r
Content-Type: application/json\r
\r
${te}`),
        K.destroy(H);
    }
    function qe(H, K) {
      H.headers['accept-version'] !== void 0 &&
        ((H.headers[Sae] = H.headers['accept-version']),
        (H.headers['accept-version'] = void 0)),
        v.router.lookup(H, K);
    }
    function re(H, K, te) {
      if (a) {
        let Pe = jq(D.server, K),
          he = Lq(D, u, K, Pe),
          Ae = new ag(Pe, null, K, null, he, D),
          Yt = new ch(te, Ae, he);
        return (
          s === !1 && he.info({ req: Ae }, 'incoming request'),
          a(new Mae(H), Ae, Yt)
        );
      }
      let le = `{"error":"Bad Request","code":"FST_ERR_BAD_URL","message":"'${H}' is not a valid url component","statusCode":400}`;
      te.writeHead(400, {
        'Content-Type': 'application/json',
        'Content-Length': le.length,
      }),
        te.end(le);
    }
    function Ie(H, K, te) {
      if (H !== !1)
        return function (Pe) {
          if (Pe) {
            if (a) {
              let Ae = jq(D.server, K),
                Yt = Lq(D, u, K, Ae),
                tt = new ag(Ae, null, K, null, Yt, D),
                zt = new ch(te, tt, Yt);
              return (
                s === !1 && Yt.info({ req: tt }, 'incoming request'),
                a(new qae(), tt, zt)
              );
            }
            let he =
              '{"error":"Internal Server Error","message":"Unexpected error from async constraint","statusCode":500}';
            te.writeHead(500, {
              'Content-Type': 'application/json',
              'Content-Length': he.length,
            }),
              te.end(he);
          }
        };
    }
    function Wt(H, K) {
      return (
        G('Cannot call "setNotFoundHandler"!'),
        v.setNotFoundHandler.call(this, H, K, U, g.routeHandler),
        this
      );
    }
    function ve(H) {
      return (
        G('Cannot call "setValidatorCompiler"!'),
        this[Ao].setValidatorCompiler(H),
        this
      );
    }
    function Ye(H) {
      return (
        G('Cannot call "setSchemaErrorFormatter"!'),
        zq(H),
        (this[jR] = H.bind(this)),
        this
      );
    }
    function It(H) {
      return (
        G('Cannot call "setSerializerCompiler"!'),
        this[Ao].setSerializerCompiler(H),
        this
      );
    }
    function Ue(H) {
      G('Cannot call "setSchemaController"!');
      let K = this[Ao],
        te = $q.buildSchemaController(K, Object.assign({}, K.opts, H));
      return (
        (this[Ao] = te),
        (this.getSchema = te.getSchema.bind(te)),
        (this.getSchemas = te.getSchemas.bind(te)),
        this
      );
    }
    function Gt(H) {
      return G('Cannot call "setReplySerializer"!'), (this[Aq] = H), this;
    }
    function Re(H) {
      if ((G('Cannot call "setErrorHandler"!'), typeof H != 'function'))
        throw new Xae();
      return (this[og] = Hq(this[og], H.bind(this))), this;
    }
    function Ce(H) {
      return G('Cannot call "setChildLoggerFactory"!'), (this[qR] = H), this;
    }
    function mr(H = {}) {
      return (
        (H.includeMeta = H.includeHooks
          ? H.includeMeta
            ? HR.concat(H.includeMeta)
            : HR
          : H.includeMeta),
        g.printRoutes(H)
      );
    }
    function Ve(H, { rewriteUrl: K, logger: te }) {
      let le;
      return function (he, Ae) {
        if ((le === void 0 && (le = H.isAsyncConstraint()), K)) {
          he.originalUrl = he.url;
          let Yt = K.call(O, he);
          if (typeof Yt == 'string') he.url = Yt;
          else {
            let tt = new Kae(he.url, typeof Yt);
            he.destroy(tt);
          }
        }
        H.routing(he, Ae, Ie(le, he, Ae));
      };
    }
    function ge(H) {
      return (
        G('Cannot call "setGenReqId"!'),
        (this[MR] = Fq(this[DR].requestIdHeader, H)),
        this
      );
    }
  }
  function zq(e) {
    if (typeof e != 'function') throw new Mq(typeof e);
    if (e.constructor.name === 'AsyncFunction') throw new Mq('AsyncFunction');
  }
  fh.exports = zR;
  fh.exports.errorCodes = Qa;
  fh.exports.fastify = zR;
  fh.exports.default = zR;
});
var rM = $((je) => {
  'use strict';
  var dh = Symbol.for('react.element'),
    ele = Symbol.for('react.portal'),
    tle = Symbol.for('react.fragment'),
    rle = Symbol.for('react.strict_mode'),
    nle = Symbol.for('react.profiler'),
    sle = Symbol.for('react.provider'),
    ile = Symbol.for('react.context'),
    ole = Symbol.for('react.forward_ref'),
    ale = Symbol.for('react.suspense'),
    lle = Symbol.for('react.memo'),
    ule = Symbol.for('react.lazy'),
    Bq = Symbol.iterator;
  function cle(e) {
    return e === null || typeof e != 'object'
      ? null
      : ((e = (Bq && e[Bq]) || e['@@iterator']),
        typeof e == 'function' ? e : null);
  }
  var Yq = {
      isMounted: function () {
        return !1;
      },
      enqueueForceUpdate: function () {},
      enqueueReplaceState: function () {},
      enqueueSetState: function () {},
    },
    Jq = Object.assign,
    Kq = {};
  function rc(e, t, r) {
    (this.props = e),
      (this.context = t),
      (this.refs = Kq),
      (this.updater = r || Yq);
  }
  rc.prototype.isReactComponent = {};
  rc.prototype.setState = function (e, t) {
    if (typeof e != 'object' && typeof e != 'function' && e != null)
      throw Error(
        'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
      );
    this.updater.enqueueSetState(this, e, t, 'setState');
  };
  rc.prototype.forceUpdate = function (e) {
    this.updater.enqueueForceUpdate(this, e, 'forceUpdate');
  };
  function Xq() {}
  Xq.prototype = rc.prototype;
  function VR(e, t, r) {
    (this.props = e),
      (this.context = t),
      (this.refs = Kq),
      (this.updater = r || Yq);
  }
  var BR = (VR.prototype = new Xq());
  BR.constructor = VR;
  Jq(BR, rc.prototype);
  BR.isPureReactComponent = !0;
  var Wq = Array.isArray,
    Zq = Object.prototype.hasOwnProperty,
    WR = { current: null },
    Qq = { key: !0, ref: !0, __self: !0, __source: !0 };
  function eM(e, t, r) {
    var n,
      i = {},
      s = null,
      o = null;
    if (t != null)
      for (n in (t.ref !== void 0 && (o = t.ref),
      t.key !== void 0 && (s = '' + t.key),
      t))
        Zq.call(t, n) && !Qq.hasOwnProperty(n) && (i[n] = t[n]);
    var a = arguments.length - 2;
    if (a === 1) i.children = r;
    else if (1 < a) {
      for (var u = Array(a), c = 0; c < a; c++) u[c] = arguments[c + 2];
      i.children = u;
    }
    if (e && e.defaultProps)
      for (n in ((a = e.defaultProps), a)) i[n] === void 0 && (i[n] = a[n]);
    return {
      $$typeof: dh,
      type: e,
      key: s,
      ref: o,
      props: i,
      _owner: WR.current,
    };
  }
  function fle(e, t) {
    return {
      $$typeof: dh,
      type: e.type,
      key: t,
      ref: e.ref,
      props: e.props,
      _owner: e._owner,
    };
  }
  function GR(e) {
    return typeof e == 'object' && e !== null && e.$$typeof === dh;
  }
  function dle(e) {
    var t = { '=': '=0', ':': '=2' };
    return (
      '$' +
      e.replace(/[=:]/g, function (r) {
        return t[r];
      })
    );
  }
  var Gq = /\/+/g;
  function UR(e, t) {
    return typeof e == 'object' && e !== null && e.key != null
      ? dle('' + e.key)
      : t.toString(36);
  }
  function cg(e, t, r, n, i) {
    var s = typeof e;
    (s === 'undefined' || s === 'boolean') && (e = null);
    var o = !1;
    if (e === null) o = !0;
    else
      switch (s) {
        case 'string':
        case 'number':
          o = !0;
          break;
        case 'object':
          switch (e.$$typeof) {
            case dh:
            case ele:
              o = !0;
          }
      }
    if (o)
      return (
        (o = e),
        (i = i(o)),
        (e = n === '' ? '.' + UR(o, 0) : n),
        Wq(i)
          ? ((r = ''),
            e != null && (r = e.replace(Gq, '$&/') + '/'),
            cg(i, t, r, '', function (c) {
              return c;
            }))
          : i != null &&
            (GR(i) &&
              (i = fle(
                i,
                r +
                  (!i.key || (o && o.key === i.key)
                    ? ''
                    : ('' + i.key).replace(Gq, '$&/') + '/') +
                  e,
              )),
            t.push(i)),
        1
      );
    if (((o = 0), (n = n === '' ? '.' : n + ':'), Wq(e)))
      for (var a = 0; a < e.length; a++) {
        s = e[a];
        var u = n + UR(s, a);
        o += cg(s, t, r, u, i);
      }
    else if (((u = cle(e)), typeof u == 'function'))
      for (e = u.call(e), a = 0; !(s = e.next()).done; )
        (s = s.value), (u = n + UR(s, a++)), (o += cg(s, t, r, u, i));
    else if (s === 'object')
      throw (
        ((t = String(e)),
        Error(
          'Objects are not valid as a React child (found: ' +
            (t === '[object Object]'
              ? 'object with keys {' + Object.keys(e).join(', ') + '}'
              : t) +
            '). If you meant to render a collection of children, use an array instead.',
        ))
      );
    return o;
  }
  function ug(e, t, r) {
    if (e == null) return e;
    var n = [],
      i = 0;
    return (
      cg(e, n, '', '', function (s) {
        return t.call(r, s, i++);
      }),
      n
    );
  }
  function hle(e) {
    if (e._status === -1) {
      var t = e._result;
      (t = t()),
        t.then(
          function (r) {
            (e._status === 0 || e._status === -1) &&
              ((e._status = 1), (e._result = r));
          },
          function (r) {
            (e._status === 0 || e._status === -1) &&
              ((e._status = 2), (e._result = r));
          },
        ),
        e._status === -1 && ((e._status = 0), (e._result = t));
    }
    if (e._status === 1) return e._result.default;
    throw e._result;
  }
  var qr = { current: null },
    fg = { transition: null },
    ple = {
      ReactCurrentDispatcher: qr,
      ReactCurrentBatchConfig: fg,
      ReactCurrentOwner: WR,
    };
  function tM() {
    throw Error('act(...) is not supported in production builds of React.');
  }
  je.Children = {
    map: ug,
    forEach: function (e, t, r) {
      ug(
        e,
        function () {
          t.apply(this, arguments);
        },
        r,
      );
    },
    count: function (e) {
      var t = 0;
      return (
        ug(e, function () {
          t++;
        }),
        t
      );
    },
    toArray: function (e) {
      return (
        ug(e, function (t) {
          return t;
        }) || []
      );
    },
    only: function (e) {
      if (!GR(e))
        throw Error(
          'React.Children.only expected to receive a single React element child.',
        );
      return e;
    },
  };
  je.Component = rc;
  je.Fragment = tle;
  je.Profiler = nle;
  je.PureComponent = VR;
  je.StrictMode = rle;
  je.Suspense = ale;
  je.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ple;
  je.act = tM;
  je.cloneElement = function (e, t, r) {
    if (e == null)
      throw Error(
        'React.cloneElement(...): The argument must be a React element, but you passed ' +
          e +
          '.',
      );
    var n = Jq({}, e.props),
      i = e.key,
      s = e.ref,
      o = e._owner;
    if (t != null) {
      if (
        (t.ref !== void 0 && ((s = t.ref), (o = WR.current)),
        t.key !== void 0 && (i = '' + t.key),
        e.type && e.type.defaultProps)
      )
        var a = e.type.defaultProps;
      for (u in t)
        Zq.call(t, u) &&
          !Qq.hasOwnProperty(u) &&
          (n[u] = t[u] === void 0 && a !== void 0 ? a[u] : t[u]);
    }
    var u = arguments.length - 2;
    if (u === 1) n.children = r;
    else if (1 < u) {
      a = Array(u);
      for (var c = 0; c < u; c++) a[c] = arguments[c + 2];
      n.children = a;
    }
    return { $$typeof: dh, type: e.type, key: i, ref: s, props: n, _owner: o };
  };
  je.createContext = function (e) {
    return (
      (e = {
        $$typeof: ile,
        _currentValue: e,
        _currentValue2: e,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null,
      }),
      (e.Provider = { $$typeof: sle, _context: e }),
      (e.Consumer = e)
    );
  };
  je.createElement = eM;
  je.createFactory = function (e) {
    var t = eM.bind(null, e);
    return (t.type = e), t;
  };
  je.createRef = function () {
    return { current: null };
  };
  je.forwardRef = function (e) {
    return { $$typeof: ole, render: e };
  };
  je.isValidElement = GR;
  je.lazy = function (e) {
    return { $$typeof: ule, _payload: { _status: -1, _result: e }, _init: hle };
  };
  je.memo = function (e, t) {
    return { $$typeof: lle, type: e, compare: t === void 0 ? null : t };
  };
  je.startTransition = function (e) {
    var t = fg.transition;
    fg.transition = {};
    try {
      e();
    } finally {
      fg.transition = t;
    }
  };
  je.unstable_act = tM;
  je.useCallback = function (e, t) {
    return qr.current.useCallback(e, t);
  };
  je.useContext = function (e) {
    return qr.current.useContext(e);
  };
  je.useDebugValue = function () {};
  je.useDeferredValue = function (e) {
    return qr.current.useDeferredValue(e);
  };
  je.useEffect = function (e, t) {
    return qr.current.useEffect(e, t);
  };
  je.useId = function () {
    return qr.current.useId();
  };
  je.useImperativeHandle = function (e, t, r) {
    return qr.current.useImperativeHandle(e, t, r);
  };
  je.useInsertionEffect = function (e, t) {
    return qr.current.useInsertionEffect(e, t);
  };
  je.useLayoutEffect = function (e, t) {
    return qr.current.useLayoutEffect(e, t);
  };
  je.useMemo = function (e, t) {
    return qr.current.useMemo(e, t);
  };
  je.useReducer = function (e, t, r) {
    return qr.current.useReducer(e, t, r);
  };
  je.useRef = function (e) {
    return qr.current.useRef(e);
  };
  je.useState = function (e) {
    return qr.current.useState(e);
  };
  je.useSyncExternalStore = function (e, t, r) {
    return qr.current.useSyncExternalStore(e, t, r);
  };
  je.useTransition = function () {
    return qr.current.useTransition();
  };
  je.version = '18.3.1';
});
var nM = $((Fe, dg) => {
  'use strict';
  process.env.NODE_ENV !== 'production' &&
    (function () {
      'use strict';
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < 'u' &&
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ==
          'function' &&
        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var e = '18.3.1',
        t = Symbol.for('react.element'),
        r = Symbol.for('react.portal'),
        n = Symbol.for('react.fragment'),
        i = Symbol.for('react.strict_mode'),
        s = Symbol.for('react.profiler'),
        o = Symbol.for('react.provider'),
        a = Symbol.for('react.context'),
        u = Symbol.for('react.forward_ref'),
        c = Symbol.for('react.suspense'),
        d = Symbol.for('react.suspense_list'),
        m = Symbol.for('react.memo'),
        g = Symbol.for('react.lazy'),
        v = Symbol.for('react.offscreen'),
        S = Symbol.iterator,
        w = '@@iterator';
      function T(k) {
        if (k === null || typeof k != 'object') return null;
        var L = (S && k[S]) || k[w];
        return typeof L == 'function' ? L : null;
      }
      var C = { current: null },
        I = { transition: null },
        x = {
          current: null,
          isBatchingLegacy: !1,
          didScheduleLegacyUpdate: !1,
        },
        E = { current: null },
        j = {},
        q = null;
      function O(k) {
        q = k;
      }
      (j.setExtraStackFrame = function (k) {
        q = k;
      }),
        (j.getCurrentStack = null),
        (j.getStackAddendum = function () {
          var k = '';
          q && (k += q);
          var L = j.getCurrentStack;
          return L && (k += L() || ''), k;
        });
      var F = !1,
        U = !1,
        D = !1,
        G = !1,
        Y = !1,
        W = {
          ReactCurrentDispatcher: C,
          ReactCurrentBatchConfig: I,
          ReactCurrentOwner: E,
        };
      (W.ReactDebugCurrentFrame = j), (W.ReactCurrentActQueue = x);
      function de(k) {
        {
          for (
            var L = arguments.length, z = new Array(L > 1 ? L - 1 : 0), V = 1;
            V < L;
            V++
          )
            z[V - 1] = arguments[V];
          se('warn', k, z);
        }
      }
      function X(k) {
        {
          for (
            var L = arguments.length, z = new Array(L > 1 ? L - 1 : 0), V = 1;
            V < L;
            V++
          )
            z[V - 1] = arguments[V];
          se('error', k, z);
        }
      }
      function se(k, L, z) {
        {
          var V = W.ReactDebugCurrentFrame,
            Z = V.getStackAddendum();
          Z !== '' && ((L += '%s'), (z = z.concat([Z])));
          var Se = z.map(function (fe) {
            return String(fe);
          });
          Se.unshift('Warning: ' + L),
            Function.prototype.apply.call(console[k], console, Se);
        }
      }
      var ae = {};
      function qe(k, L) {
        {
          var z = k.constructor,
            V = (z && (z.displayName || z.name)) || 'ReactClass',
            Z = V + '.' + L;
          if (ae[Z]) return;
          X(
            "Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",
            L,
            V,
          ),
            (ae[Z] = !0);
        }
      }
      var re = {
          isMounted: function (k) {
            return !1;
          },
          enqueueForceUpdate: function (k, L, z) {
            qe(k, 'forceUpdate');
          },
          enqueueReplaceState: function (k, L, z, V) {
            qe(k, 'replaceState');
          },
          enqueueSetState: function (k, L, z, V) {
            qe(k, 'setState');
          },
        },
        Ie = Object.assign,
        Wt = {};
      Object.freeze(Wt);
      function ve(k, L, z) {
        (this.props = k),
          (this.context = L),
          (this.refs = Wt),
          (this.updater = z || re);
      }
      (ve.prototype.isReactComponent = {}),
        (ve.prototype.setState = function (k, L) {
          if (typeof k != 'object' && typeof k != 'function' && k != null)
            throw new Error(
              'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
            );
          this.updater.enqueueSetState(this, k, L, 'setState');
        }),
        (ve.prototype.forceUpdate = function (k) {
          this.updater.enqueueForceUpdate(this, k, 'forceUpdate');
        });
      {
        var Ye = {
            isMounted: [
              'isMounted',
              'Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.',
            ],
            replaceState: [
              'replaceState',
              'Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).',
            ],
          },
          It = function (k, L) {
            Object.defineProperty(ve.prototype, k, {
              get: function () {
                de(
                  '%s(...) is deprecated in plain JavaScript React classes. %s',
                  L[0],
                  L[1],
                );
              },
            });
          };
        for (var Ue in Ye) Ye.hasOwnProperty(Ue) && It(Ue, Ye[Ue]);
      }
      function Gt() {}
      Gt.prototype = ve.prototype;
      function Re(k, L, z) {
        (this.props = k),
          (this.context = L),
          (this.refs = Wt),
          (this.updater = z || re);
      }
      var Ce = (Re.prototype = new Gt());
      (Ce.constructor = Re),
        Ie(Ce, ve.prototype),
        (Ce.isPureReactComponent = !0);
      function mr() {
        var k = { current: null };
        return Object.seal(k), k;
      }
      var Ve = Array.isArray;
      function ge(k) {
        return Ve(k);
      }
      function H(k) {
        {
          var L = typeof Symbol == 'function' && Symbol.toStringTag,
            z = (L && k[Symbol.toStringTag]) || k.constructor.name || 'Object';
          return z;
        }
      }
      function K(k) {
        try {
          return te(k), !1;
        } catch {
          return !0;
        }
      }
      function te(k) {
        return '' + k;
      }
      function le(k) {
        if (K(k))
          return (
            X(
              'The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.',
              H(k),
            ),
            te(k)
          );
      }
      function Pe(k, L, z) {
        var V = k.displayName;
        if (V) return V;
        var Z = L.displayName || L.name || '';
        return Z !== '' ? z + '(' + Z + ')' : z;
      }
      function he(k) {
        return k.displayName || 'Context';
      }
      function Ae(k) {
        if (k == null) return null;
        if (
          (typeof k.tag == 'number' &&
            X(
              'Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.',
            ),
          typeof k == 'function')
        )
          return k.displayName || k.name || null;
        if (typeof k == 'string') return k;
        switch (k) {
          case n:
            return 'Fragment';
          case r:
            return 'Portal';
          case s:
            return 'Profiler';
          case i:
            return 'StrictMode';
          case c:
            return 'Suspense';
          case d:
            return 'SuspenseList';
        }
        if (typeof k == 'object')
          switch (k.$$typeof) {
            case a:
              var L = k;
              return he(L) + '.Consumer';
            case o:
              var z = k;
              return he(z._context) + '.Provider';
            case u:
              return Pe(k, k.render, 'ForwardRef');
            case m:
              var V = k.displayName || null;
              return V !== null ? V : Ae(k.type) || 'Memo';
            case g: {
              var Z = k,
                Se = Z._payload,
                fe = Z._init;
              try {
                return Ae(fe(Se));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var Yt = Object.prototype.hasOwnProperty,
        tt = { key: !0, ref: !0, __self: !0, __source: !0 },
        zt,
        Ho,
        Jt;
      Jt = {};
      function Ut(k) {
        if (Yt.call(k, 'ref')) {
          var L = Object.getOwnPropertyDescriptor(k, 'ref').get;
          if (L && L.isReactWarning) return !1;
        }
        return k.ref !== void 0;
      }
      function wt(k) {
        if (Yt.call(k, 'key')) {
          var L = Object.getOwnPropertyDescriptor(k, 'key').get;
          if (L && L.isReactWarning) return !1;
        }
        return k.key !== void 0;
      }
      function ln(k, L) {
        var z = function () {
          zt ||
            ((zt = !0),
            X(
              '%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)',
              L,
            ));
        };
        (z.isReactWarning = !0),
          Object.defineProperty(k, 'key', { get: z, configurable: !0 });
      }
      function zo(k, L) {
        var z = function () {
          Ho ||
            ((Ho = !0),
            X(
              '%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)',
              L,
            ));
        };
        (z.isReactWarning = !0),
          Object.defineProperty(k, 'ref', { get: z, configurable: !0 });
      }
      function wc(k) {
        if (
          typeof k.ref == 'string' &&
          E.current &&
          k.__self &&
          E.current.stateNode !== k.__self
        ) {
          var L = Ae(E.current.type);
          Jt[L] ||
            (X(
              'Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',
              L,
              k.ref,
            ),
            (Jt[L] = !0));
        }
      }
      var At = function (k, L, z, V, Z, Se, fe) {
        var we = {
          $$typeof: t,
          type: k,
          key: L,
          ref: z,
          props: fe,
          _owner: Se,
        };
        return (
          (we._store = {}),
          Object.defineProperty(we._store, 'validated', {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: !1,
          }),
          Object.defineProperty(we, '_self', {
            configurable: !1,
            enumerable: !1,
            writable: !1,
            value: V,
          }),
          Object.defineProperty(we, '_source', {
            configurable: !1,
            enumerable: !1,
            writable: !1,
            value: Z,
          }),
          Object.freeze && (Object.freeze(we.props), Object.freeze(we)),
          we
        );
      };
      function Ci(k, L, z) {
        var V,
          Z = {},
          Se = null,
          fe = null,
          we = null,
          $e = null;
        if (L != null) {
          Ut(L) && ((fe = L.ref), wc(L)),
            wt(L) && (le(L.key), (Se = '' + L.key)),
            (we = L.__self === void 0 ? null : L.__self),
            ($e = L.__source === void 0 ? null : L.__source);
          for (V in L) Yt.call(L, V) && !tt.hasOwnProperty(V) && (Z[V] = L[V]);
        }
        var Be = arguments.length - 2;
        if (Be === 1) Z.children = z;
        else if (Be > 1) {
          for (var nt = Array(Be), st = 0; st < Be; st++)
            nt[st] = arguments[st + 2];
          Object.freeze && Object.freeze(nt), (Z.children = nt);
        }
        if (k && k.defaultProps) {
          var ot = k.defaultProps;
          for (V in ot) Z[V] === void 0 && (Z[V] = ot[V]);
        }
        if (Se || fe) {
          var Et =
            typeof k == 'function' ? k.displayName || k.name || 'Unknown' : k;
          Se && ln(Z, Et), fe && zo(Z, Et);
        }
        return At(k, Se, fe, we, $e, E.current, Z);
      }
      function Oi(k, L) {
        var z = At(k.type, L, k.ref, k._self, k._source, k._owner, k.props);
        return z;
      }
      function Xe(k, L, z) {
        if (k == null)
          throw new Error(
            'React.cloneElement(...): The argument must be a React element, but you passed ' +
              k +
              '.',
          );
        var V,
          Z = Ie({}, k.props),
          Se = k.key,
          fe = k.ref,
          we = k._self,
          $e = k._source,
          Be = k._owner;
        if (L != null) {
          Ut(L) && ((fe = L.ref), (Be = E.current)),
            wt(L) && (le(L.key), (Se = '' + L.key));
          var nt;
          k.type && k.type.defaultProps && (nt = k.type.defaultProps);
          for (V in L)
            Yt.call(L, V) &&
              !tt.hasOwnProperty(V) &&
              (L[V] === void 0 && nt !== void 0
                ? (Z[V] = nt[V])
                : (Z[V] = L[V]));
        }
        var st = arguments.length - 2;
        if (st === 1) Z.children = z;
        else if (st > 1) {
          for (var ot = Array(st), Et = 0; Et < st; Et++)
            ot[Et] = arguments[Et + 2];
          Z.children = ot;
        }
        return At(k.type, Se, fe, we, $e, Be, Z);
      }
      function Pt(k) {
        return typeof k == 'object' && k !== null && k.$$typeof === t;
      }
      var Vt = '.',
        sr = ':';
      function Br(k) {
        var L = /[=:]/g,
          z = { '=': '=0', ':': '=2' },
          V = k.replace(L, function (Z) {
            return z[Z];
          });
        return '$' + V;
      }
      var Dn = !1,
        Ct = /\/+/g;
      function Ms(k) {
        return k.replace(Ct, '$&/');
      }
      function Ii(k, L) {
        return typeof k == 'object' && k !== null && k.key != null
          ? (le(k.key), Br('' + k.key))
          : L.toString(36);
      }
      function rt(k, L, z, V, Z) {
        var Se = typeof k;
        (Se === 'undefined' || Se === 'boolean') && (k = null);
        var fe = !1;
        if (k === null) fe = !0;
        else
          switch (Se) {
            case 'string':
            case 'number':
              fe = !0;
              break;
            case 'object':
              switch (k.$$typeof) {
                case t:
                case r:
                  fe = !0;
              }
          }
        if (fe) {
          var we = k,
            $e = Z(we),
            Be = V === '' ? Vt + Ii(we, 0) : V;
          if (ge($e)) {
            var nt = '';
            Be != null && (nt = Ms(Be) + '/'),
              rt($e, L, nt, '', function (Fc) {
                return Fc;
              });
          } else
            $e != null &&
              (Pt($e) &&
                ($e.key && (!we || we.key !== $e.key) && le($e.key),
                ($e = Oi(
                  $e,
                  z +
                    ($e.key && (!we || we.key !== $e.key)
                      ? Ms('' + $e.key) + '/'
                      : '') +
                    Be,
                ))),
              L.push($e));
          return 1;
        }
        var st,
          ot,
          Et = 0,
          Nt = V === '' ? Vt : V + sr;
        if (ge(k))
          for (var Js = 0; Js < k.length; Js++)
            (st = k[Js]), (ot = Nt + Ii(st, Js)), (Et += rt(st, L, z, ot, Z));
        else {
          var ra = T(k);
          if (typeof ra == 'function') {
            var zi = k;
            ra === zi.entries &&
              (Dn ||
                de(
                  'Using Maps as children is not supported. Use an array of keyed ReactElements instead.',
                ),
              (Dn = !0));
            for (var Sl = ra.call(zi), Ui, jc = 0; !(Ui = Sl.next()).done; )
              (st = Ui.value),
                (ot = Nt + Ii(st, jc++)),
                (Et += rt(st, L, z, ot, Z));
          } else if (Se === 'object') {
            var _l = String(k);
            throw new Error(
              'Objects are not valid as a React child (found: ' +
                (_l === '[object Object]'
                  ? 'object with keys {' + Object.keys(k).join(', ') + '}'
                  : _l) +
                '). If you meant to render a collection of children, use an array instead.',
            );
          }
        }
        return Et;
      }
      function Wr(k, L, z) {
        if (k == null) return k;
        var V = [],
          Z = 0;
        return (
          rt(k, V, '', '', function (Se) {
            return L.call(z, Se, Z++);
          }),
          V
        );
      }
      function Ec(k) {
        var L = 0;
        return (
          Wr(k, function () {
            L++;
          }),
          L
        );
      }
      function xr(k, L, z) {
        Wr(
          k,
          function () {
            L.apply(this, arguments);
          },
          z,
        );
      }
      function Zt(k) {
        return (
          Wr(k, function (L) {
            return L;
          }) || []
        );
      }
      function un(k) {
        if (!Pt(k))
          throw new Error(
            'React.Children.only expected to receive a single React element child.',
          );
        return k;
      }
      function Gr(k) {
        var L = {
          $$typeof: a,
          _currentValue: k,
          _currentValue2: k,
          _threadCount: 0,
          Provider: null,
          Consumer: null,
          _defaultValue: null,
          _globalName: null,
        };
        L.Provider = { $$typeof: o, _context: L };
        var z = !1,
          V = !1,
          Z = !1;
        {
          var Se = { $$typeof: a, _context: L };
          Object.defineProperties(Se, {
            Provider: {
              get: function () {
                return (
                  V ||
                    ((V = !0),
                    X(
                      'Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?',
                    )),
                  L.Provider
                );
              },
              set: function (fe) {
                L.Provider = fe;
              },
            },
            _currentValue: {
              get: function () {
                return L._currentValue;
              },
              set: function (fe) {
                L._currentValue = fe;
              },
            },
            _currentValue2: {
              get: function () {
                return L._currentValue2;
              },
              set: function (fe) {
                L._currentValue2 = fe;
              },
            },
            _threadCount: {
              get: function () {
                return L._threadCount;
              },
              set: function (fe) {
                L._threadCount = fe;
              },
            },
            Consumer: {
              get: function () {
                return (
                  z ||
                    ((z = !0),
                    X(
                      'Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?',
                    )),
                  L.Consumer
                );
              },
            },
            displayName: {
              get: function () {
                return L.displayName;
              },
              set: function (fe) {
                Z ||
                  (de(
                    "Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",
                    fe,
                  ),
                  (Z = !0));
              },
            },
          }),
            (L.Consumer = Se);
        }
        return (L._currentRenderer = null), (L._currentRenderer2 = null), L;
      }
      var yr = -1,
        jn = 0,
        Ze = 1,
        Rc = 2;
      function Tc(k) {
        if (k._status === yr) {
          var L = k._result,
            z = L();
          if (
            (z.then(
              function (Se) {
                if (k._status === jn || k._status === yr) {
                  var fe = k;
                  (fe._status = Ze), (fe._result = Se);
                }
              },
              function (Se) {
                if (k._status === jn || k._status === yr) {
                  var fe = k;
                  (fe._status = Rc), (fe._result = Se);
                }
              },
            ),
            k._status === yr)
          ) {
            var V = k;
            (V._status = jn), (V._result = z);
          }
        }
        if (k._status === Ze) {
          var Z = k._result;
          return (
            Z === void 0 &&
              X(
                `lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`,
                Z,
              ),
            'default' in Z ||
              X(
                `lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`,
                Z,
              ),
            Z.default
          );
        } else throw k._result;
      }
      function Pc(k) {
        var L = { _status: yr, _result: k },
          z = { $$typeof: g, _payload: L, _init: Tc };
        {
          var V, Z;
          Object.defineProperties(z, {
            defaultProps: {
              configurable: !0,
              get: function () {
                return V;
              },
              set: function (Se) {
                X(
                  'React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.',
                ),
                  (V = Se),
                  Object.defineProperty(z, 'defaultProps', { enumerable: !0 });
              },
            },
            propTypes: {
              configurable: !0,
              get: function () {
                return Z;
              },
              set: function (Se) {
                X(
                  'React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.',
                ),
                  (Z = Se),
                  Object.defineProperty(z, 'propTypes', { enumerable: !0 });
              },
            },
          });
        }
        return z;
      }
      function kc(k) {
        k != null && k.$$typeof === m
          ? X(
              'forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).',
            )
          : typeof k != 'function'
            ? X(
                'forwardRef requires a render function but was given %s.',
                k === null ? 'null' : typeof k,
              )
            : k.length !== 0 &&
              k.length !== 2 &&
              X(
                'forwardRef render functions accept exactly two parameters: props and ref. %s',
                k.length === 1
                  ? 'Did you forget to use the ref parameter?'
                  : 'Any additional parameter will be undefined.',
              ),
          k != null &&
            (k.defaultProps != null || k.propTypes != null) &&
            X(
              'forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?',
            );
        var L = { $$typeof: u, render: k };
        {
          var z;
          Object.defineProperty(L, 'displayName', {
            enumerable: !1,
            configurable: !0,
            get: function () {
              return z;
            },
            set: function (V) {
              (z = V), !k.name && !k.displayName && (k.displayName = V);
            },
          });
        }
        return L;
      }
      var Uo;
      Uo = Symbol.for('react.module.reference');
      function dl(k) {
        return !!(
          typeof k == 'string' ||
          typeof k == 'function' ||
          k === n ||
          k === s ||
          Y ||
          k === i ||
          k === c ||
          k === d ||
          G ||
          k === v ||
          F ||
          U ||
          D ||
          (typeof k == 'object' &&
            k !== null &&
            (k.$$typeof === g ||
              k.$$typeof === m ||
              k.$$typeof === o ||
              k.$$typeof === a ||
              k.$$typeof === u ||
              k.$$typeof === Uo ||
              k.getModuleId !== void 0))
        );
      }
      function xc(k, L) {
        dl(k) ||
          X(
            'memo: The first argument must be a component. Instead received: %s',
            k === null ? 'null' : typeof k,
          );
        var z = { $$typeof: m, type: k, compare: L === void 0 ? null : L };
        {
          var V;
          Object.defineProperty(z, 'displayName', {
            enumerable: !1,
            configurable: !0,
            get: function () {
              return V;
            },
            set: function (Z) {
              (V = Z), !k.name && !k.displayName && (k.displayName = Z);
            },
          });
        }
        return z;
      }
      function kt() {
        var k = C.current;
        return (
          k === null &&
            X(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`),
          k
        );
      }
      function $t(k) {
        var L = kt();
        if (k._context !== void 0) {
          var z = k._context;
          z.Consumer === k
            ? X(
                'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?',
              )
            : z.Provider === k &&
              X(
                'Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?',
              );
        }
        return L.useContext(k);
      }
      function Cc(k) {
        var L = kt();
        return L.useState(k);
      }
      function Oc(k, L, z) {
        var V = kt();
        return V.useReducer(k, L, z);
      }
      function Ic(k) {
        var L = kt();
        return L.useRef(k);
      }
      function hl(k, L) {
        var z = kt();
        return z.useEffect(k, L);
      }
      function pl(k, L) {
        var z = kt();
        return z.useInsertionEffect(k, L);
      }
      function Ac(k, L) {
        var z = kt();
        return z.useLayoutEffect(k, L);
      }
      function $c(k, L) {
        var z = kt();
        return z.useCallback(k, L);
      }
      function Hs(k, L) {
        var z = kt();
        return z.useMemo(k, L);
      }
      function Ai(k, L, z) {
        var V = kt();
        return V.useImperativeHandle(k, L, z);
      }
      function Fn(k, L) {
        {
          var z = kt();
          return z.useDebugValue(k, L);
        }
      }
      function $i() {
        var k = kt();
        return k.useTransition();
      }
      function Ni(k) {
        var L = kt();
        return L.useDeferredValue(k);
      }
      function zs() {
        var k = kt();
        return k.useId();
      }
      function Vo(k, L, z) {
        var V = kt();
        return V.useSyncExternalStore(k, L, z);
      }
      var qn = 0,
        Li,
        Cr,
        as,
        Mn,
        ls,
        us,
        Hn;
      function Us() {}
      Us.__reactDisabledLog = !0;
      function Bo() {
        {
          if (qn === 0) {
            (Li = console.log),
              (Cr = console.info),
              (as = console.warn),
              (Mn = console.error),
              (ls = console.group),
              (us = console.groupCollapsed),
              (Hn = console.groupEnd);
            var k = {
              configurable: !0,
              enumerable: !0,
              value: Us,
              writable: !0,
            };
            Object.defineProperties(console, {
              info: k,
              log: k,
              warn: k,
              error: k,
              group: k,
              groupCollapsed: k,
              groupEnd: k,
            });
          }
          qn++;
        }
      }
      function Wo() {
        {
          if ((qn--, qn === 0)) {
            var k = { configurable: !0, enumerable: !0, writable: !0 };
            Object.defineProperties(console, {
              log: Ie({}, k, { value: Li }),
              info: Ie({}, k, { value: Cr }),
              warn: Ie({}, k, { value: as }),
              error: Ie({}, k, { value: Mn }),
              group: Ie({}, k, { value: ls }),
              groupCollapsed: Ie({}, k, { value: us }),
              groupEnd: Ie({}, k, { value: Hn }),
            });
          }
          qn < 0 &&
            X(
              'disabledDepth fell below zero. This is a bug in React. Please file an issue.',
            );
        }
      }
      var Qt = W.ReactCurrentDispatcher,
        Go;
      function Di(k, L, z) {
        {
          if (Go === void 0)
            try {
              throw Error();
            } catch (Z) {
              var V = Z.stack.trim().match(/\n( *(at )?)/);
              Go = (V && V[1]) || '';
            }
          return (
            `
` +
            Go +
            k
          );
        }
      }
      var ji = !1,
        Fi;
      {
        var ml = typeof WeakMap == 'function' ? WeakMap : Map;
        Fi = new ml();
      }
      function Or(k, L) {
        if (!k || ji) return '';
        {
          var z = Fi.get(k);
          if (z !== void 0) return z;
        }
        var V;
        ji = !0;
        var Z = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var Se;
        (Se = Qt.current), (Qt.current = null), Bo();
        try {
          if (L) {
            var fe = function () {
              throw Error();
            };
            if (
              (Object.defineProperty(fe.prototype, 'props', {
                set: function () {
                  throw Error();
                },
              }),
              typeof Reflect == 'object' && Reflect.construct)
            ) {
              try {
                Reflect.construct(fe, []);
              } catch (Nt) {
                V = Nt;
              }
              Reflect.construct(k, [], fe);
            } else {
              try {
                fe.call();
              } catch (Nt) {
                V = Nt;
              }
              k.call(fe.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Nt) {
              V = Nt;
            }
            k();
          }
        } catch (Nt) {
          if (Nt && V && typeof Nt.stack == 'string') {
            for (
              var we = Nt.stack.split(`
`),
                $e = V.stack.split(`
`),
                Be = we.length - 1,
                nt = $e.length - 1;
              Be >= 1 && nt >= 0 && we[Be] !== $e[nt];

            )
              nt--;
            for (; Be >= 1 && nt >= 0; Be--, nt--)
              if (we[Be] !== $e[nt]) {
                if (Be !== 1 || nt !== 1)
                  do
                    if ((Be--, nt--, nt < 0 || we[Be] !== $e[nt])) {
                      var st =
                        `
` + we[Be].replace(' at new ', ' at ');
                      return (
                        k.displayName &&
                          st.includes('<anonymous>') &&
                          (st = st.replace('<anonymous>', k.displayName)),
                        typeof k == 'function' && Fi.set(k, st),
                        st
                      );
                    }
                  while (Be >= 1 && nt >= 0);
                break;
              }
          }
        } finally {
          (ji = !1), (Qt.current = Se), Wo(), (Error.prepareStackTrace = Z);
        }
        var ot = k ? k.displayName || k.name : '',
          Et = ot ? Di(ot) : '';
        return typeof k == 'function' && Fi.set(k, Et), Et;
      }
      function zn(k, L, z) {
        return Or(k, !1);
      }
      function Sn(k) {
        var L = k.prototype;
        return !!(L && L.isReactComponent);
      }
      function cs(k, L, z) {
        if (k == null) return '';
        if (typeof k == 'function') return Or(k, Sn(k));
        if (typeof k == 'string') return Di(k);
        switch (k) {
          case c:
            return Di('Suspense');
          case d:
            return Di('SuspenseList');
        }
        if (typeof k == 'object')
          switch (k.$$typeof) {
            case u:
              return zn(k.render);
            case m:
              return cs(k.type, L, z);
            case g: {
              var V = k,
                Z = V._payload,
                Se = V._init;
              try {
                return cs(Se(Z), L, z);
              } catch {}
            }
          }
        return '';
      }
      var Kt = {},
        cn = W.ReactDebugCurrentFrame;
      function Vs(k) {
        if (k) {
          var L = k._owner,
            z = cs(k.type, k._source, L ? L.type : null);
          cn.setExtraStackFrame(z);
        } else cn.setExtraStackFrame(null);
      }
      function Bs(k, L, z, V, Z) {
        {
          var Se = Function.call.bind(Yt);
          for (var fe in k)
            if (Se(k, fe)) {
              var we = void 0;
              try {
                if (typeof k[fe] != 'function') {
                  var $e = Error(
                    (V || 'React class') +
                      ': ' +
                      z +
                      ' type `' +
                      fe +
                      '` is invalid; it must be a function, usually from the `prop-types` package, but received `' +
                      typeof k[fe] +
                      '`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',
                  );
                  throw (($e.name = 'Invariant Violation'), $e);
                }
                we = k[fe](
                  L,
                  fe,
                  V,
                  z,
                  null,
                  'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',
                );
              } catch (Be) {
                we = Be;
              }
              we &&
                !(we instanceof Error) &&
                (Vs(Z),
                X(
                  '%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).',
                  V || 'React class',
                  z,
                  fe,
                  typeof we,
                ),
                Vs(null)),
                we instanceof Error &&
                  !(we.message in Kt) &&
                  ((Kt[we.message] = !0),
                  Vs(Z),
                  X('Failed %s type: %s', z, we.message),
                  Vs(null));
            }
        }
      }
      function Un(k) {
        if (k) {
          var L = k._owner,
            z = cs(k.type, k._source, L ? L.type : null);
          O(z);
        } else O(null);
      }
      var Ws;
      Ws = !1;
      function Yr() {
        if (E.current) {
          var k = Ae(E.current.type);
          if (k)
            return (
              `

Check the render method of \`` +
              k +
              '`.'
            );
        }
        return '';
      }
      function Vn(k) {
        if (k !== void 0) {
          var L = k.fileName.replace(/^.*[\\\/]/, ''),
            z = k.lineNumber;
          return (
            `

Check your code at ` +
            L +
            ':' +
            z +
            '.'
          );
        }
        return '';
      }
      function _n(k) {
        return k != null ? Vn(k.__source) : '';
      }
      var qi = {};
      function er(k) {
        var L = Yr();
        if (!L) {
          var z = typeof k == 'string' ? k : k.displayName || k.name;
          z &&
            (L =
              `

Check the top-level render call using <` +
              z +
              '>.');
        }
        return L;
      }
      function Jr(k, L) {
        if (!(!k._store || k._store.validated || k.key != null)) {
          k._store.validated = !0;
          var z = er(L);
          if (!qi[z]) {
            qi[z] = !0;
            var V = '';
            k &&
              k._owner &&
              k._owner !== E.current &&
              (V = ' It was passed a child from ' + Ae(k._owner.type) + '.'),
              Un(k),
              X(
                'Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',
                z,
                V,
              ),
              Un(null);
          }
        }
      }
      function Yo(k, L) {
        if (typeof k == 'object') {
          if (ge(k))
            for (var z = 0; z < k.length; z++) {
              var V = k[z];
              Pt(V) && Jr(V, L);
            }
          else if (Pt(k)) k._store && (k._store.validated = !0);
          else if (k) {
            var Z = T(k);
            if (typeof Z == 'function' && Z !== k.entries)
              for (var Se = Z.call(k), fe; !(fe = Se.next()).done; )
                Pt(fe.value) && Jr(fe.value, L);
          }
        }
      }
      function Gs(k) {
        {
          var L = k.type;
          if (L == null || typeof L == 'string') return;
          var z;
          if (typeof L == 'function') z = L.propTypes;
          else if (
            typeof L == 'object' &&
            (L.$$typeof === u || L.$$typeof === m)
          )
            z = L.propTypes;
          else return;
          if (z) {
            var V = Ae(L);
            Bs(z, k.props, 'prop', V, k);
          } else if (L.PropTypes !== void 0 && !Ws) {
            Ws = !0;
            var Z = Ae(L);
            X(
              'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',
              Z || 'Unknown',
            );
          }
          typeof L.getDefaultProps == 'function' &&
            !L.getDefaultProps.isReactClassApproved &&
            X(
              'getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.',
            );
        }
      }
      function Mi(k) {
        {
          for (var L = Object.keys(k.props), z = 0; z < L.length; z++) {
            var V = L[z];
            if (V !== 'children' && V !== 'key') {
              Un(k),
                X(
                  'Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.',
                  V,
                ),
                Un(null);
              break;
            }
          }
          k.ref !== null &&
            (Un(k),
            X('Invalid attribute `ref` supplied to `React.Fragment`.'),
            Un(null));
        }
      }
      function Jo(k, L, z) {
        var V = dl(k);
        if (!V) {
          var Z = '';
          (k === void 0 ||
            (typeof k == 'object' &&
              k !== null &&
              Object.keys(k).length === 0)) &&
            (Z +=
              " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Se = _n(L);
          Se ? (Z += Se) : (Z += Yr());
          var fe;
          k === null
            ? (fe = 'null')
            : ge(k)
              ? (fe = 'array')
              : k !== void 0 && k.$$typeof === t
                ? ((fe = '<' + (Ae(k.type) || 'Unknown') + ' />'),
                  (Z =
                    ' Did you accidentally export a JSX literal instead of a component?'))
                : (fe = typeof k),
            X(
              'React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s',
              fe,
              Z,
            );
        }
        var we = Ci.apply(this, arguments);
        if (we == null) return we;
        if (V)
          for (var $e = 2; $e < arguments.length; $e++) Yo(arguments[$e], k);
        return k === n ? Mi(we) : Gs(we), we;
      }
      var Ko = !1;
      function yl(k) {
        var L = Jo.bind(null, k);
        return (
          (L.type = k),
          Ko ||
            ((Ko = !0),
            de(
              'React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.',
            )),
          Object.defineProperty(L, 'type', {
            enumerable: !1,
            get: function () {
              return (
                de(
                  'Factory.type is deprecated. Access the class directly before passing it to createFactory.',
                ),
                Object.defineProperty(this, 'type', { value: k }),
                k
              );
            },
          }),
          L
        );
      }
      function gl(k, L, z) {
        for (
          var V = Xe.apply(this, arguments), Z = 2;
          Z < arguments.length;
          Z++
        )
          Yo(arguments[Z], V.type);
        return Gs(V), V;
      }
      function vl(k, L) {
        var z = I.transition;
        I.transition = {};
        var V = I.transition;
        I.transition._updatedFibers = new Set();
        try {
          k();
        } finally {
          if (((I.transition = z), z === null && V._updatedFibers)) {
            var Z = V._updatedFibers.size;
            Z > 10 &&
              de(
                'Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.',
              ),
              V._updatedFibers.clear();
          }
        }
      }
      var Xo = !1,
        Bn = null;
      function Nc(k) {
        if (Bn === null)
          try {
            var L = ('require' + Math.random()).slice(0, 7),
              z = dg && dg[L];
            Bn = z.call(dg, 'timers').setImmediate;
          } catch {
            Bn = function (Z) {
              Xo === !1 &&
                ((Xo = !0),
                typeof MessageChannel > 'u' &&
                  X(
                    'This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.',
                  ));
              var Se = new MessageChannel();
              (Se.port1.onmessage = Z), Se.port2.postMessage(void 0);
            };
          }
        return Bn(k);
      }
      var wn = 0,
        Hi = !1;
      function bl(k) {
        {
          var L = wn;
          wn++, x.current === null && (x.current = []);
          var z = x.isBatchingLegacy,
            V;
          try {
            if (
              ((x.isBatchingLegacy = !0),
              (V = k()),
              !z && x.didScheduleLegacyUpdate)
            ) {
              var Z = x.current;
              Z !== null && ((x.didScheduleLegacyUpdate = !1), Qo(Z));
            }
          } catch (ot) {
            throw (Ys(L), ot);
          } finally {
            x.isBatchingLegacy = z;
          }
          if (
            V !== null &&
            typeof V == 'object' &&
            typeof V.then == 'function'
          ) {
            var Se = V,
              fe = !1,
              we = {
                then: function (ot, Et) {
                  (fe = !0),
                    Se.then(
                      function (Nt) {
                        Ys(L), wn === 0 ? gr(Nt, ot, Et) : ot(Nt);
                      },
                      function (Nt) {
                        Ys(L), Et(Nt);
                      },
                    );
                },
              };
            return (
              !Hi &&
                typeof Promise < 'u' &&
                Promise.resolve()
                  .then(function () {})
                  .then(function () {
                    fe ||
                      ((Hi = !0),
                      X(
                        'You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);',
                      ));
                  }),
              we
            );
          } else {
            var $e = V;
            if ((Ys(L), wn === 0)) {
              var Be = x.current;
              Be !== null && (Qo(Be), (x.current = null));
              var nt = {
                then: function (ot, Et) {
                  x.current === null
                    ? ((x.current = []), gr($e, ot, Et))
                    : ot($e);
                },
              };
              return nt;
            } else {
              var st = {
                then: function (ot, Et) {
                  ot($e);
                },
              };
              return st;
            }
          }
        }
      }
      function Ys(k) {
        k !== wn - 1 &&
          X(
            'You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ',
          ),
          (wn = k);
      }
      function gr(k, L, z) {
        {
          var V = x.current;
          if (V !== null)
            try {
              Qo(V),
                Nc(function () {
                  V.length === 0 ? ((x.current = null), L(k)) : gr(k, L, z);
                });
            } catch (Z) {
              z(Z);
            }
          else L(k);
        }
      }
      var Zo = !1;
      function Qo(k) {
        if (!Zo) {
          Zo = !0;
          var L = 0;
          try {
            for (; L < k.length; L++) {
              var z = k[L];
              do z = z(!0);
              while (z !== null);
            }
            k.length = 0;
          } catch (V) {
            throw ((k = k.slice(L + 1)), V);
          } finally {
            Zo = !1;
          }
        }
      }
      var Lc = Jo,
        ea = gl,
        Dc = yl,
        ta = { map: Wr, forEach: xr, count: Ec, toArray: Zt, only: un };
      (Fe.Children = ta),
        (Fe.Component = ve),
        (Fe.Fragment = n),
        (Fe.Profiler = s),
        (Fe.PureComponent = Re),
        (Fe.StrictMode = i),
        (Fe.Suspense = c),
        (Fe.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W),
        (Fe.act = bl),
        (Fe.cloneElement = ea),
        (Fe.createContext = Gr),
        (Fe.createElement = Lc),
        (Fe.createFactory = Dc),
        (Fe.createRef = mr),
        (Fe.forwardRef = kc),
        (Fe.isValidElement = Pt),
        (Fe.lazy = Pc),
        (Fe.memo = xc),
        (Fe.startTransition = vl),
        (Fe.unstable_act = bl),
        (Fe.useCallback = $c),
        (Fe.useContext = $t),
        (Fe.useDebugValue = Fn),
        (Fe.useDeferredValue = Ni),
        (Fe.useEffect = hl),
        (Fe.useId = zs),
        (Fe.useImperativeHandle = Ai),
        (Fe.useInsertionEffect = pl),
        (Fe.useLayoutEffect = Ac),
        (Fe.useMemo = Hs),
        (Fe.useReducer = Oc),
        (Fe.useRef = Ic),
        (Fe.useState = Cc),
        (Fe.useSyncExternalStore = Vo),
        (Fe.useTransition = $i),
        (Fe.version = e),
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < 'u' &&
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ==
            'function' &&
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(
            new Error(),
          );
    })();
});
var Ns = $((pve, YR) => {
  'use strict';
  process.env.NODE_ENV === 'production'
    ? (YR.exports = rM())
    : (YR.exports = nM());
});
var o2 = $((ac) => {
  'use strict';
  var AM = Ns(),
    Cle = require('stream'),
    on = Object.prototype.hasOwnProperty,
    Ole =
      /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    dM = {},
    hM = {};
  function $M(e) {
    return on.call(hM, e)
      ? !0
      : on.call(dM, e)
        ? !1
        : Ole.test(e)
          ? (hM[e] = !0)
          : ((dM[e] = !0), !1);
  }
  function Hr(e, t, r, n, i, s, o) {
    (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
      (this.attributeName = n),
      (this.attributeNamespace = i),
      (this.mustUseProperty = r),
      (this.propertyName = e),
      (this.type = t),
      (this.sanitizeURL = s),
      (this.removeEmptyString = o);
  }
  var dr = {};
  'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
    .split(' ')
    .forEach(function (e) {
      dr[e] = new Hr(e, 0, !1, e, null, !1, !1);
    });
  [
    ['acceptCharset', 'accept-charset'],
    ['className', 'class'],
    ['htmlFor', 'for'],
    ['httpEquiv', 'http-equiv'],
  ].forEach(function (e) {
    var t = e[0];
    dr[t] = new Hr(t, 1, !1, e[1], null, !1, !1);
  });
  ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (e) {
    dr[e] = new Hr(e, 2, !1, e.toLowerCase(), null, !1, !1);
  });
  [
    'autoReverse',
    'externalResourcesRequired',
    'focusable',
    'preserveAlpha',
  ].forEach(function (e) {
    dr[e] = new Hr(e, 2, !1, e, null, !1, !1);
  });
  'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
    .split(' ')
    .forEach(function (e) {
      dr[e] = new Hr(e, 3, !1, e.toLowerCase(), null, !1, !1);
    });
  ['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
    dr[e] = new Hr(e, 3, !0, e, null, !1, !1);
  });
  ['capture', 'download'].forEach(function (e) {
    dr[e] = new Hr(e, 4, !1, e, null, !1, !1);
  });
  ['cols', 'rows', 'size', 'span'].forEach(function (e) {
    dr[e] = new Hr(e, 6, !1, e, null, !1, !1);
  });
  ['rowSpan', 'start'].forEach(function (e) {
    dr[e] = new Hr(e, 5, !1, e.toLowerCase(), null, !1, !1);
  });
  var uT = /[\-:]([a-z])/g;
  function cT(e) {
    return e[1].toUpperCase();
  }
  'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
    .split(' ')
    .forEach(function (e) {
      var t = e.replace(uT, cT);
      dr[t] = new Hr(t, 1, !1, e, null, !1, !1);
    });
  'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
    .split(' ')
    .forEach(function (e) {
      var t = e.replace(uT, cT);
      dr[t] = new Hr(t, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1);
    });
  ['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
    var t = e.replace(uT, cT);
    dr[t] = new Hr(t, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1);
  });
  ['tabIndex', 'crossOrigin'].forEach(function (e) {
    dr[e] = new Hr(e, 1, !1, e.toLowerCase(), null, !1, !1);
  });
  dr.xlinkHref = new Hr(
    'xlinkHref',
    1,
    !1,
    'xlink:href',
    'http://www.w3.org/1999/xlink',
    !0,
    !1,
  );
  ['src', 'href', 'action', 'formAction'].forEach(function (e) {
    dr[e] = new Hr(e, 1, !1, e.toLowerCase(), null, !0, !0);
  });
  var vg = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0,
    },
    Ile = ['Webkit', 'ms', 'Moz', 'O'];
  Object.keys(vg).forEach(function (e) {
    Ile.forEach(function (t) {
      (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (vg[t] = vg[e]);
    });
  });
  var Ale = /["'&<>]/;
  function Mr(e) {
    if (typeof e == 'boolean' || typeof e == 'number') return '' + e;
    e = '' + e;
    var t = Ale.exec(e);
    if (t) {
      var r = '',
        n,
        i = 0;
      for (n = t.index; n < e.length; n++) {
        switch (e.charCodeAt(n)) {
          case 34:
            t = '&quot;';
            break;
          case 38:
            t = '&amp;';
            break;
          case 39:
            t = '&#x27;';
            break;
          case 60:
            t = '&lt;';
            break;
          case 62:
            t = '&gt;';
            break;
          default:
            continue;
        }
        i !== n && (r += e.substring(i, n)), (i = n + 1), (r += t);
      }
      e = i !== n ? r + e.substring(i, n) : r;
    }
    return e;
  }
  var $le = /([A-Z])/g,
    Nle = /^ms-/,
    sT = Array.isArray;
  function bi(e, t) {
    return { insertionMode: e, selectedValue: t };
  }
  function Lle(e, t, r) {
    switch (t) {
      case 'select':
        return bi(1, r.value != null ? r.value : r.defaultValue);
      case 'svg':
        return bi(2, null);
      case 'math':
        return bi(3, null);
      case 'foreignObject':
        return bi(1, null);
      case 'table':
        return bi(4, null);
      case 'thead':
      case 'tbody':
      case 'tfoot':
        return bi(5, null);
      case 'colgroup':
        return bi(7, null);
      case 'tr':
        return bi(6, null);
    }
    return 4 <= e.insertionMode || e.insertionMode === 0 ? bi(1, null) : e;
  }
  var pM = new Map();
  function NM(e, t, r) {
    if (typeof r != 'object')
      throw Error(
        "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.",
      );
    t = !0;
    for (var n in r)
      if (on.call(r, n)) {
        var i = r[n];
        if (i != null && typeof i != 'boolean' && i !== '') {
          if (n.indexOf('--') === 0) {
            var s = Mr(n);
            i = Mr(('' + i).trim());
          } else {
            s = n;
            var o = pM.get(s);
            o !== void 0 ||
              ((o = Mr(
                s.replace($le, '-$1').toLowerCase().replace(Nle, '-ms-'),
              )),
              pM.set(s, o)),
              (s = o),
              (i =
                typeof i == 'number'
                  ? i === 0 || on.call(vg, n)
                    ? '' + i
                    : i + 'px'
                  : Mr(('' + i).trim()));
          }
          t
            ? ((t = !1), e.push(' style="', s, ':', i))
            : e.push(';', s, ':', i);
        }
      }
    t || e.push('"');
  }
  function yn(e, t, r, n) {
    switch (r) {
      case 'style':
        NM(e, t, n);
        return;
      case 'defaultValue':
      case 'defaultChecked':
      case 'innerHTML':
      case 'suppressContentEditableWarning':
      case 'suppressHydrationWarning':
        return;
    }
    if (
      !(2 < r.length) ||
      (r[0] !== 'o' && r[0] !== 'O') ||
      (r[1] !== 'n' && r[1] !== 'N')
    ) {
      if (((t = dr.hasOwnProperty(r) ? dr[r] : null), t !== null)) {
        switch (typeof n) {
          case 'function':
          case 'symbol':
            return;
          case 'boolean':
            if (!t.acceptsBooleans) return;
        }
        switch (((r = t.attributeName), t.type)) {
          case 3:
            n && e.push(' ', r, '=""');
            break;
          case 4:
            n === !0
              ? e.push(' ', r, '=""')
              : n !== !1 && e.push(' ', r, '="', Mr(n), '"');
            break;
          case 5:
            isNaN(n) || e.push(' ', r, '="', Mr(n), '"');
            break;
          case 6:
            !isNaN(n) && 1 <= n && e.push(' ', r, '="', Mr(n), '"');
            break;
          default:
            t.sanitizeURL && (n = '' + n), e.push(' ', r, '="', Mr(n), '"');
        }
      } else if ($M(r)) {
        switch (typeof n) {
          case 'function':
          case 'symbol':
            return;
          case 'boolean':
            if (
              ((t = r.toLowerCase().slice(0, 5)),
              t !== 'data-' && t !== 'aria-')
            )
              return;
        }
        e.push(' ', r, '="', Mr(n), '"');
      }
    }
  }
  function bg(e, t, r) {
    if (t != null) {
      if (r != null)
        throw Error(
          'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
        );
      if (typeof t != 'object' || !('__html' in t))
        throw Error(
          '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
        );
      (t = t.__html), t != null && e.push('' + t);
    }
  }
  function Dle(e) {
    var t = '';
    return (
      AM.Children.forEach(e, function (r) {
        r != null && (t += r);
      }),
      t
    );
  }
  function tT(e, t, r, n) {
    e.push(Ls(r));
    var i = (r = null),
      s;
    for (s in t)
      if (on.call(t, s)) {
        var o = t[s];
        if (o != null)
          switch (s) {
            case 'children':
              r = o;
              break;
            case 'dangerouslySetInnerHTML':
              i = o;
              break;
            default:
              yn(e, n, s, o);
          }
      }
    return (
      e.push('>'), bg(e, i, r), typeof r == 'string' ? (e.push(Mr(r)), null) : r
    );
  }
  var jle = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
    mM = new Map();
  function Ls(e) {
    var t = mM.get(e);
    if (t === void 0) {
      if (!jle.test(e)) throw Error('Invalid tag: ' + e);
      (t = '<' + e), mM.set(e, t);
    }
    return t;
  }
  function Fle(e, t, r, n, i) {
    switch (t) {
      case 'select':
        e.push(Ls('select'));
        var s = null,
          o = null;
        for (d in r)
          if (on.call(r, d)) {
            var a = r[d];
            if (a != null)
              switch (d) {
                case 'children':
                  s = a;
                  break;
                case 'dangerouslySetInnerHTML':
                  o = a;
                  break;
                case 'defaultValue':
                case 'value':
                  break;
                default:
                  yn(e, n, d, a);
              }
          }
        return e.push('>'), bg(e, o, s), s;
      case 'option':
        (o = i.selectedValue), e.push(Ls('option'));
        var u = (a = null),
          c = null,
          d = null;
        for (s in r)
          if (on.call(r, s)) {
            var m = r[s];
            if (m != null)
              switch (s) {
                case 'children':
                  a = m;
                  break;
                case 'selected':
                  c = m;
                  break;
                case 'dangerouslySetInnerHTML':
                  d = m;
                  break;
                case 'value':
                  u = m;
                default:
                  yn(e, n, s, m);
              }
          }
        if (o != null)
          if (((r = u !== null ? '' + u : Dle(a)), sT(o))) {
            for (n = 0; n < o.length; n++)
              if ('' + o[n] === r) {
                e.push(' selected=""');
                break;
              }
          } else '' + o === r && e.push(' selected=""');
        else c && e.push(' selected=""');
        return e.push('>'), bg(e, d, a), a;
      case 'textarea':
        e.push(Ls('textarea')), (d = o = s = null);
        for (a in r)
          if (on.call(r, a) && ((u = r[a]), u != null))
            switch (a) {
              case 'children':
                d = u;
                break;
              case 'value':
                s = u;
                break;
              case 'defaultValue':
                o = u;
                break;
              case 'dangerouslySetInnerHTML':
                throw Error(
                  '`dangerouslySetInnerHTML` does not make sense on <textarea>.',
                );
              default:
                yn(e, n, a, u);
            }
        if ((s === null && o !== null && (s = o), e.push('>'), d != null)) {
          if (s != null)
            throw Error(
              'If you supply `defaultValue` on a <textarea>, do not pass children.',
            );
          if (sT(d) && 1 < d.length)
            throw Error('<textarea> can only have at most one child.');
          s = '' + d;
        }
        return (
          typeof s == 'string' &&
            s[0] ===
              `
` &&
            e.push(`
`),
          s !== null && e.push(Mr('' + s)),
          null
        );
      case 'input':
        e.push(Ls('input')), (u = d = a = s = null);
        for (o in r)
          if (on.call(r, o) && ((c = r[o]), c != null))
            switch (o) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw Error(
                  'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              case 'defaultChecked':
                u = c;
                break;
              case 'defaultValue':
                a = c;
                break;
              case 'checked':
                d = c;
                break;
              case 'value':
                s = c;
                break;
              default:
                yn(e, n, o, c);
            }
        return (
          d !== null
            ? yn(e, n, 'checked', d)
            : u !== null && yn(e, n, 'checked', u),
          s !== null
            ? yn(e, n, 'value', s)
            : a !== null && yn(e, n, 'value', a),
          e.push('/>'),
          null
        );
      case 'menuitem':
        e.push(Ls('menuitem'));
        for (var g in r)
          if (on.call(r, g) && ((s = r[g]), s != null))
            switch (g) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw Error(
                  'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.',
                );
              default:
                yn(e, n, g, s);
            }
        return e.push('>'), null;
      case 'title':
        e.push(Ls('title')), (s = null);
        for (m in r)
          if (on.call(r, m) && ((o = r[m]), o != null))
            switch (m) {
              case 'children':
                s = o;
                break;
              case 'dangerouslySetInnerHTML':
                throw Error(
                  '`dangerouslySetInnerHTML` does not make sense on <title>.',
                );
              default:
                yn(e, n, m, o);
            }
        return e.push('>'), s;
      case 'listing':
      case 'pre':
        e.push(Ls(t)), (o = s = null);
        for (u in r)
          if (on.call(r, u) && ((a = r[u]), a != null))
            switch (u) {
              case 'children':
                s = a;
                break;
              case 'dangerouslySetInnerHTML':
                o = a;
                break;
              default:
                yn(e, n, u, a);
            }
        if ((e.push('>'), o != null)) {
          if (s != null)
            throw Error(
              'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
            );
          if (typeof o != 'object' || !('__html' in o))
            throw Error(
              '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
            );
          (r = o.__html),
            r != null &&
              (typeof r == 'string' &&
              0 < r.length &&
              r[0] ===
                `
`
                ? e.push(
                    `
`,
                    r,
                  )
                : e.push('' + r));
        }
        return (
          typeof s == 'string' &&
            s[0] ===
              `
` &&
            e.push(`
`),
          s
        );
      case 'area':
      case 'base':
      case 'br':
      case 'col':
      case 'embed':
      case 'hr':
      case 'img':
      case 'keygen':
      case 'link':
      case 'meta':
      case 'param':
      case 'source':
      case 'track':
      case 'wbr':
        e.push(Ls(t));
        for (var v in r)
          if (on.call(r, v) && ((s = r[v]), s != null))
            switch (v) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw Error(
                  t +
                    ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              default:
                yn(e, n, v, s);
            }
        return e.push('/>'), null;
      case 'annotation-xml':
      case 'color-profile':
      case 'font-face':
      case 'font-face-src':
      case 'font-face-uri':
      case 'font-face-format':
      case 'font-face-name':
      case 'missing-glyph':
        return tT(e, r, t, n);
      case 'html':
        return (
          i.insertionMode === 0 && e.push('<!DOCTYPE html>'), tT(e, r, t, n)
        );
      default:
        if (t.indexOf('-') === -1 && typeof r.is != 'string')
          return tT(e, r, t, n);
        e.push(Ls(t)), (o = s = null);
        for (c in r)
          if (on.call(r, c) && ((a = r[c]), a != null))
            switch (c) {
              case 'children':
                s = a;
                break;
              case 'dangerouslySetInnerHTML':
                o = a;
                break;
              case 'style':
                NM(e, n, a);
                break;
              case 'suppressContentEditableWarning':
              case 'suppressHydrationWarning':
                break;
              default:
                $M(c) &&
                  typeof a != 'function' &&
                  typeof a != 'symbol' &&
                  e.push(' ', c, '="', Mr(a), '"');
            }
        return e.push('>'), bg(e, o, s), s;
    }
  }
  function yM(e, t, r) {
    if ((e.push('<!--$?--><template id="'), r === null))
      throw Error(
        'An ID must have been assigned before we can complete the boundary.',
      );
    return e.push(r), e.push('"></template>');
  }
  function qle(e, t, r, n) {
    switch (r.insertionMode) {
      case 0:
      case 1:
        return (
          e.push('<div hidden id="'),
          e.push(t.segmentPrefix),
          (t = n.toString(16)),
          e.push(t),
          e.push('">')
        );
      case 2:
        return (
          e.push('<svg aria-hidden="true" style="display:none" id="'),
          e.push(t.segmentPrefix),
          (t = n.toString(16)),
          e.push(t),
          e.push('">')
        );
      case 3:
        return (
          e.push('<math aria-hidden="true" style="display:none" id="'),
          e.push(t.segmentPrefix),
          (t = n.toString(16)),
          e.push(t),
          e.push('">')
        );
      case 4:
        return (
          e.push('<table hidden id="'),
          e.push(t.segmentPrefix),
          (t = n.toString(16)),
          e.push(t),
          e.push('">')
        );
      case 5:
        return (
          e.push('<table hidden><tbody id="'),
          e.push(t.segmentPrefix),
          (t = n.toString(16)),
          e.push(t),
          e.push('">')
        );
      case 6:
        return (
          e.push('<table hidden><tr id="'),
          e.push(t.segmentPrefix),
          (t = n.toString(16)),
          e.push(t),
          e.push('">')
        );
      case 7:
        return (
          e.push('<table hidden><colgroup id="'),
          e.push(t.segmentPrefix),
          (t = n.toString(16)),
          e.push(t),
          e.push('">')
        );
      default:
        throw Error('Unknown insertion mode. This is a bug in React.');
    }
  }
  function Mle(e, t) {
    switch (t.insertionMode) {
      case 0:
      case 1:
        return e.push('</div>');
      case 2:
        return e.push('</svg>');
      case 3:
        return e.push('</math>');
      case 4:
        return e.push('</table>');
      case 5:
        return e.push('</tbody></table>');
      case 6:
        return e.push('</tr></table>');
      case 7:
        return e.push('</colgroup></table>');
      default:
        throw Error('Unknown insertion mode. This is a bug in React.');
    }
  }
  var Hle = /[<\u2028\u2029]/g;
  function rT(e) {
    return JSON.stringify(e).replace(Hle, function (t) {
      switch (t) {
        case '<':
          return '\\u003c';
        case '\u2028':
          return '\\u2028';
        case '\u2029':
          return '\\u2029';
        default:
          throw Error(
            'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React',
          );
      }
    });
  }
  function LM(e, t) {
    return (
      (t = t === void 0 ? '' : t),
      {
        bootstrapChunks: [],
        startInlineScript: '<script>',
        placeholderPrefix: t + 'P:',
        segmentPrefix: t + 'S:',
        boundaryPrefix: t + 'B:',
        idPrefix: t,
        nextSuspenseID: 0,
        sentCompleteSegmentFunction: !1,
        sentCompleteBoundaryFunction: !1,
        sentClientRenderFunction: !1,
        generateStaticMarkup: e,
      }
    );
  }
  function DM() {
    return { insertionMode: 1, selectedValue: null };
  }
  function gM(e, t, r, n) {
    return r.generateStaticMarkup
      ? (e.push(Mr(t)), !1)
      : (t === ''
          ? (e = n)
          : (n && e.push('<!-- -->'), e.push(Mr(t)), (e = !0)),
        e);
  }
  var yh = Object.assign,
    zle = Symbol.for('react.element'),
    jM = Symbol.for('react.portal'),
    FM = Symbol.for('react.fragment'),
    qM = Symbol.for('react.strict_mode'),
    MM = Symbol.for('react.profiler'),
    HM = Symbol.for('react.provider'),
    zM = Symbol.for('react.context'),
    UM = Symbol.for('react.forward_ref'),
    VM = Symbol.for('react.suspense'),
    BM = Symbol.for('react.suspense_list'),
    WM = Symbol.for('react.memo'),
    fT = Symbol.for('react.lazy'),
    Ule = Symbol.for('react.scope'),
    Vle = Symbol.for('react.debug_trace_mode'),
    Ble = Symbol.for('react.legacy_hidden'),
    Wle = Symbol.for('react.default_value'),
    vM = Symbol.iterator;
  function iT(e) {
    if (e == null) return null;
    if (typeof e == 'function') return e.displayName || e.name || null;
    if (typeof e == 'string') return e;
    switch (e) {
      case FM:
        return 'Fragment';
      case jM:
        return 'Portal';
      case MM:
        return 'Profiler';
      case qM:
        return 'StrictMode';
      case VM:
        return 'Suspense';
      case BM:
        return 'SuspenseList';
    }
    if (typeof e == 'object')
      switch (e.$$typeof) {
        case zM:
          return (e.displayName || 'Context') + '.Consumer';
        case HM:
          return (e._context.displayName || 'Context') + '.Provider';
        case UM:
          var t = e.render;
          return (
            (e = e.displayName),
            e ||
              ((e = t.displayName || t.name || ''),
              (e = e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')),
            e
          );
        case WM:
          return (
            (t = e.displayName || null), t !== null ? t : iT(e.type) || 'Memo'
          );
        case fT:
          (t = e._payload), (e = e._init);
          try {
            return iT(e(t));
          } catch {}
      }
    return null;
  }
  var GM = {};
  function bM(e, t) {
    if (((e = e.contextTypes), !e)) return GM;
    var r = {},
      n;
    for (n in e) r[n] = t[n];
    return r;
  }
  var tl = null;
  function xg(e, t) {
    if (e !== t) {
      (e.context._currentValue2 = e.parentValue), (e = e.parent);
      var r = t.parent;
      if (e === null) {
        if (r !== null)
          throw Error(
            'The stacks must reach the root at the same time. This is a bug in React.',
          );
      } else {
        if (r === null)
          throw Error(
            'The stacks must reach the root at the same time. This is a bug in React.',
          );
        xg(e, r);
      }
      t.context._currentValue2 = t.value;
    }
  }
  function YM(e) {
    (e.context._currentValue2 = e.parentValue),
      (e = e.parent),
      e !== null && YM(e);
  }
  function JM(e) {
    var t = e.parent;
    t !== null && JM(t), (e.context._currentValue2 = e.value);
  }
  function KM(e, t) {
    if (
      ((e.context._currentValue2 = e.parentValue), (e = e.parent), e === null)
    )
      throw Error(
        'The depth must equal at least at zero before reaching the root. This is a bug in React.',
      );
    e.depth === t.depth ? xg(e, t) : KM(e, t);
  }
  function XM(e, t) {
    var r = t.parent;
    if (r === null)
      throw Error(
        'The depth must equal at least at zero before reaching the root. This is a bug in React.',
      );
    e.depth === r.depth ? xg(e, r) : XM(e, r),
      (t.context._currentValue2 = t.value);
  }
  function Eg(e) {
    var t = tl;
    t !== e &&
      (t === null
        ? JM(e)
        : e === null
          ? YM(t)
          : t.depth === e.depth
            ? xg(t, e)
            : t.depth > e.depth
              ? KM(t, e)
              : XM(t, e),
      (tl = e));
  }
  var SM = {
    isMounted: function () {
      return !1;
    },
    enqueueSetState: function (e, t) {
      (e = e._reactInternals), e.queue !== null && e.queue.push(t);
    },
    enqueueReplaceState: function (e, t) {
      (e = e._reactInternals), (e.replace = !0), (e.queue = [t]);
    },
    enqueueForceUpdate: function () {},
  };
  function _M(e, t, r, n) {
    var i = e.state !== void 0 ? e.state : null;
    (e.updater = SM), (e.props = r), (e.state = i);
    var s = { queue: [], replace: !1 };
    e._reactInternals = s;
    var o = t.contextType;
    if (
      ((e.context = typeof o == 'object' && o !== null ? o._currentValue2 : n),
      (o = t.getDerivedStateFromProps),
      typeof o == 'function' &&
        ((o = o(r, i)), (i = o == null ? i : yh({}, i, o)), (e.state = i)),
      typeof t.getDerivedStateFromProps != 'function' &&
        typeof e.getSnapshotBeforeUpdate != 'function' &&
        (typeof e.UNSAFE_componentWillMount == 'function' ||
          typeof e.componentWillMount == 'function'))
    )
      if (
        ((t = e.state),
        typeof e.componentWillMount == 'function' && e.componentWillMount(),
        typeof e.UNSAFE_componentWillMount == 'function' &&
          e.UNSAFE_componentWillMount(),
        t !== e.state && SM.enqueueReplaceState(e, e.state, null),
        s.queue !== null && 0 < s.queue.length)
      )
        if (
          ((t = s.queue),
          (o = s.replace),
          (s.queue = null),
          (s.replace = !1),
          o && t.length === 1)
        )
          e.state = t[0];
        else {
          for (
            s = o ? t[0] : e.state, i = !0, o = o ? 1 : 0;
            o < t.length;
            o++
          ) {
            var a = t[o];
            (a = typeof a == 'function' ? a.call(e, s, r, n) : a),
              a != null && (i ? ((i = !1), (s = yh({}, s, a))) : yh(s, a));
          }
          e.state = s;
        }
      else s.queue = null;
  }
  var Gle = { id: 1, overflow: '' };
  function oT(e, t, r) {
    var n = e.id;
    e = e.overflow;
    var i = 32 - Sg(n) - 1;
    (n &= ~(1 << i)), (r += 1);
    var s = 32 - Sg(t) + i;
    if (30 < s) {
      var o = i - (i % 5);
      return (
        (s = (n & ((1 << o) - 1)).toString(32)),
        (n >>= o),
        (i -= o),
        { id: (1 << (32 - Sg(t) + i)) | (r << i) | n, overflow: s + e }
      );
    }
    return { id: (1 << s) | (r << i) | n, overflow: e };
  }
  var Sg = Math.clz32 ? Math.clz32 : Kle,
    Yle = Math.log,
    Jle = Math.LN2;
  function Kle(e) {
    return (e >>>= 0), e === 0 ? 32 : (31 - ((Yle(e) / Jle) | 0)) | 0;
  }
  function Xle(e, t) {
    return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t);
  }
  var Zle = typeof Object.is == 'function' ? Object.is : Xle,
    Si = null,
    dT = null,
    _g = null,
    ht = null,
    ph = !1,
    Rg = !1,
    gh = 0,
    Lo = null,
    Cg = 0;
  function el() {
    if (Si === null)
      throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    return Si;
  }
  function wM() {
    if (0 < Cg)
      throw Error('Rendered more hooks than during the previous render');
    return { memoizedState: null, queue: null, next: null };
  }
  function hT() {
    return (
      ht === null
        ? _g === null
          ? ((ph = !1), (_g = ht = wM()))
          : ((ph = !0), (ht = _g))
        : ht.next === null
          ? ((ph = !1), (ht = ht.next = wM()))
          : ((ph = !0), (ht = ht.next)),
      ht
    );
  }
  function pT() {
    (dT = Si = null), (Rg = !1), (_g = null), (Cg = 0), (ht = Lo = null);
  }
  function ZM(e, t) {
    return typeof t == 'function' ? t(e) : t;
  }
  function EM(e, t, r) {
    if (((Si = el()), (ht = hT()), ph)) {
      var n = ht.queue;
      if (((t = n.dispatch), Lo !== null && ((r = Lo.get(n)), r !== void 0))) {
        Lo.delete(n), (n = ht.memoizedState);
        do (n = e(n, r.action)), (r = r.next);
        while (r !== null);
        return (ht.memoizedState = n), [n, t];
      }
      return [ht.memoizedState, t];
    }
    return (
      (e =
        e === ZM
          ? typeof t == 'function'
            ? t()
            : t
          : r !== void 0
            ? r(t)
            : t),
      (ht.memoizedState = e),
      (e = ht.queue = { last: null, dispatch: null }),
      (e = e.dispatch = Qle.bind(null, Si, e)),
      [ht.memoizedState, e]
    );
  }
  function RM(e, t) {
    if (
      ((Si = el()), (ht = hT()), (t = t === void 0 ? null : t), ht !== null)
    ) {
      var r = ht.memoizedState;
      if (r !== null && t !== null) {
        var n = r[1];
        e: if (n === null) n = !1;
        else {
          for (var i = 0; i < n.length && i < t.length; i++)
            if (!Zle(t[i], n[i])) {
              n = !1;
              break e;
            }
          n = !0;
        }
        if (n) return r[0];
      }
    }
    return (e = e()), (ht.memoizedState = [e, t]), e;
  }
  function Qle(e, t, r) {
    if (25 <= Cg)
      throw Error(
        'Too many re-renders. React limits the number of renders to prevent an infinite loop.',
      );
    if (e === Si)
      if (
        ((Rg = !0),
        (e = { action: r, next: null }),
        Lo === null && (Lo = new Map()),
        (r = Lo.get(t)),
        r === void 0)
      )
        Lo.set(t, e);
      else {
        for (t = r; t.next !== null; ) t = t.next;
        t.next = e;
      }
  }
  function eue() {
    throw Error('startTransition cannot be called during server rendering.');
  }
  function yg() {}
  var TM = {
      readContext: function (e) {
        return e._currentValue2;
      },
      useContext: function (e) {
        return el(), e._currentValue2;
      },
      useMemo: RM,
      useReducer: EM,
      useRef: function (e) {
        (Si = el()), (ht = hT());
        var t = ht.memoizedState;
        return t === null ? ((e = { current: e }), (ht.memoizedState = e)) : t;
      },
      useState: function (e) {
        return EM(ZM, e);
      },
      useInsertionEffect: yg,
      useLayoutEffect: function () {},
      useCallback: function (e, t) {
        return RM(function () {
          return e;
        }, t);
      },
      useImperativeHandle: yg,
      useEffect: yg,
      useDebugValue: yg,
      useDeferredValue: function (e) {
        return el(), e;
      },
      useTransition: function () {
        return el(), [!1, eue];
      },
      useId: function () {
        var e = dT.treeContext,
          t = e.overflow;
        (e = e.id), (e = (e & ~(1 << (32 - Sg(e) - 1))).toString(32) + t);
        var r = wg;
        if (r === null)
          throw Error(
            'Invalid hook call. Hooks can only be called inside of the body of a function component.',
          );
        return (
          (t = gh++),
          (e = ':' + r.idPrefix + 'R' + e),
          0 < t && (e += 'H' + t.toString(32)),
          e + ':'
        );
      },
      useMutableSource: function (e, t) {
        return el(), t(e._source);
      },
      useSyncExternalStore: function (e, t, r) {
        if (r === void 0)
          throw Error(
            'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.',
          );
        return r();
      },
    },
    wg = null,
    nT =
      AM.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
        .ReactCurrentDispatcher;
  function tue(e) {
    return console.error(e), null;
  }
  function mh() {}
  function QM(e, t, r, n, i, s, o, a, u) {
    var c = [],
      d = new Set();
    return (
      (t = {
        destination: null,
        responseState: t,
        progressiveChunkSize: n === void 0 ? 12800 : n,
        status: 0,
        fatalError: null,
        nextSegmentId: 0,
        allPendingTasks: 0,
        pendingRootTasks: 0,
        completedRootSegment: null,
        abortableTasks: d,
        pingedTasks: c,
        clientRenderedBoundaries: [],
        completedBoundaries: [],
        partialBoundaries: [],
        onError: i === void 0 ? tue : i,
        onAllReady: s === void 0 ? mh : s,
        onShellReady: o === void 0 ? mh : o,
        onShellError: a === void 0 ? mh : a,
        onFatalError: u === void 0 ? mh : u,
      }),
      (r = Tg(t, 0, null, r, !1, !1)),
      (r.parentFlushed = !0),
      (e = mT(t, e, null, r, d, GM, null, Gle)),
      c.push(e),
      t
    );
  }
  function mT(e, t, r, n, i, s, o, a) {
    e.allPendingTasks++, r === null ? e.pendingRootTasks++ : r.pendingTasks++;
    var u = {
      node: t,
      ping: function () {
        var c = e.pingedTasks;
        c.push(u), c.length === 1 && yT(e);
      },
      blockedBoundary: r,
      blockedSegment: n,
      abortSet: i,
      legacyContext: s,
      context: o,
      treeContext: a,
    };
    return i.add(u), u;
  }
  function Tg(e, t, r, n, i, s) {
    return {
      status: 0,
      id: -1,
      index: t,
      parentFlushed: !1,
      chunks: [],
      children: [],
      formatContext: n,
      boundary: r,
      lastPushedText: i,
      textEmbedded: s,
    };
  }
  function vh(e, t) {
    if (((e = e.onError(t)), e != null && typeof e != 'string'))
      throw Error(
        'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
          typeof e +
          '" instead',
      );
    return e;
  }
  function Pg(e, t) {
    var r = e.onShellError;
    r(t),
      (r = e.onFatalError),
      r(t),
      e.destination !== null
        ? ((e.status = 2), e.destination.destroy(t))
        : ((e.status = 1), (e.fatalError = t));
  }
  function PM(e, t, r, n, i) {
    for (Si = {}, dT = t, gh = 0, e = r(n, i); Rg; )
      (Rg = !1), (gh = 0), (Cg += 1), (ht = null), (e = r(n, i));
    return pT(), e;
  }
  function kM(e, t, r, n) {
    var i = r.render(),
      s = n.childContextTypes;
    if (s != null) {
      var o = t.legacyContext;
      if (typeof r.getChildContext != 'function') n = o;
      else {
        r = r.getChildContext();
        for (var a in r)
          if (!(a in s))
            throw Error(
              (iT(n) || 'Unknown') +
                '.getChildContext(): key "' +
                a +
                '" is not defined in childContextTypes.',
            );
        n = yh({}, o, r);
      }
      (t.legacyContext = n), gn(e, t, i), (t.legacyContext = o);
    } else gn(e, t, i);
  }
  function xM(e, t) {
    if (e && e.defaultProps) {
      (t = yh({}, t)), (e = e.defaultProps);
      for (var r in e) t[r] === void 0 && (t[r] = e[r]);
      return t;
    }
    return t;
  }
  function aT(e, t, r, n, i) {
    if (typeof r == 'function')
      if (r.prototype && r.prototype.isReactComponent) {
        i = bM(r, t.legacyContext);
        var s = r.contextType;
        (s = new r(
          n,
          typeof s == 'object' && s !== null ? s._currentValue2 : i,
        )),
          _M(s, r, n, i),
          kM(e, t, s, r);
      } else {
        (s = bM(r, t.legacyContext)), (i = PM(e, t, r, n, s));
        var o = gh !== 0;
        if (
          typeof i == 'object' &&
          i !== null &&
          typeof i.render == 'function' &&
          i.$$typeof === void 0
        )
          _M(i, r, n, s), kM(e, t, i, r);
        else if (o) {
          (n = t.treeContext), (t.treeContext = oT(n, 1, 0));
          try {
            gn(e, t, i);
          } finally {
            t.treeContext = n;
          }
        } else gn(e, t, i);
      }
    else if (typeof r == 'string') {
      switch (
        ((i = t.blockedSegment),
        (s = Fle(i.chunks, r, n, e.responseState, i.formatContext)),
        (i.lastPushedText = !1),
        (o = i.formatContext),
        (i.formatContext = Lle(o, r, n)),
        lT(e, t, s),
        (i.formatContext = o),
        r)
      ) {
        case 'area':
        case 'base':
        case 'br':
        case 'col':
        case 'embed':
        case 'hr':
        case 'img':
        case 'input':
        case 'keygen':
        case 'link':
        case 'meta':
        case 'param':
        case 'source':
        case 'track':
        case 'wbr':
          break;
        default:
          i.chunks.push('</', r, '>');
      }
      i.lastPushedText = !1;
    } else {
      switch (r) {
        case Ble:
        case Vle:
        case qM:
        case MM:
        case FM:
          gn(e, t, n.children);
          return;
        case BM:
          gn(e, t, n.children);
          return;
        case Ule:
          throw Error('ReactDOMServer does not yet support scope components.');
        case VM:
          e: {
            (r = t.blockedBoundary),
              (i = t.blockedSegment),
              (s = n.fallback),
              (n = n.children),
              (o = new Set());
            var a = {
                id: null,
                rootSegmentID: -1,
                parentFlushed: !1,
                pendingTasks: 0,
                forceClientRender: !1,
                completedSegments: [],
                byteSize: 0,
                fallbackAbortableTasks: o,
                errorDigest: null,
              },
              u = Tg(e, i.chunks.length, a, i.formatContext, !1, !1);
            i.children.push(u), (i.lastPushedText = !1);
            var c = Tg(e, 0, null, i.formatContext, !1, !1);
            (c.parentFlushed = !0),
              (t.blockedBoundary = a),
              (t.blockedSegment = c);
            try {
              if (
                (lT(e, t, n),
                e.responseState.generateStaticMarkup ||
                  (c.lastPushedText &&
                    c.textEmbedded &&
                    c.chunks.push('<!-- -->')),
                (c.status = 1),
                kg(a, c),
                a.pendingTasks === 0)
              )
                break e;
            } catch (d) {
              (c.status = 4),
                (a.forceClientRender = !0),
                (a.errorDigest = vh(e, d));
            } finally {
              (t.blockedBoundary = r), (t.blockedSegment = i);
            }
            (t = mT(e, s, r, u, o, t.legacyContext, t.context, t.treeContext)),
              e.pingedTasks.push(t);
          }
          return;
      }
      if (typeof r == 'object' && r !== null)
        switch (r.$$typeof) {
          case UM:
            if (((n = PM(e, t, r.render, n, i)), gh !== 0)) {
              (r = t.treeContext), (t.treeContext = oT(r, 1, 0));
              try {
                gn(e, t, n);
              } finally {
                t.treeContext = r;
              }
            } else gn(e, t, n);
            return;
          case WM:
            (r = r.type), (n = xM(r, n)), aT(e, t, r, n, i);
            return;
          case HM:
            if (
              ((i = n.children),
              (r = r._context),
              (n = n.value),
              (s = r._currentValue2),
              (r._currentValue2 = n),
              (o = tl),
              (tl = n =
                {
                  parent: o,
                  depth: o === null ? 0 : o.depth + 1,
                  context: r,
                  parentValue: s,
                  value: n,
                }),
              (t.context = n),
              gn(e, t, i),
              (e = tl),
              e === null)
            )
              throw Error(
                'Tried to pop a Context at the root of the app. This is a bug in React.',
              );
            (n = e.parentValue),
              (e.context._currentValue2 =
                n === Wle ? e.context._defaultValue : n),
              (e = tl = e.parent),
              (t.context = e);
            return;
          case zM:
            (n = n.children), (n = n(r._currentValue2)), gn(e, t, n);
            return;
          case fT:
            (i = r._init),
              (r = i(r._payload)),
              (n = xM(r, n)),
              aT(e, t, r, n, void 0);
            return;
        }
      throw Error(
        'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: ' +
          ((r == null ? r : typeof r) + '.'),
      );
    }
  }
  function gn(e, t, r) {
    if (((t.node = r), typeof r == 'object' && r !== null)) {
      switch (r.$$typeof) {
        case zle:
          aT(e, t, r.type, r.props, r.ref);
          return;
        case jM:
          throw Error(
            'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.',
          );
        case fT:
          var n = r._init;
          (r = n(r._payload)), gn(e, t, r);
          return;
      }
      if (sT(r)) {
        CM(e, t, r);
        return;
      }
      if (
        (r === null || typeof r != 'object'
          ? (n = null)
          : ((n = (vM && r[vM]) || r['@@iterator']),
            (n = typeof n == 'function' ? n : null)),
        n && (n = n.call(r)))
      ) {
        if (((r = n.next()), !r.done)) {
          var i = [];
          do i.push(r.value), (r = n.next());
          while (!r.done);
          CM(e, t, i);
        }
        return;
      }
      throw (
        ((e = Object.prototype.toString.call(r)),
        Error(
          'Objects are not valid as a React child (found: ' +
            (e === '[object Object]'
              ? 'object with keys {' + Object.keys(r).join(', ') + '}'
              : e) +
            '). If you meant to render a collection of children, use an array instead.',
        ))
      );
    }
    typeof r == 'string'
      ? ((n = t.blockedSegment),
        (n.lastPushedText = gM(
          t.blockedSegment.chunks,
          r,
          e.responseState,
          n.lastPushedText,
        )))
      : typeof r == 'number' &&
        ((n = t.blockedSegment),
        (n.lastPushedText = gM(
          t.blockedSegment.chunks,
          '' + r,
          e.responseState,
          n.lastPushedText,
        )));
  }
  function CM(e, t, r) {
    for (var n = r.length, i = 0; i < n; i++) {
      var s = t.treeContext;
      t.treeContext = oT(s, n, i);
      try {
        lT(e, t, r[i]);
      } finally {
        t.treeContext = s;
      }
    }
  }
  function lT(e, t, r) {
    var n = t.blockedSegment.formatContext,
      i = t.legacyContext,
      s = t.context;
    try {
      return gn(e, t, r);
    } catch (u) {
      if (
        (pT(),
        typeof u == 'object' && u !== null && typeof u.then == 'function')
      ) {
        r = u;
        var o = t.blockedSegment,
          a = Tg(
            e,
            o.chunks.length,
            null,
            o.formatContext,
            o.lastPushedText,
            !0,
          );
        o.children.push(a),
          (o.lastPushedText = !1),
          (e = mT(
            e,
            t.node,
            t.blockedBoundary,
            a,
            t.abortSet,
            t.legacyContext,
            t.context,
            t.treeContext,
          ).ping),
          r.then(e, e),
          (t.blockedSegment.formatContext = n),
          (t.legacyContext = i),
          (t.context = s),
          Eg(s);
      } else
        throw (
          ((t.blockedSegment.formatContext = n),
          (t.legacyContext = i),
          (t.context = s),
          Eg(s),
          u)
        );
    }
  }
  function rue(e) {
    var t = e.blockedBoundary;
    (e = e.blockedSegment), (e.status = 3), t2(this, t, e);
  }
  function e2(e, t, r) {
    var n = e.blockedBoundary;
    (e.blockedSegment.status = 3),
      n === null
        ? (t.allPendingTasks--,
          t.status !== 2 &&
            ((t.status = 2),
            t.destination !== null && t.destination.push(null)))
        : (n.pendingTasks--,
          n.forceClientRender ||
            ((n.forceClientRender = !0),
            (n.errorDigest = t.onError(
              r === void 0
                ? Error(
                    'The render was aborted by the server without a reason.',
                  )
                : r,
            )),
            n.parentFlushed && t.clientRenderedBoundaries.push(n)),
          n.fallbackAbortableTasks.forEach(function (i) {
            return e2(i, t, r);
          }),
          n.fallbackAbortableTasks.clear(),
          t.allPendingTasks--,
          t.allPendingTasks === 0 && ((e = t.onAllReady), e()));
  }
  function kg(e, t) {
    if (
      t.chunks.length === 0 &&
      t.children.length === 1 &&
      t.children[0].boundary === null
    ) {
      var r = t.children[0];
      (r.id = t.id), (r.parentFlushed = !0), r.status === 1 && kg(e, r);
    } else e.completedSegments.push(t);
  }
  function t2(e, t, r) {
    if (t === null) {
      if (r.parentFlushed) {
        if (e.completedRootSegment !== null)
          throw Error(
            'There can only be one root segment. This is a bug in React.',
          );
        e.completedRootSegment = r;
      }
      e.pendingRootTasks--,
        e.pendingRootTasks === 0 &&
          ((e.onShellError = mh), (t = e.onShellReady), t());
    } else
      t.pendingTasks--,
        t.forceClientRender ||
          (t.pendingTasks === 0
            ? (r.parentFlushed && r.status === 1 && kg(t, r),
              t.parentFlushed && e.completedBoundaries.push(t),
              t.fallbackAbortableTasks.forEach(rue, e),
              t.fallbackAbortableTasks.clear())
            : r.parentFlushed &&
              r.status === 1 &&
              (kg(t, r),
              t.completedSegments.length === 1 &&
                t.parentFlushed &&
                e.partialBoundaries.push(t)));
    e.allPendingTasks--, e.allPendingTasks === 0 && ((e = e.onAllReady), e());
  }
  function yT(e) {
    if (e.status !== 2) {
      var t = tl,
        r = nT.current;
      nT.current = TM;
      var n = wg;
      wg = e.responseState;
      try {
        var i = e.pingedTasks,
          s;
        for (s = 0; s < i.length; s++) {
          var o = i[s],
            a = e,
            u = o.blockedSegment;
          if (u.status === 0) {
            Eg(o.context);
            try {
              gn(a, o, o.node),
                a.responseState.generateStaticMarkup ||
                  (u.lastPushedText &&
                    u.textEmbedded &&
                    u.chunks.push('<!-- -->')),
                o.abortSet.delete(o),
                (u.status = 1),
                t2(a, o.blockedBoundary, u);
            } catch (S) {
              if (
                (pT(),
                typeof S == 'object' &&
                  S !== null &&
                  typeof S.then == 'function')
              ) {
                var c = o.ping;
                S.then(c, c);
              } else {
                o.abortSet.delete(o), (u.status = 4);
                var d = o.blockedBoundary,
                  m = S,
                  g = vh(a, m);
                if (
                  (d === null
                    ? Pg(a, m)
                    : (d.pendingTasks--,
                      d.forceClientRender ||
                        ((d.forceClientRender = !0),
                        (d.errorDigest = g),
                        d.parentFlushed && a.clientRenderedBoundaries.push(d))),
                  a.allPendingTasks--,
                  a.allPendingTasks === 0)
                ) {
                  var v = a.onAllReady;
                  v();
                }
              }
            } finally {
            }
          }
        }
        i.splice(0, s), e.destination !== null && gT(e, e.destination);
      } catch (S) {
        vh(e, S), Pg(e, S);
      } finally {
        (wg = n), (nT.current = r), r === TM && Eg(t);
      }
    }
  }
  function gg(e, t, r) {
    switch (((r.parentFlushed = !0), r.status)) {
      case 0:
        var n = (r.id = e.nextSegmentId++);
        return (
          (r.lastPushedText = !1),
          (r.textEmbedded = !1),
          (e = e.responseState),
          t.push('<template id="'),
          t.push(e.placeholderPrefix),
          (e = n.toString(16)),
          t.push(e),
          t.push('"></template>')
        );
      case 1:
        r.status = 2;
        var i = !0;
        n = r.chunks;
        var s = 0;
        r = r.children;
        for (var o = 0; o < r.length; o++) {
          for (i = r[o]; s < i.index; s++) t.push(n[s]);
          i = Og(e, t, i);
        }
        for (; s < n.length - 1; s++) t.push(n[s]);
        return s < n.length && (i = t.push(n[s])), i;
      default:
        throw Error(
          'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.',
        );
    }
  }
  function Og(e, t, r) {
    var n = r.boundary;
    if (n === null) return gg(e, t, r);
    if (((n.parentFlushed = !0), n.forceClientRender))
      return (
        e.responseState.generateStaticMarkup ||
          ((n = n.errorDigest),
          t.push('<!--$!-->'),
          t.push('<template'),
          n && (t.push(' data-dgst="'), (n = Mr(n)), t.push(n), t.push('"')),
          t.push('></template>')),
        gg(e, t, r),
        (e = e.responseState.generateStaticMarkup ? !0 : t.push('<!--/$-->')),
        e
      );
    if (0 < n.pendingTasks) {
      (n.rootSegmentID = e.nextSegmentId++),
        0 < n.completedSegments.length && e.partialBoundaries.push(n);
      var i = e.responseState,
        s = i.nextSuspenseID++;
      return (
        (i = i.boundaryPrefix + s.toString(16)),
        (n = n.id = i),
        yM(t, e.responseState, n),
        gg(e, t, r),
        t.push('<!--/$-->')
      );
    }
    if (n.byteSize > e.progressiveChunkSize)
      return (
        (n.rootSegmentID = e.nextSegmentId++),
        e.completedBoundaries.push(n),
        yM(t, e.responseState, n.id),
        gg(e, t, r),
        t.push('<!--/$-->')
      );
    if (
      (e.responseState.generateStaticMarkup || t.push('<!--$-->'),
      (r = n.completedSegments),
      r.length !== 1)
    )
      throw Error(
        'A previously unvisited boundary must have exactly one root segment. This is a bug in React.',
      );
    return (
      Og(e, t, r[0]),
      (e = e.responseState.generateStaticMarkup ? !0 : t.push('<!--/$-->')),
      e
    );
  }
  function OM(e, t, r) {
    return (
      qle(t, e.responseState, r.formatContext, r.id),
      Og(e, t, r),
      Mle(t, r.formatContext)
    );
  }
  function IM(e, t, r) {
    for (var n = r.completedSegments, i = 0; i < n.length; i++)
      r2(e, t, r, n[i]);
    if (
      ((n.length = 0),
      (e = e.responseState),
      (n = r.id),
      (r = r.rootSegmentID),
      t.push(e.startInlineScript),
      e.sentCompleteBoundaryFunction
        ? t.push('$RC("')
        : ((e.sentCompleteBoundaryFunction = !0),
          t.push(
            'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("',
          )),
      n === null)
    )
      throw Error(
        'An ID must have been assigned before we can complete the boundary.',
      );
    return (
      (r = r.toString(16)),
      t.push(n),
      t.push('","'),
      t.push(e.segmentPrefix),
      t.push(r),
      t.push('")</script>')
    );
  }
  function r2(e, t, r, n) {
    if (n.status === 2) return !0;
    var i = n.id;
    if (i === -1) {
      if ((n.id = r.rootSegmentID) === -1)
        throw Error(
          'A root segment ID must have been assigned by now. This is a bug in React.',
        );
      return OM(e, t, n);
    }
    return (
      OM(e, t, n),
      (e = e.responseState),
      t.push(e.startInlineScript),
      e.sentCompleteSegmentFunction
        ? t.push('$RS("')
        : ((e.sentCompleteSegmentFunction = !0),
          t.push(
            'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("',
          )),
      t.push(e.segmentPrefix),
      (i = i.toString(16)),
      t.push(i),
      t.push('","'),
      t.push(e.placeholderPrefix),
      t.push(i),
      t.push('")</script>')
    );
  }
  function gT(e, t) {
    try {
      var r = e.completedRootSegment;
      if (r !== null && e.pendingRootTasks === 0) {
        Og(e, t, r), (e.completedRootSegment = null);
        var n = e.responseState.bootstrapChunks;
        for (r = 0; r < n.length - 1; r++) t.push(n[r]);
        r < n.length && t.push(n[r]);
      }
      var i = e.clientRenderedBoundaries,
        s;
      for (s = 0; s < i.length; s++) {
        var o = i[s];
        n = t;
        var a = e.responseState,
          u = o.id,
          c = o.errorDigest,
          d = o.errorMessage,
          m = o.errorComponentStack;
        if (
          (n.push(a.startInlineScript),
          a.sentClientRenderFunction
            ? n.push('$RX("')
            : ((a.sentClientRenderFunction = !0),
              n.push(
                'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("',
              )),
          u === null)
        )
          throw Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        if ((n.push(u), n.push('"'), c || d || m)) {
          n.push(',');
          var g = rT(c || '');
          n.push(g);
        }
        if (d || m) {
          n.push(',');
          var v = rT(d || '');
          n.push(v);
        }
        if (m) {
          n.push(',');
          var S = rT(m);
          n.push(S);
        }
        if (!n.push(')</script>')) {
          (e.destination = null), s++, i.splice(0, s);
          return;
        }
      }
      i.splice(0, s);
      var w = e.completedBoundaries;
      for (s = 0; s < w.length; s++)
        if (!IM(e, t, w[s])) {
          (e.destination = null), s++, w.splice(0, s);
          return;
        }
      w.splice(0, s);
      var T = e.partialBoundaries;
      for (s = 0; s < T.length; s++) {
        var C = T[s];
        e: {
          (i = e), (o = t);
          var I = C.completedSegments;
          for (a = 0; a < I.length; a++)
            if (!r2(i, o, C, I[a])) {
              a++, I.splice(0, a);
              var x = !1;
              break e;
            }
          I.splice(0, a), (x = !0);
        }
        if (!x) {
          (e.destination = null), s++, T.splice(0, s);
          return;
        }
      }
      T.splice(0, s);
      var E = e.completedBoundaries;
      for (s = 0; s < E.length; s++)
        if (!IM(e, t, E[s])) {
          (e.destination = null), s++, E.splice(0, s);
          return;
        }
      E.splice(0, s);
    } finally {
      e.allPendingTasks === 0 &&
        e.pingedTasks.length === 0 &&
        e.clientRenderedBoundaries.length === 0 &&
        e.completedBoundaries.length === 0 &&
        t.push(null);
    }
  }
  function vT(e, t) {
    if (e.status === 1) (e.status = 2), t.destroy(e.fatalError);
    else if (e.status !== 2 && e.destination === null) {
      e.destination = t;
      try {
        gT(e, t);
      } catch (r) {
        vh(e, r), Pg(e, r);
      }
    }
  }
  function n2(e, t) {
    try {
      var r = e.abortableTasks;
      r.forEach(function (n) {
        return e2(n, e, t);
      }),
        r.clear(),
        e.destination !== null && gT(e, e.destination);
    } catch (n) {
      vh(e, n), Pg(e, n);
    }
  }
  function nue() {}
  function s2(e, t, r, n) {
    var i = !1,
      s = null,
      o = '',
      a = !1;
    if (
      ((e = QM(
        e,
        LM(r, t ? t.identifierPrefix : void 0),
        DM(),
        1 / 0,
        nue,
        void 0,
        function () {
          a = !0;
        },
        void 0,
        void 0,
      )),
      yT(e),
      n2(e, n),
      vT(e, {
        push: function (u) {
          return u !== null && (o += u), !0;
        },
        destroy: function (u) {
          (i = !0), (s = u);
        },
      }),
      i)
    )
      throw s;
    if (!a)
      throw Error(
        'A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.',
      );
    return o;
  }
  function sue(e, t) {
    (e.prototype = Object.create(t.prototype)),
      (e.prototype.constructor = e),
      (e.__proto__ = t);
  }
  var iue = (function (e) {
    function t() {
      var n = e.call(this, {}) || this;
      return (n.request = null), (n.startedFlowing = !1), n;
    }
    sue(t, e);
    var r = t.prototype;
    return (
      (r._destroy = function (n, i) {
        n2(this.request), i(n);
      }),
      (r._read = function () {
        this.startedFlowing && vT(this.request, this);
      }),
      t
    );
  })(Cle.Readable);
  function oue() {}
  function i2(e, t) {
    var r = new iue(),
      n = QM(
        e,
        LM(!1, t ? t.identifierPrefix : void 0),
        DM(),
        1 / 0,
        oue,
        function () {
          (r.startedFlowing = !0), vT(n, r);
        },
        void 0,
        void 0,
      );
    return (r.request = n), yT(n), r;
  }
  ac.renderToNodeStream = function (e, t) {
    return i2(e, t);
  };
  ac.renderToStaticMarkup = function (e, t) {
    return s2(
      e,
      t,
      !0,
      'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server',
    );
  };
  ac.renderToStaticNodeStream = function (e, t) {
    return i2(e, t);
  };
  ac.renderToString = function (e, t) {
    return s2(
      e,
      t,
      !1,
      'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server',
    );
  };
  ac.version = '18.3.1';
});
var sH = $((qT) => {
  'use strict';
  var aue = require('util'),
    $2 = Ns(),
    Tt = null,
    bt = 0,
    uc = !0;
  function pe(e, t) {
    if (typeof t == 'string') {
      if (t.length !== 0)
        if (2048 < 3 * t.length)
          0 < bt &&
            (_i(e, Tt.subarray(0, bt)), (Tt = new Uint8Array(2048)), (bt = 0)),
            _i(e, $g.encode(t));
        else {
          var r = Tt;
          0 < bt && (r = Tt.subarray(bt)), (r = $g.encodeInto(t, r));
          var n = r.read;
          (bt += r.written),
            n < t.length &&
              (_i(e, Tt),
              (Tt = new Uint8Array(2048)),
              (bt = $g.encodeInto(t.slice(n), Tt).written)),
            bt === 2048 && (_i(e, Tt), (Tt = new Uint8Array(2048)), (bt = 0));
        }
    } else
      t.byteLength !== 0 &&
        (2048 < t.byteLength
          ? (0 < bt &&
              (_i(e, Tt.subarray(0, bt)),
              (Tt = new Uint8Array(2048)),
              (bt = 0)),
            _i(e, t))
          : ((r = Tt.length - bt),
            r < t.byteLength &&
              (r === 0
                ? _i(e, Tt)
                : (Tt.set(t.subarray(0, r), bt),
                  (bt += r),
                  _i(e, Tt),
                  (t = t.subarray(r))),
              (Tt = new Uint8Array(2048)),
              (bt = 0)),
            Tt.set(t, bt),
            (bt += t.byteLength),
            bt === 2048 && (_i(e, Tt), (Tt = new Uint8Array(2048)), (bt = 0))));
  }
  function _i(e, t) {
    (e = e.write(t)), (uc = uc && e);
  }
  function St(e, t) {
    return pe(e, t), uc;
  }
  function a2(e) {
    Tt && 0 < bt && e.write(Tt.subarray(0, bt)),
      (Tt = null),
      (bt = 0),
      (uc = !0);
  }
  var $g = new aue.TextEncoder();
  function ie(e) {
    return $g.encode(e);
  }
  var an = Object.prototype.hasOwnProperty,
    lue =
      /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    l2 = {},
    u2 = {};
  function N2(e) {
    return an.call(u2, e)
      ? !0
      : an.call(l2, e)
        ? !1
        : lue.test(e)
          ? (u2[e] = !0)
          : ((l2[e] = !0), !1);
  }
  function zr(e, t, r, n, i, s, o) {
    (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
      (this.attributeName = n),
      (this.attributeNamespace = i),
      (this.mustUseProperty = r),
      (this.propertyName = e),
      (this.type = t),
      (this.sanitizeURL = s),
      (this.removeEmptyString = o);
  }
  var pr = {};
  'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
    .split(' ')
    .forEach(function (e) {
      pr[e] = new zr(e, 0, !1, e, null, !1, !1);
    });
  [
    ['acceptCharset', 'accept-charset'],
    ['className', 'class'],
    ['htmlFor', 'for'],
    ['httpEquiv', 'http-equiv'],
  ].forEach(function (e) {
    var t = e[0];
    pr[t] = new zr(t, 1, !1, e[1], null, !1, !1);
  });
  ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (e) {
    pr[e] = new zr(e, 2, !1, e.toLowerCase(), null, !1, !1);
  });
  [
    'autoReverse',
    'externalResourcesRequired',
    'focusable',
    'preserveAlpha',
  ].forEach(function (e) {
    pr[e] = new zr(e, 2, !1, e, null, !1, !1);
  });
  'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
    .split(' ')
    .forEach(function (e) {
      pr[e] = new zr(e, 3, !1, e.toLowerCase(), null, !1, !1);
    });
  ['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
    pr[e] = new zr(e, 3, !0, e, null, !1, !1);
  });
  ['capture', 'download'].forEach(function (e) {
    pr[e] = new zr(e, 4, !1, e, null, !1, !1);
  });
  ['cols', 'rows', 'size', 'span'].forEach(function (e) {
    pr[e] = new zr(e, 6, !1, e, null, !1, !1);
  });
  ['rowSpan', 'start'].forEach(function (e) {
    pr[e] = new zr(e, 5, !1, e.toLowerCase(), null, !1, !1);
  });
  var OT = /[\-:]([a-z])/g;
  function IT(e) {
    return e[1].toUpperCase();
  }
  'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
    .split(' ')
    .forEach(function (e) {
      var t = e.replace(OT, IT);
      pr[t] = new zr(t, 1, !1, e, null, !1, !1);
    });
  'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
    .split(' ')
    .forEach(function (e) {
      var t = e.replace(OT, IT);
      pr[t] = new zr(t, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1);
    });
  ['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
    var t = e.replace(OT, IT);
    pr[t] = new zr(t, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1);
  });
  ['tabIndex', 'crossOrigin'].forEach(function (e) {
    pr[e] = new zr(e, 1, !1, e.toLowerCase(), null, !1, !1);
  });
  pr.xlinkHref = new zr(
    'xlinkHref',
    1,
    !1,
    'xlink:href',
    'http://www.w3.org/1999/xlink',
    !0,
    !1,
  );
  ['src', 'href', 'action', 'formAction'].forEach(function (e) {
    pr[e] = new zr(e, 1, !1, e.toLowerCase(), null, !0, !0);
  });
  var Ng = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0,
    },
    uue = ['Webkit', 'ms', 'Moz', 'O'];
  Object.keys(Ng).forEach(function (e) {
    uue.forEach(function (t) {
      (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (Ng[t] = Ng[e]);
    });
  });
  var cue = /["'&<>]/;
  function hr(e) {
    if (typeof e == 'boolean' || typeof e == 'number') return '' + e;
    e = '' + e;
    var t = cue.exec(e);
    if (t) {
      var r = '',
        n,
        i = 0;
      for (n = t.index; n < e.length; n++) {
        switch (e.charCodeAt(n)) {
          case 34:
            t = '&quot;';
            break;
          case 38:
            t = '&amp;';
            break;
          case 39:
            t = '&#x27;';
            break;
          case 60:
            t = '&lt;';
            break;
          case 62:
            t = '&gt;';
            break;
          default:
            continue;
        }
        i !== n && (r += e.substring(i, n)), (i = n + 1), (r += t);
      }
      e = i !== n ? r + e.substring(i, n) : r;
    }
    return e;
  }
  var fue = /([A-Z])/g,
    due = /^ms-/,
    TT = Array.isArray,
    hue = ie('<script>'),
    pue = ie('</script>'),
    mue = ie('<script src="'),
    yue = ie('<script type="module" src="'),
    c2 = ie('" async=""></script>'),
    gue = /(<\/|<)(s)(cript)/gi;
  function vue(e, t, r, n) {
    return '' + t + (r === 's' ? '\\u0073' : '\\u0053') + n;
  }
  function Ds(e, t) {
    return { insertionMode: e, selectedValue: t };
  }
  function bue(e, t, r) {
    switch (t) {
      case 'select':
        return Ds(1, r.value != null ? r.value : r.defaultValue);
      case 'svg':
        return Ds(2, null);
      case 'math':
        return Ds(3, null);
      case 'foreignObject':
        return Ds(1, null);
      case 'table':
        return Ds(4, null);
      case 'thead':
      case 'tbody':
      case 'tfoot':
        return Ds(5, null);
      case 'colgroup':
        return Ds(7, null);
      case 'tr':
        return Ds(6, null);
    }
    return 4 <= e.insertionMode || e.insertionMode === 0 ? Ds(1, null) : e;
  }
  var AT = ie('<!-- -->');
  function f2(e, t, r, n) {
    return t === '' ? n : (n && e.push(AT), e.push(hr(t)), !0);
  }
  var d2 = new Map(),
    Sue = ie(' style="'),
    h2 = ie(':'),
    _ue = ie(';');
  function L2(e, t, r) {
    if (typeof r != 'object')
      throw Error(
        "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.",
      );
    t = !0;
    for (var n in r)
      if (an.call(r, n)) {
        var i = r[n];
        if (i != null && typeof i != 'boolean' && i !== '') {
          if (n.indexOf('--') === 0) {
            var s = hr(n);
            i = hr(('' + i).trim());
          } else {
            s = n;
            var o = d2.get(s);
            o !== void 0 ||
              ((o = ie(
                hr(s.replace(fue, '-$1').toLowerCase().replace(due, '-ms-')),
              )),
              d2.set(s, o)),
              (s = o),
              (i =
                typeof i == 'number'
                  ? i === 0 || an.call(Ng, n)
                    ? '' + i
                    : i + 'px'
                  : hr(('' + i).trim()));
          }
          t ? ((t = !1), e.push(Sue, s, h2, i)) : e.push(_ue, s, h2, i);
        }
      }
    t || e.push(rl);
  }
  var Do = ie(' '),
    lc = ie('="'),
    rl = ie('"'),
    p2 = ie('=""');
  function vn(e, t, r, n) {
    switch (r) {
      case 'style':
        L2(e, t, n);
        return;
      case 'defaultValue':
      case 'defaultChecked':
      case 'innerHTML':
      case 'suppressContentEditableWarning':
      case 'suppressHydrationWarning':
        return;
    }
    if (
      !(2 < r.length) ||
      (r[0] !== 'o' && r[0] !== 'O') ||
      (r[1] !== 'n' && r[1] !== 'N')
    ) {
      if (((t = pr.hasOwnProperty(r) ? pr[r] : null), t !== null)) {
        switch (typeof n) {
          case 'function':
          case 'symbol':
            return;
          case 'boolean':
            if (!t.acceptsBooleans) return;
        }
        switch (((r = t.attributeName), t.type)) {
          case 3:
            n && e.push(Do, r, p2);
            break;
          case 4:
            n === !0
              ? e.push(Do, r, p2)
              : n !== !1 && e.push(Do, r, lc, hr(n), rl);
            break;
          case 5:
            isNaN(n) || e.push(Do, r, lc, hr(n), rl);
            break;
          case 6:
            !isNaN(n) && 1 <= n && e.push(Do, r, lc, hr(n), rl);
            break;
          default:
            t.sanitizeURL && (n = '' + n), e.push(Do, r, lc, hr(n), rl);
        }
      } else if (N2(r)) {
        switch (typeof n) {
          case 'function':
          case 'symbol':
            return;
          case 'boolean':
            if (
              ((t = r.toLowerCase().slice(0, 5)),
              t !== 'data-' && t !== 'aria-')
            )
              return;
        }
        e.push(Do, r, lc, hr(n), rl);
      }
    }
  }
  var jo = ie('>'),
    m2 = ie('/>');
  function Lg(e, t, r) {
    if (t != null) {
      if (r != null)
        throw Error(
          'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
        );
      if (typeof t != 'object' || !('__html' in t))
        throw Error(
          '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
        );
      (t = t.__html), t != null && e.push('' + t);
    }
  }
  function wue(e) {
    var t = '';
    return (
      $2.Children.forEach(e, function (r) {
        r != null && (t += r);
      }),
      t
    );
  }
  var bT = ie(' selected=""');
  function ST(e, t, r, n) {
    e.push(js(r));
    var i = (r = null),
      s;
    for (s in t)
      if (an.call(t, s)) {
        var o = t[s];
        if (o != null)
          switch (s) {
            case 'children':
              r = o;
              break;
            case 'dangerouslySetInnerHTML':
              i = o;
              break;
            default:
              vn(e, n, s, o);
          }
      }
    return (
      e.push(jo), Lg(e, i, r), typeof r == 'string' ? (e.push(hr(r)), null) : r
    );
  }
  var _T = ie(`
`),
    Eue = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
    y2 = new Map();
  function js(e) {
    var t = y2.get(e);
    if (t === void 0) {
      if (!Eue.test(e)) throw Error('Invalid tag: ' + e);
      (t = ie('<' + e)), y2.set(e, t);
    }
    return t;
  }
  var Rue = ie('<!DOCTYPE html>');
  function Tue(e, t, r, n, i) {
    switch (t) {
      case 'select':
        e.push(js('select'));
        var s = null,
          o = null;
        for (d in r)
          if (an.call(r, d)) {
            var a = r[d];
            if (a != null)
              switch (d) {
                case 'children':
                  s = a;
                  break;
                case 'dangerouslySetInnerHTML':
                  o = a;
                  break;
                case 'defaultValue':
                case 'value':
                  break;
                default:
                  vn(e, n, d, a);
              }
          }
        return e.push(jo), Lg(e, o, s), s;
      case 'option':
        (o = i.selectedValue), e.push(js('option'));
        var u = (a = null),
          c = null,
          d = null;
        for (s in r)
          if (an.call(r, s)) {
            var m = r[s];
            if (m != null)
              switch (s) {
                case 'children':
                  a = m;
                  break;
                case 'selected':
                  c = m;
                  break;
                case 'dangerouslySetInnerHTML':
                  d = m;
                  break;
                case 'value':
                  u = m;
                default:
                  vn(e, n, s, m);
              }
          }
        if (o != null)
          if (((r = u !== null ? '' + u : wue(a)), TT(o))) {
            for (n = 0; n < o.length; n++)
              if ('' + o[n] === r) {
                e.push(bT);
                break;
              }
          } else '' + o === r && e.push(bT);
        else c && e.push(bT);
        return e.push(jo), Lg(e, d, a), a;
      case 'textarea':
        e.push(js('textarea')), (d = o = s = null);
        for (a in r)
          if (an.call(r, a) && ((u = r[a]), u != null))
            switch (a) {
              case 'children':
                d = u;
                break;
              case 'value':
                s = u;
                break;
              case 'defaultValue':
                o = u;
                break;
              case 'dangerouslySetInnerHTML':
                throw Error(
                  '`dangerouslySetInnerHTML` does not make sense on <textarea>.',
                );
              default:
                vn(e, n, a, u);
            }
        if ((s === null && o !== null && (s = o), e.push(jo), d != null)) {
          if (s != null)
            throw Error(
              'If you supply `defaultValue` on a <textarea>, do not pass children.',
            );
          if (TT(d) && 1 < d.length)
            throw Error('<textarea> can only have at most one child.');
          s = '' + d;
        }
        return (
          typeof s == 'string' &&
            s[0] ===
              `
` &&
            e.push(_T),
          s !== null && e.push(hr('' + s)),
          null
        );
      case 'input':
        e.push(js('input')), (u = d = a = s = null);
        for (o in r)
          if (an.call(r, o) && ((c = r[o]), c != null))
            switch (o) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw Error(
                  'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              case 'defaultChecked':
                u = c;
                break;
              case 'defaultValue':
                a = c;
                break;
              case 'checked':
                d = c;
                break;
              case 'value':
                s = c;
                break;
              default:
                vn(e, n, o, c);
            }
        return (
          d !== null
            ? vn(e, n, 'checked', d)
            : u !== null && vn(e, n, 'checked', u),
          s !== null
            ? vn(e, n, 'value', s)
            : a !== null && vn(e, n, 'value', a),
          e.push(m2),
          null
        );
      case 'menuitem':
        e.push(js('menuitem'));
        for (var g in r)
          if (an.call(r, g) && ((s = r[g]), s != null))
            switch (g) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw Error(
                  'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.',
                );
              default:
                vn(e, n, g, s);
            }
        return e.push(jo), null;
      case 'title':
        e.push(js('title')), (s = null);
        for (m in r)
          if (an.call(r, m) && ((o = r[m]), o != null))
            switch (m) {
              case 'children':
                s = o;
                break;
              case 'dangerouslySetInnerHTML':
                throw Error(
                  '`dangerouslySetInnerHTML` does not make sense on <title>.',
                );
              default:
                vn(e, n, m, o);
            }
        return e.push(jo), s;
      case 'listing':
      case 'pre':
        e.push(js(t)), (o = s = null);
        for (u in r)
          if (an.call(r, u) && ((a = r[u]), a != null))
            switch (u) {
              case 'children':
                s = a;
                break;
              case 'dangerouslySetInnerHTML':
                o = a;
                break;
              default:
                vn(e, n, u, a);
            }
        if ((e.push(jo), o != null)) {
          if (s != null)
            throw Error(
              'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
            );
          if (typeof o != 'object' || !('__html' in o))
            throw Error(
              '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
            );
          (r = o.__html),
            r != null &&
              (typeof r == 'string' &&
              0 < r.length &&
              r[0] ===
                `
`
                ? e.push(_T, r)
                : e.push('' + r));
        }
        return (
          typeof s == 'string' &&
            s[0] ===
              `
` &&
            e.push(_T),
          s
        );
      case 'area':
      case 'base':
      case 'br':
      case 'col':
      case 'embed':
      case 'hr':
      case 'img':
      case 'keygen':
      case 'link':
      case 'meta':
      case 'param':
      case 'source':
      case 'track':
      case 'wbr':
        e.push(js(t));
        for (var v in r)
          if (an.call(r, v) && ((s = r[v]), s != null))
            switch (v) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw Error(
                  t +
                    ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              default:
                vn(e, n, v, s);
            }
        return e.push(m2), null;
      case 'annotation-xml':
      case 'color-profile':
      case 'font-face':
      case 'font-face-src':
      case 'font-face-uri':
      case 'font-face-format':
      case 'font-face-name':
      case 'missing-glyph':
        return ST(e, r, t, n);
      case 'html':
        return i.insertionMode === 0 && e.push(Rue), ST(e, r, t, n);
      default:
        if (t.indexOf('-') === -1 && typeof r.is != 'string')
          return ST(e, r, t, n);
        e.push(js(t)), (o = s = null);
        for (c in r)
          if (an.call(r, c) && ((a = r[c]), a != null))
            switch (c) {
              case 'children':
                s = a;
                break;
              case 'dangerouslySetInnerHTML':
                o = a;
                break;
              case 'style':
                L2(e, n, a);
                break;
              case 'suppressContentEditableWarning':
              case 'suppressHydrationWarning':
                break;
              default:
                N2(c) &&
                  typeof a != 'function' &&
                  typeof a != 'symbol' &&
                  e.push(Do, c, lc, hr(a), rl);
            }
        return e.push(jo), Lg(e, o, s), s;
    }
  }
  var Pue = ie('</'),
    kue = ie('>'),
    xue = ie('<template id="'),
    Cue = ie('"></template>'),
    Oue = ie('<!--$-->'),
    Iue = ie('<!--$?--><template id="'),
    Aue = ie('"></template>'),
    $ue = ie('<!--$!-->'),
    Nue = ie('<!--/$-->'),
    Lue = ie('<template'),
    Due = ie('"'),
    jue = ie(' data-dgst="');
  ie(' data-msg="');
  ie(' data-stck="');
  var Fue = ie('></template>');
  function g2(e, t, r) {
    if ((pe(e, Iue), r === null))
      throw Error(
        'An ID must have been assigned before we can complete the boundary.',
      );
    return pe(e, r), St(e, Aue);
  }
  var que = ie('<div hidden id="'),
    Mue = ie('">'),
    Hue = ie('</div>'),
    zue = ie('<svg aria-hidden="true" style="display:none" id="'),
    Uue = ie('">'),
    Vue = ie('</svg>'),
    Bue = ie('<math aria-hidden="true" style="display:none" id="'),
    Wue = ie('">'),
    Gue = ie('</math>'),
    Yue = ie('<table hidden id="'),
    Jue = ie('">'),
    Kue = ie('</table>'),
    Xue = ie('<table hidden><tbody id="'),
    Zue = ie('">'),
    Que = ie('</tbody></table>'),
    ece = ie('<table hidden><tr id="'),
    tce = ie('">'),
    rce = ie('</tr></table>'),
    nce = ie('<table hidden><colgroup id="'),
    sce = ie('">'),
    ice = ie('</colgroup></table>');
  function oce(e, t, r, n) {
    switch (r.insertionMode) {
      case 0:
      case 1:
        return (
          pe(e, que), pe(e, t.segmentPrefix), pe(e, n.toString(16)), St(e, Mue)
        );
      case 2:
        return (
          pe(e, zue), pe(e, t.segmentPrefix), pe(e, n.toString(16)), St(e, Uue)
        );
      case 3:
        return (
          pe(e, Bue), pe(e, t.segmentPrefix), pe(e, n.toString(16)), St(e, Wue)
        );
      case 4:
        return (
          pe(e, Yue), pe(e, t.segmentPrefix), pe(e, n.toString(16)), St(e, Jue)
        );
      case 5:
        return (
          pe(e, Xue), pe(e, t.segmentPrefix), pe(e, n.toString(16)), St(e, Zue)
        );
      case 6:
        return (
          pe(e, ece), pe(e, t.segmentPrefix), pe(e, n.toString(16)), St(e, tce)
        );
      case 7:
        return (
          pe(e, nce), pe(e, t.segmentPrefix), pe(e, n.toString(16)), St(e, sce)
        );
      default:
        throw Error('Unknown insertion mode. This is a bug in React.');
    }
  }
  function ace(e, t) {
    switch (t.insertionMode) {
      case 0:
      case 1:
        return St(e, Hue);
      case 2:
        return St(e, Vue);
      case 3:
        return St(e, Gue);
      case 4:
        return St(e, Kue);
      case 5:
        return St(e, Que);
      case 6:
        return St(e, rce);
      case 7:
        return St(e, ice);
      default:
        throw Error('Unknown insertion mode. This is a bug in React.');
    }
  }
  var lce = ie(
      'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("',
    ),
    uce = ie('$RS("'),
    cce = ie('","'),
    fce = ie('")</script>'),
    dce = ie(
      'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("',
    ),
    hce = ie('$RC("'),
    pce = ie('","'),
    mce = ie('")</script>'),
    yce = ie(
      'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("',
    ),
    gce = ie('$RX("'),
    vce = ie('"'),
    bce = ie(')</script>'),
    wT = ie(','),
    Sce = /[<\u2028\u2029]/g;
  function ET(e) {
    return JSON.stringify(e).replace(Sce, function (t) {
      switch (t) {
        case '<':
          return '\\u003c';
        case '\u2028':
          return '\\u2028';
        case '\u2029':
          return '\\u2029';
        default:
          throw Error(
            'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React',
          );
      }
    });
  }
  var _h = Object.assign,
    _ce = Symbol.for('react.element'),
    D2 = Symbol.for('react.portal'),
    j2 = Symbol.for('react.fragment'),
    F2 = Symbol.for('react.strict_mode'),
    q2 = Symbol.for('react.profiler'),
    M2 = Symbol.for('react.provider'),
    H2 = Symbol.for('react.context'),
    z2 = Symbol.for('react.forward_ref'),
    U2 = Symbol.for('react.suspense'),
    V2 = Symbol.for('react.suspense_list'),
    B2 = Symbol.for('react.memo'),
    $T = Symbol.for('react.lazy'),
    wce = Symbol.for('react.scope'),
    Ece = Symbol.for('react.debug_trace_mode'),
    Rce = Symbol.for('react.legacy_hidden'),
    Tce = Symbol.for('react.default_value'),
    v2 = Symbol.iterator;
  function PT(e) {
    if (e == null) return null;
    if (typeof e == 'function') return e.displayName || e.name || null;
    if (typeof e == 'string') return e;
    switch (e) {
      case j2:
        return 'Fragment';
      case D2:
        return 'Portal';
      case q2:
        return 'Profiler';
      case F2:
        return 'StrictMode';
      case U2:
        return 'Suspense';
      case V2:
        return 'SuspenseList';
    }
    if (typeof e == 'object')
      switch (e.$$typeof) {
        case H2:
          return (e.displayName || 'Context') + '.Consumer';
        case M2:
          return (e._context.displayName || 'Context') + '.Provider';
        case z2:
          var t = e.render;
          return (
            (e = e.displayName),
            e ||
              ((e = t.displayName || t.name || ''),
              (e = e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')),
            e
          );
        case B2:
          return (
            (t = e.displayName || null), t !== null ? t : PT(e.type) || 'Memo'
          );
        case $T:
          (t = e._payload), (e = e._init);
          try {
            return PT(e(t));
          } catch {}
      }
    return null;
  }
  var W2 = {};
  function b2(e, t) {
    if (((e = e.contextTypes), !e)) return W2;
    var r = {},
      n;
    for (n in e) r[n] = t[n];
    return r;
  }
  var sl = null;
  function Vg(e, t) {
    if (e !== t) {
      (e.context._currentValue = e.parentValue), (e = e.parent);
      var r = t.parent;
      if (e === null) {
        if (r !== null)
          throw Error(
            'The stacks must reach the root at the same time. This is a bug in React.',
          );
      } else {
        if (r === null)
          throw Error(
            'The stacks must reach the root at the same time. This is a bug in React.',
          );
        Vg(e, r);
      }
      t.context._currentValue = t.value;
    }
  }
  function G2(e) {
    (e.context._currentValue = e.parentValue),
      (e = e.parent),
      e !== null && G2(e);
  }
  function Y2(e) {
    var t = e.parent;
    t !== null && Y2(t), (e.context._currentValue = e.value);
  }
  function J2(e, t) {
    if (((e.context._currentValue = e.parentValue), (e = e.parent), e === null))
      throw Error(
        'The depth must equal at least at zero before reaching the root. This is a bug in React.',
      );
    e.depth === t.depth ? Vg(e, t) : J2(e, t);
  }
  function K2(e, t) {
    var r = t.parent;
    if (r === null)
      throw Error(
        'The depth must equal at least at zero before reaching the root. This is a bug in React.',
      );
    e.depth === r.depth ? Vg(e, r) : K2(e, r),
      (t.context._currentValue = t.value);
  }
  function qg(e) {
    var t = sl;
    t !== e &&
      (t === null
        ? Y2(e)
        : e === null
          ? G2(t)
          : t.depth === e.depth
            ? Vg(t, e)
            : t.depth > e.depth
              ? J2(t, e)
              : K2(t, e),
      (sl = e));
  }
  var S2 = {
    isMounted: function () {
      return !1;
    },
    enqueueSetState: function (e, t) {
      (e = e._reactInternals), e.queue !== null && e.queue.push(t);
    },
    enqueueReplaceState: function (e, t) {
      (e = e._reactInternals), (e.replace = !0), (e.queue = [t]);
    },
    enqueueForceUpdate: function () {},
  };
  function _2(e, t, r, n) {
    var i = e.state !== void 0 ? e.state : null;
    (e.updater = S2), (e.props = r), (e.state = i);
    var s = { queue: [], replace: !1 };
    e._reactInternals = s;
    var o = t.contextType;
    if (
      ((e.context = typeof o == 'object' && o !== null ? o._currentValue : n),
      (o = t.getDerivedStateFromProps),
      typeof o == 'function' &&
        ((o = o(r, i)), (i = o == null ? i : _h({}, i, o)), (e.state = i)),
      typeof t.getDerivedStateFromProps != 'function' &&
        typeof e.getSnapshotBeforeUpdate != 'function' &&
        (typeof e.UNSAFE_componentWillMount == 'function' ||
          typeof e.componentWillMount == 'function'))
    )
      if (
        ((t = e.state),
        typeof e.componentWillMount == 'function' && e.componentWillMount(),
        typeof e.UNSAFE_componentWillMount == 'function' &&
          e.UNSAFE_componentWillMount(),
        t !== e.state && S2.enqueueReplaceState(e, e.state, null),
        s.queue !== null && 0 < s.queue.length)
      )
        if (
          ((t = s.queue),
          (o = s.replace),
          (s.queue = null),
          (s.replace = !1),
          o && t.length === 1)
        )
          e.state = t[0];
        else {
          for (
            s = o ? t[0] : e.state, i = !0, o = o ? 1 : 0;
            o < t.length;
            o++
          ) {
            var a = t[o];
            (a = typeof a == 'function' ? a.call(e, s, r, n) : a),
              a != null && (i ? ((i = !1), (s = _h({}, s, a))) : _h(s, a));
          }
          e.state = s;
        }
      else s.queue = null;
  }
  var Pce = { id: 1, overflow: '' };
  function kT(e, t, r) {
    var n = e.id;
    e = e.overflow;
    var i = 32 - Dg(n) - 1;
    (n &= ~(1 << i)), (r += 1);
    var s = 32 - Dg(t) + i;
    if (30 < s) {
      var o = i - (i % 5);
      return (
        (s = (n & ((1 << o) - 1)).toString(32)),
        (n >>= o),
        (i -= o),
        { id: (1 << (32 - Dg(t) + i)) | (r << i) | n, overflow: s + e }
      );
    }
    return { id: (1 << s) | (r << i) | n, overflow: e };
  }
  var Dg = Math.clz32 ? Math.clz32 : Cce,
    kce = Math.log,
    xce = Math.LN2;
  function Cce(e) {
    return (e >>>= 0), e === 0 ? 32 : (31 - ((kce(e) / xce) | 0)) | 0;
  }
  function Oce(e, t) {
    return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t);
  }
  var Ice = typeof Object.is == 'function' ? Object.is : Oce,
    wi = null,
    NT = null,
    jg = null,
    pt = null,
    bh = !1,
    Mg = !1,
    wh = 0,
    Fo = null,
    Bg = 0;
  function nl() {
    if (wi === null)
      throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    return wi;
  }
  function w2() {
    if (0 < Bg)
      throw Error('Rendered more hooks than during the previous render');
    return { memoizedState: null, queue: null, next: null };
  }
  function LT() {
    return (
      pt === null
        ? jg === null
          ? ((bh = !1), (jg = pt = w2()))
          : ((bh = !0), (pt = jg))
        : pt.next === null
          ? ((bh = !1), (pt = pt.next = w2()))
          : ((bh = !0), (pt = pt.next)),
      pt
    );
  }
  function DT() {
    (NT = wi = null), (Mg = !1), (jg = null), (Bg = 0), (pt = Fo = null);
  }
  function X2(e, t) {
    return typeof t == 'function' ? t(e) : t;
  }
  function E2(e, t, r) {
    if (((wi = nl()), (pt = LT()), bh)) {
      var n = pt.queue;
      if (((t = n.dispatch), Fo !== null && ((r = Fo.get(n)), r !== void 0))) {
        Fo.delete(n), (n = pt.memoizedState);
        do (n = e(n, r.action)), (r = r.next);
        while (r !== null);
        return (pt.memoizedState = n), [n, t];
      }
      return [pt.memoizedState, t];
    }
    return (
      (e =
        e === X2
          ? typeof t == 'function'
            ? t()
            : t
          : r !== void 0
            ? r(t)
            : t),
      (pt.memoizedState = e),
      (e = pt.queue = { last: null, dispatch: null }),
      (e = e.dispatch = Ace.bind(null, wi, e)),
      [pt.memoizedState, e]
    );
  }
  function R2(e, t) {
    if (
      ((wi = nl()), (pt = LT()), (t = t === void 0 ? null : t), pt !== null)
    ) {
      var r = pt.memoizedState;
      if (r !== null && t !== null) {
        var n = r[1];
        e: if (n === null) n = !1;
        else {
          for (var i = 0; i < n.length && i < t.length; i++)
            if (!Ice(t[i], n[i])) {
              n = !1;
              break e;
            }
          n = !0;
        }
        if (n) return r[0];
      }
    }
    return (e = e()), (pt.memoizedState = [e, t]), e;
  }
  function Ace(e, t, r) {
    if (25 <= Bg)
      throw Error(
        'Too many re-renders. React limits the number of renders to prevent an infinite loop.',
      );
    if (e === wi)
      if (
        ((Mg = !0),
        (e = { action: r, next: null }),
        Fo === null && (Fo = new Map()),
        (r = Fo.get(t)),
        r === void 0)
      )
        Fo.set(t, e);
      else {
        for (t = r; t.next !== null; ) t = t.next;
        t.next = e;
      }
  }
  function $ce() {
    throw Error('startTransition cannot be called during server rendering.');
  }
  function Ig() {}
  var T2 = {
      readContext: function (e) {
        return e._currentValue;
      },
      useContext: function (e) {
        return nl(), e._currentValue;
      },
      useMemo: R2,
      useReducer: E2,
      useRef: function (e) {
        (wi = nl()), (pt = LT());
        var t = pt.memoizedState;
        return t === null ? ((e = { current: e }), (pt.memoizedState = e)) : t;
      },
      useState: function (e) {
        return E2(X2, e);
      },
      useInsertionEffect: Ig,
      useLayoutEffect: function () {},
      useCallback: function (e, t) {
        return R2(function () {
          return e;
        }, t);
      },
      useImperativeHandle: Ig,
      useEffect: Ig,
      useDebugValue: Ig,
      useDeferredValue: function (e) {
        return nl(), e;
      },
      useTransition: function () {
        return nl(), [!1, $ce];
      },
      useId: function () {
        var e = NT.treeContext,
          t = e.overflow;
        (e = e.id), (e = (e & ~(1 << (32 - Dg(e) - 1))).toString(32) + t);
        var r = Fg;
        if (r === null)
          throw Error(
            'Invalid hook call. Hooks can only be called inside of the body of a function component.',
          );
        return (
          (t = wh++),
          (e = ':' + r.idPrefix + 'R' + e),
          0 < t && (e += 'H' + t.toString(32)),
          e + ':'
        );
      },
      useMutableSource: function (e, t) {
        return nl(), t(e._source);
      },
      useSyncExternalStore: function (e, t, r) {
        if (r === void 0)
          throw Error(
            'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.',
          );
        return r();
      },
    },
    Fg = null,
    RT =
      $2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
        .ReactCurrentDispatcher;
  function Nce(e) {
    return console.error(e), null;
  }
  function Sh() {}
  function Lce(e, t) {
    var r = e.pingedTasks;
    r.push(t),
      r.length === 1 &&
        setImmediate(function () {
          return eH(e);
        });
  }
  function jT(e, t, r, n, i, s, o, a) {
    e.allPendingTasks++, r === null ? e.pendingRootTasks++ : r.pendingTasks++;
    var u = {
      node: t,
      ping: function () {
        return Lce(e, u);
      },
      blockedBoundary: r,
      blockedSegment: n,
      abortSet: i,
      legacyContext: s,
      context: o,
      treeContext: a,
    };
    return i.add(u), u;
  }
  function Hg(e, t, r, n, i, s) {
    return {
      status: 0,
      id: -1,
      index: t,
      parentFlushed: !1,
      chunks: [],
      children: [],
      formatContext: n,
      boundary: r,
      lastPushedText: i,
      textEmbedded: s,
    };
  }
  function Eh(e, t) {
    if (((e = e.onError(t)), e != null && typeof e != 'string'))
      throw Error(
        'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
          typeof e +
          '" instead',
      );
    return e;
  }
  function zg(e, t) {
    var r = e.onShellError;
    r(t),
      (r = e.onFatalError),
      r(t),
      e.destination !== null
        ? ((e.status = 2), e.destination.destroy(t))
        : ((e.status = 1), (e.fatalError = t));
  }
  function P2(e, t, r, n, i) {
    for (wi = {}, NT = t, wh = 0, e = r(n, i); Mg; )
      (Mg = !1), (wh = 0), (Bg += 1), (pt = null), (e = r(n, i));
    return DT(), e;
  }
  function k2(e, t, r, n) {
    var i = r.render(),
      s = n.childContextTypes;
    if (s != null) {
      var o = t.legacyContext;
      if (typeof r.getChildContext != 'function') n = o;
      else {
        r = r.getChildContext();
        for (var a in r)
          if (!(a in s))
            throw Error(
              (PT(n) || 'Unknown') +
                '.getChildContext(): key "' +
                a +
                '" is not defined in childContextTypes.',
            );
        n = _h({}, o, r);
      }
      (t.legacyContext = n), bn(e, t, i), (t.legacyContext = o);
    } else bn(e, t, i);
  }
  function x2(e, t) {
    if (e && e.defaultProps) {
      (t = _h({}, t)), (e = e.defaultProps);
      for (var r in e) t[r] === void 0 && (t[r] = e[r]);
      return t;
    }
    return t;
  }
  function xT(e, t, r, n, i) {
    if (typeof r == 'function')
      if (r.prototype && r.prototype.isReactComponent) {
        i = b2(r, t.legacyContext);
        var s = r.contextType;
        (s = new r(
          n,
          typeof s == 'object' && s !== null ? s._currentValue : i,
        )),
          _2(s, r, n, i),
          k2(e, t, s, r);
      } else {
        (s = b2(r, t.legacyContext)), (i = P2(e, t, r, n, s));
        var o = wh !== 0;
        if (
          typeof i == 'object' &&
          i !== null &&
          typeof i.render == 'function' &&
          i.$$typeof === void 0
        )
          _2(i, r, n, s), k2(e, t, i, r);
        else if (o) {
          (n = t.treeContext), (t.treeContext = kT(n, 1, 0));
          try {
            bn(e, t, i);
          } finally {
            t.treeContext = n;
          }
        } else bn(e, t, i);
      }
    else if (typeof r == 'string') {
      switch (
        ((i = t.blockedSegment),
        (s = Tue(i.chunks, r, n, e.responseState, i.formatContext)),
        (i.lastPushedText = !1),
        (o = i.formatContext),
        (i.formatContext = bue(o, r, n)),
        CT(e, t, s),
        (i.formatContext = o),
        r)
      ) {
        case 'area':
        case 'base':
        case 'br':
        case 'col':
        case 'embed':
        case 'hr':
        case 'img':
        case 'input':
        case 'keygen':
        case 'link':
        case 'meta':
        case 'param':
        case 'source':
        case 'track':
        case 'wbr':
          break;
        default:
          i.chunks.push(Pue, r, kue);
      }
      i.lastPushedText = !1;
    } else {
      switch (r) {
        case Rce:
        case Ece:
        case F2:
        case q2:
        case j2:
          bn(e, t, n.children);
          return;
        case V2:
          bn(e, t, n.children);
          return;
        case wce:
          throw Error('ReactDOMServer does not yet support scope components.');
        case U2:
          e: {
            (r = t.blockedBoundary),
              (i = t.blockedSegment),
              (s = n.fallback),
              (n = n.children),
              (o = new Set());
            var a = {
                id: null,
                rootSegmentID: -1,
                parentFlushed: !1,
                pendingTasks: 0,
                forceClientRender: !1,
                completedSegments: [],
                byteSize: 0,
                fallbackAbortableTasks: o,
                errorDigest: null,
              },
              u = Hg(e, i.chunks.length, a, i.formatContext, !1, !1);
            i.children.push(u), (i.lastPushedText = !1);
            var c = Hg(e, 0, null, i.formatContext, !1, !1);
            (c.parentFlushed = !0),
              (t.blockedBoundary = a),
              (t.blockedSegment = c);
            try {
              if (
                (CT(e, t, n),
                c.lastPushedText && c.textEmbedded && c.chunks.push(AT),
                (c.status = 1),
                Ug(a, c),
                a.pendingTasks === 0)
              )
                break e;
            } catch (d) {
              (c.status = 4),
                (a.forceClientRender = !0),
                (a.errorDigest = Eh(e, d));
            } finally {
              (t.blockedBoundary = r), (t.blockedSegment = i);
            }
            (t = jT(e, s, r, u, o, t.legacyContext, t.context, t.treeContext)),
              e.pingedTasks.push(t);
          }
          return;
      }
      if (typeof r == 'object' && r !== null)
        switch (r.$$typeof) {
          case z2:
            if (((n = P2(e, t, r.render, n, i)), wh !== 0)) {
              (r = t.treeContext), (t.treeContext = kT(r, 1, 0));
              try {
                bn(e, t, n);
              } finally {
                t.treeContext = r;
              }
            } else bn(e, t, n);
            return;
          case B2:
            (r = r.type), (n = x2(r, n)), xT(e, t, r, n, i);
            return;
          case M2:
            if (
              ((i = n.children),
              (r = r._context),
              (n = n.value),
              (s = r._currentValue),
              (r._currentValue = n),
              (o = sl),
              (sl = n =
                {
                  parent: o,
                  depth: o === null ? 0 : o.depth + 1,
                  context: r,
                  parentValue: s,
                  value: n,
                }),
              (t.context = n),
              bn(e, t, i),
              (e = sl),
              e === null)
            )
              throw Error(
                'Tried to pop a Context at the root of the app. This is a bug in React.',
              );
            (n = e.parentValue),
              (e.context._currentValue =
                n === Tce ? e.context._defaultValue : n),
              (e = sl = e.parent),
              (t.context = e);
            return;
          case H2:
            (n = n.children), (n = n(r._currentValue)), bn(e, t, n);
            return;
          case $T:
            (i = r._init),
              (r = i(r._payload)),
              (n = x2(r, n)),
              xT(e, t, r, n, void 0);
            return;
        }
      throw Error(
        'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: ' +
          ((r == null ? r : typeof r) + '.'),
      );
    }
  }
  function bn(e, t, r) {
    if (((t.node = r), typeof r == 'object' && r !== null)) {
      switch (r.$$typeof) {
        case _ce:
          xT(e, t, r.type, r.props, r.ref);
          return;
        case D2:
          throw Error(
            'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.',
          );
        case $T:
          var n = r._init;
          (r = n(r._payload)), bn(e, t, r);
          return;
      }
      if (TT(r)) {
        C2(e, t, r);
        return;
      }
      if (
        (r === null || typeof r != 'object'
          ? (n = null)
          : ((n = (v2 && r[v2]) || r['@@iterator']),
            (n = typeof n == 'function' ? n : null)),
        n && (n = n.call(r)))
      ) {
        if (((r = n.next()), !r.done)) {
          var i = [];
          do i.push(r.value), (r = n.next());
          while (!r.done);
          C2(e, t, i);
        }
        return;
      }
      throw (
        ((e = Object.prototype.toString.call(r)),
        Error(
          'Objects are not valid as a React child (found: ' +
            (e === '[object Object]'
              ? 'object with keys {' + Object.keys(r).join(', ') + '}'
              : e) +
            '). If you meant to render a collection of children, use an array instead.',
        ))
      );
    }
    typeof r == 'string'
      ? ((n = t.blockedSegment),
        (n.lastPushedText = f2(
          t.blockedSegment.chunks,
          r,
          e.responseState,
          n.lastPushedText,
        )))
      : typeof r == 'number' &&
        ((n = t.blockedSegment),
        (n.lastPushedText = f2(
          t.blockedSegment.chunks,
          '' + r,
          e.responseState,
          n.lastPushedText,
        )));
  }
  function C2(e, t, r) {
    for (var n = r.length, i = 0; i < n; i++) {
      var s = t.treeContext;
      t.treeContext = kT(s, n, i);
      try {
        CT(e, t, r[i]);
      } finally {
        t.treeContext = s;
      }
    }
  }
  function CT(e, t, r) {
    var n = t.blockedSegment.formatContext,
      i = t.legacyContext,
      s = t.context;
    try {
      return bn(e, t, r);
    } catch (u) {
      if (
        (DT(),
        typeof u == 'object' && u !== null && typeof u.then == 'function')
      ) {
        r = u;
        var o = t.blockedSegment,
          a = Hg(
            e,
            o.chunks.length,
            null,
            o.formatContext,
            o.lastPushedText,
            !0,
          );
        o.children.push(a),
          (o.lastPushedText = !1),
          (e = jT(
            e,
            t.node,
            t.blockedBoundary,
            a,
            t.abortSet,
            t.legacyContext,
            t.context,
            t.treeContext,
          ).ping),
          r.then(e, e),
          (t.blockedSegment.formatContext = n),
          (t.legacyContext = i),
          (t.context = s),
          qg(s);
      } else
        throw (
          ((t.blockedSegment.formatContext = n),
          (t.legacyContext = i),
          (t.context = s),
          qg(s),
          u)
        );
    }
  }
  function Dce(e) {
    var t = e.blockedBoundary;
    (e = e.blockedSegment), (e.status = 3), Q2(this, t, e);
  }
  function Z2(e, t, r) {
    var n = e.blockedBoundary;
    (e.blockedSegment.status = 3),
      n === null
        ? (t.allPendingTasks--,
          t.status !== 2 &&
            ((t.status = 2), t.destination !== null && t.destination.end()))
        : (n.pendingTasks--,
          n.forceClientRender ||
            ((n.forceClientRender = !0),
            (n.errorDigest = t.onError(
              r === void 0
                ? Error(
                    'The render was aborted by the server without a reason.',
                  )
                : r,
            )),
            n.parentFlushed && t.clientRenderedBoundaries.push(n)),
          n.fallbackAbortableTasks.forEach(function (i) {
            return Z2(i, t, r);
          }),
          n.fallbackAbortableTasks.clear(),
          t.allPendingTasks--,
          t.allPendingTasks === 0 && ((e = t.onAllReady), e()));
  }
  function Ug(e, t) {
    if (
      t.chunks.length === 0 &&
      t.children.length === 1 &&
      t.children[0].boundary === null
    ) {
      var r = t.children[0];
      (r.id = t.id), (r.parentFlushed = !0), r.status === 1 && Ug(e, r);
    } else e.completedSegments.push(t);
  }
  function Q2(e, t, r) {
    if (t === null) {
      if (r.parentFlushed) {
        if (e.completedRootSegment !== null)
          throw Error(
            'There can only be one root segment. This is a bug in React.',
          );
        e.completedRootSegment = r;
      }
      e.pendingRootTasks--,
        e.pendingRootTasks === 0 &&
          ((e.onShellError = Sh), (t = e.onShellReady), t());
    } else
      t.pendingTasks--,
        t.forceClientRender ||
          (t.pendingTasks === 0
            ? (r.parentFlushed && r.status === 1 && Ug(t, r),
              t.parentFlushed && e.completedBoundaries.push(t),
              t.fallbackAbortableTasks.forEach(Dce, e),
              t.fallbackAbortableTasks.clear())
            : r.parentFlushed &&
              r.status === 1 &&
              (Ug(t, r),
              t.completedSegments.length === 1 &&
                t.parentFlushed &&
                e.partialBoundaries.push(t)));
    e.allPendingTasks--, e.allPendingTasks === 0 && ((e = e.onAllReady), e());
  }
  function eH(e) {
    if (e.status !== 2) {
      var t = sl,
        r = RT.current;
      RT.current = T2;
      var n = Fg;
      Fg = e.responseState;
      try {
        var i = e.pingedTasks,
          s;
        for (s = 0; s < i.length; s++) {
          var o = i[s],
            a = e,
            u = o.blockedSegment;
          if (u.status === 0) {
            qg(o.context);
            try {
              bn(a, o, o.node),
                u.lastPushedText && u.textEmbedded && u.chunks.push(AT),
                o.abortSet.delete(o),
                (u.status = 1),
                Q2(a, o.blockedBoundary, u);
            } catch (S) {
              if (
                (DT(),
                typeof S == 'object' &&
                  S !== null &&
                  typeof S.then == 'function')
              ) {
                var c = o.ping;
                S.then(c, c);
              } else {
                o.abortSet.delete(o), (u.status = 4);
                var d = o.blockedBoundary,
                  m = S,
                  g = Eh(a, m);
                if (
                  (d === null
                    ? zg(a, m)
                    : (d.pendingTasks--,
                      d.forceClientRender ||
                        ((d.forceClientRender = !0),
                        (d.errorDigest = g),
                        d.parentFlushed && a.clientRenderedBoundaries.push(d))),
                  a.allPendingTasks--,
                  a.allPendingTasks === 0)
                ) {
                  var v = a.onAllReady;
                  v();
                }
              }
            } finally {
            }
          }
        }
        i.splice(0, s), e.destination !== null && FT(e, e.destination);
      } catch (S) {
        Eh(e, S), zg(e, S);
      } finally {
        (Fg = n), (RT.current = r), r === T2 && qg(t);
      }
    }
  }
  function Ag(e, t, r) {
    switch (((r.parentFlushed = !0), r.status)) {
      case 0:
        var n = (r.id = e.nextSegmentId++);
        return (
          (r.lastPushedText = !1),
          (r.textEmbedded = !1),
          (e = e.responseState),
          pe(t, xue),
          pe(t, e.placeholderPrefix),
          (e = n.toString(16)),
          pe(t, e),
          St(t, Cue)
        );
      case 1:
        r.status = 2;
        var i = !0;
        n = r.chunks;
        var s = 0;
        r = r.children;
        for (var o = 0; o < r.length; o++) {
          for (i = r[o]; s < i.index; s++) pe(t, n[s]);
          i = Wg(e, t, i);
        }
        for (; s < n.length - 1; s++) pe(t, n[s]);
        return s < n.length && (i = St(t, n[s])), i;
      default:
        throw Error(
          'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.',
        );
    }
  }
  function Wg(e, t, r) {
    var n = r.boundary;
    if (n === null) return Ag(e, t, r);
    if (((n.parentFlushed = !0), n.forceClientRender))
      (n = n.errorDigest),
        St(t, $ue),
        pe(t, Lue),
        n && (pe(t, jue), pe(t, hr(n)), pe(t, Due)),
        St(t, Fue),
        Ag(e, t, r);
    else if (0 < n.pendingTasks) {
      (n.rootSegmentID = e.nextSegmentId++),
        0 < n.completedSegments.length && e.partialBoundaries.push(n);
      var i = e.responseState,
        s = i.nextSuspenseID++;
      (i = ie(i.boundaryPrefix + s.toString(16))),
        (n = n.id = i),
        g2(t, e.responseState, n),
        Ag(e, t, r);
    } else if (n.byteSize > e.progressiveChunkSize)
      (n.rootSegmentID = e.nextSegmentId++),
        e.completedBoundaries.push(n),
        g2(t, e.responseState, n.id),
        Ag(e, t, r);
    else {
      if ((St(t, Oue), (r = n.completedSegments), r.length !== 1))
        throw Error(
          'A previously unvisited boundary must have exactly one root segment. This is a bug in React.',
        );
      Wg(e, t, r[0]);
    }
    return St(t, Nue);
  }
  function O2(e, t, r) {
    return (
      oce(t, e.responseState, r.formatContext, r.id),
      Wg(e, t, r),
      ace(t, r.formatContext)
    );
  }
  function I2(e, t, r) {
    for (var n = r.completedSegments, i = 0; i < n.length; i++)
      tH(e, t, r, n[i]);
    if (
      ((n.length = 0),
      (e = e.responseState),
      (n = r.id),
      (r = r.rootSegmentID),
      pe(t, e.startInlineScript),
      e.sentCompleteBoundaryFunction
        ? pe(t, hce)
        : ((e.sentCompleteBoundaryFunction = !0), pe(t, dce)),
      n === null)
    )
      throw Error(
        'An ID must have been assigned before we can complete the boundary.',
      );
    return (
      (r = r.toString(16)),
      pe(t, n),
      pe(t, pce),
      pe(t, e.segmentPrefix),
      pe(t, r),
      St(t, mce)
    );
  }
  function tH(e, t, r, n) {
    if (n.status === 2) return !0;
    var i = n.id;
    if (i === -1) {
      if ((n.id = r.rootSegmentID) === -1)
        throw Error(
          'A root segment ID must have been assigned by now. This is a bug in React.',
        );
      return O2(e, t, n);
    }
    return (
      O2(e, t, n),
      (e = e.responseState),
      pe(t, e.startInlineScript),
      e.sentCompleteSegmentFunction
        ? pe(t, uce)
        : ((e.sentCompleteSegmentFunction = !0), pe(t, lce)),
      pe(t, e.segmentPrefix),
      (i = i.toString(16)),
      pe(t, i),
      pe(t, cce),
      pe(t, e.placeholderPrefix),
      pe(t, i),
      St(t, fce)
    );
  }
  function FT(e, t) {
    (Tt = new Uint8Array(2048)), (bt = 0), (uc = !0);
    try {
      var r = e.completedRootSegment;
      if (r !== null && e.pendingRootTasks === 0) {
        Wg(e, t, r), (e.completedRootSegment = null);
        var n = e.responseState.bootstrapChunks;
        for (r = 0; r < n.length - 1; r++) pe(t, n[r]);
        r < n.length && St(t, n[r]);
      }
      var i = e.clientRenderedBoundaries,
        s;
      for (s = 0; s < i.length; s++) {
        var o = i[s];
        n = t;
        var a = e.responseState,
          u = o.id,
          c = o.errorDigest,
          d = o.errorMessage,
          m = o.errorComponentStack;
        if (
          (pe(n, a.startInlineScript),
          a.sentClientRenderFunction
            ? pe(n, gce)
            : ((a.sentClientRenderFunction = !0), pe(n, yce)),
          u === null)
        )
          throw Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        if (
          (pe(n, u),
          pe(n, vce),
          (c || d || m) && (pe(n, wT), pe(n, ET(c || ''))),
          (d || m) && (pe(n, wT), pe(n, ET(d || ''))),
          m && (pe(n, wT), pe(n, ET(m))),
          !St(n, bce))
        ) {
          (e.destination = null), s++, i.splice(0, s);
          return;
        }
      }
      i.splice(0, s);
      var g = e.completedBoundaries;
      for (s = 0; s < g.length; s++)
        if (!I2(e, t, g[s])) {
          (e.destination = null), s++, g.splice(0, s);
          return;
        }
      g.splice(0, s), a2(t), (Tt = new Uint8Array(2048)), (bt = 0), (uc = !0);
      var v = e.partialBoundaries;
      for (s = 0; s < v.length; s++) {
        var S = v[s];
        e: {
          (i = e), (o = t);
          var w = S.completedSegments;
          for (a = 0; a < w.length; a++)
            if (!tH(i, o, S, w[a])) {
              a++, w.splice(0, a);
              var T = !1;
              break e;
            }
          w.splice(0, a), (T = !0);
        }
        if (!T) {
          (e.destination = null), s++, v.splice(0, s);
          return;
        }
      }
      v.splice(0, s);
      var C = e.completedBoundaries;
      for (s = 0; s < C.length; s++)
        if (!I2(e, t, C[s])) {
          (e.destination = null), s++, C.splice(0, s);
          return;
        }
      C.splice(0, s);
    } finally {
      a2(t),
        typeof t.flush == 'function' && t.flush(),
        e.allPendingTasks === 0 &&
          e.pingedTasks.length === 0 &&
          e.clientRenderedBoundaries.length === 0 &&
          e.completedBoundaries.length === 0 &&
          t.end();
    }
  }
  function jce(e) {
    setImmediate(function () {
      return eH(e);
    });
  }
  function rH(e, t) {
    if (e.status === 1) (e.status = 2), t.destroy(e.fatalError);
    else if (e.status !== 2 && e.destination === null) {
      e.destination = t;
      try {
        FT(e, t);
      } catch (r) {
        Eh(e, r), zg(e, r);
      }
    }
  }
  function nH(e, t) {
    try {
      var r = e.abortableTasks;
      r.forEach(function (n) {
        return Z2(n, e, t);
      }),
        r.clear(),
        e.destination !== null && FT(e, e.destination);
    } catch (n) {
      Eh(e, n), zg(e, n);
    }
  }
  function Fce(e, t) {
    return function () {
      return rH(t, e);
    };
  }
  function A2(e, t) {
    return function () {
      return nH(e, t);
    };
  }
  function qce(e, t) {
    var r = t ? t.identifierPrefix : void 0,
      n = t ? t.nonce : void 0,
      i = t ? t.bootstrapScriptContent : void 0,
      s = t ? t.bootstrapScripts : void 0,
      o = t ? t.bootstrapModules : void 0;
    (r = r === void 0 ? '' : r),
      (n = n === void 0 ? hue : ie('<script nonce="' + hr(n) + '">'));
    var a = [];
    if (
      (i !== void 0 && a.push(n, ('' + i).replace(gue, vue), pue), s !== void 0)
    )
      for (i = 0; i < s.length; i++) a.push(mue, hr(s[i]), c2);
    if (o !== void 0) for (s = 0; s < o.length; s++) a.push(yue, hr(o[s]), c2);
    (o = {
      bootstrapChunks: a,
      startInlineScript: n,
      placeholderPrefix: ie(r + 'P:'),
      segmentPrefix: ie(r + 'S:'),
      boundaryPrefix: r + 'B:',
      idPrefix: r,
      nextSuspenseID: 0,
      sentCompleteSegmentFunction: !1,
      sentCompleteBoundaryFunction: !1,
      sentClientRenderFunction: !1,
    }),
      (s = t ? t.namespaceURI : void 0),
      (s = Ds(
        s === 'http://www.w3.org/2000/svg'
          ? 2
          : s === 'http://www.w3.org/1998/Math/MathML'
            ? 3
            : 0,
        null,
      )),
      (i = t ? t.progressiveChunkSize : void 0),
      (n = t ? t.onError : void 0),
      (a = t ? t.onAllReady : void 0);
    var u = t ? t.onShellReady : void 0,
      c = t ? t.onShellError : void 0;
    return (
      (t = []),
      (r = new Set()),
      (o = {
        destination: null,
        responseState: o,
        progressiveChunkSize: i === void 0 ? 12800 : i,
        status: 0,
        fatalError: null,
        nextSegmentId: 0,
        allPendingTasks: 0,
        pendingRootTasks: 0,
        completedRootSegment: null,
        abortableTasks: r,
        pingedTasks: t,
        clientRenderedBoundaries: [],
        completedBoundaries: [],
        partialBoundaries: [],
        onError: n === void 0 ? Nce : n,
        onAllReady: a === void 0 ? Sh : a,
        onShellReady: u === void 0 ? Sh : u,
        onShellError: c === void 0 ? Sh : c,
        onFatalError: Sh,
      }),
      (s = Hg(o, 0, null, s, !1, !1)),
      (s.parentFlushed = !0),
      (e = jT(o, e, null, s, r, W2, null, Pce)),
      t.push(e),
      o
    );
  }
  qT.renderToPipeableStream = function (e, t) {
    var r = qce(e, t),
      n = !1;
    return (
      jce(r),
      {
        pipe: function (i) {
          if (n)
            throw Error(
              'React currently only supports piping to one writable stream.',
            );
          return (
            (n = !0),
            rH(r, i),
            i.on('drain', Fce(i, r)),
            i.on(
              'error',
              A2(
                r,
                Error('The destination stream errored while writing data.'),
              ),
            ),
            i.on('close', A2(r, Error('The destination stream closed early.'))),
            i
          );
        },
        abort: function (i) {
          nH(r, i);
        },
      }
    );
  };
  qT.version = '18.3.1';
});
var iH = $((cc) => {
  'use strict';
  process.env.NODE_ENV !== 'production' &&
    (function () {
      'use strict';
      var e = Ns(),
        t = require('stream'),
        r = '18.3.1',
        n = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function i(l) {
        {
          for (
            var f = arguments.length, y = new Array(f > 1 ? f - 1 : 0), b = 1;
            b < f;
            b++
          )
            y[b - 1] = arguments[b];
          o('warn', l, y);
        }
      }
      function s(l) {
        {
          for (
            var f = arguments.length, y = new Array(f > 1 ? f - 1 : 0), b = 1;
            b < f;
            b++
          )
            y[b - 1] = arguments[b];
          o('error', l, y);
        }
      }
      function o(l, f, y) {
        {
          var b = n.ReactDebugCurrentFrame,
            P = b.getStackAddendum();
          P !== '' && ((f += '%s'), (y = y.concat([P])));
          var A = y.map(function (N) {
            return String(N);
          });
          A.unshift('Warning: ' + f),
            Function.prototype.apply.call(console[l], console, A);
        }
      }
      function a(l) {
        l();
      }
      function u(l) {}
      function c(l, f) {
        d(l, f);
      }
      function d(l, f) {
        return l.push(f);
      }
      function m(l) {}
      function g(l) {
        l.push(null);
      }
      function v(l) {
        return l;
      }
      function S(l) {
        return l;
      }
      function w(l, f) {
        l.destroy(f);
      }
      function T(l) {
        {
          var f = typeof Symbol == 'function' && Symbol.toStringTag,
            y = (f && l[Symbol.toStringTag]) || l.constructor.name || 'Object';
          return y;
        }
      }
      function C(l) {
        try {
          return I(l), !1;
        } catch {
          return !0;
        }
      }
      function I(l) {
        return '' + l;
      }
      function x(l, f) {
        if (C(l))
          return (
            s(
              'The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.',
              f,
              T(l),
            ),
            I(l)
          );
      }
      function E(l, f) {
        if (C(l))
          return (
            s(
              'The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.',
              f,
              T(l),
            ),
            I(l)
          );
      }
      function j(l) {
        if (C(l))
          return (
            s(
              'The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.',
              T(l),
            ),
            I(l)
          );
      }
      var q = Object.prototype.hasOwnProperty,
        O = 0,
        F = 1,
        U = 2,
        D = 3,
        G = 4,
        Y = 5,
        W = 6,
        de =
          ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD',
        X = de + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
        se = new RegExp('^[' + de + '][' + X + ']*$'),
        ae = {},
        qe = {};
      function re(l) {
        return q.call(qe, l)
          ? !0
          : q.call(ae, l)
            ? !1
            : se.test(l)
              ? ((qe[l] = !0), !0)
              : ((ae[l] = !0), s('Invalid attribute name: `%s`', l), !1);
      }
      function Ie(l, f, y, b) {
        if (y !== null && y.type === O) return !1;
        switch (typeof f) {
          case 'function':
          case 'symbol':
            return !0;
          case 'boolean': {
            if (b) return !1;
            if (y !== null) return !y.acceptsBooleans;
            var P = l.toLowerCase().slice(0, 5);
            return P !== 'data-' && P !== 'aria-';
          }
          default:
            return !1;
        }
      }
      function Wt(l) {
        return Ye.hasOwnProperty(l) ? Ye[l] : null;
      }
      function ve(l, f, y, b, P, A, N) {
        (this.acceptsBooleans = f === U || f === D || f === G),
          (this.attributeName = b),
          (this.attributeNamespace = P),
          (this.mustUseProperty = y),
          (this.propertyName = l),
          (this.type = f),
          (this.sanitizeURL = A),
          (this.removeEmptyString = N);
      }
      var Ye = {},
        It = [
          'children',
          'dangerouslySetInnerHTML',
          'defaultValue',
          'defaultChecked',
          'innerHTML',
          'suppressContentEditableWarning',
          'suppressHydrationWarning',
          'style',
        ];
      It.forEach(function (l) {
        Ye[l] = new ve(l, O, !1, l, null, !1, !1);
      }),
        [
          ['acceptCharset', 'accept-charset'],
          ['className', 'class'],
          ['htmlFor', 'for'],
          ['httpEquiv', 'http-equiv'],
        ].forEach(function (l) {
          var f = l[0],
            y = l[1];
          Ye[f] = new ve(f, F, !1, y, null, !1, !1);
        }),
        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
          function (l) {
            Ye[l] = new ve(l, U, !1, l.toLowerCase(), null, !1, !1);
          },
        ),
        [
          'autoReverse',
          'externalResourcesRequired',
          'focusable',
          'preserveAlpha',
        ].forEach(function (l) {
          Ye[l] = new ve(l, U, !1, l, null, !1, !1);
        }),
        [
          'allowFullScreen',
          'async',
          'autoFocus',
          'autoPlay',
          'controls',
          'default',
          'defer',
          'disabled',
          'disablePictureInPicture',
          'disableRemotePlayback',
          'formNoValidate',
          'hidden',
          'loop',
          'noModule',
          'noValidate',
          'open',
          'playsInline',
          'readOnly',
          'required',
          'reversed',
          'scoped',
          'seamless',
          'itemScope',
        ].forEach(function (l) {
          Ye[l] = new ve(l, D, !1, l.toLowerCase(), null, !1, !1);
        }),
        ['checked', 'multiple', 'muted', 'selected'].forEach(function (l) {
          Ye[l] = new ve(l, D, !0, l, null, !1, !1);
        }),
        ['capture', 'download'].forEach(function (l) {
          Ye[l] = new ve(l, G, !1, l, null, !1, !1);
        }),
        ['cols', 'rows', 'size', 'span'].forEach(function (l) {
          Ye[l] = new ve(l, W, !1, l, null, !1, !1);
        }),
        ['rowSpan', 'start'].forEach(function (l) {
          Ye[l] = new ve(l, Y, !1, l.toLowerCase(), null, !1, !1);
        });
      var Ue = /[\-\:]([a-z])/g,
        Gt = function (l) {
          return l[1].toUpperCase();
        };
      [
        'accent-height',
        'alignment-baseline',
        'arabic-form',
        'baseline-shift',
        'cap-height',
        'clip-path',
        'clip-rule',
        'color-interpolation',
        'color-interpolation-filters',
        'color-profile',
        'color-rendering',
        'dominant-baseline',
        'enable-background',
        'fill-opacity',
        'fill-rule',
        'flood-color',
        'flood-opacity',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-stretch',
        'font-style',
        'font-variant',
        'font-weight',
        'glyph-name',
        'glyph-orientation-horizontal',
        'glyph-orientation-vertical',
        'horiz-adv-x',
        'horiz-origin-x',
        'image-rendering',
        'letter-spacing',
        'lighting-color',
        'marker-end',
        'marker-mid',
        'marker-start',
        'overline-position',
        'overline-thickness',
        'paint-order',
        'panose-1',
        'pointer-events',
        'rendering-intent',
        'shape-rendering',
        'stop-color',
        'stop-opacity',
        'strikethrough-position',
        'strikethrough-thickness',
        'stroke-dasharray',
        'stroke-dashoffset',
        'stroke-linecap',
        'stroke-linejoin',
        'stroke-miterlimit',
        'stroke-opacity',
        'stroke-width',
        'text-anchor',
        'text-decoration',
        'text-rendering',
        'underline-position',
        'underline-thickness',
        'unicode-bidi',
        'unicode-range',
        'units-per-em',
        'v-alphabetic',
        'v-hanging',
        'v-ideographic',
        'v-mathematical',
        'vector-effect',
        'vert-adv-y',
        'vert-origin-x',
        'vert-origin-y',
        'word-spacing',
        'writing-mode',
        'xmlns:xlink',
        'x-height',
      ].forEach(function (l) {
        var f = l.replace(Ue, Gt);
        Ye[f] = new ve(f, F, !1, l, null, !1, !1);
      }),
        [
          'xlink:actuate',
          'xlink:arcrole',
          'xlink:role',
          'xlink:show',
          'xlink:title',
          'xlink:type',
        ].forEach(function (l) {
          var f = l.replace(Ue, Gt);
          Ye[f] = new ve(f, F, !1, l, 'http://www.w3.org/1999/xlink', !1, !1);
        }),
        ['xml:base', 'xml:lang', 'xml:space'].forEach(function (l) {
          var f = l.replace(Ue, Gt);
          Ye[f] = new ve(
            f,
            F,
            !1,
            l,
            'http://www.w3.org/XML/1998/namespace',
            !1,
            !1,
          );
        }),
        ['tabIndex', 'crossOrigin'].forEach(function (l) {
          Ye[l] = new ve(l, F, !1, l.toLowerCase(), null, !1, !1);
        });
      var Re = 'xlinkHref';
      (Ye[Re] = new ve(
        'xlinkHref',
        F,
        !1,
        'xlink:href',
        'http://www.w3.org/1999/xlink',
        !0,
        !1,
      )),
        ['src', 'href', 'action', 'formAction'].forEach(function (l) {
          Ye[l] = new ve(l, F, !1, l.toLowerCase(), null, !0, !0);
        });
      var Ce = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0,
      };
      function mr(l, f) {
        return l + f.charAt(0).toUpperCase() + f.substring(1);
      }
      var Ve = ['Webkit', 'ms', 'Moz', 'O'];
      Object.keys(Ce).forEach(function (l) {
        Ve.forEach(function (f) {
          Ce[mr(f, l)] = Ce[l];
        });
      });
      var ge = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0,
      };
      function H(l, f) {
        ge[f.type] ||
          f.onChange ||
          f.onInput ||
          f.readOnly ||
          f.disabled ||
          f.value == null ||
          s(
            'You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.',
          ),
          f.onChange ||
            f.readOnly ||
            f.disabled ||
            f.checked == null ||
            s(
              'You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.',
            );
      }
      function K(l, f) {
        if (l.indexOf('-') === -1) return typeof f.is == 'string';
        switch (l) {
          case 'annotation-xml':
          case 'color-profile':
          case 'font-face':
          case 'font-face-src':
          case 'font-face-uri':
          case 'font-face-format':
          case 'font-face-name':
          case 'missing-glyph':
            return !1;
          default:
            return !0;
        }
      }
      var te = {
          'aria-current': 0,
          'aria-description': 0,
          'aria-details': 0,
          'aria-disabled': 0,
          'aria-hidden': 0,
          'aria-invalid': 0,
          'aria-keyshortcuts': 0,
          'aria-label': 0,
          'aria-roledescription': 0,
          'aria-autocomplete': 0,
          'aria-checked': 0,
          'aria-expanded': 0,
          'aria-haspopup': 0,
          'aria-level': 0,
          'aria-modal': 0,
          'aria-multiline': 0,
          'aria-multiselectable': 0,
          'aria-orientation': 0,
          'aria-placeholder': 0,
          'aria-pressed': 0,
          'aria-readonly': 0,
          'aria-required': 0,
          'aria-selected': 0,
          'aria-sort': 0,
          'aria-valuemax': 0,
          'aria-valuemin': 0,
          'aria-valuenow': 0,
          'aria-valuetext': 0,
          'aria-atomic': 0,
          'aria-busy': 0,
          'aria-live': 0,
          'aria-relevant': 0,
          'aria-dropeffect': 0,
          'aria-grabbed': 0,
          'aria-activedescendant': 0,
          'aria-colcount': 0,
          'aria-colindex': 0,
          'aria-colspan': 0,
          'aria-controls': 0,
          'aria-describedby': 0,
          'aria-errormessage': 0,
          'aria-flowto': 0,
          'aria-labelledby': 0,
          'aria-owns': 0,
          'aria-posinset': 0,
          'aria-rowcount': 0,
          'aria-rowindex': 0,
          'aria-rowspan': 0,
          'aria-setsize': 0,
        },
        le = {},
        Pe = new RegExp('^(aria)-[' + X + ']*$'),
        he = new RegExp('^(aria)[A-Z][' + X + ']*$');
      function Ae(l, f) {
        {
          if (q.call(le, f) && le[f]) return !0;
          if (he.test(f)) {
            var y = 'aria-' + f.slice(4).toLowerCase(),
              b = te.hasOwnProperty(y) ? y : null;
            if (b == null)
              return (
                s(
                  'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',
                  f,
                ),
                (le[f] = !0),
                !0
              );
            if (f !== b)
              return (
                s('Invalid ARIA attribute `%s`. Did you mean `%s`?', f, b),
                (le[f] = !0),
                !0
              );
          }
          if (Pe.test(f)) {
            var P = f.toLowerCase(),
              A = te.hasOwnProperty(P) ? P : null;
            if (A == null) return (le[f] = !0), !1;
            if (f !== A)
              return (
                s('Unknown ARIA attribute `%s`. Did you mean `%s`?', f, A),
                (le[f] = !0),
                !0
              );
          }
        }
        return !0;
      }
      function Yt(l, f) {
        {
          var y = [];
          for (var b in f) {
            var P = Ae(l, b);
            P || y.push(b);
          }
          var A = y
            .map(function (N) {
              return '`' + N + '`';
            })
            .join(', ');
          y.length === 1
            ? s(
                'Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                A,
                l,
              )
            : y.length > 1 &&
              s(
                'Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                A,
                l,
              );
        }
      }
      function tt(l, f) {
        K(l, f) || Yt(l, f);
      }
      var zt = !1;
      function Ho(l, f) {
        {
          if (l !== 'input' && l !== 'textarea' && l !== 'select') return;
          f != null &&
            f.value === null &&
            !zt &&
            ((zt = !0),
            l === 'select' && f.multiple
              ? s(
                  '`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.',
                  l,
                )
              : s(
                  '`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.',
                  l,
                ));
        }
      }
      var Jt = {
          accept: 'accept',
          acceptcharset: 'acceptCharset',
          'accept-charset': 'acceptCharset',
          accesskey: 'accessKey',
          action: 'action',
          allowfullscreen: 'allowFullScreen',
          alt: 'alt',
          as: 'as',
          async: 'async',
          autocapitalize: 'autoCapitalize',
          autocomplete: 'autoComplete',
          autocorrect: 'autoCorrect',
          autofocus: 'autoFocus',
          autoplay: 'autoPlay',
          autosave: 'autoSave',
          capture: 'capture',
          cellpadding: 'cellPadding',
          cellspacing: 'cellSpacing',
          challenge: 'challenge',
          charset: 'charSet',
          checked: 'checked',
          children: 'children',
          cite: 'cite',
          class: 'className',
          classid: 'classID',
          classname: 'className',
          cols: 'cols',
          colspan: 'colSpan',
          content: 'content',
          contenteditable: 'contentEditable',
          contextmenu: 'contextMenu',
          controls: 'controls',
          controlslist: 'controlsList',
          coords: 'coords',
          crossorigin: 'crossOrigin',
          dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
          data: 'data',
          datetime: 'dateTime',
          default: 'default',
          defaultchecked: 'defaultChecked',
          defaultvalue: 'defaultValue',
          defer: 'defer',
          dir: 'dir',
          disabled: 'disabled',
          disablepictureinpicture: 'disablePictureInPicture',
          disableremoteplayback: 'disableRemotePlayback',
          download: 'download',
          draggable: 'draggable',
          enctype: 'encType',
          enterkeyhint: 'enterKeyHint',
          for: 'htmlFor',
          form: 'form',
          formmethod: 'formMethod',
          formaction: 'formAction',
          formenctype: 'formEncType',
          formnovalidate: 'formNoValidate',
          formtarget: 'formTarget',
          frameborder: 'frameBorder',
          headers: 'headers',
          height: 'height',
          hidden: 'hidden',
          high: 'high',
          href: 'href',
          hreflang: 'hrefLang',
          htmlfor: 'htmlFor',
          httpequiv: 'httpEquiv',
          'http-equiv': 'httpEquiv',
          icon: 'icon',
          id: 'id',
          imagesizes: 'imageSizes',
          imagesrcset: 'imageSrcSet',
          innerhtml: 'innerHTML',
          inputmode: 'inputMode',
          integrity: 'integrity',
          is: 'is',
          itemid: 'itemID',
          itemprop: 'itemProp',
          itemref: 'itemRef',
          itemscope: 'itemScope',
          itemtype: 'itemType',
          keyparams: 'keyParams',
          keytype: 'keyType',
          kind: 'kind',
          label: 'label',
          lang: 'lang',
          list: 'list',
          loop: 'loop',
          low: 'low',
          manifest: 'manifest',
          marginwidth: 'marginWidth',
          marginheight: 'marginHeight',
          max: 'max',
          maxlength: 'maxLength',
          media: 'media',
          mediagroup: 'mediaGroup',
          method: 'method',
          min: 'min',
          minlength: 'minLength',
          multiple: 'multiple',
          muted: 'muted',
          name: 'name',
          nomodule: 'noModule',
          nonce: 'nonce',
          novalidate: 'noValidate',
          open: 'open',
          optimum: 'optimum',
          pattern: 'pattern',
          placeholder: 'placeholder',
          playsinline: 'playsInline',
          poster: 'poster',
          preload: 'preload',
          profile: 'profile',
          radiogroup: 'radioGroup',
          readonly: 'readOnly',
          referrerpolicy: 'referrerPolicy',
          rel: 'rel',
          required: 'required',
          reversed: 'reversed',
          role: 'role',
          rows: 'rows',
          rowspan: 'rowSpan',
          sandbox: 'sandbox',
          scope: 'scope',
          scoped: 'scoped',
          scrolling: 'scrolling',
          seamless: 'seamless',
          selected: 'selected',
          shape: 'shape',
          size: 'size',
          sizes: 'sizes',
          span: 'span',
          spellcheck: 'spellCheck',
          src: 'src',
          srcdoc: 'srcDoc',
          srclang: 'srcLang',
          srcset: 'srcSet',
          start: 'start',
          step: 'step',
          style: 'style',
          summary: 'summary',
          tabindex: 'tabIndex',
          target: 'target',
          title: 'title',
          type: 'type',
          usemap: 'useMap',
          value: 'value',
          width: 'width',
          wmode: 'wmode',
          wrap: 'wrap',
          about: 'about',
          accentheight: 'accentHeight',
          'accent-height': 'accentHeight',
          accumulate: 'accumulate',
          additive: 'additive',
          alignmentbaseline: 'alignmentBaseline',
          'alignment-baseline': 'alignmentBaseline',
          allowreorder: 'allowReorder',
          alphabetic: 'alphabetic',
          amplitude: 'amplitude',
          arabicform: 'arabicForm',
          'arabic-form': 'arabicForm',
          ascent: 'ascent',
          attributename: 'attributeName',
          attributetype: 'attributeType',
          autoreverse: 'autoReverse',
          azimuth: 'azimuth',
          basefrequency: 'baseFrequency',
          baselineshift: 'baselineShift',
          'baseline-shift': 'baselineShift',
          baseprofile: 'baseProfile',
          bbox: 'bbox',
          begin: 'begin',
          bias: 'bias',
          by: 'by',
          calcmode: 'calcMode',
          capheight: 'capHeight',
          'cap-height': 'capHeight',
          clip: 'clip',
          clippath: 'clipPath',
          'clip-path': 'clipPath',
          clippathunits: 'clipPathUnits',
          cliprule: 'clipRule',
          'clip-rule': 'clipRule',
          color: 'color',
          colorinterpolation: 'colorInterpolation',
          'color-interpolation': 'colorInterpolation',
          colorinterpolationfilters: 'colorInterpolationFilters',
          'color-interpolation-filters': 'colorInterpolationFilters',
          colorprofile: 'colorProfile',
          'color-profile': 'colorProfile',
          colorrendering: 'colorRendering',
          'color-rendering': 'colorRendering',
          contentscripttype: 'contentScriptType',
          contentstyletype: 'contentStyleType',
          cursor: 'cursor',
          cx: 'cx',
          cy: 'cy',
          d: 'd',
          datatype: 'datatype',
          decelerate: 'decelerate',
          descent: 'descent',
          diffuseconstant: 'diffuseConstant',
          direction: 'direction',
          display: 'display',
          divisor: 'divisor',
          dominantbaseline: 'dominantBaseline',
          'dominant-baseline': 'dominantBaseline',
          dur: 'dur',
          dx: 'dx',
          dy: 'dy',
          edgemode: 'edgeMode',
          elevation: 'elevation',
          enablebackground: 'enableBackground',
          'enable-background': 'enableBackground',
          end: 'end',
          exponent: 'exponent',
          externalresourcesrequired: 'externalResourcesRequired',
          fill: 'fill',
          fillopacity: 'fillOpacity',
          'fill-opacity': 'fillOpacity',
          fillrule: 'fillRule',
          'fill-rule': 'fillRule',
          filter: 'filter',
          filterres: 'filterRes',
          filterunits: 'filterUnits',
          floodopacity: 'floodOpacity',
          'flood-opacity': 'floodOpacity',
          floodcolor: 'floodColor',
          'flood-color': 'floodColor',
          focusable: 'focusable',
          fontfamily: 'fontFamily',
          'font-family': 'fontFamily',
          fontsize: 'fontSize',
          'font-size': 'fontSize',
          fontsizeadjust: 'fontSizeAdjust',
          'font-size-adjust': 'fontSizeAdjust',
          fontstretch: 'fontStretch',
          'font-stretch': 'fontStretch',
          fontstyle: 'fontStyle',
          'font-style': 'fontStyle',
          fontvariant: 'fontVariant',
          'font-variant': 'fontVariant',
          fontweight: 'fontWeight',
          'font-weight': 'fontWeight',
          format: 'format',
          from: 'from',
          fx: 'fx',
          fy: 'fy',
          g1: 'g1',
          g2: 'g2',
          glyphname: 'glyphName',
          'glyph-name': 'glyphName',
          glyphorientationhorizontal: 'glyphOrientationHorizontal',
          'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
          glyphorientationvertical: 'glyphOrientationVertical',
          'glyph-orientation-vertical': 'glyphOrientationVertical',
          glyphref: 'glyphRef',
          gradienttransform: 'gradientTransform',
          gradientunits: 'gradientUnits',
          hanging: 'hanging',
          horizadvx: 'horizAdvX',
          'horiz-adv-x': 'horizAdvX',
          horizoriginx: 'horizOriginX',
          'horiz-origin-x': 'horizOriginX',
          ideographic: 'ideographic',
          imagerendering: 'imageRendering',
          'image-rendering': 'imageRendering',
          in2: 'in2',
          in: 'in',
          inlist: 'inlist',
          intercept: 'intercept',
          k1: 'k1',
          k2: 'k2',
          k3: 'k3',
          k4: 'k4',
          k: 'k',
          kernelmatrix: 'kernelMatrix',
          kernelunitlength: 'kernelUnitLength',
          kerning: 'kerning',
          keypoints: 'keyPoints',
          keysplines: 'keySplines',
          keytimes: 'keyTimes',
          lengthadjust: 'lengthAdjust',
          letterspacing: 'letterSpacing',
          'letter-spacing': 'letterSpacing',
          lightingcolor: 'lightingColor',
          'lighting-color': 'lightingColor',
          limitingconeangle: 'limitingConeAngle',
          local: 'local',
          markerend: 'markerEnd',
          'marker-end': 'markerEnd',
          markerheight: 'markerHeight',
          markermid: 'markerMid',
          'marker-mid': 'markerMid',
          markerstart: 'markerStart',
          'marker-start': 'markerStart',
          markerunits: 'markerUnits',
          markerwidth: 'markerWidth',
          mask: 'mask',
          maskcontentunits: 'maskContentUnits',
          maskunits: 'maskUnits',
          mathematical: 'mathematical',
          mode: 'mode',
          numoctaves: 'numOctaves',
          offset: 'offset',
          opacity: 'opacity',
          operator: 'operator',
          order: 'order',
          orient: 'orient',
          orientation: 'orientation',
          origin: 'origin',
          overflow: 'overflow',
          overlineposition: 'overlinePosition',
          'overline-position': 'overlinePosition',
          overlinethickness: 'overlineThickness',
          'overline-thickness': 'overlineThickness',
          paintorder: 'paintOrder',
          'paint-order': 'paintOrder',
          panose1: 'panose1',
          'panose-1': 'panose1',
          pathlength: 'pathLength',
          patterncontentunits: 'patternContentUnits',
          patterntransform: 'patternTransform',
          patternunits: 'patternUnits',
          pointerevents: 'pointerEvents',
          'pointer-events': 'pointerEvents',
          points: 'points',
          pointsatx: 'pointsAtX',
          pointsaty: 'pointsAtY',
          pointsatz: 'pointsAtZ',
          prefix: 'prefix',
          preservealpha: 'preserveAlpha',
          preserveaspectratio: 'preserveAspectRatio',
          primitiveunits: 'primitiveUnits',
          property: 'property',
          r: 'r',
          radius: 'radius',
          refx: 'refX',
          refy: 'refY',
          renderingintent: 'renderingIntent',
          'rendering-intent': 'renderingIntent',
          repeatcount: 'repeatCount',
          repeatdur: 'repeatDur',
          requiredextensions: 'requiredExtensions',
          requiredfeatures: 'requiredFeatures',
          resource: 'resource',
          restart: 'restart',
          result: 'result',
          results: 'results',
          rotate: 'rotate',
          rx: 'rx',
          ry: 'ry',
          scale: 'scale',
          security: 'security',
          seed: 'seed',
          shaperendering: 'shapeRendering',
          'shape-rendering': 'shapeRendering',
          slope: 'slope',
          spacing: 'spacing',
          specularconstant: 'specularConstant',
          specularexponent: 'specularExponent',
          speed: 'speed',
          spreadmethod: 'spreadMethod',
          startoffset: 'startOffset',
          stddeviation: 'stdDeviation',
          stemh: 'stemh',
          stemv: 'stemv',
          stitchtiles: 'stitchTiles',
          stopcolor: 'stopColor',
          'stop-color': 'stopColor',
          stopopacity: 'stopOpacity',
          'stop-opacity': 'stopOpacity',
          strikethroughposition: 'strikethroughPosition',
          'strikethrough-position': 'strikethroughPosition',
          strikethroughthickness: 'strikethroughThickness',
          'strikethrough-thickness': 'strikethroughThickness',
          string: 'string',
          stroke: 'stroke',
          strokedasharray: 'strokeDasharray',
          'stroke-dasharray': 'strokeDasharray',
          strokedashoffset: 'strokeDashoffset',
          'stroke-dashoffset': 'strokeDashoffset',
          strokelinecap: 'strokeLinecap',
          'stroke-linecap': 'strokeLinecap',
          strokelinejoin: 'strokeLinejoin',
          'stroke-linejoin': 'strokeLinejoin',
          strokemiterlimit: 'strokeMiterlimit',
          'stroke-miterlimit': 'strokeMiterlimit',
          strokewidth: 'strokeWidth',
          'stroke-width': 'strokeWidth',
          strokeopacity: 'strokeOpacity',
          'stroke-opacity': 'strokeOpacity',
          suppresscontenteditablewarning: 'suppressContentEditableWarning',
          suppresshydrationwarning: 'suppressHydrationWarning',
          surfacescale: 'surfaceScale',
          systemlanguage: 'systemLanguage',
          tablevalues: 'tableValues',
          targetx: 'targetX',
          targety: 'targetY',
          textanchor: 'textAnchor',
          'text-anchor': 'textAnchor',
          textdecoration: 'textDecoration',
          'text-decoration': 'textDecoration',
          textlength: 'textLength',
          textrendering: 'textRendering',
          'text-rendering': 'textRendering',
          to: 'to',
          transform: 'transform',
          typeof: 'typeof',
          u1: 'u1',
          u2: 'u2',
          underlineposition: 'underlinePosition',
          'underline-position': 'underlinePosition',
          underlinethickness: 'underlineThickness',
          'underline-thickness': 'underlineThickness',
          unicode: 'unicode',
          unicodebidi: 'unicodeBidi',
          'unicode-bidi': 'unicodeBidi',
          unicoderange: 'unicodeRange',
          'unicode-range': 'unicodeRange',
          unitsperem: 'unitsPerEm',
          'units-per-em': 'unitsPerEm',
          unselectable: 'unselectable',
          valphabetic: 'vAlphabetic',
          'v-alphabetic': 'vAlphabetic',
          values: 'values',
          vectoreffect: 'vectorEffect',
          'vector-effect': 'vectorEffect',
          version: 'version',
          vertadvy: 'vertAdvY',
          'vert-adv-y': 'vertAdvY',
          vertoriginx: 'vertOriginX',
          'vert-origin-x': 'vertOriginX',
          vertoriginy: 'vertOriginY',
          'vert-origin-y': 'vertOriginY',
          vhanging: 'vHanging',
          'v-hanging': 'vHanging',
          videographic: 'vIdeographic',
          'v-ideographic': 'vIdeographic',
          viewbox: 'viewBox',
          viewtarget: 'viewTarget',
          visibility: 'visibility',
          vmathematical: 'vMathematical',
          'v-mathematical': 'vMathematical',
          vocab: 'vocab',
          widths: 'widths',
          wordspacing: 'wordSpacing',
          'word-spacing': 'wordSpacing',
          writingmode: 'writingMode',
          'writing-mode': 'writingMode',
          x1: 'x1',
          x2: 'x2',
          x: 'x',
          xchannelselector: 'xChannelSelector',
          xheight: 'xHeight',
          'x-height': 'xHeight',
          xlinkactuate: 'xlinkActuate',
          'xlink:actuate': 'xlinkActuate',
          xlinkarcrole: 'xlinkArcrole',
          'xlink:arcrole': 'xlinkArcrole',
          xlinkhref: 'xlinkHref',
          'xlink:href': 'xlinkHref',
          xlinkrole: 'xlinkRole',
          'xlink:role': 'xlinkRole',
          xlinkshow: 'xlinkShow',
          'xlink:show': 'xlinkShow',
          xlinktitle: 'xlinkTitle',
          'xlink:title': 'xlinkTitle',
          xlinktype: 'xlinkType',
          'xlink:type': 'xlinkType',
          xmlbase: 'xmlBase',
          'xml:base': 'xmlBase',
          xmllang: 'xmlLang',
          'xml:lang': 'xmlLang',
          xmlns: 'xmlns',
          'xml:space': 'xmlSpace',
          xmlnsxlink: 'xmlnsXlink',
          'xmlns:xlink': 'xmlnsXlink',
          xmlspace: 'xmlSpace',
          y1: 'y1',
          y2: 'y2',
          y: 'y',
          ychannelselector: 'yChannelSelector',
          z: 'z',
          zoomandpan: 'zoomAndPan',
        },
        Ut = function () {};
      {
        var wt = {},
          ln = /^on./,
          zo = /^on[^A-Z]/,
          wc = new RegExp('^(aria)-[' + X + ']*$'),
          At = new RegExp('^(aria)[A-Z][' + X + ']*$');
        Ut = function (l, f, y, b) {
          if (q.call(wt, f) && wt[f]) return !0;
          var P = f.toLowerCase();
          if (P === 'onfocusin' || P === 'onfocusout')
            return (
              s(
                'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.',
              ),
              (wt[f] = !0),
              !0
            );
          if (b != null) {
            var A = b.registrationNameDependencies,
              N = b.possibleRegistrationNames;
            if (A.hasOwnProperty(f)) return !0;
            var M = N.hasOwnProperty(P) ? N[P] : null;
            if (M != null)
              return (
                s(
                  'Invalid event handler property `%s`. Did you mean `%s`?',
                  f,
                  M,
                ),
                (wt[f] = !0),
                !0
              );
            if (ln.test(f))
              return (
                s(
                  'Unknown event handler property `%s`. It will be ignored.',
                  f,
                ),
                (wt[f] = !0),
                !0
              );
          } else if (ln.test(f))
            return (
              zo.test(f) &&
                s(
                  'Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.',
                  f,
                ),
              (wt[f] = !0),
              !0
            );
          if (wc.test(f) || At.test(f)) return !0;
          if (P === 'innerhtml')
            return (
              s(
                'Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.',
              ),
              (wt[f] = !0),
              !0
            );
          if (P === 'aria')
            return (
              s(
                'The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.',
              ),
              (wt[f] = !0),
              !0
            );
          if (P === 'is' && y !== null && y !== void 0 && typeof y != 'string')
            return (
              s(
                'Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.',
                typeof y,
              ),
              (wt[f] = !0),
              !0
            );
          if (typeof y == 'number' && isNaN(y))
            return (
              s(
                'Received NaN for the `%s` attribute. If this is expected, cast the value to a string.',
                f,
              ),
              (wt[f] = !0),
              !0
            );
          var B = Wt(f),
            ee = B !== null && B.type === O;
          if (Jt.hasOwnProperty(P)) {
            var oe = Jt[P];
            if (oe !== f)
              return (
                s('Invalid DOM property `%s`. Did you mean `%s`?', f, oe),
                (wt[f] = !0),
                !0
              );
          } else if (!ee && f !== P)
            return (
              s(
                'React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.',
                f,
                P,
              ),
              (wt[f] = !0),
              !0
            );
          return typeof y == 'boolean' && Ie(f, y, B, !1)
            ? (y
                ? s(
                    'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.',
                    y,
                    f,
                    f,
                    y,
                    f,
                  )
                : s(
                    'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',
                    y,
                    f,
                    f,
                    y,
                    f,
                    f,
                    f,
                  ),
              (wt[f] = !0),
              !0)
            : ee
              ? !0
              : Ie(f, y, B, !1)
                ? ((wt[f] = !0), !1)
                : ((y === 'false' || y === 'true') &&
                    B !== null &&
                    B.type === D &&
                    (s(
                      'Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?',
                      y,
                      f,
                      y === 'false'
                        ? 'The browser will interpret it as a truthy value.'
                        : 'Although this works, it will not work as expected if you pass the string "false".',
                      f,
                      y,
                    ),
                    (wt[f] = !0)),
                  !0);
        };
      }
      var Ci = function (l, f, y) {
        {
          var b = [];
          for (var P in f) {
            var A = Ut(l, P, f[P], y);
            A || b.push(P);
          }
          var N = b
            .map(function (M) {
              return '`' + M + '`';
            })
            .join(', ');
          b.length === 1
            ? s(
                'Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                N,
                l,
              )
            : b.length > 1 &&
              s(
                'Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                N,
                l,
              );
        }
      };
      function Oi(l, f, y) {
        K(l, f) || Ci(l, f, y);
      }
      var Xe = function () {};
      {
        var Pt = /^(?:webkit|moz|o)[A-Z]/,
          Vt = /^-ms-/,
          sr = /-(.)/g,
          Br = /;\s*$/,
          Dn = {},
          Ct = {},
          Ms = !1,
          Ii = !1,
          rt = function (l) {
            return l.replace(sr, function (f, y) {
              return y.toUpperCase();
            });
          },
          Wr = function (l) {
            (Dn.hasOwnProperty(l) && Dn[l]) ||
              ((Dn[l] = !0),
              s(
                'Unsupported style property %s. Did you mean %s?',
                l,
                rt(l.replace(Vt, 'ms-')),
              ));
          },
          Ec = function (l) {
            (Dn.hasOwnProperty(l) && Dn[l]) ||
              ((Dn[l] = !0),
              s(
                'Unsupported vendor-prefixed style property %s. Did you mean %s?',
                l,
                l.charAt(0).toUpperCase() + l.slice(1),
              ));
          },
          xr = function (l, f) {
            (Ct.hasOwnProperty(f) && Ct[f]) ||
              ((Ct[f] = !0),
              s(
                `Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`,
                l,
                f.replace(Br, ''),
              ));
          },
          Zt = function (l, f) {
            Ms ||
              ((Ms = !0),
              s(
                '`NaN` is an invalid value for the `%s` css style property.',
                l,
              ));
          },
          un = function (l, f) {
            Ii ||
              ((Ii = !0),
              s(
                '`Infinity` is an invalid value for the `%s` css style property.',
                l,
              ));
          };
        Xe = function (l, f) {
          l.indexOf('-') > -1
            ? Wr(l)
            : Pt.test(l)
              ? Ec(l)
              : Br.test(f) && xr(l, f),
            typeof f == 'number' &&
              (isNaN(f) ? Zt(l, f) : isFinite(f) || un(l, f));
        };
      }
      var Gr = Xe,
        yr = /["'&<>]/;
      function jn(l) {
        j(l);
        var f = '' + l,
          y = yr.exec(f);
        if (!y) return f;
        var b,
          P = '',
          A,
          N = 0;
        for (A = y.index; A < f.length; A++) {
          switch (f.charCodeAt(A)) {
            case 34:
              b = '&quot;';
              break;
            case 38:
              b = '&amp;';
              break;
            case 39:
              b = '&#x27;';
              break;
            case 60:
              b = '&lt;';
              break;
            case 62:
              b = '&gt;';
              break;
            default:
              continue;
          }
          N !== A && (P += f.substring(N, A)), (N = A + 1), (P += b);
        }
        return N !== A ? P + f.substring(N, A) : P;
      }
      function Ze(l) {
        return typeof l == 'boolean' || typeof l == 'number' ? '' + l : jn(l);
      }
      var Rc = /([A-Z])/g,
        Tc = /^ms-/;
      function Pc(l) {
        return l.replace(Rc, '-$1').toLowerCase().replace(Tc, '-ms-');
      }
      var kc =
          /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i,
        Uo = !1;
      function dl(l) {
        !Uo &&
          kc.test(l) &&
          ((Uo = !0),
          s(
            'A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.',
            JSON.stringify(l),
          ));
      }
      var xc = Array.isArray;
      function kt(l) {
        return xc(l);
      }
      var $t = '<script>',
        Cc = '</script>',
        Oc = '<script src="',
        Ic = '<script type="module" src="',
        hl = '" async=""></script>';
      function pl(l) {
        return j(l), ('' + l).replace(Ac, $c);
      }
      var Ac = /(<\/|<)(s)(cript)/gi,
        $c = function (l, f, y, b) {
          return '' + f + (y === 's' ? '\\u0073' : '\\u0053') + b;
        };
      function Hs(l, f, y, b, P) {
        var A = l === void 0 ? '' : l,
          N = f === void 0 ? $t : '<script nonce="' + Ze(f) + '">',
          M = [];
        if ((y !== void 0 && M.push(N, pl(y), Cc), b !== void 0))
          for (var B = 0; B < b.length; B++) M.push(Oc, Ze(b[B]), hl);
        if (P !== void 0)
          for (var ee = 0; ee < P.length; ee++) M.push(Ic, Ze(P[ee]), hl);
        return {
          bootstrapChunks: M,
          startInlineScript: N,
          placeholderPrefix: A + 'P:',
          segmentPrefix: A + 'S:',
          boundaryPrefix: A + 'B:',
          idPrefix: A,
          nextSuspenseID: 0,
          sentCompleteSegmentFunction: !1,
          sentCompleteBoundaryFunction: !1,
          sentClientRenderFunction: !1,
        };
      }
      var Ai = 0,
        Fn = 1,
        $i = 2,
        Ni = 3,
        zs = 4,
        Vo = 5,
        qn = 6,
        Li = 7;
      function Cr(l, f) {
        return { insertionMode: l, selectedValue: f };
      }
      function as(l, f, y) {
        switch (f) {
          case 'select':
            return Cr(Fn, y.value != null ? y.value : y.defaultValue);
          case 'svg':
            return Cr($i, null);
          case 'math':
            return Cr(Ni, null);
          case 'foreignObject':
            return Cr(Fn, null);
          case 'table':
            return Cr(zs, null);
          case 'thead':
          case 'tbody':
          case 'tfoot':
            return Cr(Vo, null);
          case 'colgroup':
            return Cr(Li, null);
          case 'tr':
            return Cr(qn, null);
        }
        return l.insertionMode >= zs || l.insertionMode === Ai
          ? Cr(Fn, null)
          : l;
      }
      var Mn = null;
      function ls(l) {
        var f = l.nextSuspenseID++;
        return l.boundaryPrefix + f.toString(16);
      }
      function us(l, f, y) {
        var b = l.idPrefix,
          P = ':' + b + 'R' + f;
        return y > 0 && (P += 'H' + y.toString(32)), P + ':';
      }
      function Hn(l) {
        return Ze(l);
      }
      var Us = '<!-- -->';
      function Bo(l, f, y, b) {
        return f === '' ? b : (b && l.push(Us), l.push(Hn(f)), !0);
      }
      function Wo(l, f, y, b) {
        y && b && l.push(Us);
      }
      var Qt = new Map();
      function Go(l) {
        var f = Qt.get(l);
        if (f !== void 0) return f;
        var y = Ze(Pc(l));
        return Qt.set(l, y), y;
      }
      var Di = ' style="',
        ji = ':',
        Fi = ';';
      function ml(l, f, y) {
        if (typeof y != 'object')
          throw new Error(
            "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.",
          );
        var b = !0;
        for (var P in y)
          if (q.call(y, P)) {
            var A = y[P];
            if (!(A == null || typeof A == 'boolean' || A === '')) {
              var N = void 0,
                M = void 0,
                B = P.indexOf('--') === 0;
              B
                ? ((N = Ze(P)), E(A, P), (M = Ze(('' + A).trim())))
                : (Gr(P, A),
                  (N = Go(P)),
                  typeof A == 'number'
                    ? A !== 0 && !q.call(Ce, P)
                      ? (M = A + 'px')
                      : (M = '' + A)
                    : (E(A, P), (M = Ze(('' + A).trim())))),
                b ? ((b = !1), l.push(Di, N, ji, M)) : l.push(Fi, N, ji, M);
            }
          }
        b || l.push(Sn);
      }
      var Or = ' ',
        zn = '="',
        Sn = '"',
        cs = '=""';
      function Kt(l, f, y, b) {
        switch (y) {
          case 'style': {
            ml(l, f, b);
            return;
          }
          case 'defaultValue':
          case 'defaultChecked':
          case 'innerHTML':
          case 'suppressContentEditableWarning':
          case 'suppressHydrationWarning':
            return;
        }
        if (
          !(
            y.length > 2 &&
            (y[0] === 'o' || y[0] === 'O') &&
            (y[1] === 'n' || y[1] === 'N')
          )
        ) {
          var P = Wt(y);
          if (P !== null) {
            switch (typeof b) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean':
                if (!P.acceptsBooleans) return;
            }
            var A = P.attributeName,
              N = A;
            switch (P.type) {
              case D:
                b && l.push(Or, N, cs);
                return;
              case G:
                b === !0
                  ? l.push(Or, N, cs)
                  : b === !1 || l.push(Or, N, zn, Ze(b), Sn);
                return;
              case Y:
                isNaN(b) || l.push(Or, N, zn, Ze(b), Sn);
                break;
              case W:
                !isNaN(b) && b >= 1 && l.push(Or, N, zn, Ze(b), Sn);
                break;
              default:
                P.sanitizeURL && (x(b, A), (b = '' + b), dl(b)),
                  l.push(Or, N, zn, Ze(b), Sn);
            }
          } else if (re(y)) {
            switch (typeof b) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean': {
                var M = y.toLowerCase().slice(0, 5);
                if (M !== 'data-' && M !== 'aria-') return;
              }
            }
            l.push(Or, y, zn, Ze(b), Sn);
          }
        }
      }
      var cn = '>',
        Vs = '/>';
      function Bs(l, f, y) {
        if (f != null) {
          if (y != null)
            throw new Error(
              'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
            );
          if (typeof f != 'object' || !('__html' in f))
            throw new Error(
              '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
            );
          var b = f.__html;
          b != null && (j(b), l.push('' + b));
        }
      }
      var Un = !1,
        Ws = !1,
        Yr = !1,
        Vn = !1,
        _n = !1,
        qi = !1,
        er = !1;
      function Jr(l, f) {
        {
          var y = l[f];
          if (y != null) {
            var b = kt(y);
            l.multiple && !b
              ? s(
                  'The `%s` prop supplied to <select> must be an array if `multiple` is true.',
                  f,
                )
              : !l.multiple &&
                b &&
                s(
                  'The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.',
                  f,
                );
          }
        }
      }
      function Yo(l, f, y) {
        H('select', f),
          Jr(f, 'value'),
          Jr(f, 'defaultValue'),
          f.value !== void 0 &&
            f.defaultValue !== void 0 &&
            !Yr &&
            (s(
              'Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
            ),
            (Yr = !0)),
          l.push(gr('select'));
        var b = null,
          P = null;
        for (var A in f)
          if (q.call(f, A)) {
            var N = f[A];
            if (N == null) continue;
            switch (A) {
              case 'children':
                b = N;
                break;
              case 'dangerouslySetInnerHTML':
                P = N;
                break;
              case 'defaultValue':
              case 'value':
                break;
              default:
                Kt(l, y, A, N);
                break;
            }
          }
        return l.push(cn), Bs(l, P, b), b;
      }
      function Gs(l) {
        var f = '';
        return (
          e.Children.forEach(l, function (y) {
            y != null &&
              ((f += y),
              !_n &&
                typeof y != 'string' &&
                typeof y != 'number' &&
                ((_n = !0),
                s(
                  'Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.',
                )));
          }),
          f
        );
      }
      var Mi = ' selected=""';
      function Jo(l, f, y, b) {
        var P = b.selectedValue;
        l.push(gr('option'));
        var A = null,
          N = null,
          M = null,
          B = null;
        for (var ee in f)
          if (q.call(f, ee)) {
            var oe = f[ee];
            if (oe == null) continue;
            switch (ee) {
              case 'children':
                A = oe;
                break;
              case 'selected':
                (M = oe),
                  er ||
                    (s(
                      'Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.',
                    ),
                    (er = !0));
                break;
              case 'dangerouslySetInnerHTML':
                B = oe;
                break;
              case 'value':
                N = oe;
              default:
                Kt(l, y, ee, oe);
                break;
            }
          }
        if (P != null) {
          var _e;
          if (
            (N !== null
              ? (x(N, 'value'), (_e = '' + N))
              : (B !== null &&
                  (qi ||
                    ((qi = !0),
                    s(
                      'Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.',
                    ))),
                (_e = Gs(A))),
            kt(P))
          )
            for (var et = 0; et < P.length; et++) {
              x(P[et], 'value');
              var Rt = '' + P[et];
              if (Rt === _e) {
                l.push(Mi);
                break;
              }
            }
          else x(P, 'select.value'), '' + P === _e && l.push(Mi);
        } else M && l.push(Mi);
        return l.push(cn), Bs(l, B, A), A;
      }
      function Ko(l, f, y) {
        H('input', f),
          f.checked !== void 0 &&
            f.defaultChecked !== void 0 &&
            !Ws &&
            (s(
              '%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
              'A component',
              f.type,
            ),
            (Ws = !0)),
          f.value !== void 0 &&
            f.defaultValue !== void 0 &&
            !Un &&
            (s(
              '%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
              'A component',
              f.type,
            ),
            (Un = !0)),
          l.push(gr('input'));
        var b = null,
          P = null,
          A = null,
          N = null;
        for (var M in f)
          if (q.call(f, M)) {
            var B = f[M];
            if (B == null) continue;
            switch (M) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              case 'defaultChecked':
                N = B;
                break;
              case 'defaultValue':
                P = B;
                break;
              case 'checked':
                A = B;
                break;
              case 'value':
                b = B;
                break;
              default:
                Kt(l, y, M, B);
                break;
            }
          }
        return (
          A !== null
            ? Kt(l, y, 'checked', A)
            : N !== null && Kt(l, y, 'checked', N),
          b !== null
            ? Kt(l, y, 'value', b)
            : P !== null && Kt(l, y, 'value', P),
          l.push(Vs),
          null
        );
      }
      function yl(l, f, y) {
        H('textarea', f),
          f.value !== void 0 &&
            f.defaultValue !== void 0 &&
            !Vn &&
            (s(
              'Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components',
            ),
            (Vn = !0)),
          l.push(gr('textarea'));
        var b = null,
          P = null,
          A = null;
        for (var N in f)
          if (q.call(f, N)) {
            var M = f[N];
            if (M == null) continue;
            switch (N) {
              case 'children':
                A = M;
                break;
              case 'value':
                b = M;
                break;
              case 'defaultValue':
                P = M;
                break;
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  '`dangerouslySetInnerHTML` does not make sense on <textarea>.',
                );
              default:
                Kt(l, y, N, M);
                break;
            }
          }
        if ((b === null && P !== null && (b = P), l.push(cn), A != null)) {
          if (
            (s(
              'Use the `defaultValue` or `value` props instead of setting children on <textarea>.',
            ),
            b != null)
          )
            throw new Error(
              'If you supply `defaultValue` on a <textarea>, do not pass children.',
            );
          if (kt(A)) {
            if (A.length > 1)
              throw new Error('<textarea> can only have at most one child.');
            j(A[0]), (b = '' + A[0]);
          }
          j(A), (b = '' + A);
        }
        return (
          typeof b == 'string' &&
            b[0] ===
              `
` &&
            l.push(wn),
          b !== null && (x(b, 'value'), l.push(Hn('' + b))),
          null
        );
      }
      function gl(l, f, y, b) {
        l.push(gr(y));
        for (var P in f)
          if (q.call(f, P)) {
            var A = f[P];
            if (A == null) continue;
            switch (P) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  y +
                    ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              default:
                Kt(l, b, P, A);
                break;
            }
          }
        return l.push(Vs), null;
      }
      function vl(l, f, y) {
        l.push(gr('menuitem'));
        for (var b in f)
          if (q.call(f, b)) {
            var P = f[b];
            if (P == null) continue;
            switch (b) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.',
                );
              default:
                Kt(l, y, b, P);
                break;
            }
          }
        return l.push(cn), null;
      }
      function Xo(l, f, y) {
        l.push(gr('title'));
        var b = null;
        for (var P in f)
          if (q.call(f, P)) {
            var A = f[P];
            if (A == null) continue;
            switch (P) {
              case 'children':
                b = A;
                break;
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  '`dangerouslySetInnerHTML` does not make sense on <title>.',
                );
              default:
                Kt(l, y, P, A);
                break;
            }
          }
        l.push(cn);
        {
          var N = Array.isArray(b) && b.length < 2 ? b[0] || null : b;
          Array.isArray(b) && b.length > 1
            ? s(
                'A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering',
              )
            : N != null && N.$$typeof != null
              ? s(
                  'A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering',
                )
              : N != null &&
                typeof N != 'string' &&
                typeof N != 'number' &&
                s(
                  'A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering',
                );
        }
        return b;
      }
      function Bn(l, f, y, b) {
        l.push(gr(y));
        var P = null,
          A = null;
        for (var N in f)
          if (q.call(f, N)) {
            var M = f[N];
            if (M == null) continue;
            switch (N) {
              case 'children':
                P = M;
                break;
              case 'dangerouslySetInnerHTML':
                A = M;
                break;
              default:
                Kt(l, b, N, M);
                break;
            }
          }
        return (
          l.push(cn),
          Bs(l, A, P),
          typeof P == 'string' ? (l.push(Hn(P)), null) : P
        );
      }
      function Nc(l, f, y, b) {
        l.push(gr(y));
        var P = null,
          A = null;
        for (var N in f)
          if (q.call(f, N)) {
            var M = f[N];
            if (M == null) continue;
            switch (N) {
              case 'children':
                P = M;
                break;
              case 'dangerouslySetInnerHTML':
                A = M;
                break;
              case 'style':
                ml(l, b, M);
                break;
              case 'suppressContentEditableWarning':
              case 'suppressHydrationWarning':
                break;
              default:
                re(N) &&
                  typeof M != 'function' &&
                  typeof M != 'symbol' &&
                  l.push(Or, N, zn, Ze(M), Sn);
                break;
            }
          }
        return l.push(cn), Bs(l, A, P), P;
      }
      var wn = `
`;
      function Hi(l, f, y, b) {
        l.push(gr(y));
        var P = null,
          A = null;
        for (var N in f)
          if (q.call(f, N)) {
            var M = f[N];
            if (M == null) continue;
            switch (N) {
              case 'children':
                P = M;
                break;
              case 'dangerouslySetInnerHTML':
                A = M;
                break;
              default:
                Kt(l, b, N, M);
                break;
            }
          }
        if ((l.push(cn), A != null)) {
          if (P != null)
            throw new Error(
              'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
            );
          if (typeof A != 'object' || !('__html' in A))
            throw new Error(
              '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
            );
          var B = A.__html;
          B != null &&
            (typeof B == 'string' &&
            B.length > 0 &&
            B[0] ===
              `
`
              ? l.push(wn, B)
              : (j(B), l.push('' + B)));
        }
        return (
          typeof P == 'string' &&
            P[0] ===
              `
` &&
            l.push(wn),
          P
        );
      }
      var bl = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
        Ys = new Map();
      function gr(l) {
        var f = Ys.get(l);
        if (f === void 0) {
          if (!bl.test(l)) throw new Error('Invalid tag: ' + l);
          (f = '<' + l), Ys.set(l, f);
        }
        return f;
      }
      var Zo = '<!DOCTYPE html>';
      function Qo(l, f, y, b, P) {
        switch (
          (tt(f, y),
          Ho(f, y),
          Oi(f, y, null),
          !y.suppressContentEditableWarning &&
            y.contentEditable &&
            y.children != null &&
            s(
              'A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.',
            ),
          P.insertionMode !== $i &&
            P.insertionMode !== Ni &&
            f.indexOf('-') === -1 &&
            typeof y.is != 'string' &&
            f.toLowerCase() !== f &&
            s(
              '<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.',
              f,
            ),
          f)
        ) {
          case 'select':
            return Yo(l, y, b);
          case 'option':
            return Jo(l, y, b, P);
          case 'textarea':
            return yl(l, y, b);
          case 'input':
            return Ko(l, y, b);
          case 'menuitem':
            return vl(l, y, b);
          case 'title':
            return Xo(l, y, b);
          case 'listing':
          case 'pre':
            return Hi(l, y, f, b);
          case 'area':
          case 'base':
          case 'br':
          case 'col':
          case 'embed':
          case 'hr':
          case 'img':
          case 'keygen':
          case 'link':
          case 'meta':
          case 'param':
          case 'source':
          case 'track':
          case 'wbr':
            return gl(l, y, f, b);
          case 'annotation-xml':
          case 'color-profile':
          case 'font-face':
          case 'font-face-src':
          case 'font-face-uri':
          case 'font-face-format':
          case 'font-face-name':
          case 'missing-glyph':
            return Bn(l, y, f, b);
          case 'html':
            return P.insertionMode === Ai && l.push(Zo), Bn(l, y, f, b);
          default:
            return f.indexOf('-') === -1 && typeof y.is != 'string'
              ? Bn(l, y, f, b)
              : Nc(l, y, f, b);
        }
      }
      var Lc = '</',
        ea = '>';
      function Dc(l, f, y) {
        switch (f) {
          case 'area':
          case 'base':
          case 'br':
          case 'col':
          case 'embed':
          case 'hr':
          case 'img':
          case 'input':
          case 'keygen':
          case 'link':
          case 'meta':
          case 'param':
          case 'source':
          case 'track':
          case 'wbr':
            break;
          default:
            l.push(Lc, f, ea);
        }
      }
      function ta(l, f) {
        for (var y = f.bootstrapChunks, b = 0; b < y.length - 1; b++)
          c(l, y[b]);
        return b < y.length ? d(l, y[b]) : !0;
      }
      var k = '<template id="',
        L = '"></template>';
      function z(l, f, y) {
        c(l, k), c(l, f.placeholderPrefix);
        var b = y.toString(16);
        return c(l, b), d(l, L);
      }
      var V = '<!--$-->',
        Z = '<!--$?--><template id="',
        Se = '"></template>',
        fe = '<!--$!-->',
        we = '<!--/$-->',
        $e = '<template',
        Be = '"',
        nt = ' data-dgst="',
        st = ' data-msg="',
        ot = ' data-stck="',
        Et = '></template>';
      function Nt(l, f) {
        return d(l, V);
      }
      function Js(l, f, y) {
        if ((c(l, Z), y === null))
          throw new Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        return c(l, y), d(l, Se);
      }
      function ra(l, f, y, b, P) {
        var A;
        return (
          (A = d(l, fe)),
          c(l, $e),
          y && (c(l, nt), c(l, Ze(y)), c(l, Be)),
          b && (c(l, st), c(l, Ze(b)), c(l, Be)),
          P && (c(l, ot), c(l, Ze(P)), c(l, Be)),
          (A = d(l, Et)),
          A
        );
      }
      function zi(l, f) {
        return d(l, we);
      }
      function Sl(l, f) {
        return d(l, we);
      }
      function Ui(l, f) {
        return d(l, we);
      }
      var jc = '<div hidden id="',
        _l = '">',
        Fc = '</div>',
        lv = '<svg aria-hidden="true" style="display:none" id="',
        uv = '">',
        Ih = '</svg>',
        cv = '<math aria-hidden="true" style="display:none" id="',
        fv = '">',
        Ah = '</math>',
        dv = '<table hidden id="',
        hv = '">',
        pv = '</table>',
        mv = '<table hidden><tbody id="',
        yv = '">',
        gv = '</tbody></table>',
        vv = '<table hidden><tr id="',
        bv = '">',
        Sv = '</tr></table>',
        _v = '<table hidden><colgroup id="',
        wv = '">',
        Ev = '</colgroup></table>';
      function Rv(l, f, y, b) {
        switch (y.insertionMode) {
          case Ai:
          case Fn:
            return (
              c(l, jc), c(l, f.segmentPrefix), c(l, b.toString(16)), d(l, _l)
            );
          case $i:
            return (
              c(l, lv), c(l, f.segmentPrefix), c(l, b.toString(16)), d(l, uv)
            );
          case Ni:
            return (
              c(l, cv), c(l, f.segmentPrefix), c(l, b.toString(16)), d(l, fv)
            );
          case zs:
            return (
              c(l, dv), c(l, f.segmentPrefix), c(l, b.toString(16)), d(l, hv)
            );
          case Vo:
            return (
              c(l, mv), c(l, f.segmentPrefix), c(l, b.toString(16)), d(l, yv)
            );
          case qn:
            return (
              c(l, vv), c(l, f.segmentPrefix), c(l, b.toString(16)), d(l, bv)
            );
          case Li:
            return (
              c(l, _v), c(l, f.segmentPrefix), c(l, b.toString(16)), d(l, wv)
            );
          default:
            throw new Error('Unknown insertion mode. This is a bug in React.');
        }
      }
      function Tv(l, f) {
        switch (f.insertionMode) {
          case Ai:
          case Fn:
            return d(l, Fc);
          case $i:
            return d(l, Ih);
          case Ni:
            return d(l, Ah);
          case zs:
            return d(l, pv);
          case Vo:
            return d(l, gv);
          case qn:
            return d(l, Sv);
          case Li:
            return d(l, Ev);
          default:
            throw new Error('Unknown insertion mode. This is a bug in React.');
        }
      }
      var Pv =
          'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}',
        kv =
          'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}',
        xv =
          'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}',
        Cv = Pv + ';$RS("',
        Ov = '$RS("',
        Iv = '","',
        Av = '")</script>';
      function $v(l, f, y) {
        c(l, f.startInlineScript),
          f.sentCompleteSegmentFunction
            ? c(l, Ov)
            : ((f.sentCompleteSegmentFunction = !0), c(l, Cv)),
          c(l, f.segmentPrefix);
        var b = y.toString(16);
        return c(l, b), c(l, Iv), c(l, f.placeholderPrefix), c(l, b), d(l, Av);
      }
      var Nv = kv + ';$RC("',
        Lv = '$RC("',
        Dv = '","',
        jv = '")</script>';
      function Fv(l, f, y, b) {
        if (
          (c(l, f.startInlineScript),
          f.sentCompleteBoundaryFunction
            ? c(l, Lv)
            : ((f.sentCompleteBoundaryFunction = !0), c(l, Nv)),
          y === null)
        )
          throw new Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        var P = b.toString(16);
        return c(l, y), c(l, Dv), c(l, f.segmentPrefix), c(l, P), d(l, jv);
      }
      var qv = xv + ';$RX("',
        Mv = '$RX("',
        Hv = '"',
        zv = ')</script>',
        qc = ',';
      function Uv(l, f, y, b, P, A) {
        if (
          (c(l, f.startInlineScript),
          f.sentClientRenderFunction
            ? c(l, Mv)
            : ((f.sentClientRenderFunction = !0), c(l, qv)),
          y === null)
        )
          throw new Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        return (
          c(l, y),
          c(l, Hv),
          (b || P || A) && (c(l, qc), c(l, Mc(b || ''))),
          (P || A) && (c(l, qc), c(l, Mc(P || ''))),
          A && (c(l, qc), c(l, Mc(A))),
          d(l, zv)
        );
      }
      var Vv = /[<\u2028\u2029]/g;
      function Mc(l) {
        var f = JSON.stringify(l);
        return f.replace(Vv, function (y) {
          switch (y) {
            case '<':
              return '\\u003c';
            case '\u2028':
              return '\\u2028';
            case '\u2029':
              return '\\u2029';
            default:
              throw new Error(
                'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React',
              );
          }
        });
      }
      function $h(l, f) {
        var y = Hs(f, void 0);
        return {
          bootstrapChunks: y.bootstrapChunks,
          startInlineScript: y.startInlineScript,
          placeholderPrefix: y.placeholderPrefix,
          segmentPrefix: y.segmentPrefix,
          boundaryPrefix: y.boundaryPrefix,
          idPrefix: y.idPrefix,
          nextSuspenseID: y.nextSuspenseID,
          sentCompleteSegmentFunction: y.sentCompleteSegmentFunction,
          sentCompleteBoundaryFunction: y.sentCompleteBoundaryFunction,
          sentClientRenderFunction: y.sentClientRenderFunction,
          generateStaticMarkup: l,
        };
      }
      function Nh() {
        return { insertionMode: Fn, selectedValue: null };
      }
      function Lh(l, f, y, b) {
        return y.generateStaticMarkup ? (l.push(Ze(f)), !1) : Bo(l, f, y, b);
      }
      function Dh(l, f, y, b) {
        if (!f.generateStaticMarkup) return Wo(l, f, y, b);
      }
      function Bv(l, f) {
        return f.generateStaticMarkup ? !0 : Nt(l);
      }
      function Wv(l, f, y, b, P) {
        return f.generateStaticMarkup ? !0 : ra(l, f, y, b, P);
      }
      function Hc(l, f) {
        return f.generateStaticMarkup ? !0 : zi(l);
      }
      function Gv(l, f) {
        return f.generateStaticMarkup ? !0 : Ui(l);
      }
      var Kr = Object.assign,
        zc = Symbol.for('react.element'),
        Ir = Symbol.for('react.portal'),
        jh = Symbol.for('react.fragment'),
        Uc = Symbol.for('react.strict_mode'),
        Vc = Symbol.for('react.profiler'),
        wl = Symbol.for('react.provider'),
        El = Symbol.for('react.context'),
        na = Symbol.for('react.forward_ref'),
        sa = Symbol.for('react.suspense'),
        ia = Symbol.for('react.suspense_list'),
        oa = Symbol.for('react.memo'),
        Vi = Symbol.for('react.lazy'),
        Bc = Symbol.for('react.scope'),
        Rl = Symbol.for('react.debug_trace_mode'),
        Yv = Symbol.for('react.legacy_hidden'),
        Jv = Symbol.for('react.default_value'),
        Fh = Symbol.iterator,
        Kv = '@@iterator';
      function qh(l) {
        if (l === null || typeof l != 'object') return null;
        var f = (Fh && l[Fh]) || l[Kv];
        return typeof f == 'function' ? f : null;
      }
      function Xv(l, f, y) {
        var b = l.displayName;
        if (b) return b;
        var P = f.displayName || f.name || '';
        return P !== '' ? y + '(' + P + ')' : y;
      }
      function Mh(l) {
        return l.displayName || 'Context';
      }
      function ct(l) {
        if (l == null) return null;
        if (
          (typeof l.tag == 'number' &&
            s(
              'Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.',
            ),
          typeof l == 'function')
        )
          return l.displayName || l.name || null;
        if (typeof l == 'string') return l;
        switch (l) {
          case jh:
            return 'Fragment';
          case Ir:
            return 'Portal';
          case Vc:
            return 'Profiler';
          case Uc:
            return 'StrictMode';
          case sa:
            return 'Suspense';
          case ia:
            return 'SuspenseList';
        }
        if (typeof l == 'object')
          switch (l.$$typeof) {
            case El:
              var f = l;
              return Mh(f) + '.Consumer';
            case wl:
              var y = l;
              return Mh(y._context) + '.Provider';
            case na:
              return Xv(l, l.render, 'ForwardRef');
            case oa:
              var b = l.displayName || null;
              return b !== null ? b : ct(l.type) || 'Memo';
            case Vi: {
              var P = l,
                A = P._payload,
                N = P._init;
              try {
                return ct(N(A));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var Bi = 0,
        at,
        Wi,
        Wc,
        Gc,
        Yc,
        Jc,
        Kc;
      function Xc() {}
      Xc.__reactDisabledLog = !0;
      function Hh() {
        {
          if (Bi === 0) {
            (at = console.log),
              (Wi = console.info),
              (Wc = console.warn),
              (Gc = console.error),
              (Yc = console.group),
              (Jc = console.groupCollapsed),
              (Kc = console.groupEnd);
            var l = {
              configurable: !0,
              enumerable: !0,
              value: Xc,
              writable: !0,
            };
            Object.defineProperties(console, {
              info: l,
              log: l,
              warn: l,
              error: l,
              group: l,
              groupCollapsed: l,
              groupEnd: l,
            });
          }
          Bi++;
        }
      }
      function zh() {
        {
          if ((Bi--, Bi === 0)) {
            var l = { configurable: !0, enumerable: !0, writable: !0 };
            Object.defineProperties(console, {
              log: Kr({}, l, { value: at }),
              info: Kr({}, l, { value: Wi }),
              warn: Kr({}, l, { value: Wc }),
              error: Kr({}, l, { value: Gc }),
              group: Kr({}, l, { value: Yc }),
              groupCollapsed: Kr({}, l, { value: Jc }),
              groupEnd: Kr({}, l, { value: Kc }),
            });
          }
          Bi < 0 &&
            s(
              'disabledDepth fell below zero. This is a bug in React. Please file an issue.',
            );
        }
      }
      var Zc = n.ReactCurrentDispatcher,
        Qc;
      function Ks(l, f, y) {
        {
          if (Qc === void 0)
            try {
              throw Error();
            } catch (P) {
              var b = P.stack.trim().match(/\n( *(at )?)/);
              Qc = (b && b[1]) || '';
            }
          return (
            `
` +
            Qc +
            l
          );
        }
      }
      var aa = !1,
        fs;
      {
        var ef = typeof WeakMap == 'function' ? WeakMap : Map;
        fs = new ef();
      }
      function Gi(l, f) {
        if (!l || aa) return '';
        {
          var y = fs.get(l);
          if (y !== void 0) return y;
        }
        var b;
        aa = !0;
        var P = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var A;
        (A = Zc.current), (Zc.current = null), Hh();
        try {
          if (f) {
            var N = function () {
              throw Error();
            };
            if (
              (Object.defineProperty(N.prototype, 'props', {
                set: function () {
                  throw Error();
                },
              }),
              typeof Reflect == 'object' && Reflect.construct)
            ) {
              try {
                Reflect.construct(N, []);
              } catch (Lt) {
                b = Lt;
              }
              Reflect.construct(l, [], N);
            } else {
              try {
                N.call();
              } catch (Lt) {
                b = Lt;
              }
              l.call(N.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Lt) {
              b = Lt;
            }
            l();
          }
        } catch (Lt) {
          if (Lt && b && typeof Lt.stack == 'string') {
            for (
              var M = Lt.stack.split(`
`),
                B = b.stack.split(`
`),
                ee = M.length - 1,
                oe = B.length - 1;
              ee >= 1 && oe >= 0 && M[ee] !== B[oe];

            )
              oe--;
            for (; ee >= 1 && oe >= 0; ee--, oe--)
              if (M[ee] !== B[oe]) {
                if (ee !== 1 || oe !== 1)
                  do
                    if ((ee--, oe--, oe < 0 || M[ee] !== B[oe])) {
                      var _e =
                        `
` + M[ee].replace(' at new ', ' at ');
                      return (
                        l.displayName &&
                          _e.includes('<anonymous>') &&
                          (_e = _e.replace('<anonymous>', l.displayName)),
                        typeof l == 'function' && fs.set(l, _e),
                        _e
                      );
                    }
                  while (ee >= 1 && oe >= 0);
                break;
              }
          }
        } finally {
          (aa = !1), (Zc.current = A), zh(), (Error.prepareStackTrace = P);
        }
        var et = l ? l.displayName || l.name : '',
          Rt = et ? Ks(et) : '';
        return typeof l == 'function' && fs.set(l, Rt), Rt;
      }
      function Zv(l, f, y) {
        return Gi(l, !0);
      }
      function Tl(l, f, y) {
        return Gi(l, !1);
      }
      function Qv(l) {
        var f = l.prototype;
        return !!(f && f.isReactComponent);
      }
      function Pl(l, f, y) {
        if (l == null) return '';
        if (typeof l == 'function') return Gi(l, Qv(l));
        if (typeof l == 'string') return Ks(l);
        switch (l) {
          case sa:
            return Ks('Suspense');
          case ia:
            return Ks('SuspenseList');
        }
        if (typeof l == 'object')
          switch (l.$$typeof) {
            case na:
              return Tl(l.render);
            case oa:
              return Pl(l.type, f, y);
            case Vi: {
              var b = l,
                P = b._payload,
                A = b._init;
              try {
                return Pl(A(P), f, y);
              } catch {}
            }
          }
        return '';
      }
      var Uh = {},
        kl = n.ReactDebugCurrentFrame;
      function la(l) {
        if (l) {
          var f = l._owner,
            y = Pl(l.type, l._source, f ? f.type : null);
          kl.setExtraStackFrame(y);
        } else kl.setExtraStackFrame(null);
      }
      function tf(l, f, y, b, P) {
        {
          var A = Function.call.bind(q);
          for (var N in l)
            if (A(l, N)) {
              var M = void 0;
              try {
                if (typeof l[N] != 'function') {
                  var B = Error(
                    (b || 'React class') +
                      ': ' +
                      y +
                      ' type `' +
                      N +
                      '` is invalid; it must be a function, usually from the `prop-types` package, but received `' +
                      typeof l[N] +
                      '`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',
                  );
                  throw ((B.name = 'Invariant Violation'), B);
                }
                M = l[N](
                  f,
                  N,
                  b,
                  y,
                  null,
                  'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',
                );
              } catch (ee) {
                M = ee;
              }
              M &&
                !(M instanceof Error) &&
                (la(P),
                s(
                  '%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).',
                  b || 'React class',
                  y,
                  N,
                  typeof M,
                ),
                la(null)),
                M instanceof Error &&
                  !(M.message in Uh) &&
                  ((Uh[M.message] = !0),
                  la(P),
                  s('Failed %s type: %s', y, M.message),
                  la(null));
            }
        }
      }
      var Yi;
      Yi = {};
      var ua = {};
      Object.freeze(ua);
      function xl(l, f) {
        {
          var y = l.contextTypes;
          if (!y) return ua;
          var b = {};
          for (var P in y) b[P] = f[P];
          {
            var A = ct(l) || 'Unknown';
            tf(y, b, 'context', A);
          }
          return b;
        }
      }
      function Cl(l, f, y, b) {
        {
          if (typeof l.getChildContext != 'function') {
            {
              var P = ct(f) || 'Unknown';
              Yi[P] ||
                ((Yi[P] = !0),
                s(
                  '%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.',
                  P,
                  P,
                ));
            }
            return y;
          }
          var A = l.getChildContext();
          for (var N in A)
            if (!(N in b))
              throw new Error(
                (ct(f) || 'Unknown') +
                  '.getChildContext(): key "' +
                  N +
                  '" is not defined in childContextTypes.',
              );
          {
            var M = ct(f) || 'Unknown';
            tf(b, A, 'child context', M);
          }
          return Kr({}, y, A);
        }
      }
      var Ji;
      Ji = {};
      var e0 = null,
        fn = null;
      function rf(l) {
        l.context._currentValue2 = l.parentValue;
      }
      function Wn(l) {
        l.context._currentValue2 = l.value;
      }
      function Ki(l, f) {
        if (l !== f) {
          rf(l);
          var y = l.parent,
            b = f.parent;
          if (y === null) {
            if (b !== null)
              throw new Error(
                'The stacks must reach the root at the same time. This is a bug in React.',
              );
          } else {
            if (b === null)
              throw new Error(
                'The stacks must reach the root at the same time. This is a bug in React.',
              );
            Ki(y, b);
          }
          Wn(f);
        }
      }
      function Ol(l) {
        rf(l);
        var f = l.parent;
        f !== null && Ol(f);
      }
      function ca(l) {
        var f = l.parent;
        f !== null && ca(f), Wn(l);
      }
      function nf(l, f) {
        rf(l);
        var y = l.parent;
        if (y === null)
          throw new Error(
            'The depth must equal at least at zero before reaching the root. This is a bug in React.',
          );
        y.depth === f.depth ? Ki(y, f) : nf(y, f);
      }
      function sf(l, f) {
        var y = f.parent;
        if (y === null)
          throw new Error(
            'The depth must equal at least at zero before reaching the root. This is a bug in React.',
          );
        l.depth === y.depth ? Ki(l, y) : sf(l, y), Wn(f);
      }
      function fa(l) {
        var f = fn,
          y = l;
        f !== y &&
          (f === null
            ? ca(y)
            : y === null
              ? Ol(f)
              : f.depth === y.depth
                ? Ki(f, y)
                : f.depth > y.depth
                  ? nf(f, y)
                  : sf(f, y),
          (fn = y));
      }
      function Vh(l, f) {
        var y;
        (y = l._currentValue2),
          (l._currentValue2 = f),
          l._currentRenderer2 !== void 0 &&
            l._currentRenderer2 !== null &&
            l._currentRenderer2 !== Ji &&
            s(
              'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.',
            ),
          (l._currentRenderer2 = Ji);
        var b = fn,
          P = {
            parent: b,
            depth: b === null ? 0 : b.depth + 1,
            context: l,
            parentValue: y,
            value: f,
          };
        return (fn = P), P;
      }
      function Il(l) {
        var f = fn;
        if (f === null)
          throw new Error(
            'Tried to pop a Context at the root of the app. This is a bug in React.',
          );
        f.context !== l &&
          s(
            'The parent context is not the expected context. This is probably a bug in React.',
          );
        {
          var y = f.parentValue;
          y === Jv
            ? (f.context._currentValue2 = f.context._defaultValue)
            : (f.context._currentValue2 = y),
            l._currentRenderer2 !== void 0 &&
              l._currentRenderer2 !== null &&
              l._currentRenderer2 !== Ji &&
              s(
                'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.',
              ),
            (l._currentRenderer2 = Ji);
        }
        return (fn = f.parent);
      }
      function t0() {
        return fn;
      }
      function da(l) {
        var f = l._currentValue2;
        return f;
      }
      function of(l) {
        return l._reactInternals;
      }
      function ha(l, f) {
        l._reactInternals = f;
      }
      var Al = {},
        Bh = {},
        $l,
        Nl,
        pa,
        ma,
        Ll,
        Xi,
        Dl,
        Zi,
        ya;
      {
        ($l = new Set()),
          (Nl = new Set()),
          (pa = new Set()),
          (Dl = new Set()),
          (ma = new Set()),
          (Zi = new Set()),
          (ya = new Set());
        var jl = new Set();
        (Xi = function (l, f) {
          if (!(l === null || typeof l == 'function')) {
            var y = f + '_' + l;
            jl.has(y) ||
              (jl.add(y),
              s(
                '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.',
                f,
                l,
              ));
          }
        }),
          (Ll = function (l, f) {
            if (f === void 0) {
              var y = ct(l) || 'Component';
              ma.has(y) ||
                (ma.add(y),
                s(
                  '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.',
                  y,
                ));
            }
          });
      }
      function Fl(l, f) {
        {
          var y = l.constructor,
            b = (y && ct(y)) || 'ReactClass',
            P = b + '.' + f;
          if (Al[P]) return;
          s(
            `%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.

Please check the code for the %s component.`,
            f,
            f,
            b,
          ),
            (Al[P] = !0);
        }
      }
      var af = {
        isMounted: function (l) {
          return !1;
        },
        enqueueSetState: function (l, f, y) {
          var b = of(l);
          b.queue === null
            ? Fl(l, 'setState')
            : (b.queue.push(f), y != null && Xi(y, 'setState'));
        },
        enqueueReplaceState: function (l, f, y) {
          var b = of(l);
          (b.replace = !0), (b.queue = [f]), y != null && Xi(y, 'setState');
        },
        enqueueForceUpdate: function (l, f) {
          var y = of(l);
          y.queue === null
            ? Fl(l, 'forceUpdate')
            : f != null && Xi(f, 'setState');
        },
      };
      function Wh(l, f, y, b, P) {
        var A = y(P, b);
        Ll(f, A);
        var N = A == null ? b : Kr({}, b, A);
        return N;
      }
      function Gh(l, f, y) {
        var b = ua,
          P = l.contextType;
        if ('contextType' in l) {
          var A =
            P === null ||
            (P !== void 0 && P.$$typeof === El && P._context === void 0);
          if (!A && !ya.has(l)) {
            ya.add(l);
            var N = '';
            P === void 0
              ? (N =
                  ' However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.')
              : typeof P != 'object'
                ? (N = ' However, it is set to a ' + typeof P + '.')
                : P.$$typeof === wl
                  ? (N =
                      ' Did you accidentally pass the Context.Provider instead?')
                  : P._context !== void 0
                    ? (N =
                        ' Did you accidentally pass the Context.Consumer instead?')
                    : (N =
                        ' However, it is set to an object with keys {' +
                        Object.keys(P).join(', ') +
                        '}.'),
              s(
                '%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s',
                ct(l) || 'Component',
                N,
              );
          }
        }
        typeof P == 'object' && P !== null ? (b = da(P)) : (b = y);
        var M = new l(f, b);
        {
          if (
            typeof l.getDerivedStateFromProps == 'function' &&
            (M.state === null || M.state === void 0)
          ) {
            var B = ct(l) || 'Component';
            $l.has(B) ||
              ($l.add(B),
              s(
                '`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',
                B,
                M.state === null ? 'null' : 'undefined',
                B,
              ));
          }
          if (
            typeof l.getDerivedStateFromProps == 'function' ||
            typeof M.getSnapshotBeforeUpdate == 'function'
          ) {
            var ee = null,
              oe = null,
              _e = null;
            if (
              (typeof M.componentWillMount == 'function' &&
              M.componentWillMount.__suppressDeprecationWarning !== !0
                ? (ee = 'componentWillMount')
                : typeof M.UNSAFE_componentWillMount == 'function' &&
                  (ee = 'UNSAFE_componentWillMount'),
              typeof M.componentWillReceiveProps == 'function' &&
              M.componentWillReceiveProps.__suppressDeprecationWarning !== !0
                ? (oe = 'componentWillReceiveProps')
                : typeof M.UNSAFE_componentWillReceiveProps == 'function' &&
                  (oe = 'UNSAFE_componentWillReceiveProps'),
              typeof M.componentWillUpdate == 'function' &&
              M.componentWillUpdate.__suppressDeprecationWarning !== !0
                ? (_e = 'componentWillUpdate')
                : typeof M.UNSAFE_componentWillUpdate == 'function' &&
                  (_e = 'UNSAFE_componentWillUpdate'),
              ee !== null || oe !== null || _e !== null)
            ) {
              var et = ct(l) || 'Component',
                Rt =
                  typeof l.getDerivedStateFromProps == 'function'
                    ? 'getDerivedStateFromProps()'
                    : 'getSnapshotBeforeUpdate()';
              pa.has(et) ||
                (pa.add(et),
                s(
                  `Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`,
                  et,
                  Rt,
                  ee !== null
                    ? `
  ` + ee
                    : '',
                  oe !== null
                    ? `
  ` + oe
                    : '',
                  _e !== null
                    ? `
  ` + _e
                    : '',
                ));
            }
          }
        }
        return M;
      }
      function r0(l, f, y) {
        {
          var b = ct(f) || 'Component',
            P = l.render;
          P ||
            (f.prototype && typeof f.prototype.render == 'function'
              ? s(
                  '%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?',
                  b,
                )
              : s(
                  '%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.',
                  b,
                )),
            l.getInitialState &&
              !l.getInitialState.isReactClassApproved &&
              !l.state &&
              s(
                'getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?',
                b,
              ),
            l.getDefaultProps &&
              !l.getDefaultProps.isReactClassApproved &&
              s(
                'getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.',
                b,
              ),
            l.propTypes &&
              s(
                'propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.',
                b,
              ),
            l.contextType &&
              s(
                'contextType was defined as an instance property on %s. Use a static property to define contextType instead.',
                b,
              ),
            l.contextTypes &&
              s(
                'contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.',
                b,
              ),
            f.contextType &&
              f.contextTypes &&
              !Zi.has(f) &&
              (Zi.add(f),
              s(
                '%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.',
                b,
              )),
            typeof l.componentShouldUpdate == 'function' &&
              s(
                '%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.',
                b,
              ),
            f.prototype &&
              f.prototype.isPureReactComponent &&
              typeof l.shouldComponentUpdate < 'u' &&
              s(
                '%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.',
                ct(f) || 'A pure component',
              ),
            typeof l.componentDidUnmount == 'function' &&
              s(
                '%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?',
                b,
              ),
            typeof l.componentDidReceiveProps == 'function' &&
              s(
                '%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().',
                b,
              ),
            typeof l.componentWillRecieveProps == 'function' &&
              s(
                '%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                b,
              ),
            typeof l.UNSAFE_componentWillRecieveProps == 'function' &&
              s(
                '%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',
                b,
              );
          var A = l.props !== y;
          l.props !== void 0 &&
            A &&
            s(
              "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.",
              b,
              b,
            ),
            l.defaultProps &&
              s(
                'Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.',
                b,
                b,
              ),
            typeof l.getSnapshotBeforeUpdate == 'function' &&
              typeof l.componentDidUpdate != 'function' &&
              !Nl.has(f) &&
              (Nl.add(f),
              s(
                '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.',
                ct(f),
              )),
            typeof l.getDerivedStateFromProps == 'function' &&
              s(
                '%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                b,
              ),
            typeof l.getDerivedStateFromError == 'function' &&
              s(
                '%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                b,
              ),
            typeof f.getSnapshotBeforeUpdate == 'function' &&
              s(
                '%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.',
                b,
              );
          var N = l.state;
          N &&
            (typeof N != 'object' || kt(N)) &&
            s('%s.state: must be set to an object or null', b),
            typeof l.getChildContext == 'function' &&
              typeof f.childContextTypes != 'object' &&
              s(
                '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().',
                b,
              );
        }
      }
      function n0(l, f) {
        var y = f.state;
        if (typeof f.componentWillMount == 'function') {
          if (f.componentWillMount.__suppressDeprecationWarning !== !0) {
            var b = ct(l) || 'Unknown';
            Bh[b] ||
              (i(
                `componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.

Please update the following components: %s`,
                b,
              ),
              (Bh[b] = !0));
          }
          f.componentWillMount();
        }
        typeof f.UNSAFE_componentWillMount == 'function' &&
          f.UNSAFE_componentWillMount(),
          y !== f.state &&
            (s(
              "%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.",
              ct(l) || 'Component',
            ),
            af.enqueueReplaceState(f, f.state, null));
      }
      function s0(l, f, y, b) {
        if (l.queue !== null && l.queue.length > 0) {
          var P = l.queue,
            A = l.replace;
          if (((l.queue = null), (l.replace = !1), A && P.length === 1))
            f.state = P[0];
          else {
            for (
              var N = A ? P[0] : f.state, M = !0, B = A ? 1 : 0;
              B < P.length;
              B++
            ) {
              var ee = P[B],
                oe = typeof ee == 'function' ? ee.call(f, N, y, b) : ee;
              oe != null && (M ? ((M = !1), (N = Kr({}, N, oe))) : Kr(N, oe));
            }
            f.state = N;
          }
        } else l.queue = null;
      }
      function Yh(l, f, y, b) {
        r0(l, f, y);
        var P = l.state !== void 0 ? l.state : null;
        (l.updater = af), (l.props = y), (l.state = P);
        var A = { queue: [], replace: !1 };
        ha(l, A);
        var N = f.contextType;
        if (
          (typeof N == 'object' && N !== null
            ? (l.context = da(N))
            : (l.context = b),
          l.state === y)
        ) {
          var M = ct(f) || 'Component';
          Dl.has(M) ||
            (Dl.add(M),
            s(
              "%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.",
              M,
            ));
        }
        var B = f.getDerivedStateFromProps;
        typeof B == 'function' && (l.state = Wh(l, f, B, P, y)),
          typeof f.getDerivedStateFromProps != 'function' &&
            typeof l.getSnapshotBeforeUpdate != 'function' &&
            (typeof l.UNSAFE_componentWillMount == 'function' ||
              typeof l.componentWillMount == 'function') &&
            (n0(f, l), s0(A, l, y, b));
      }
      var i0 = { id: 1, overflow: '' };
      function Jh(l) {
        var f = l.overflow,
          y = l.id,
          b = y & ~uf(y);
        return b.toString(32) + f;
      }
      function lf(l, f, y) {
        var b = l.id,
          P = l.overflow,
          A = ql(b) - 1,
          N = b & ~(1 << A),
          M = y + 1,
          B = ql(f) + A;
        if (B > 30) {
          var ee = A - (A % 5),
            oe = (1 << ee) - 1,
            _e = (N & oe).toString(32),
            et = N >> ee,
            Rt = A - ee,
            Lt = ql(f) + Rt,
            eu = M << Rt,
            tu = eu | et,
            Sp = _e + P;
          return { id: (1 << Lt) | tu, overflow: Sp };
        } else {
          var ru = M << A,
            zz = ru | N,
            Uz = P;
          return { id: (1 << B) | zz, overflow: Uz };
        }
      }
      function ql(l) {
        return 32 - Ml(l);
      }
      function uf(l) {
        return 1 << (ql(l) - 1);
      }
      var Ml = Math.clz32 ? Math.clz32 : l0,
        o0 = Math.log,
        a0 = Math.LN2;
      function l0(l) {
        var f = l >>> 0;
        return f === 0 ? 32 : (31 - ((o0(f) / a0) | 0)) | 0;
      }
      function u0(l, f) {
        return (
          (l === f && (l !== 0 || 1 / l === 1 / f)) || (l !== l && f !== f)
        );
      }
      var c0 = typeof Object.is == 'function' ? Object.is : u0,
        Gn = null,
        cf = null,
        Xr = null,
        Qe = null,
        ds = !1,
        Je = !1,
        hs = 0,
        dn = null,
        Xs = 0,
        ps = 25,
        Ar = !1,
        Qi;
      function tr() {
        if (Gn === null)
          throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
        return (
          Ar &&
            s(
              'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks',
            ),
          Gn
        );
      }
      function eo(l, f) {
        if (f === null)
          return (
            s(
              '%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.',
              Qi,
            ),
            !1
          );
        l.length !== f.length &&
          s(
            `The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`,
            Qi,
            '[' + l.join(', ') + ']',
            '[' + f.join(', ') + ']',
          );
        for (var y = 0; y < f.length && y < l.length; y++)
          if (!c0(l[y], f[y])) return !1;
        return !0;
      }
      function ms() {
        if (Xs > 0)
          throw new Error(
            'Rendered more hooks than during the previous render',
          );
        return { memoizedState: null, queue: null, next: null };
      }
      function ff() {
        return (
          Qe === null
            ? Xr === null
              ? ((ds = !1), (Xr = Qe = ms()))
              : ((ds = !0), (Qe = Xr))
            : Qe.next === null
              ? ((ds = !1), (Qe = Qe.next = ms()))
              : ((ds = !0), (Qe = Qe.next)),
          Qe
        );
      }
      function Kh(l, f) {
        (Gn = f), (cf = l), (Ar = !1), (hs = 0);
      }
      function df(l, f, y, b) {
        for (; Je; ) (Je = !1), (hs = 0), (Xs += 1), (Qe = null), (y = l(f, b));
        return hf(), y;
      }
      function Xh() {
        var l = hs !== 0;
        return l;
      }
      function hf() {
        (Ar = !1),
          (Gn = null),
          (cf = null),
          (Je = !1),
          (Xr = null),
          (Xs = 0),
          (dn = null),
          (Qe = null);
      }
      function Zh(l) {
        return (
          Ar &&
            s(
              'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().',
            ),
          da(l)
        );
      }
      function pf(l) {
        return (Qi = 'useContext'), tr(), da(l);
      }
      function mf(l, f) {
        return typeof f == 'function' ? f(l) : f;
      }
      function f0(l) {
        return (Qi = 'useState'), Hl(mf, l);
      }
      function Hl(l, f, y) {
        if ((l !== mf && (Qi = 'useReducer'), (Gn = tr()), (Qe = ff()), ds)) {
          var b = Qe.queue,
            P = b.dispatch;
          if (dn !== null) {
            var A = dn.get(b);
            if (A !== void 0) {
              dn.delete(b);
              var N = Qe.memoizedState,
                M = A;
              do {
                var B = M.action;
                (Ar = !0), (N = l(N, B)), (Ar = !1), (M = M.next);
              } while (M !== null);
              return (Qe.memoizedState = N), [N, P];
            }
          }
          return [Qe.memoizedState, P];
        } else {
          Ar = !0;
          var ee;
          l === mf
            ? (ee = typeof f == 'function' ? f() : f)
            : (ee = y !== void 0 ? y(f) : f),
            (Ar = !1),
            (Qe.memoizedState = ee);
          var oe = (Qe.queue = { last: null, dispatch: null }),
            _e = (oe.dispatch = d0.bind(null, Gn, oe));
          return [Qe.memoizedState, _e];
        }
      }
      function Qh(l, f) {
        (Gn = tr()), (Qe = ff());
        var y = f === void 0 ? null : f;
        if (Qe !== null) {
          var b = Qe.memoizedState;
          if (b !== null && y !== null) {
            var P = b[1];
            if (eo(y, P)) return b[0];
          }
        }
        Ar = !0;
        var A = l();
        return (Ar = !1), (Qe.memoizedState = [A, y]), A;
      }
      function ep(l) {
        (Gn = tr()), (Qe = ff());
        var f = Qe.memoizedState;
        if (f === null) {
          var y = { current: l };
          return Object.seal(y), (Qe.memoizedState = y), y;
        } else return f;
      }
      function tp(l, f) {
        (Qi = 'useLayoutEffect'),
          s(
            "useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.",
          );
      }
      function d0(l, f, y) {
        if (Xs >= ps)
          throw new Error(
            'Too many re-renders. React limits the number of renders to prevent an infinite loop.',
          );
        if (l === Gn) {
          Je = !0;
          var b = { action: y, next: null };
          dn === null && (dn = new Map());
          var P = dn.get(f);
          if (P === void 0) dn.set(f, b);
          else {
            for (var A = P; A.next !== null; ) A = A.next;
            A.next = b;
          }
        }
      }
      function h0(l, f) {
        return Qh(function () {
          return l;
        }, f);
      }
      function p0(l, f, y) {
        return tr(), f(l._source);
      }
      function m0(l, f, y) {
        if (y === void 0)
          throw new Error(
            'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.',
          );
        return y();
      }
      function y0(l) {
        return tr(), l;
      }
      function g0() {
        throw new Error(
          'startTransition cannot be called during server rendering.',
        );
      }
      function v0() {
        return tr(), [!1, g0];
      }
      function b0() {
        var l = cf,
          f = Jh(l.treeContext),
          y = to;
        if (y === null)
          throw new Error(
            'Invalid hook call. Hooks can only be called inside of the body of a function component.',
          );
        var b = hs++;
        return us(y, f, b);
      }
      function zl() {}
      var rp = {
          readContext: Zh,
          useContext: pf,
          useMemo: Qh,
          useReducer: Hl,
          useRef: ep,
          useState: f0,
          useInsertionEffect: zl,
          useLayoutEffect: tp,
          useCallback: h0,
          useImperativeHandle: zl,
          useEffect: zl,
          useDebugValue: zl,
          useDeferredValue: y0,
          useTransition: v0,
          useId: b0,
          useMutableSource: p0,
          useSyncExternalStore: m0,
        },
        to = null;
      function yf(l) {
        to = l;
      }
      function gf(l) {
        try {
          var f = '',
            y = l;
          do {
            switch (y.tag) {
              case 0:
                f += Ks(y.type, null, null);
                break;
              case 1:
                f += Tl(y.type, null, null);
                break;
              case 2:
                f += Zv(y.type, null, null);
                break;
            }
            y = y.parent;
          } while (y);
          return f;
        } catch (b) {
          return (
            `
Error generating stack: ` +
            b.message +
            `
` +
            b.stack
          );
        }
      }
      var Ul = n.ReactCurrentDispatcher,
        vf = n.ReactDebugCurrentFrame,
        ga = 0,
        ys = 1,
        Vl = 2,
        Zs = 3,
        bf = 4,
        np = 0,
        Sf = 1,
        ro = 2,
        sp = 12800;
      function no(l) {
        return console.error(l), null;
      }
      function va() {}
      function ip(l, f, y, b, P, A, N, M, B) {
        var ee = [],
          oe = new Set(),
          _e = {
            destination: null,
            responseState: f,
            progressiveChunkSize: b === void 0 ? sp : b,
            status: np,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: oe,
            pingedTasks: ee,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: P === void 0 ? no : P,
            onAllReady: A === void 0 ? va : A,
            onShellReady: N === void 0 ? va : N,
            onShellError: M === void 0 ? va : M,
            onFatalError: B === void 0 ? va : B,
          },
          et = Bl(_e, 0, null, y, !1, !1);
        et.parentFlushed = !0;
        var Rt = _f(_e, l, null, et, oe, ua, e0, i0);
        return ee.push(Rt), _e;
      }
      function ba(l, f) {
        var y = l.pingedTasks;
        y.push(f),
          y.length === 1 &&
            a(function () {
              return Af(l);
            });
      }
      function S0(l, f) {
        return {
          id: Mn,
          rootSegmentID: -1,
          parentFlushed: !1,
          pendingTasks: 0,
          forceClientRender: !1,
          completedSegments: [],
          byteSize: 0,
          fallbackAbortableTasks: f,
          errorDigest: null,
        };
      }
      function _f(l, f, y, b, P, A, N, M) {
        l.allPendingTasks++,
          y === null ? l.pendingRootTasks++ : y.pendingTasks++;
        var B = {
          node: f,
          ping: function () {
            return ba(l, B);
          },
          blockedBoundary: y,
          blockedSegment: b,
          abortSet: P,
          legacyContext: A,
          context: N,
          treeContext: M,
        };
        return (B.componentStack = null), P.add(B), B;
      }
      function Bl(l, f, y, b, P, A) {
        return {
          status: ga,
          id: -1,
          index: f,
          parentFlushed: !1,
          chunks: [],
          children: [],
          formatContext: b,
          boundary: y,
          lastPushedText: P,
          textEmbedded: A,
        };
      }
      var hn = null;
      function so() {
        return hn === null || hn.componentStack === null
          ? ''
          : gf(hn.componentStack);
      }
      function $r(l, f) {
        l.componentStack = { tag: 0, parent: l.componentStack, type: f };
      }
      function Wl(l, f) {
        l.componentStack = { tag: 1, parent: l.componentStack, type: f };
      }
      function Sa(l, f) {
        l.componentStack = { tag: 2, parent: l.componentStack, type: f };
      }
      function Yn(l) {
        l.componentStack === null
          ? s(
              'Unexpectedly popped too many stack frames. This is a bug in React.',
            )
          : (l.componentStack = l.componentStack.parent);
      }
      var _a = null;
      function En(l, f) {
        {
          var y;
          typeof f == 'string'
            ? (y = f)
            : f && typeof f.message == 'string'
              ? (y = f.message)
              : (y = String(f));
          var b = _a || so();
          (_a = null), (l.errorMessage = y), (l.errorComponentStack = b);
        }
      }
      function Jn(l, f) {
        var y = l.onError(f);
        if (y != null && typeof y != 'string')
          throw new Error(
            'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
              typeof y +
              '" instead',
          );
        return y;
      }
      function io(l, f) {
        var y = l.onShellError;
        y(f);
        var b = l.onFatalError;
        b(f),
          l.destination !== null
            ? ((l.status = ro), w(l.destination, f))
            : ((l.status = Sf), (l.fatalError = f));
      }
      function wa(l, f, y) {
        $r(f, 'Suspense');
        var b = f.blockedBoundary,
          P = f.blockedSegment,
          A = y.fallback,
          N = y.children,
          M = new Set(),
          B = S0(l, M),
          ee = P.chunks.length,
          oe = Bl(l, ee, B, P.formatContext, !1, !1);
        P.children.push(oe), (P.lastPushedText = !1);
        var _e = Bl(l, 0, null, P.formatContext, !1, !1);
        (_e.parentFlushed = !0),
          (f.blockedBoundary = B),
          (f.blockedSegment = _e);
        try {
          if (
            (Jl(l, f, N),
            Dh(_e.chunks, l.responseState, _e.lastPushedText, _e.textEmbedded),
            (_e.status = ys),
            Kl(B, _e),
            B.pendingTasks === 0)
          ) {
            Yn(f);
            return;
          }
        } catch (Rt) {
          (_e.status = bf),
            (B.forceClientRender = !0),
            (B.errorDigest = Jn(l, Rt)),
            En(B, Rt);
        } finally {
          (f.blockedBoundary = b), (f.blockedSegment = P);
        }
        var et = _f(l, A, b, oe, M, f.legacyContext, f.context, f.treeContext);
        (et.componentStack = f.componentStack), l.pingedTasks.push(et), Yn(f);
      }
      function Gl(l, f, y, b) {
        $r(f, y);
        var P = f.blockedSegment,
          A = Qo(P.chunks, y, b, l.responseState, P.formatContext);
        P.lastPushedText = !1;
        var N = P.formatContext;
        (P.formatContext = as(N, y, b)),
          Jl(l, f, A),
          (P.formatContext = N),
          Dc(P.chunks, y),
          (P.lastPushedText = !1),
          Yn(f);
      }
      function _0(l) {
        return l.prototype && l.prototype.isReactComponent;
      }
      function op(l, f, y, b, P) {
        var A = {};
        Kh(f, A);
        var N = y(b, P);
        return df(y, b, N, P);
      }
      function ap(l, f, y, b, P) {
        var A = y.render();
        y.props !== P &&
          (Rf ||
            s(
              'It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.',
              ct(b) || 'a component',
            ),
          (Rf = !0));
        {
          var N = b.childContextTypes;
          if (N != null) {
            var M = f.legacyContext,
              B = Cl(y, b, M, N);
            (f.legacyContext = B), ir(l, f, A), (f.legacyContext = M);
            return;
          }
        }
        ir(l, f, A);
      }
      function lp(l, f, y, b) {
        Sa(f, y);
        var P = xl(y, f.legacyContext),
          A = Gh(y, b, P);
        Yh(A, y, b, P), ap(l, f, A, y, b), Yn(f);
      }
      var wf = {},
        Yl = {},
        Ef = {},
        Ea = {},
        Rf = !1,
        Tf = {},
        Pf = !1,
        kf = !1,
        xf = !1;
      function up(l, f, y, b) {
        var P;
        if (
          ((P = xl(y, f.legacyContext)),
          Wl(f, y),
          y.prototype && typeof y.prototype.render == 'function')
        ) {
          var A = ct(y) || 'Unknown';
          wf[A] ||
            (s(
              "The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.",
              A,
              A,
            ),
            (wf[A] = !0));
        }
        var N = op(l, f, y, b, P),
          M = Xh();
        if (
          typeof N == 'object' &&
          N !== null &&
          typeof N.render == 'function' &&
          N.$$typeof === void 0
        ) {
          var B = ct(y) || 'Unknown';
          Yl[B] ||
            (s(
              "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
              B,
              B,
              B,
            ),
            (Yl[B] = !0));
        }
        if (
          typeof N == 'object' &&
          N !== null &&
          typeof N.render == 'function' &&
          N.$$typeof === void 0
        ) {
          {
            var ee = ct(y) || 'Unknown';
            Yl[ee] ||
              (s(
                "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
                ee,
                ee,
                ee,
              ),
              (Yl[ee] = !0));
          }
          Yh(N, y, b, P), ap(l, f, N, y, b);
        } else if ((cp(y), M)) {
          var oe = f.treeContext,
            _e = 1,
            et = 0;
          f.treeContext = lf(oe, _e, et);
          try {
            ir(l, f, N);
          } finally {
            f.treeContext = oe;
          }
        } else ir(l, f, N);
        Yn(f);
      }
      function cp(l) {
        {
          if (
            (l &&
              l.childContextTypes &&
              s(
                '%s(...): childContextTypes cannot be defined on a function component.',
                l.displayName || l.name || 'Component',
              ),
            l.defaultProps !== void 0)
          ) {
            var f = ct(l) || 'Unknown';
            Tf[f] ||
              (s(
                '%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.',
                f,
              ),
              (Tf[f] = !0));
          }
          if (typeof l.getDerivedStateFromProps == 'function') {
            var y = ct(l) || 'Unknown';
            Ea[y] ||
              (s(
                '%s: Function components do not support getDerivedStateFromProps.',
                y,
              ),
              (Ea[y] = !0));
          }
          if (typeof l.contextType == 'object' && l.contextType !== null) {
            var b = ct(l) || 'Unknown';
            Ef[b] ||
              (s('%s: Function components do not support contextType.', b),
              (Ef[b] = !0));
          }
        }
      }
      function fp(l, f) {
        if (l && l.defaultProps) {
          var y = Kr({}, f),
            b = l.defaultProps;
          for (var P in b) y[P] === void 0 && (y[P] = b[P]);
          return y;
        }
        return f;
      }
      function w0(l, f, y, b, P) {
        Wl(f, y.render);
        var A = op(l, f, y.render, b, P),
          N = Xh();
        if (N) {
          var M = f.treeContext,
            B = 1,
            ee = 0;
          f.treeContext = lf(M, B, ee);
          try {
            ir(l, f, A);
          } finally {
            f.treeContext = M;
          }
        } else ir(l, f, A);
        Yn(f);
      }
      function dp(l, f, y, b, P) {
        var A = y.type,
          N = fp(A, b);
        Cf(l, f, A, N, P);
      }
      function E0(l, f, y, b) {
        y._context === void 0
          ? y !== y.Consumer &&
            (xf ||
              ((xf = !0),
              s(
                'Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?',
              )))
          : (y = y._context);
        var P = b.children;
        typeof P != 'function' &&
          s(
            "A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.",
          );
        var A = da(y),
          N = P(A);
        ir(l, f, N);
      }
      function R0(l, f, y, b) {
        var P = y._context,
          A = b.value,
          N = b.children,
          M;
        (M = f.context),
          (f.context = Vh(P, A)),
          ir(l, f, N),
          (f.context = Il(P)),
          M !== f.context &&
            s(
              'Popping the context provider did not return back to the original snapshot. This is a bug in React.',
            );
      }
      function T0(l, f, y, b, P) {
        $r(f, 'Lazy');
        var A = y._payload,
          N = y._init,
          M = N(A),
          B = fp(M, b);
        Cf(l, f, M, B, P), Yn(f);
      }
      function Cf(l, f, y, b, P) {
        if (typeof y == 'function')
          if (_0(y)) {
            lp(l, f, y, b);
            return;
          } else {
            up(l, f, y, b);
            return;
          }
        if (typeof y == 'string') {
          Gl(l, f, y, b);
          return;
        }
        switch (y) {
          case Yv:
          case Rl:
          case Uc:
          case Vc:
          case jh: {
            ir(l, f, b.children);
            return;
          }
          case ia: {
            $r(f, 'SuspenseList'), ir(l, f, b.children), Yn(f);
            return;
          }
          case Bc:
            throw new Error(
              'ReactDOMServer does not yet support scope components.',
            );
          case sa: {
            wa(l, f, b);
            return;
          }
        }
        if (typeof y == 'object' && y !== null)
          switch (y.$$typeof) {
            case na: {
              w0(l, f, y, b, P);
              return;
            }
            case oa: {
              dp(l, f, y, b, P);
              return;
            }
            case wl: {
              R0(l, f, y, b);
              return;
            }
            case El: {
              E0(l, f, y, b);
              return;
            }
            case Vi: {
              T0(l, f, y, b);
              return;
            }
          }
        var A = '';
        throw (
          ((y === void 0 ||
            (typeof y == 'object' &&
              y !== null &&
              Object.keys(y).length === 0)) &&
            (A +=
              " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."),
          new Error(
            'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) ' +
              ('but got: ' + (y == null ? y : typeof y) + '.' + A),
          ))
        );
      }
      function P0(l, f) {
        typeof Symbol == 'function' &&
          l[Symbol.toStringTag] === 'Generator' &&
          (Pf ||
            s(
              'Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.',
            ),
          (Pf = !0)),
          l.entries === f &&
            (kf ||
              s(
                'Using Maps as children is not supported. Use an array of keyed ReactElements instead.',
              ),
            (kf = !0));
      }
      function ir(l, f, y) {
        try {
          return k0(l, f, y);
        } catch (b) {
          throw (
            ((typeof b == 'object' &&
              b !== null &&
              typeof b.then == 'function') ||
              (_a = _a !== null ? _a : so()),
            b)
          );
        }
      }
      function k0(l, f, y) {
        if (((f.node = y), typeof y == 'object' && y !== null)) {
          switch (y.$$typeof) {
            case zc: {
              var b = y,
                P = b.type,
                A = b.props,
                N = b.ref;
              Cf(l, f, P, A, N);
              return;
            }
            case Ir:
              throw new Error(
                'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.',
              );
            case Vi: {
              var M = y,
                B = M._payload,
                ee = M._init,
                oe;
              try {
                oe = ee(B);
              } catch (ru) {
                throw (
                  (typeof ru == 'object' &&
                    ru !== null &&
                    typeof ru.then == 'function' &&
                    $r(f, 'Lazy'),
                  ru)
                );
              }
              ir(l, f, oe);
              return;
            }
          }
          if (kt(y)) {
            vr(l, f, y);
            return;
          }
          var _e = qh(y);
          if (_e) {
            P0(y, _e);
            var et = _e.call(y);
            if (et) {
              var Rt = et.next();
              if (!Rt.done) {
                var Lt = [];
                do Lt.push(Rt.value), (Rt = et.next());
                while (!Rt.done);
                vr(l, f, Lt);
                return;
              }
              return;
            }
          }
          var eu = Object.prototype.toString.call(y);
          throw new Error(
            'Objects are not valid as a React child (found: ' +
              (eu === '[object Object]'
                ? 'object with keys {' + Object.keys(y).join(', ') + '}'
                : eu) +
              '). If you meant to render a collection of children, use an array instead.',
          );
        }
        if (typeof y == 'string') {
          var tu = f.blockedSegment;
          tu.lastPushedText = Lh(
            f.blockedSegment.chunks,
            y,
            l.responseState,
            tu.lastPushedText,
          );
          return;
        }
        if (typeof y == 'number') {
          var Sp = f.blockedSegment;
          Sp.lastPushedText = Lh(
            f.blockedSegment.chunks,
            '' + y,
            l.responseState,
            Sp.lastPushedText,
          );
          return;
        }
        typeof y == 'function' &&
          s(
            'Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.',
          );
      }
      function vr(l, f, y) {
        for (var b = y.length, P = 0; P < b; P++) {
          var A = f.treeContext;
          f.treeContext = lf(A, b, P);
          try {
            Jl(l, f, y[P]);
          } finally {
            f.treeContext = A;
          }
        }
      }
      function x0(l, f, y) {
        var b = f.blockedSegment,
          P = b.chunks.length,
          A = Bl(l, P, null, b.formatContext, b.lastPushedText, !0);
        b.children.push(A), (b.lastPushedText = !1);
        var N = _f(
          l,
          f.node,
          f.blockedBoundary,
          A,
          f.abortSet,
          f.legacyContext,
          f.context,
          f.treeContext,
        );
        f.componentStack !== null &&
          (N.componentStack = f.componentStack.parent);
        var M = N.ping;
        y.then(M, M);
      }
      function Jl(l, f, y) {
        var b = f.blockedSegment.formatContext,
          P = f.legacyContext,
          A = f.context,
          N = null;
        N = f.componentStack;
        try {
          return ir(l, f, y);
        } catch (M) {
          if (
            (hf(),
            typeof M == 'object' && M !== null && typeof M.then == 'function')
          ) {
            x0(l, f, M),
              (f.blockedSegment.formatContext = b),
              (f.legacyContext = P),
              (f.context = A),
              fa(A),
              (f.componentStack = N);
            return;
          } else
            throw (
              ((f.blockedSegment.formatContext = b),
              (f.legacyContext = P),
              (f.context = A),
              fa(A),
              (f.componentStack = N),
              M)
            );
        }
      }
      function C0(l, f, y, b) {
        var P = Jn(l, b);
        if (
          (f === null
            ? io(l, b)
            : (f.pendingTasks--,
              f.forceClientRender ||
                ((f.forceClientRender = !0),
                (f.errorDigest = P),
                En(f, b),
                f.parentFlushed && l.clientRenderedBoundaries.push(f))),
          l.allPendingTasks--,
          l.allPendingTasks === 0)
        ) {
          var A = l.onAllReady;
          A();
        }
      }
      function Of(l) {
        var f = this,
          y = l.blockedBoundary,
          b = l.blockedSegment;
        (b.status = Zs), If(f, y, b);
      }
      function hp(l, f, y) {
        var b = l.blockedBoundary,
          P = l.blockedSegment;
        if (((P.status = Zs), b === null))
          f.allPendingTasks--,
            f.status !== ro &&
              ((f.status = ro), f.destination !== null && g(f.destination));
        else {
          if ((b.pendingTasks--, !b.forceClientRender)) {
            b.forceClientRender = !0;
            var A =
              y === void 0
                ? new Error(
                    'The render was aborted by the server without a reason.',
                  )
                : y;
            b.errorDigest = f.onError(A);
            {
              var N = 'The server did not finish this Suspense boundary: ';
              A && typeof A.message == 'string'
                ? (A = N + A.message)
                : (A = N + String(A));
              var M = hn;
              hn = l;
              try {
                En(b, A);
              } finally {
                hn = M;
              }
            }
            b.parentFlushed && f.clientRenderedBoundaries.push(b);
          }
          if (
            (b.fallbackAbortableTasks.forEach(function (ee) {
              return hp(ee, f, y);
            }),
            b.fallbackAbortableTasks.clear(),
            f.allPendingTasks--,
            f.allPendingTasks === 0)
          ) {
            var B = f.onAllReady;
            B();
          }
        }
      }
      function Kl(l, f) {
        if (
          f.chunks.length === 0 &&
          f.children.length === 1 &&
          f.children[0].boundary === null
        ) {
          var y = f.children[0];
          (y.id = f.id), (y.parentFlushed = !0), y.status === ys && Kl(l, y);
        } else {
          var b = l.completedSegments;
          b.push(f);
        }
      }
      function If(l, f, y) {
        if (f === null) {
          if (y.parentFlushed) {
            if (l.completedRootSegment !== null)
              throw new Error(
                'There can only be one root segment. This is a bug in React.',
              );
            l.completedRootSegment = y;
          }
          if ((l.pendingRootTasks--, l.pendingRootTasks === 0)) {
            l.onShellError = va;
            var b = l.onShellReady;
            b();
          }
        } else if ((f.pendingTasks--, !f.forceClientRender)) {
          if (f.pendingTasks === 0)
            y.parentFlushed && y.status === ys && Kl(f, y),
              f.parentFlushed && l.completedBoundaries.push(f),
              f.fallbackAbortableTasks.forEach(Of, l),
              f.fallbackAbortableTasks.clear();
          else if (y.parentFlushed && y.status === ys) {
            Kl(f, y);
            var P = f.completedSegments;
            P.length === 1 && f.parentFlushed && l.partialBoundaries.push(f);
          }
        }
        if ((l.allPendingTasks--, l.allPendingTasks === 0)) {
          var A = l.onAllReady;
          A();
        }
      }
      function Xl(l, f) {
        var y = f.blockedSegment;
        if (y.status === ga) {
          fa(f.context);
          var b = null;
          (b = hn), (hn = f);
          try {
            ir(l, f, f.node),
              Dh(y.chunks, l.responseState, y.lastPushedText, y.textEmbedded),
              f.abortSet.delete(f),
              (y.status = ys),
              If(l, f.blockedBoundary, y);
          } catch (A) {
            if (
              (hf(),
              typeof A == 'object' && A !== null && typeof A.then == 'function')
            ) {
              var P = f.ping;
              A.then(P, P);
            } else
              f.abortSet.delete(f),
                (y.status = bf),
                C0(l, f.blockedBoundary, y, A);
          } finally {
            hn = b;
          }
        }
      }
      function Af(l) {
        if (l.status !== ro) {
          var f = t0(),
            y = Ul.current;
          Ul.current = rp;
          var b;
          (b = vf.getCurrentStack), (vf.getCurrentStack = so);
          var P = to;
          yf(l.responseState);
          try {
            var A = l.pingedTasks,
              N;
            for (N = 0; N < A.length; N++) {
              var M = A[N];
              Xl(l, M);
            }
            A.splice(0, N), l.destination !== null && Nf(l, l.destination);
          } catch (B) {
            Jn(l, B), io(l, B);
          } finally {
            yf(P),
              (Ul.current = y),
              (vf.getCurrentStack = b),
              y === rp && fa(f);
          }
        }
      }
      function Zl(l, f, y) {
        switch (((y.parentFlushed = !0), y.status)) {
          case ga: {
            var b = (y.id = l.nextSegmentId++);
            return (
              (y.lastPushedText = !1),
              (y.textEmbedded = !1),
              z(f, l.responseState, b)
            );
          }
          case ys: {
            y.status = Vl;
            for (
              var P = !0, A = y.chunks, N = 0, M = y.children, B = 0;
              B < M.length;
              B++
            ) {
              for (var ee = M[B]; N < ee.index; N++) c(f, A[N]);
              P = Ra(l, f, ee);
            }
            for (; N < A.length - 1; N++) c(f, A[N]);
            return N < A.length && (P = d(f, A[N])), P;
          }
          default:
            throw new Error(
              'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.',
            );
        }
      }
      function Ra(l, f, y) {
        var b = y.boundary;
        if (b === null) return Zl(l, f, y);
        if (((b.parentFlushed = !0), b.forceClientRender))
          return (
            Wv(
              f,
              l.responseState,
              b.errorDigest,
              b.errorMessage,
              b.errorComponentStack,
            ),
            Zl(l, f, y),
            Gv(f, l.responseState)
          );
        if (b.pendingTasks > 0) {
          (b.rootSegmentID = l.nextSegmentId++),
            b.completedSegments.length > 0 && l.partialBoundaries.push(b);
          var P = (b.id = ls(l.responseState));
          return Js(f, l.responseState, P), Zl(l, f, y), Sl(f, l.responseState);
        } else {
          if (b.byteSize > l.progressiveChunkSize)
            return (
              (b.rootSegmentID = l.nextSegmentId++),
              l.completedBoundaries.push(b),
              Js(f, l.responseState, b.id),
              Zl(l, f, y),
              Sl(f, l.responseState)
            );
          Bv(f, l.responseState);
          var A = b.completedSegments;
          if (A.length !== 1)
            throw new Error(
              'A previously unvisited boundary must have exactly one root segment. This is a bug in React.',
            );
          var N = A[0];
          return Ra(l, f, N), Hc(f, l.responseState);
        }
      }
      function Ql(l, f, y) {
        return Uv(
          f,
          l.responseState,
          y.id,
          y.errorDigest,
          y.errorMessage,
          y.errorComponentStack,
        );
      }
      function Ta(l, f, y) {
        return (
          Rv(f, l.responseState, y.formatContext, y.id),
          Ra(l, f, y),
          Tv(f, y.formatContext)
        );
      }
      function pp(l, f, y) {
        for (var b = y.completedSegments, P = 0; P < b.length; P++) {
          var A = b[P];
          $f(l, f, y, A);
        }
        return (b.length = 0), Fv(f, l.responseState, y.id, y.rootSegmentID);
      }
      function mp(l, f, y) {
        for (var b = y.completedSegments, P = 0; P < b.length; P++) {
          var A = b[P];
          if (!$f(l, f, y, A)) return P++, b.splice(0, P), !1;
        }
        return b.splice(0, P), !0;
      }
      function $f(l, f, y, b) {
        if (b.status === Vl) return !0;
        var P = b.id;
        if (P === -1) {
          var A = (b.id = y.rootSegmentID);
          if (A === -1)
            throw new Error(
              'A root segment ID must have been assigned by now. This is a bug in React.',
            );
          return Ta(l, f, b);
        } else return Ta(l, f, b), $v(f, l.responseState, P);
      }
      function Nf(l, f) {
        try {
          var y = l.completedRootSegment;
          y !== null &&
            l.pendingRootTasks === 0 &&
            (Ra(l, f, y),
            (l.completedRootSegment = null),
            ta(f, l.responseState));
          var b = l.clientRenderedBoundaries,
            P;
          for (P = 0; P < b.length; P++) {
            var A = b[P];
            if (!Ql(l, f, A)) {
              (l.destination = null), P++, b.splice(0, P);
              return;
            }
          }
          b.splice(0, P);
          var N = l.completedBoundaries;
          for (P = 0; P < N.length; P++) {
            var M = N[P];
            if (!pp(l, f, M)) {
              (l.destination = null), P++, N.splice(0, P);
              return;
            }
          }
          N.splice(0, P);
          var B = l.partialBoundaries;
          for (P = 0; P < B.length; P++) {
            var ee = B[P];
            if (!mp(l, f, ee)) {
              (l.destination = null), P++, B.splice(0, P);
              return;
            }
          }
          B.splice(0, P);
          var oe = l.completedBoundaries;
          for (P = 0; P < oe.length; P++) {
            var _e = oe[P];
            if (!pp(l, f, _e)) {
              (l.destination = null), P++, oe.splice(0, P);
              return;
            }
          }
          oe.splice(0, P);
        } finally {
          l.allPendingTasks === 0 &&
            l.pingedTasks.length === 0 &&
            l.clientRenderedBoundaries.length === 0 &&
            l.completedBoundaries.length === 0 &&
            (l.abortableTasks.size !== 0 &&
              s(
                'There was still abortable task at the root when we closed. This is a bug in React.',
              ),
            g(f));
        }
      }
      function Lf(l) {
        a(function () {
          return Af(l);
        });
      }
      function Pa(l, f) {
        if (l.status === Sf) {
          (l.status = ro), w(f, l.fatalError);
          return;
        }
        if (l.status !== ro && l.destination === null) {
          l.destination = f;
          try {
            Nf(l, f);
          } catch (y) {
            Jn(l, y), io(l, y);
          }
        }
      }
      function yp(l, f) {
        try {
          var y = l.abortableTasks;
          y.forEach(function (b) {
            return hp(b, l, f);
          }),
            y.clear(),
            l.destination !== null && Nf(l, l.destination);
        } catch (b) {
          Jn(l, b), io(l, b);
        }
      }
      function gp() {}
      function Df(l, f, y, b) {
        var P = !1,
          A = null,
          N = '',
          M = {
            push: function (_e) {
              return _e !== null && (N += _e), !0;
            },
            destroy: function (_e) {
              (P = !0), (A = _e);
            },
          },
          B = !1;
        function ee() {
          B = !0;
        }
        var oe = ip(
          l,
          $h(y, f ? f.identifierPrefix : void 0),
          Nh(),
          1 / 0,
          gp,
          void 0,
          ee,
          void 0,
          void 0,
        );
        if ((Lf(oe), yp(oe, b), Pa(oe, M), P)) throw A;
        if (!B)
          throw new Error(
            'A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.',
          );
        return N;
      }
      function O0(l, f) {
        (l.prototype = Object.create(f.prototype)),
          (l.prototype.constructor = l),
          (l.__proto__ = f);
      }
      var vp = (function (l) {
        O0(f, l);
        function f() {
          var b;
          return (
            (b = l.call(this, {}) || this),
            (b.request = null),
            (b.startedFlowing = !1),
            b
          );
        }
        var y = f.prototype;
        return (
          (y._destroy = function (P, A) {
            yp(this.request), A(P);
          }),
          (y._read = function (P) {
            this.startedFlowing && Pa(this.request, this);
          }),
          f
        );
      })(t.Readable);
      function I0() {}
      function bp(l, f, y) {
        function b() {
          (P.startedFlowing = !0), Pa(A, P);
        }
        var P = new vp(),
          A = ip(
            l,
            $h(!1, f ? f.identifierPrefix : void 0),
            Nh(),
            1 / 0,
            I0,
            b,
            void 0,
            void 0,
          );
        return (P.request = A), Lf(A), P;
      }
      function h(l, f) {
        return (
          s(
            'renderToNodeStream is deprecated. Use renderToPipeableStream instead.',
          ),
          bp(l, f)
        );
      }
      function p(l, f) {
        return (
          s(
            'ReactDOMServer.renderToStaticNodeStream() is deprecated. Use ReactDOMServer.renderToPipeableStream() and wait to `pipe` until the `onAllReady` callback has been called instead.',
          ),
          bp(l, f)
        );
      }
      function _(l, f) {
        return Df(
          l,
          f,
          !1,
          'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server',
        );
      }
      function R(l, f) {
        return Df(
          l,
          f,
          !0,
          'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server',
        );
      }
      (cc.renderToNodeStream = h),
        (cc.renderToStaticMarkup = R),
        (cc.renderToStaticNodeStream = p),
        (cc.renderToString = _),
        (cc.version = r);
    })();
});
var oH = $((MT) => {
  'use strict';
  process.env.NODE_ENV !== 'production' &&
    (function () {
      'use strict';
      var e = Ns(),
        t = require('util'),
        r = '18.3.1',
        n = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function i(h) {
        {
          for (
            var p = arguments.length, _ = new Array(p > 1 ? p - 1 : 0), R = 1;
            R < p;
            R++
          )
            _[R - 1] = arguments[R];
          o('warn', h, _);
        }
      }
      function s(h) {
        {
          for (
            var p = arguments.length, _ = new Array(p > 1 ? p - 1 : 0), R = 1;
            R < p;
            R++
          )
            _[R - 1] = arguments[R];
          o('error', h, _);
        }
      }
      function o(h, p, _) {
        {
          var R = n.ReactDebugCurrentFrame,
            l = R.getStackAddendum();
          l !== '' && ((p += '%s'), (_ = _.concat([l])));
          var f = _.map(function (y) {
            return String(y);
          });
          f.unshift('Warning: ' + p),
            Function.prototype.apply.call(console[h], console, f);
        }
      }
      function a(h) {
        setImmediate(h);
      }
      function u(h) {
        typeof h.flush == 'function' && h.flush();
      }
      var c = 2048,
        d = null,
        m = 0,
        g = !0;
      function v(h) {
        (d = new Uint8Array(c)), (m = 0), (g = !0);
      }
      function S(h, p) {
        if (p.length !== 0) {
          if (p.length * 3 > c) {
            m > 0 && (C(h, d.subarray(0, m)), (d = new Uint8Array(c)), (m = 0)),
              C(h, j.encode(p));
            return;
          }
          var _ = d;
          m > 0 && (_ = d.subarray(m));
          var R = j.encodeInto(p, _),
            l = R.read,
            f = R.written;
          (m += f),
            l < p.length &&
              (C(h, d),
              (d = new Uint8Array(c)),
              (m = j.encodeInto(p.slice(l), d).written)),
            m === c && (C(h, d), (d = new Uint8Array(c)), (m = 0));
        }
      }
      function w(h, p) {
        if (p.byteLength !== 0) {
          if (p.byteLength > c) {
            m > 0 && (C(h, d.subarray(0, m)), (d = new Uint8Array(c)), (m = 0)),
              C(h, p);
            return;
          }
          var _ = p,
            R = d.length - m;
          R < _.byteLength &&
            (R === 0
              ? C(h, d)
              : (d.set(_.subarray(0, R), m),
                (m += R),
                C(h, d),
                (_ = _.subarray(R))),
            (d = new Uint8Array(c)),
            (m = 0)),
            d.set(_, m),
            (m += _.byteLength),
            m === c && (C(h, d), (d = new Uint8Array(c)), (m = 0));
        }
      }
      function T(h, p) {
        typeof p == 'string' ? S(h, p) : w(h, p);
      }
      function C(h, p) {
        var _ = h.write(p);
        g = g && _;
      }
      function I(h, p) {
        return T(h, p), g;
      }
      function x(h) {
        d && m > 0 && h.write(d.subarray(0, m)), (d = null), (m = 0), (g = !0);
      }
      function E(h) {
        h.end();
      }
      var j = new t.TextEncoder();
      function q(h) {
        return h;
      }
      function O(h) {
        return j.encode(h);
      }
      function F(h, p) {
        h.destroy(p);
      }
      function U(h) {
        {
          var p = typeof Symbol == 'function' && Symbol.toStringTag,
            _ = (p && h[Symbol.toStringTag]) || h.constructor.name || 'Object';
          return _;
        }
      }
      function D(h) {
        try {
          return G(h), !1;
        } catch {
          return !0;
        }
      }
      function G(h) {
        return '' + h;
      }
      function Y(h, p) {
        if (D(h))
          return (
            s(
              'The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.',
              p,
              U(h),
            ),
            G(h)
          );
      }
      function W(h, p) {
        if (D(h))
          return (
            s(
              'The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.',
              p,
              U(h),
            ),
            G(h)
          );
      }
      function de(h) {
        if (D(h))
          return (
            s(
              'The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.',
              U(h),
            ),
            G(h)
          );
      }
      var X = Object.prototype.hasOwnProperty,
        se = 0,
        ae = 1,
        qe = 2,
        re = 3,
        Ie = 4,
        Wt = 5,
        ve = 6,
        Ye =
          ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD',
        It = Ye + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
        Ue = new RegExp('^[' + Ye + '][' + It + ']*$'),
        Gt = {},
        Re = {};
      function Ce(h) {
        return X.call(Re, h)
          ? !0
          : X.call(Gt, h)
            ? !1
            : Ue.test(h)
              ? ((Re[h] = !0), !0)
              : ((Gt[h] = !0), s('Invalid attribute name: `%s`', h), !1);
      }
      function mr(h, p, _, R) {
        if (_ !== null && _.type === se) return !1;
        switch (typeof p) {
          case 'function':
          case 'symbol':
            return !0;
          case 'boolean': {
            if (R) return !1;
            if (_ !== null) return !_.acceptsBooleans;
            var l = h.toLowerCase().slice(0, 5);
            return l !== 'data-' && l !== 'aria-';
          }
          default:
            return !1;
        }
      }
      function Ve(h) {
        return H.hasOwnProperty(h) ? H[h] : null;
      }
      function ge(h, p, _, R, l, f, y) {
        (this.acceptsBooleans = p === qe || p === re || p === Ie),
          (this.attributeName = R),
          (this.attributeNamespace = l),
          (this.mustUseProperty = _),
          (this.propertyName = h),
          (this.type = p),
          (this.sanitizeURL = f),
          (this.removeEmptyString = y);
      }
      var H = {},
        K = [
          'children',
          'dangerouslySetInnerHTML',
          'defaultValue',
          'defaultChecked',
          'innerHTML',
          'suppressContentEditableWarning',
          'suppressHydrationWarning',
          'style',
        ];
      K.forEach(function (h) {
        H[h] = new ge(h, se, !1, h, null, !1, !1);
      }),
        [
          ['acceptCharset', 'accept-charset'],
          ['className', 'class'],
          ['htmlFor', 'for'],
          ['httpEquiv', 'http-equiv'],
        ].forEach(function (h) {
          var p = h[0],
            _ = h[1];
          H[p] = new ge(p, ae, !1, _, null, !1, !1);
        }),
        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
          function (h) {
            H[h] = new ge(h, qe, !1, h.toLowerCase(), null, !1, !1);
          },
        ),
        [
          'autoReverse',
          'externalResourcesRequired',
          'focusable',
          'preserveAlpha',
        ].forEach(function (h) {
          H[h] = new ge(h, qe, !1, h, null, !1, !1);
        }),
        [
          'allowFullScreen',
          'async',
          'autoFocus',
          'autoPlay',
          'controls',
          'default',
          'defer',
          'disabled',
          'disablePictureInPicture',
          'disableRemotePlayback',
          'formNoValidate',
          'hidden',
          'loop',
          'noModule',
          'noValidate',
          'open',
          'playsInline',
          'readOnly',
          'required',
          'reversed',
          'scoped',
          'seamless',
          'itemScope',
        ].forEach(function (h) {
          H[h] = new ge(h, re, !1, h.toLowerCase(), null, !1, !1);
        }),
        ['checked', 'multiple', 'muted', 'selected'].forEach(function (h) {
          H[h] = new ge(h, re, !0, h, null, !1, !1);
        }),
        ['capture', 'download'].forEach(function (h) {
          H[h] = new ge(h, Ie, !1, h, null, !1, !1);
        }),
        ['cols', 'rows', 'size', 'span'].forEach(function (h) {
          H[h] = new ge(h, ve, !1, h, null, !1, !1);
        }),
        ['rowSpan', 'start'].forEach(function (h) {
          H[h] = new ge(h, Wt, !1, h.toLowerCase(), null, !1, !1);
        });
      var te = /[\-\:]([a-z])/g,
        le = function (h) {
          return h[1].toUpperCase();
        };
      [
        'accent-height',
        'alignment-baseline',
        'arabic-form',
        'baseline-shift',
        'cap-height',
        'clip-path',
        'clip-rule',
        'color-interpolation',
        'color-interpolation-filters',
        'color-profile',
        'color-rendering',
        'dominant-baseline',
        'enable-background',
        'fill-opacity',
        'fill-rule',
        'flood-color',
        'flood-opacity',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-stretch',
        'font-style',
        'font-variant',
        'font-weight',
        'glyph-name',
        'glyph-orientation-horizontal',
        'glyph-orientation-vertical',
        'horiz-adv-x',
        'horiz-origin-x',
        'image-rendering',
        'letter-spacing',
        'lighting-color',
        'marker-end',
        'marker-mid',
        'marker-start',
        'overline-position',
        'overline-thickness',
        'paint-order',
        'panose-1',
        'pointer-events',
        'rendering-intent',
        'shape-rendering',
        'stop-color',
        'stop-opacity',
        'strikethrough-position',
        'strikethrough-thickness',
        'stroke-dasharray',
        'stroke-dashoffset',
        'stroke-linecap',
        'stroke-linejoin',
        'stroke-miterlimit',
        'stroke-opacity',
        'stroke-width',
        'text-anchor',
        'text-decoration',
        'text-rendering',
        'underline-position',
        'underline-thickness',
        'unicode-bidi',
        'unicode-range',
        'units-per-em',
        'v-alphabetic',
        'v-hanging',
        'v-ideographic',
        'v-mathematical',
        'vector-effect',
        'vert-adv-y',
        'vert-origin-x',
        'vert-origin-y',
        'word-spacing',
        'writing-mode',
        'xmlns:xlink',
        'x-height',
      ].forEach(function (h) {
        var p = h.replace(te, le);
        H[p] = new ge(p, ae, !1, h, null, !1, !1);
      }),
        [
          'xlink:actuate',
          'xlink:arcrole',
          'xlink:role',
          'xlink:show',
          'xlink:title',
          'xlink:type',
        ].forEach(function (h) {
          var p = h.replace(te, le);
          H[p] = new ge(p, ae, !1, h, 'http://www.w3.org/1999/xlink', !1, !1);
        }),
        ['xml:base', 'xml:lang', 'xml:space'].forEach(function (h) {
          var p = h.replace(te, le);
          H[p] = new ge(
            p,
            ae,
            !1,
            h,
            'http://www.w3.org/XML/1998/namespace',
            !1,
            !1,
          );
        }),
        ['tabIndex', 'crossOrigin'].forEach(function (h) {
          H[h] = new ge(h, ae, !1, h.toLowerCase(), null, !1, !1);
        });
      var Pe = 'xlinkHref';
      (H[Pe] = new ge(
        'xlinkHref',
        ae,
        !1,
        'xlink:href',
        'http://www.w3.org/1999/xlink',
        !0,
        !1,
      )),
        ['src', 'href', 'action', 'formAction'].forEach(function (h) {
          H[h] = new ge(h, ae, !1, h.toLowerCase(), null, !0, !0);
        });
      var he = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0,
      };
      function Ae(h, p) {
        return h + p.charAt(0).toUpperCase() + p.substring(1);
      }
      var Yt = ['Webkit', 'ms', 'Moz', 'O'];
      Object.keys(he).forEach(function (h) {
        Yt.forEach(function (p) {
          he[Ae(p, h)] = he[h];
        });
      });
      var tt = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0,
      };
      function zt(h, p) {
        tt[p.type] ||
          p.onChange ||
          p.onInput ||
          p.readOnly ||
          p.disabled ||
          p.value == null ||
          s(
            'You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.',
          ),
          p.onChange ||
            p.readOnly ||
            p.disabled ||
            p.checked == null ||
            s(
              'You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.',
            );
      }
      function Ho(h, p) {
        if (h.indexOf('-') === -1) return typeof p.is == 'string';
        switch (h) {
          case 'annotation-xml':
          case 'color-profile':
          case 'font-face':
          case 'font-face-src':
          case 'font-face-uri':
          case 'font-face-format':
          case 'font-face-name':
          case 'missing-glyph':
            return !1;
          default:
            return !0;
        }
      }
      var Jt = {
          'aria-current': 0,
          'aria-description': 0,
          'aria-details': 0,
          'aria-disabled': 0,
          'aria-hidden': 0,
          'aria-invalid': 0,
          'aria-keyshortcuts': 0,
          'aria-label': 0,
          'aria-roledescription': 0,
          'aria-autocomplete': 0,
          'aria-checked': 0,
          'aria-expanded': 0,
          'aria-haspopup': 0,
          'aria-level': 0,
          'aria-modal': 0,
          'aria-multiline': 0,
          'aria-multiselectable': 0,
          'aria-orientation': 0,
          'aria-placeholder': 0,
          'aria-pressed': 0,
          'aria-readonly': 0,
          'aria-required': 0,
          'aria-selected': 0,
          'aria-sort': 0,
          'aria-valuemax': 0,
          'aria-valuemin': 0,
          'aria-valuenow': 0,
          'aria-valuetext': 0,
          'aria-atomic': 0,
          'aria-busy': 0,
          'aria-live': 0,
          'aria-relevant': 0,
          'aria-dropeffect': 0,
          'aria-grabbed': 0,
          'aria-activedescendant': 0,
          'aria-colcount': 0,
          'aria-colindex': 0,
          'aria-colspan': 0,
          'aria-controls': 0,
          'aria-describedby': 0,
          'aria-errormessage': 0,
          'aria-flowto': 0,
          'aria-labelledby': 0,
          'aria-owns': 0,
          'aria-posinset': 0,
          'aria-rowcount': 0,
          'aria-rowindex': 0,
          'aria-rowspan': 0,
          'aria-setsize': 0,
        },
        Ut = {},
        wt = new RegExp('^(aria)-[' + It + ']*$'),
        ln = new RegExp('^(aria)[A-Z][' + It + ']*$');
      function zo(h, p) {
        {
          if (X.call(Ut, p) && Ut[p]) return !0;
          if (ln.test(p)) {
            var _ = 'aria-' + p.slice(4).toLowerCase(),
              R = Jt.hasOwnProperty(_) ? _ : null;
            if (R == null)
              return (
                s(
                  'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',
                  p,
                ),
                (Ut[p] = !0),
                !0
              );
            if (p !== R)
              return (
                s('Invalid ARIA attribute `%s`. Did you mean `%s`?', p, R),
                (Ut[p] = !0),
                !0
              );
          }
          if (wt.test(p)) {
            var l = p.toLowerCase(),
              f = Jt.hasOwnProperty(l) ? l : null;
            if (f == null) return (Ut[p] = !0), !1;
            if (p !== f)
              return (
                s('Unknown ARIA attribute `%s`. Did you mean `%s`?', p, f),
                (Ut[p] = !0),
                !0
              );
          }
        }
        return !0;
      }
      function wc(h, p) {
        {
          var _ = [];
          for (var R in p) {
            var l = zo(h, R);
            l || _.push(R);
          }
          var f = _.map(function (y) {
            return '`' + y + '`';
          }).join(', ');
          _.length === 1
            ? s(
                'Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                f,
                h,
              )
            : _.length > 1 &&
              s(
                'Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props',
                f,
                h,
              );
        }
      }
      function At(h, p) {
        Ho(h, p) || wc(h, p);
      }
      var Ci = !1;
      function Oi(h, p) {
        {
          if (h !== 'input' && h !== 'textarea' && h !== 'select') return;
          p != null &&
            p.value === null &&
            !Ci &&
            ((Ci = !0),
            h === 'select' && p.multiple
              ? s(
                  '`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.',
                  h,
                )
              : s(
                  '`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.',
                  h,
                ));
        }
      }
      var Xe = {
          accept: 'accept',
          acceptcharset: 'acceptCharset',
          'accept-charset': 'acceptCharset',
          accesskey: 'accessKey',
          action: 'action',
          allowfullscreen: 'allowFullScreen',
          alt: 'alt',
          as: 'as',
          async: 'async',
          autocapitalize: 'autoCapitalize',
          autocomplete: 'autoComplete',
          autocorrect: 'autoCorrect',
          autofocus: 'autoFocus',
          autoplay: 'autoPlay',
          autosave: 'autoSave',
          capture: 'capture',
          cellpadding: 'cellPadding',
          cellspacing: 'cellSpacing',
          challenge: 'challenge',
          charset: 'charSet',
          checked: 'checked',
          children: 'children',
          cite: 'cite',
          class: 'className',
          classid: 'classID',
          classname: 'className',
          cols: 'cols',
          colspan: 'colSpan',
          content: 'content',
          contenteditable: 'contentEditable',
          contextmenu: 'contextMenu',
          controls: 'controls',
          controlslist: 'controlsList',
          coords: 'coords',
          crossorigin: 'crossOrigin',
          dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
          data: 'data',
          datetime: 'dateTime',
          default: 'default',
          defaultchecked: 'defaultChecked',
          defaultvalue: 'defaultValue',
          defer: 'defer',
          dir: 'dir',
          disabled: 'disabled',
          disablepictureinpicture: 'disablePictureInPicture',
          disableremoteplayback: 'disableRemotePlayback',
          download: 'download',
          draggable: 'draggable',
          enctype: 'encType',
          enterkeyhint: 'enterKeyHint',
          for: 'htmlFor',
          form: 'form',
          formmethod: 'formMethod',
          formaction: 'formAction',
          formenctype: 'formEncType',
          formnovalidate: 'formNoValidate',
          formtarget: 'formTarget',
          frameborder: 'frameBorder',
          headers: 'headers',
          height: 'height',
          hidden: 'hidden',
          high: 'high',
          href: 'href',
          hreflang: 'hrefLang',
          htmlfor: 'htmlFor',
          httpequiv: 'httpEquiv',
          'http-equiv': 'httpEquiv',
          icon: 'icon',
          id: 'id',
          imagesizes: 'imageSizes',
          imagesrcset: 'imageSrcSet',
          innerhtml: 'innerHTML',
          inputmode: 'inputMode',
          integrity: 'integrity',
          is: 'is',
          itemid: 'itemID',
          itemprop: 'itemProp',
          itemref: 'itemRef',
          itemscope: 'itemScope',
          itemtype: 'itemType',
          keyparams: 'keyParams',
          keytype: 'keyType',
          kind: 'kind',
          label: 'label',
          lang: 'lang',
          list: 'list',
          loop: 'loop',
          low: 'low',
          manifest: 'manifest',
          marginwidth: 'marginWidth',
          marginheight: 'marginHeight',
          max: 'max',
          maxlength: 'maxLength',
          media: 'media',
          mediagroup: 'mediaGroup',
          method: 'method',
          min: 'min',
          minlength: 'minLength',
          multiple: 'multiple',
          muted: 'muted',
          name: 'name',
          nomodule: 'noModule',
          nonce: 'nonce',
          novalidate: 'noValidate',
          open: 'open',
          optimum: 'optimum',
          pattern: 'pattern',
          placeholder: 'placeholder',
          playsinline: 'playsInline',
          poster: 'poster',
          preload: 'preload',
          profile: 'profile',
          radiogroup: 'radioGroup',
          readonly: 'readOnly',
          referrerpolicy: 'referrerPolicy',
          rel: 'rel',
          required: 'required',
          reversed: 'reversed',
          role: 'role',
          rows: 'rows',
          rowspan: 'rowSpan',
          sandbox: 'sandbox',
          scope: 'scope',
          scoped: 'scoped',
          scrolling: 'scrolling',
          seamless: 'seamless',
          selected: 'selected',
          shape: 'shape',
          size: 'size',
          sizes: 'sizes',
          span: 'span',
          spellcheck: 'spellCheck',
          src: 'src',
          srcdoc: 'srcDoc',
          srclang: 'srcLang',
          srcset: 'srcSet',
          start: 'start',
          step: 'step',
          style: 'style',
          summary: 'summary',
          tabindex: 'tabIndex',
          target: 'target',
          title: 'title',
          type: 'type',
          usemap: 'useMap',
          value: 'value',
          width: 'width',
          wmode: 'wmode',
          wrap: 'wrap',
          about: 'about',
          accentheight: 'accentHeight',
          'accent-height': 'accentHeight',
          accumulate: 'accumulate',
          additive: 'additive',
          alignmentbaseline: 'alignmentBaseline',
          'alignment-baseline': 'alignmentBaseline',
          allowreorder: 'allowReorder',
          alphabetic: 'alphabetic',
          amplitude: 'amplitude',
          arabicform: 'arabicForm',
          'arabic-form': 'arabicForm',
          ascent: 'ascent',
          attributename: 'attributeName',
          attributetype: 'attributeType',
          autoreverse: 'autoReverse',
          azimuth: 'azimuth',
          basefrequency: 'baseFrequency',
          baselineshift: 'baselineShift',
          'baseline-shift': 'baselineShift',
          baseprofile: 'baseProfile',
          bbox: 'bbox',
          begin: 'begin',
          bias: 'bias',
          by: 'by',
          calcmode: 'calcMode',
          capheight: 'capHeight',
          'cap-height': 'capHeight',
          clip: 'clip',
          clippath: 'clipPath',
          'clip-path': 'clipPath',
          clippathunits: 'clipPathUnits',
          cliprule: 'clipRule',
          'clip-rule': 'clipRule',
          color: 'color',
          colorinterpolation: 'colorInterpolation',
          'color-interpolation': 'colorInterpolation',
          colorinterpolationfilters: 'colorInterpolationFilters',
          'color-interpolation-filters': 'colorInterpolationFilters',
          colorprofile: 'colorProfile',
          'color-profile': 'colorProfile',
          colorrendering: 'colorRendering',
          'color-rendering': 'colorRendering',
          contentscripttype: 'contentScriptType',
          contentstyletype: 'contentStyleType',
          cursor: 'cursor',
          cx: 'cx',
          cy: 'cy',
          d: 'd',
          datatype: 'datatype',
          decelerate: 'decelerate',
          descent: 'descent',
          diffuseconstant: 'diffuseConstant',
          direction: 'direction',
          display: 'display',
          divisor: 'divisor',
          dominantbaseline: 'dominantBaseline',
          'dominant-baseline': 'dominantBaseline',
          dur: 'dur',
          dx: 'dx',
          dy: 'dy',
          edgemode: 'edgeMode',
          elevation: 'elevation',
          enablebackground: 'enableBackground',
          'enable-background': 'enableBackground',
          end: 'end',
          exponent: 'exponent',
          externalresourcesrequired: 'externalResourcesRequired',
          fill: 'fill',
          fillopacity: 'fillOpacity',
          'fill-opacity': 'fillOpacity',
          fillrule: 'fillRule',
          'fill-rule': 'fillRule',
          filter: 'filter',
          filterres: 'filterRes',
          filterunits: 'filterUnits',
          floodopacity: 'floodOpacity',
          'flood-opacity': 'floodOpacity',
          floodcolor: 'floodColor',
          'flood-color': 'floodColor',
          focusable: 'focusable',
          fontfamily: 'fontFamily',
          'font-family': 'fontFamily',
          fontsize: 'fontSize',
          'font-size': 'fontSize',
          fontsizeadjust: 'fontSizeAdjust',
          'font-size-adjust': 'fontSizeAdjust',
          fontstretch: 'fontStretch',
          'font-stretch': 'fontStretch',
          fontstyle: 'fontStyle',
          'font-style': 'fontStyle',
          fontvariant: 'fontVariant',
          'font-variant': 'fontVariant',
          fontweight: 'fontWeight',
          'font-weight': 'fontWeight',
          format: 'format',
          from: 'from',
          fx: 'fx',
          fy: 'fy',
          g1: 'g1',
          g2: 'g2',
          glyphname: 'glyphName',
          'glyph-name': 'glyphName',
          glyphorientationhorizontal: 'glyphOrientationHorizontal',
          'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
          glyphorientationvertical: 'glyphOrientationVertical',
          'glyph-orientation-vertical': 'glyphOrientationVertical',
          glyphref: 'glyphRef',
          gradienttransform: 'gradientTransform',
          gradientunits: 'gradientUnits',
          hanging: 'hanging',
          horizadvx: 'horizAdvX',
          'horiz-adv-x': 'horizAdvX',
          horizoriginx: 'horizOriginX',
          'horiz-origin-x': 'horizOriginX',
          ideographic: 'ideographic',
          imagerendering: 'imageRendering',
          'image-rendering': 'imageRendering',
          in2: 'in2',
          in: 'in',
          inlist: 'inlist',
          intercept: 'intercept',
          k1: 'k1',
          k2: 'k2',
          k3: 'k3',
          k4: 'k4',
          k: 'k',
          kernelmatrix: 'kernelMatrix',
          kernelunitlength: 'kernelUnitLength',
          kerning: 'kerning',
          keypoints: 'keyPoints',
          keysplines: 'keySplines',
          keytimes: 'keyTimes',
          lengthadjust: 'lengthAdjust',
          letterspacing: 'letterSpacing',
          'letter-spacing': 'letterSpacing',
          lightingcolor: 'lightingColor',
          'lighting-color': 'lightingColor',
          limitingconeangle: 'limitingConeAngle',
          local: 'local',
          markerend: 'markerEnd',
          'marker-end': 'markerEnd',
          markerheight: 'markerHeight',
          markermid: 'markerMid',
          'marker-mid': 'markerMid',
          markerstart: 'markerStart',
          'marker-start': 'markerStart',
          markerunits: 'markerUnits',
          markerwidth: 'markerWidth',
          mask: 'mask',
          maskcontentunits: 'maskContentUnits',
          maskunits: 'maskUnits',
          mathematical: 'mathematical',
          mode: 'mode',
          numoctaves: 'numOctaves',
          offset: 'offset',
          opacity: 'opacity',
          operator: 'operator',
          order: 'order',
          orient: 'orient',
          orientation: 'orientation',
          origin: 'origin',
          overflow: 'overflow',
          overlineposition: 'overlinePosition',
          'overline-position': 'overlinePosition',
          overlinethickness: 'overlineThickness',
          'overline-thickness': 'overlineThickness',
          paintorder: 'paintOrder',
          'paint-order': 'paintOrder',
          panose1: 'panose1',
          'panose-1': 'panose1',
          pathlength: 'pathLength',
          patterncontentunits: 'patternContentUnits',
          patterntransform: 'patternTransform',
          patternunits: 'patternUnits',
          pointerevents: 'pointerEvents',
          'pointer-events': 'pointerEvents',
          points: 'points',
          pointsatx: 'pointsAtX',
          pointsaty: 'pointsAtY',
          pointsatz: 'pointsAtZ',
          prefix: 'prefix',
          preservealpha: 'preserveAlpha',
          preserveaspectratio: 'preserveAspectRatio',
          primitiveunits: 'primitiveUnits',
          property: 'property',
          r: 'r',
          radius: 'radius',
          refx: 'refX',
          refy: 'refY',
          renderingintent: 'renderingIntent',
          'rendering-intent': 'renderingIntent',
          repeatcount: 'repeatCount',
          repeatdur: 'repeatDur',
          requiredextensions: 'requiredExtensions',
          requiredfeatures: 'requiredFeatures',
          resource: 'resource',
          restart: 'restart',
          result: 'result',
          results: 'results',
          rotate: 'rotate',
          rx: 'rx',
          ry: 'ry',
          scale: 'scale',
          security: 'security',
          seed: 'seed',
          shaperendering: 'shapeRendering',
          'shape-rendering': 'shapeRendering',
          slope: 'slope',
          spacing: 'spacing',
          specularconstant: 'specularConstant',
          specularexponent: 'specularExponent',
          speed: 'speed',
          spreadmethod: 'spreadMethod',
          startoffset: 'startOffset',
          stddeviation: 'stdDeviation',
          stemh: 'stemh',
          stemv: 'stemv',
          stitchtiles: 'stitchTiles',
          stopcolor: 'stopColor',
          'stop-color': 'stopColor',
          stopopacity: 'stopOpacity',
          'stop-opacity': 'stopOpacity',
          strikethroughposition: 'strikethroughPosition',
          'strikethrough-position': 'strikethroughPosition',
          strikethroughthickness: 'strikethroughThickness',
          'strikethrough-thickness': 'strikethroughThickness',
          string: 'string',
          stroke: 'stroke',
          strokedasharray: 'strokeDasharray',
          'stroke-dasharray': 'strokeDasharray',
          strokedashoffset: 'strokeDashoffset',
          'stroke-dashoffset': 'strokeDashoffset',
          strokelinecap: 'strokeLinecap',
          'stroke-linecap': 'strokeLinecap',
          strokelinejoin: 'strokeLinejoin',
          'stroke-linejoin': 'strokeLinejoin',
          strokemiterlimit: 'strokeMiterlimit',
          'stroke-miterlimit': 'strokeMiterlimit',
          strokewidth: 'strokeWidth',
          'stroke-width': 'strokeWidth',
          strokeopacity: 'strokeOpacity',
          'stroke-opacity': 'strokeOpacity',
          suppresscontenteditablewarning: 'suppressContentEditableWarning',
          suppresshydrationwarning: 'suppressHydrationWarning',
          surfacescale: 'surfaceScale',
          systemlanguage: 'systemLanguage',
          tablevalues: 'tableValues',
          targetx: 'targetX',
          targety: 'targetY',
          textanchor: 'textAnchor',
          'text-anchor': 'textAnchor',
          textdecoration: 'textDecoration',
          'text-decoration': 'textDecoration',
          textlength: 'textLength',
          textrendering: 'textRendering',
          'text-rendering': 'textRendering',
          to: 'to',
          transform: 'transform',
          typeof: 'typeof',
          u1: 'u1',
          u2: 'u2',
          underlineposition: 'underlinePosition',
          'underline-position': 'underlinePosition',
          underlinethickness: 'underlineThickness',
          'underline-thickness': 'underlineThickness',
          unicode: 'unicode',
          unicodebidi: 'unicodeBidi',
          'unicode-bidi': 'unicodeBidi',
          unicoderange: 'unicodeRange',
          'unicode-range': 'unicodeRange',
          unitsperem: 'unitsPerEm',
          'units-per-em': 'unitsPerEm',
          unselectable: 'unselectable',
          valphabetic: 'vAlphabetic',
          'v-alphabetic': 'vAlphabetic',
          values: 'values',
          vectoreffect: 'vectorEffect',
          'vector-effect': 'vectorEffect',
          version: 'version',
          vertadvy: 'vertAdvY',
          'vert-adv-y': 'vertAdvY',
          vertoriginx: 'vertOriginX',
          'vert-origin-x': 'vertOriginX',
          vertoriginy: 'vertOriginY',
          'vert-origin-y': 'vertOriginY',
          vhanging: 'vHanging',
          'v-hanging': 'vHanging',
          videographic: 'vIdeographic',
          'v-ideographic': 'vIdeographic',
          viewbox: 'viewBox',
          viewtarget: 'viewTarget',
          visibility: 'visibility',
          vmathematical: 'vMathematical',
          'v-mathematical': 'vMathematical',
          vocab: 'vocab',
          widths: 'widths',
          wordspacing: 'wordSpacing',
          'word-spacing': 'wordSpacing',
          writingmode: 'writingMode',
          'writing-mode': 'writingMode',
          x1: 'x1',
          x2: 'x2',
          x: 'x',
          xchannelselector: 'xChannelSelector',
          xheight: 'xHeight',
          'x-height': 'xHeight',
          xlinkactuate: 'xlinkActuate',
          'xlink:actuate': 'xlinkActuate',
          xlinkarcrole: 'xlinkArcrole',
          'xlink:arcrole': 'xlinkArcrole',
          xlinkhref: 'xlinkHref',
          'xlink:href': 'xlinkHref',
          xlinkrole: 'xlinkRole',
          'xlink:role': 'xlinkRole',
          xlinkshow: 'xlinkShow',
          'xlink:show': 'xlinkShow',
          xlinktitle: 'xlinkTitle',
          'xlink:title': 'xlinkTitle',
          xlinktype: 'xlinkType',
          'xlink:type': 'xlinkType',
          xmlbase: 'xmlBase',
          'xml:base': 'xmlBase',
          xmllang: 'xmlLang',
          'xml:lang': 'xmlLang',
          xmlns: 'xmlns',
          'xml:space': 'xmlSpace',
          xmlnsxlink: 'xmlnsXlink',
          'xmlns:xlink': 'xmlnsXlink',
          xmlspace: 'xmlSpace',
          y1: 'y1',
          y2: 'y2',
          y: 'y',
          ychannelselector: 'yChannelSelector',
          z: 'z',
          zoomandpan: 'zoomAndPan',
        },
        Pt = function () {};
      {
        var Vt = {},
          sr = /^on./,
          Br = /^on[^A-Z]/,
          Dn = new RegExp('^(aria)-[' + It + ']*$'),
          Ct = new RegExp('^(aria)[A-Z][' + It + ']*$');
        Pt = function (h, p, _, R) {
          if (X.call(Vt, p) && Vt[p]) return !0;
          var l = p.toLowerCase();
          if (l === 'onfocusin' || l === 'onfocusout')
            return (
              s(
                'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.',
              ),
              (Vt[p] = !0),
              !0
            );
          if (R != null) {
            var f = R.registrationNameDependencies,
              y = R.possibleRegistrationNames;
            if (f.hasOwnProperty(p)) return !0;
            var b = y.hasOwnProperty(l) ? y[l] : null;
            if (b != null)
              return (
                s(
                  'Invalid event handler property `%s`. Did you mean `%s`?',
                  p,
                  b,
                ),
                (Vt[p] = !0),
                !0
              );
            if (sr.test(p))
              return (
                s(
                  'Unknown event handler property `%s`. It will be ignored.',
                  p,
                ),
                (Vt[p] = !0),
                !0
              );
          } else if (sr.test(p))
            return (
              Br.test(p) &&
                s(
                  'Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.',
                  p,
                ),
              (Vt[p] = !0),
              !0
            );
          if (Dn.test(p) || Ct.test(p)) return !0;
          if (l === 'innerhtml')
            return (
              s(
                'Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.',
              ),
              (Vt[p] = !0),
              !0
            );
          if (l === 'aria')
            return (
              s(
                'The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.',
              ),
              (Vt[p] = !0),
              !0
            );
          if (l === 'is' && _ !== null && _ !== void 0 && typeof _ != 'string')
            return (
              s(
                'Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.',
                typeof _,
              ),
              (Vt[p] = !0),
              !0
            );
          if (typeof _ == 'number' && isNaN(_))
            return (
              s(
                'Received NaN for the `%s` attribute. If this is expected, cast the value to a string.',
                p,
              ),
              (Vt[p] = !0),
              !0
            );
          var P = Ve(p),
            A = P !== null && P.type === se;
          if (Xe.hasOwnProperty(l)) {
            var N = Xe[l];
            if (N !== p)
              return (
                s('Invalid DOM property `%s`. Did you mean `%s`?', p, N),
                (Vt[p] = !0),
                !0
              );
          } else if (!A && p !== l)
            return (
              s(
                'React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.',
                p,
                l,
              ),
              (Vt[p] = !0),
              !0
            );
          return typeof _ == 'boolean' && mr(p, _, P, !1)
            ? (_
                ? s(
                    'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.',
                    _,
                    p,
                    p,
                    _,
                    p,
                  )
                : s(
                    'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',
                    _,
                    p,
                    p,
                    _,
                    p,
                    p,
                    p,
                  ),
              (Vt[p] = !0),
              !0)
            : A
              ? !0
              : mr(p, _, P, !1)
                ? ((Vt[p] = !0), !1)
                : ((_ === 'false' || _ === 'true') &&
                    P !== null &&
                    P.type === re &&
                    (s(
                      'Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?',
                      _,
                      p,
                      _ === 'false'
                        ? 'The browser will interpret it as a truthy value.'
                        : 'Although this works, it will not work as expected if you pass the string "false".',
                      p,
                      _,
                    ),
                    (Vt[p] = !0)),
                  !0);
        };
      }
      var Ms = function (h, p, _) {
        {
          var R = [];
          for (var l in p) {
            var f = Pt(h, l, p[l], _);
            f || R.push(l);
          }
          var y = R.map(function (b) {
            return '`' + b + '`';
          }).join(', ');
          R.length === 1
            ? s(
                'Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                y,
                h,
              )
            : R.length > 1 &&
              s(
                'Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ',
                y,
                h,
              );
        }
      };
      function Ii(h, p, _) {
        Ho(h, p) || Ms(h, p, _);
      }
      var rt = function () {};
      {
        var Wr = /^(?:webkit|moz|o)[A-Z]/,
          Ec = /^-ms-/,
          xr = /-(.)/g,
          Zt = /;\s*$/,
          un = {},
          Gr = {},
          yr = !1,
          jn = !1,
          Ze = function (h) {
            return h.replace(xr, function (p, _) {
              return _.toUpperCase();
            });
          },
          Rc = function (h) {
            (un.hasOwnProperty(h) && un[h]) ||
              ((un[h] = !0),
              s(
                'Unsupported style property %s. Did you mean %s?',
                h,
                Ze(h.replace(Ec, 'ms-')),
              ));
          },
          Tc = function (h) {
            (un.hasOwnProperty(h) && un[h]) ||
              ((un[h] = !0),
              s(
                'Unsupported vendor-prefixed style property %s. Did you mean %s?',
                h,
                h.charAt(0).toUpperCase() + h.slice(1),
              ));
          },
          Pc = function (h, p) {
            (Gr.hasOwnProperty(p) && Gr[p]) ||
              ((Gr[p] = !0),
              s(
                `Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`,
                h,
                p.replace(Zt, ''),
              ));
          },
          kc = function (h, p) {
            yr ||
              ((yr = !0),
              s(
                '`NaN` is an invalid value for the `%s` css style property.',
                h,
              ));
          },
          Uo = function (h, p) {
            jn ||
              ((jn = !0),
              s(
                '`Infinity` is an invalid value for the `%s` css style property.',
                h,
              ));
          };
        rt = function (h, p) {
          h.indexOf('-') > -1
            ? Rc(h)
            : Wr.test(h)
              ? Tc(h)
              : Zt.test(p) && Pc(h, p),
            typeof p == 'number' &&
              (isNaN(p) ? kc(h, p) : isFinite(p) || Uo(h, p));
        };
      }
      var dl = rt,
        xc = /["'&<>]/;
      function kt(h) {
        de(h);
        var p = '' + h,
          _ = xc.exec(p);
        if (!_) return p;
        var R,
          l = '',
          f,
          y = 0;
        for (f = _.index; f < p.length; f++) {
          switch (p.charCodeAt(f)) {
            case 34:
              R = '&quot;';
              break;
            case 38:
              R = '&amp;';
              break;
            case 39:
              R = '&#x27;';
              break;
            case 60:
              R = '&lt;';
              break;
            case 62:
              R = '&gt;';
              break;
            default:
              continue;
          }
          y !== f && (l += p.substring(y, f)), (y = f + 1), (l += R);
        }
        return y !== f ? l + p.substring(y, f) : l;
      }
      function $t(h) {
        return typeof h == 'boolean' || typeof h == 'number' ? '' + h : kt(h);
      }
      var Cc = /([A-Z])/g,
        Oc = /^ms-/;
      function Ic(h) {
        return h.replace(Cc, '-$1').toLowerCase().replace(Oc, '-ms-');
      }
      var hl =
          /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i,
        pl = !1;
      function Ac(h) {
        !pl &&
          hl.test(h) &&
          ((pl = !0),
          s(
            'A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.',
            JSON.stringify(h),
          ));
      }
      var $c = Array.isArray;
      function Hs(h) {
        return $c(h);
      }
      var Ai = O('<script>'),
        Fn = O('</script>'),
        $i = O('<script src="'),
        Ni = O('<script type="module" src="'),
        zs = O('" async=""></script>');
      function Vo(h) {
        return de(h), ('' + h).replace(qn, Li);
      }
      var qn = /(<\/|<)(s)(cript)/gi,
        Li = function (h, p, _, R) {
          return '' + p + (_ === 's' ? '\\u0073' : '\\u0053') + R;
        };
      function Cr(h, p, _, R, l) {
        var f = h === void 0 ? '' : h,
          y = p === void 0 ? Ai : O('<script nonce="' + $t(p) + '">'),
          b = [];
        if ((_ !== void 0 && b.push(y, Vo(_), Fn), R !== void 0))
          for (var P = 0; P < R.length; P++) b.push($i, $t(R[P]), zs);
        if (l !== void 0)
          for (var A = 0; A < l.length; A++) b.push(Ni, $t(l[A]), zs);
        return {
          bootstrapChunks: b,
          startInlineScript: y,
          placeholderPrefix: O(f + 'P:'),
          segmentPrefix: O(f + 'S:'),
          boundaryPrefix: f + 'B:',
          idPrefix: f,
          nextSuspenseID: 0,
          sentCompleteSegmentFunction: !1,
          sentCompleteBoundaryFunction: !1,
          sentClientRenderFunction: !1,
        };
      }
      var as = 0,
        Mn = 1,
        ls = 2,
        us = 3,
        Hn = 4,
        Us = 5,
        Bo = 6,
        Wo = 7;
      function Qt(h, p) {
        return { insertionMode: h, selectedValue: p };
      }
      function Go(h) {
        var p =
          h === 'http://www.w3.org/2000/svg'
            ? ls
            : h === 'http://www.w3.org/1998/Math/MathML'
              ? us
              : as;
        return Qt(p, null);
      }
      function Di(h, p, _) {
        switch (p) {
          case 'select':
            return Qt(Mn, _.value != null ? _.value : _.defaultValue);
          case 'svg':
            return Qt(ls, null);
          case 'math':
            return Qt(us, null);
          case 'foreignObject':
            return Qt(Mn, null);
          case 'table':
            return Qt(Hn, null);
          case 'thead':
          case 'tbody':
          case 'tfoot':
            return Qt(Us, null);
          case 'colgroup':
            return Qt(Wo, null);
          case 'tr':
            return Qt(Bo, null);
        }
        return h.insertionMode >= Hn || h.insertionMode === as
          ? Qt(Mn, null)
          : h;
      }
      var ji = null;
      function Fi(h) {
        var p = h.nextSuspenseID++;
        return O(h.boundaryPrefix + p.toString(16));
      }
      function ml(h, p, _) {
        var R = h.idPrefix,
          l = ':' + R + 'R' + p;
        return _ > 0 && (l += 'H' + _.toString(32)), l + ':';
      }
      function Or(h) {
        return $t(h);
      }
      var zn = O('<!-- -->');
      function Sn(h, p, _, R) {
        return p === '' ? R : (R && h.push(zn), h.push(Or(p)), !0);
      }
      function cs(h, p, _, R) {
        _ && R && h.push(zn);
      }
      var Kt = new Map();
      function cn(h) {
        var p = Kt.get(h);
        if (p !== void 0) return p;
        var _ = O($t(Ic(h)));
        return Kt.set(h, _), _;
      }
      var Vs = O(' style="'),
        Bs = O(':'),
        Un = O(';');
      function Ws(h, p, _) {
        if (typeof _ != 'object')
          throw new Error(
            "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.",
          );
        var R = !0;
        for (var l in _)
          if (X.call(_, l)) {
            var f = _[l];
            if (!(f == null || typeof f == 'boolean' || f === '')) {
              var y = void 0,
                b = void 0,
                P = l.indexOf('--') === 0;
              P
                ? ((y = $t(l)), W(f, l), (b = $t(('' + f).trim())))
                : (dl(l, f),
                  (y = cn(l)),
                  typeof f == 'number'
                    ? f !== 0 && !X.call(he, l)
                      ? (b = f + 'px')
                      : (b = '' + f)
                    : (W(f, l), (b = $t(('' + f).trim())))),
                R ? ((R = !1), h.push(Vs, y, Bs, b)) : h.push(Un, y, Bs, b);
            }
          }
        R || h.push(_n);
      }
      var Yr = O(' '),
        Vn = O('="'),
        _n = O('"'),
        qi = O('=""');
      function er(h, p, _, R) {
        switch (_) {
          case 'style': {
            Ws(h, p, R);
            return;
          }
          case 'defaultValue':
          case 'defaultChecked':
          case 'innerHTML':
          case 'suppressContentEditableWarning':
          case 'suppressHydrationWarning':
            return;
        }
        if (
          !(
            _.length > 2 &&
            (_[0] === 'o' || _[0] === 'O') &&
            (_[1] === 'n' || _[1] === 'N')
          )
        ) {
          var l = Ve(_);
          if (l !== null) {
            switch (typeof R) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean':
                if (!l.acceptsBooleans) return;
            }
            var f = l.attributeName,
              y = f;
            switch (l.type) {
              case re:
                R && h.push(Yr, y, qi);
                return;
              case Ie:
                R === !0
                  ? h.push(Yr, y, qi)
                  : R === !1 || h.push(Yr, y, Vn, $t(R), _n);
                return;
              case Wt:
                isNaN(R) || h.push(Yr, y, Vn, $t(R), _n);
                break;
              case ve:
                !isNaN(R) && R >= 1 && h.push(Yr, y, Vn, $t(R), _n);
                break;
              default:
                l.sanitizeURL && (Y(R, f), (R = '' + R), Ac(R)),
                  h.push(Yr, y, Vn, $t(R), _n);
            }
          } else if (Ce(_)) {
            switch (typeof R) {
              case 'function':
              case 'symbol':
                return;
              case 'boolean': {
                var b = _.toLowerCase().slice(0, 5);
                if (b !== 'data-' && b !== 'aria-') return;
              }
            }
            h.push(Yr, _, Vn, $t(R), _n);
          }
        }
      }
      var Jr = O('>'),
        Yo = O('/>');
      function Gs(h, p, _) {
        if (p != null) {
          if (_ != null)
            throw new Error(
              'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
            );
          if (typeof p != 'object' || !('__html' in p))
            throw new Error(
              '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
            );
          var R = p.__html;
          R != null && (de(R), h.push('' + R));
        }
      }
      var Mi = !1,
        Jo = !1,
        Ko = !1,
        yl = !1,
        gl = !1,
        vl = !1,
        Xo = !1;
      function Bn(h, p) {
        {
          var _ = h[p];
          if (_ != null) {
            var R = Hs(_);
            h.multiple && !R
              ? s(
                  'The `%s` prop supplied to <select> must be an array if `multiple` is true.',
                  p,
                )
              : !h.multiple &&
                R &&
                s(
                  'The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.',
                  p,
                );
          }
        }
      }
      function Nc(h, p, _) {
        zt('select', p),
          Bn(p, 'value'),
          Bn(p, 'defaultValue'),
          p.value !== void 0 &&
            p.defaultValue !== void 0 &&
            !Ko &&
            (s(
              'Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
            ),
            (Ko = !0)),
          h.push(V('select'));
        var R = null,
          l = null;
        for (var f in p)
          if (X.call(p, f)) {
            var y = p[f];
            if (y == null) continue;
            switch (f) {
              case 'children':
                R = y;
                break;
              case 'dangerouslySetInnerHTML':
                l = y;
                break;
              case 'defaultValue':
              case 'value':
                break;
              default:
                er(h, _, f, y);
                break;
            }
          }
        return h.push(Jr), Gs(h, l, R), R;
      }
      function wn(h) {
        var p = '';
        return (
          e.Children.forEach(h, function (_) {
            _ != null &&
              ((p += _),
              !gl &&
                typeof _ != 'string' &&
                typeof _ != 'number' &&
                ((gl = !0),
                s(
                  'Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.',
                )));
          }),
          p
        );
      }
      var Hi = O(' selected=""');
      function bl(h, p, _, R) {
        var l = R.selectedValue;
        h.push(V('option'));
        var f = null,
          y = null,
          b = null,
          P = null;
        for (var A in p)
          if (X.call(p, A)) {
            var N = p[A];
            if (N == null) continue;
            switch (A) {
              case 'children':
                f = N;
                break;
              case 'selected':
                (b = N),
                  Xo ||
                    (s(
                      'Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.',
                    ),
                    (Xo = !0));
                break;
              case 'dangerouslySetInnerHTML':
                P = N;
                break;
              case 'value':
                y = N;
              default:
                er(h, _, A, N);
                break;
            }
          }
        if (l != null) {
          var M;
          if (
            (y !== null
              ? (Y(y, 'value'), (M = '' + y))
              : (P !== null &&
                  (vl ||
                    ((vl = !0),
                    s(
                      'Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.',
                    ))),
                (M = wn(f))),
            Hs(l))
          )
            for (var B = 0; B < l.length; B++) {
              Y(l[B], 'value');
              var ee = '' + l[B];
              if (ee === M) {
                h.push(Hi);
                break;
              }
            }
          else Y(l, 'select.value'), '' + l === M && h.push(Hi);
        } else b && h.push(Hi);
        return h.push(Jr), Gs(h, P, f), f;
      }
      function Ys(h, p, _) {
        zt('input', p),
          p.checked !== void 0 &&
            p.defaultChecked !== void 0 &&
            !Jo &&
            (s(
              '%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
              'A component',
              p.type,
            ),
            (Jo = !0)),
          p.value !== void 0 &&
            p.defaultValue !== void 0 &&
            !Mi &&
            (s(
              '%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components',
              'A component',
              p.type,
            ),
            (Mi = !0)),
          h.push(V('input'));
        var R = null,
          l = null,
          f = null,
          y = null;
        for (var b in p)
          if (X.call(p, b)) {
            var P = p[b];
            if (P == null) continue;
            switch (b) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  'input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              case 'defaultChecked':
                y = P;
                break;
              case 'defaultValue':
                l = P;
                break;
              case 'checked':
                f = P;
                break;
              case 'value':
                R = P;
                break;
              default:
                er(h, _, b, P);
                break;
            }
          }
        return (
          f !== null
            ? er(h, _, 'checked', f)
            : y !== null && er(h, _, 'checked', y),
          R !== null
            ? er(h, _, 'value', R)
            : l !== null && er(h, _, 'value', l),
          h.push(Yo),
          null
        );
      }
      function gr(h, p, _) {
        zt('textarea', p),
          p.value !== void 0 &&
            p.defaultValue !== void 0 &&
            !yl &&
            (s(
              'Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components',
            ),
            (yl = !0)),
          h.push(V('textarea'));
        var R = null,
          l = null,
          f = null;
        for (var y in p)
          if (X.call(p, y)) {
            var b = p[y];
            if (b == null) continue;
            switch (y) {
              case 'children':
                f = b;
                break;
              case 'value':
                R = b;
                break;
              case 'defaultValue':
                l = b;
                break;
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  '`dangerouslySetInnerHTML` does not make sense on <textarea>.',
                );
              default:
                er(h, _, y, b);
                break;
            }
          }
        if ((R === null && l !== null && (R = l), h.push(Jr), f != null)) {
          if (
            (s(
              'Use the `defaultValue` or `value` props instead of setting children on <textarea>.',
            ),
            R != null)
          )
            throw new Error(
              'If you supply `defaultValue` on a <textarea>, do not pass children.',
            );
          if (Hs(f)) {
            if (f.length > 1)
              throw new Error('<textarea> can only have at most one child.');
            de(f[0]), (R = '' + f[0]);
          }
          de(f), (R = '' + f);
        }
        return (
          typeof R == 'string' &&
            R[0] ===
              `
` &&
            h.push(ta),
          R !== null && (Y(R, 'value'), h.push(Or('' + R))),
          null
        );
      }
      function Zo(h, p, _, R) {
        h.push(V(_));
        for (var l in p)
          if (X.call(p, l)) {
            var f = p[l];
            if (f == null) continue;
            switch (l) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  _ +
                    ' is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.',
                );
              default:
                er(h, R, l, f);
                break;
            }
          }
        return h.push(Yo), null;
      }
      function Qo(h, p, _) {
        h.push(V('menuitem'));
        for (var R in p)
          if (X.call(p, R)) {
            var l = p[R];
            if (l == null) continue;
            switch (R) {
              case 'children':
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  'menuitems cannot have `children` nor `dangerouslySetInnerHTML`.',
                );
              default:
                er(h, _, R, l);
                break;
            }
          }
        return h.push(Jr), null;
      }
      function Lc(h, p, _) {
        h.push(V('title'));
        var R = null;
        for (var l in p)
          if (X.call(p, l)) {
            var f = p[l];
            if (f == null) continue;
            switch (l) {
              case 'children':
                R = f;
                break;
              case 'dangerouslySetInnerHTML':
                throw new Error(
                  '`dangerouslySetInnerHTML` does not make sense on <title>.',
                );
              default:
                er(h, _, l, f);
                break;
            }
          }
        h.push(Jr);
        {
          var y = Array.isArray(R) && R.length < 2 ? R[0] || null : R;
          Array.isArray(R) && R.length > 1
            ? s(
                'A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering',
              )
            : y != null && y.$$typeof != null
              ? s(
                  'A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering',
                )
              : y != null &&
                typeof y != 'string' &&
                typeof y != 'number' &&
                s(
                  'A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering',
                );
        }
        return R;
      }
      function ea(h, p, _, R) {
        h.push(V(_));
        var l = null,
          f = null;
        for (var y in p)
          if (X.call(p, y)) {
            var b = p[y];
            if (b == null) continue;
            switch (y) {
              case 'children':
                l = b;
                break;
              case 'dangerouslySetInnerHTML':
                f = b;
                break;
              default:
                er(h, R, y, b);
                break;
            }
          }
        return (
          h.push(Jr),
          Gs(h, f, l),
          typeof l == 'string' ? (h.push(Or(l)), null) : l
        );
      }
      function Dc(h, p, _, R) {
        h.push(V(_));
        var l = null,
          f = null;
        for (var y in p)
          if (X.call(p, y)) {
            var b = p[y];
            if (b == null) continue;
            switch (y) {
              case 'children':
                l = b;
                break;
              case 'dangerouslySetInnerHTML':
                f = b;
                break;
              case 'style':
                Ws(h, R, b);
                break;
              case 'suppressContentEditableWarning':
              case 'suppressHydrationWarning':
                break;
              default:
                Ce(y) &&
                  typeof b != 'function' &&
                  typeof b != 'symbol' &&
                  h.push(Yr, y, Vn, $t(b), _n);
                break;
            }
          }
        return h.push(Jr), Gs(h, f, l), l;
      }
      var ta = O(`
`);
      function k(h, p, _, R) {
        h.push(V(_));
        var l = null,
          f = null;
        for (var y in p)
          if (X.call(p, y)) {
            var b = p[y];
            if (b == null) continue;
            switch (y) {
              case 'children':
                l = b;
                break;
              case 'dangerouslySetInnerHTML':
                f = b;
                break;
              default:
                er(h, R, y, b);
                break;
            }
          }
        if ((h.push(Jr), f != null)) {
          if (l != null)
            throw new Error(
              'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
            );
          if (typeof f != 'object' || !('__html' in f))
            throw new Error(
              '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.',
            );
          var P = f.__html;
          P != null &&
            (typeof P == 'string' &&
            P.length > 0 &&
            P[0] ===
              `
`
              ? h.push(ta, P)
              : (de(P), h.push('' + P)));
        }
        return (
          typeof l == 'string' &&
            l[0] ===
              `
` &&
            h.push(ta),
          l
        );
      }
      var L = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
        z = new Map();
      function V(h) {
        var p = z.get(h);
        if (p === void 0) {
          if (!L.test(h)) throw new Error('Invalid tag: ' + h);
          (p = O('<' + h)), z.set(h, p);
        }
        return p;
      }
      var Z = O('<!DOCTYPE html>');
      function Se(h, p, _, R, l) {
        switch (
          (At(p, _),
          Oi(p, _),
          Ii(p, _, null),
          !_.suppressContentEditableWarning &&
            _.contentEditable &&
            _.children != null &&
            s(
              'A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.',
            ),
          l.insertionMode !== ls &&
            l.insertionMode !== us &&
            p.indexOf('-') === -1 &&
            typeof _.is != 'string' &&
            p.toLowerCase() !== p &&
            s(
              '<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.',
              p,
            ),
          p)
        ) {
          case 'select':
            return Nc(h, _, R);
          case 'option':
            return bl(h, _, R, l);
          case 'textarea':
            return gr(h, _, R);
          case 'input':
            return Ys(h, _, R);
          case 'menuitem':
            return Qo(h, _, R);
          case 'title':
            return Lc(h, _, R);
          case 'listing':
          case 'pre':
            return k(h, _, p, R);
          case 'area':
          case 'base':
          case 'br':
          case 'col':
          case 'embed':
          case 'hr':
          case 'img':
          case 'keygen':
          case 'link':
          case 'meta':
          case 'param':
          case 'source':
          case 'track':
          case 'wbr':
            return Zo(h, _, p, R);
          case 'annotation-xml':
          case 'color-profile':
          case 'font-face':
          case 'font-face-src':
          case 'font-face-uri':
          case 'font-face-format':
          case 'font-face-name':
          case 'missing-glyph':
            return ea(h, _, p, R);
          case 'html':
            return l.insertionMode === as && h.push(Z), ea(h, _, p, R);
          default:
            return p.indexOf('-') === -1 && typeof _.is != 'string'
              ? ea(h, _, p, R)
              : Dc(h, _, p, R);
        }
      }
      var fe = O('</'),
        we = O('>');
      function $e(h, p, _) {
        switch (p) {
          case 'area':
          case 'base':
          case 'br':
          case 'col':
          case 'embed':
          case 'hr':
          case 'img':
          case 'input':
          case 'keygen':
          case 'link':
          case 'meta':
          case 'param':
          case 'source':
          case 'track':
          case 'wbr':
            break;
          default:
            h.push(fe, p, we);
        }
      }
      function Be(h, p) {
        for (var _ = p.bootstrapChunks, R = 0; R < _.length - 1; R++)
          T(h, _[R]);
        return R < _.length ? I(h, _[R]) : !0;
      }
      var nt = O('<template id="'),
        st = O('"></template>');
      function ot(h, p, _) {
        T(h, nt), T(h, p.placeholderPrefix);
        var R = _.toString(16);
        return T(h, R), I(h, st);
      }
      var Et = O('<!--$-->'),
        Nt = O('<!--$?--><template id="'),
        Js = O('"></template>'),
        ra = O('<!--$!-->'),
        zi = O('<!--/$-->'),
        Sl = O('<template'),
        Ui = O('"'),
        jc = O(' data-dgst="'),
        _l = O(' data-msg="'),
        Fc = O(' data-stck="'),
        lv = O('></template>');
      function uv(h, p) {
        return I(h, Et);
      }
      function Ih(h, p, _) {
        if ((T(h, Nt), _ === null))
          throw new Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        return T(h, _), I(h, Js);
      }
      function cv(h, p, _, R, l) {
        var f;
        return (
          (f = I(h, ra)),
          T(h, Sl),
          _ && (T(h, jc), T(h, $t(_)), T(h, Ui)),
          R && (T(h, _l), T(h, $t(R)), T(h, Ui)),
          l && (T(h, Fc), T(h, $t(l)), T(h, Ui)),
          (f = I(h, lv)),
          f
        );
      }
      function fv(h, p) {
        return I(h, zi);
      }
      function Ah(h, p) {
        return I(h, zi);
      }
      function dv(h, p) {
        return I(h, zi);
      }
      var hv = O('<div hidden id="'),
        pv = O('">'),
        mv = O('</div>'),
        yv = O('<svg aria-hidden="true" style="display:none" id="'),
        gv = O('">'),
        vv = O('</svg>'),
        bv = O('<math aria-hidden="true" style="display:none" id="'),
        Sv = O('">'),
        _v = O('</math>'),
        wv = O('<table hidden id="'),
        Ev = O('">'),
        Rv = O('</table>'),
        Tv = O('<table hidden><tbody id="'),
        Pv = O('">'),
        kv = O('</tbody></table>'),
        xv = O('<table hidden><tr id="'),
        Cv = O('">'),
        Ov = O('</tr></table>'),
        Iv = O('<table hidden><colgroup id="'),
        Av = O('">'),
        $v = O('</colgroup></table>');
      function Nv(h, p, _, R) {
        switch (_.insertionMode) {
          case as:
          case Mn:
            return (
              T(h, hv), T(h, p.segmentPrefix), T(h, R.toString(16)), I(h, pv)
            );
          case ls:
            return (
              T(h, yv), T(h, p.segmentPrefix), T(h, R.toString(16)), I(h, gv)
            );
          case us:
            return (
              T(h, bv), T(h, p.segmentPrefix), T(h, R.toString(16)), I(h, Sv)
            );
          case Hn:
            return (
              T(h, wv), T(h, p.segmentPrefix), T(h, R.toString(16)), I(h, Ev)
            );
          case Us:
            return (
              T(h, Tv), T(h, p.segmentPrefix), T(h, R.toString(16)), I(h, Pv)
            );
          case Bo:
            return (
              T(h, xv), T(h, p.segmentPrefix), T(h, R.toString(16)), I(h, Cv)
            );
          case Wo:
            return (
              T(h, Iv), T(h, p.segmentPrefix), T(h, R.toString(16)), I(h, Av)
            );
          default:
            throw new Error('Unknown insertion mode. This is a bug in React.');
        }
      }
      function Lv(h, p) {
        switch (p.insertionMode) {
          case as:
          case Mn:
            return I(h, mv);
          case ls:
            return I(h, vv);
          case us:
            return I(h, _v);
          case Hn:
            return I(h, Rv);
          case Us:
            return I(h, kv);
          case Bo:
            return I(h, Ov);
          case Wo:
            return I(h, $v);
          default:
            throw new Error('Unknown insertion mode. This is a bug in React.');
        }
      }
      var Dv =
          'function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}',
        jv =
          'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}',
        Fv =
          'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}',
        qv = O(Dv + ';$RS("'),
        Mv = O('$RS("'),
        Hv = O('","'),
        zv = O('")</script>');
      function qc(h, p, _) {
        T(h, p.startInlineScript),
          p.sentCompleteSegmentFunction
            ? T(h, Mv)
            : ((p.sentCompleteSegmentFunction = !0), T(h, qv)),
          T(h, p.segmentPrefix);
        var R = _.toString(16);
        return T(h, R), T(h, Hv), T(h, p.placeholderPrefix), T(h, R), I(h, zv);
      }
      var Uv = O(jv + ';$RC("'),
        Vv = O('$RC("'),
        Mc = O('","'),
        $h = O('")</script>');
      function Nh(h, p, _, R) {
        if (
          (T(h, p.startInlineScript),
          p.sentCompleteBoundaryFunction
            ? T(h, Vv)
            : ((p.sentCompleteBoundaryFunction = !0), T(h, Uv)),
          _ === null)
        )
          throw new Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        var l = R.toString(16);
        return T(h, _), T(h, Mc), T(h, p.segmentPrefix), T(h, l), I(h, $h);
      }
      var Lh = O(Fv + ';$RX("'),
        Dh = O('$RX("'),
        Bv = O('"'),
        Wv = O(')</script>'),
        Hc = O(',');
      function Gv(h, p, _, R, l, f) {
        if (
          (T(h, p.startInlineScript),
          p.sentClientRenderFunction
            ? T(h, Dh)
            : ((p.sentClientRenderFunction = !0), T(h, Lh)),
          _ === null)
        )
          throw new Error(
            'An ID must have been assigned before we can complete the boundary.',
          );
        return (
          T(h, _),
          T(h, Bv),
          (R || l || f) && (T(h, Hc), T(h, zc(R || ''))),
          (l || f) && (T(h, Hc), T(h, zc(l || ''))),
          f && (T(h, Hc), T(h, zc(f))),
          I(h, Wv)
        );
      }
      var Kr = /[<\u2028\u2029]/g;
      function zc(h) {
        var p = JSON.stringify(h);
        return p.replace(Kr, function (_) {
          switch (_) {
            case '<':
              return '\\u003c';
            case '\u2028':
              return '\\u2028';
            case '\u2029':
              return '\\u2029';
            default:
              throw new Error(
                'escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React',
              );
          }
        });
      }
      var Ir = Object.assign,
        jh = Symbol.for('react.element'),
        Uc = Symbol.for('react.portal'),
        Vc = Symbol.for('react.fragment'),
        wl = Symbol.for('react.strict_mode'),
        El = Symbol.for('react.profiler'),
        na = Symbol.for('react.provider'),
        sa = Symbol.for('react.context'),
        ia = Symbol.for('react.forward_ref'),
        oa = Symbol.for('react.suspense'),
        Vi = Symbol.for('react.suspense_list'),
        Bc = Symbol.for('react.memo'),
        Rl = Symbol.for('react.lazy'),
        Yv = Symbol.for('react.scope'),
        Jv = Symbol.for('react.debug_trace_mode'),
        Fh = Symbol.for('react.legacy_hidden'),
        Kv = Symbol.for('react.default_value'),
        qh = Symbol.iterator,
        Xv = '@@iterator';
      function Mh(h) {
        if (h === null || typeof h != 'object') return null;
        var p = (qh && h[qh]) || h[Xv];
        return typeof p == 'function' ? p : null;
      }
      function ct(h, p, _) {
        var R = h.displayName;
        if (R) return R;
        var l = p.displayName || p.name || '';
        return l !== '' ? _ + '(' + l + ')' : _;
      }
      function Bi(h) {
        return h.displayName || 'Context';
      }
      function at(h) {
        if (h == null) return null;
        if (
          (typeof h.tag == 'number' &&
            s(
              'Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.',
            ),
          typeof h == 'function')
        )
          return h.displayName || h.name || null;
        if (typeof h == 'string') return h;
        switch (h) {
          case Vc:
            return 'Fragment';
          case Uc:
            return 'Portal';
          case El:
            return 'Profiler';
          case wl:
            return 'StrictMode';
          case oa:
            return 'Suspense';
          case Vi:
            return 'SuspenseList';
        }
        if (typeof h == 'object')
          switch (h.$$typeof) {
            case sa:
              var p = h;
              return Bi(p) + '.Consumer';
            case na:
              var _ = h;
              return Bi(_._context) + '.Provider';
            case ia:
              return ct(h, h.render, 'ForwardRef');
            case Bc:
              var R = h.displayName || null;
              return R !== null ? R : at(h.type) || 'Memo';
            case Rl: {
              var l = h,
                f = l._payload,
                y = l._init;
              try {
                return at(y(f));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var Wi = 0,
        Wc,
        Gc,
        Yc,
        Jc,
        Kc,
        Xc,
        Hh;
      function zh() {}
      zh.__reactDisabledLog = !0;
      function Zc() {
        {
          if (Wi === 0) {
            (Wc = console.log),
              (Gc = console.info),
              (Yc = console.warn),
              (Jc = console.error),
              (Kc = console.group),
              (Xc = console.groupCollapsed),
              (Hh = console.groupEnd);
            var h = {
              configurable: !0,
              enumerable: !0,
              value: zh,
              writable: !0,
            };
            Object.defineProperties(console, {
              info: h,
              log: h,
              warn: h,
              error: h,
              group: h,
              groupCollapsed: h,
              groupEnd: h,
            });
          }
          Wi++;
        }
      }
      function Qc() {
        {
          if ((Wi--, Wi === 0)) {
            var h = { configurable: !0, enumerable: !0, writable: !0 };
            Object.defineProperties(console, {
              log: Ir({}, h, { value: Wc }),
              info: Ir({}, h, { value: Gc }),
              warn: Ir({}, h, { value: Yc }),
              error: Ir({}, h, { value: Jc }),
              group: Ir({}, h, { value: Kc }),
              groupCollapsed: Ir({}, h, { value: Xc }),
              groupEnd: Ir({}, h, { value: Hh }),
            });
          }
          Wi < 0 &&
            s(
              'disabledDepth fell below zero. This is a bug in React. Please file an issue.',
            );
        }
      }
      var Ks = n.ReactCurrentDispatcher,
        aa;
      function fs(h, p, _) {
        {
          if (aa === void 0)
            try {
              throw Error();
            } catch (l) {
              var R = l.stack.trim().match(/\n( *(at )?)/);
              aa = (R && R[1]) || '';
            }
          return (
            `
` +
            aa +
            h
          );
        }
      }
      var ef = !1,
        Gi;
      {
        var Zv = typeof WeakMap == 'function' ? WeakMap : Map;
        Gi = new Zv();
      }
      function Tl(h, p) {
        if (!h || ef) return '';
        {
          var _ = Gi.get(h);
          if (_ !== void 0) return _;
        }
        var R;
        ef = !0;
        var l = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var f;
        (f = Ks.current), (Ks.current = null), Zc();
        try {
          if (p) {
            var y = function () {
              throw Error();
            };
            if (
              (Object.defineProperty(y.prototype, 'props', {
                set: function () {
                  throw Error();
                },
              }),
              typeof Reflect == 'object' && Reflect.construct)
            ) {
              try {
                Reflect.construct(y, []);
              } catch (oe) {
                R = oe;
              }
              Reflect.construct(h, [], y);
            } else {
              try {
                y.call();
              } catch (oe) {
                R = oe;
              }
              h.call(y.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (oe) {
              R = oe;
            }
            h();
          }
        } catch (oe) {
          if (oe && R && typeof oe.stack == 'string') {
            for (
              var b = oe.stack.split(`
`),
                P = R.stack.split(`
`),
                A = b.length - 1,
                N = P.length - 1;
              A >= 1 && N >= 0 && b[A] !== P[N];

            )
              N--;
            for (; A >= 1 && N >= 0; A--, N--)
              if (b[A] !== P[N]) {
                if (A !== 1 || N !== 1)
                  do
                    if ((A--, N--, N < 0 || b[A] !== P[N])) {
                      var M =
                        `
` + b[A].replace(' at new ', ' at ');
                      return (
                        h.displayName &&
                          M.includes('<anonymous>') &&
                          (M = M.replace('<anonymous>', h.displayName)),
                        typeof h == 'function' && Gi.set(h, M),
                        M
                      );
                    }
                  while (A >= 1 && N >= 0);
                break;
              }
          }
        } finally {
          (ef = !1), (Ks.current = f), Qc(), (Error.prepareStackTrace = l);
        }
        var B = h ? h.displayName || h.name : '',
          ee = B ? fs(B) : '';
        return typeof h == 'function' && Gi.set(h, ee), ee;
      }
      function Qv(h, p, _) {
        return Tl(h, !0);
      }
      function Pl(h, p, _) {
        return Tl(h, !1);
      }
      function Uh(h) {
        var p = h.prototype;
        return !!(p && p.isReactComponent);
      }
      function kl(h, p, _) {
        if (h == null) return '';
        if (typeof h == 'function') return Tl(h, Uh(h));
        if (typeof h == 'string') return fs(h);
        switch (h) {
          case oa:
            return fs('Suspense');
          case Vi:
            return fs('SuspenseList');
        }
        if (typeof h == 'object')
          switch (h.$$typeof) {
            case ia:
              return Pl(h.render);
            case Bc:
              return kl(h.type, p, _);
            case Rl: {
              var R = h,
                l = R._payload,
                f = R._init;
              try {
                return kl(f(l), p, _);
              } catch {}
            }
          }
        return '';
      }
      var la = {},
        tf = n.ReactDebugCurrentFrame;
      function Yi(h) {
        if (h) {
          var p = h._owner,
            _ = kl(h.type, h._source, p ? p.type : null);
          tf.setExtraStackFrame(_);
        } else tf.setExtraStackFrame(null);
      }
      function ua(h, p, _, R, l) {
        {
          var f = Function.call.bind(X);
          for (var y in h)
            if (f(h, y)) {
              var b = void 0;
              try {
                if (typeof h[y] != 'function') {
                  var P = Error(
                    (R || 'React class') +
                      ': ' +
                      _ +
                      ' type `' +
                      y +
                      '` is invalid; it must be a function, usually from the `prop-types` package, but received `' +
                      typeof h[y] +
                      '`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',
                  );
                  throw ((P.name = 'Invariant Violation'), P);
                }
                b = h[y](
                  p,
                  y,
                  R,
                  _,
                  null,
                  'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',
                );
              } catch (A) {
                b = A;
              }
              b &&
                !(b instanceof Error) &&
                (Yi(l),
                s(
                  '%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).',
                  R || 'React class',
                  _,
                  y,
                  typeof b,
                ),
                Yi(null)),
                b instanceof Error &&
                  !(b.message in la) &&
                  ((la[b.message] = !0),
                  Yi(l),
                  s('Failed %s type: %s', _, b.message),
                  Yi(null));
            }
        }
      }
      var xl;
      xl = {};
      var Cl = {};
      Object.freeze(Cl);
      function Ji(h, p) {
        {
          var _ = h.contextTypes;
          if (!_) return Cl;
          var R = {};
          for (var l in _) R[l] = p[l];
          {
            var f = at(h) || 'Unknown';
            ua(_, R, 'context', f);
          }
          return R;
        }
      }
      function e0(h, p, _, R) {
        {
          if (typeof h.getChildContext != 'function') {
            {
              var l = at(p) || 'Unknown';
              xl[l] ||
                ((xl[l] = !0),
                s(
                  '%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.',
                  l,
                  l,
                ));
            }
            return _;
          }
          var f = h.getChildContext();
          for (var y in f)
            if (!(y in R))
              throw new Error(
                (at(p) || 'Unknown') +
                  '.getChildContext(): key "' +
                  y +
                  '" is not defined in childContextTypes.',
              );
          {
            var b = at(p) || 'Unknown';
            ua(R, f, 'child context', b);
          }
          return Ir({}, _, f);
        }
      }
      var fn;
      fn = {};
      var rf = null,
        Wn = null;
      function Ki(h) {
        h.context._currentValue = h.parentValue;
      }
      function Ol(h) {
        h.context._currentValue = h.value;
      }
      function ca(h, p) {
        if (h !== p) {
          Ki(h);
          var _ = h.parent,
            R = p.parent;
          if (_ === null) {
            if (R !== null)
              throw new Error(
                'The stacks must reach the root at the same time. This is a bug in React.',
              );
          } else {
            if (R === null)
              throw new Error(
                'The stacks must reach the root at the same time. This is a bug in React.',
              );
            ca(_, R);
          }
          Ol(p);
        }
      }
      function nf(h) {
        Ki(h);
        var p = h.parent;
        p !== null && nf(p);
      }
      function sf(h) {
        var p = h.parent;
        p !== null && sf(p), Ol(h);
      }
      function fa(h, p) {
        Ki(h);
        var _ = h.parent;
        if (_ === null)
          throw new Error(
            'The depth must equal at least at zero before reaching the root. This is a bug in React.',
          );
        _.depth === p.depth ? ca(_, p) : fa(_, p);
      }
      function Vh(h, p) {
        var _ = p.parent;
        if (_ === null)
          throw new Error(
            'The depth must equal at least at zero before reaching the root. This is a bug in React.',
          );
        h.depth === _.depth ? ca(h, _) : Vh(h, _), Ol(p);
      }
      function Il(h) {
        var p = Wn,
          _ = h;
        p !== _ &&
          (p === null
            ? sf(_)
            : _ === null
              ? nf(p)
              : p.depth === _.depth
                ? ca(p, _)
                : p.depth > _.depth
                  ? fa(p, _)
                  : Vh(p, _),
          (Wn = _));
      }
      function t0(h, p) {
        var _;
        (_ = h._currentValue),
          (h._currentValue = p),
          h._currentRenderer !== void 0 &&
            h._currentRenderer !== null &&
            h._currentRenderer !== fn &&
            s(
              'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.',
            ),
          (h._currentRenderer = fn);
        var R = Wn,
          l = {
            parent: R,
            depth: R === null ? 0 : R.depth + 1,
            context: h,
            parentValue: _,
            value: p,
          };
        return (Wn = l), l;
      }
      function da(h) {
        var p = Wn;
        if (p === null)
          throw new Error(
            'Tried to pop a Context at the root of the app. This is a bug in React.',
          );
        p.context !== h &&
          s(
            'The parent context is not the expected context. This is probably a bug in React.',
          );
        {
          var _ = p.parentValue;
          _ === Kv
            ? (p.context._currentValue = p.context._defaultValue)
            : (p.context._currentValue = _),
            h._currentRenderer !== void 0 &&
              h._currentRenderer !== null &&
              h._currentRenderer !== fn &&
              s(
                'Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.',
              ),
            (h._currentRenderer = fn);
        }
        return (Wn = p.parent);
      }
      function of() {
        return Wn;
      }
      function ha(h) {
        var p = h._currentValue;
        return p;
      }
      function Al(h) {
        return h._reactInternals;
      }
      function Bh(h, p) {
        h._reactInternals = p;
      }
      var $l = {},
        Nl = {},
        pa,
        ma,
        Ll,
        Xi,
        Dl,
        Zi,
        ya,
        jl,
        Fl;
      {
        (pa = new Set()),
          (ma = new Set()),
          (Ll = new Set()),
          (ya = new Set()),
          (Xi = new Set()),
          (jl = new Set()),
          (Fl = new Set());
        var af = new Set();
        (Zi = function (h, p) {
          if (!(h === null || typeof h == 'function')) {
            var _ = p + '_' + h;
            af.has(_) ||
              (af.add(_),
              s(
                '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.',
                p,
                h,
              ));
          }
        }),
          (Dl = function (h, p) {
            if (p === void 0) {
              var _ = at(h) || 'Component';
              Xi.has(_) ||
                (Xi.add(_),
                s(
                  '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.',
                  _,
                ));
            }
          });
      }
      function Wh(h, p) {
        {
          var _ = h.constructor,
            R = (_ && at(_)) || 'ReactClass',
            l = R + '.' + p;
          if ($l[l]) return;
          s(
            `%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.

Please check the code for the %s component.`,
            p,
            p,
            R,
          ),
            ($l[l] = !0);
        }
      }
      var Gh = {
        isMounted: function (h) {
          return !1;
        },
        enqueueSetState: function (h, p, _) {
          var R = Al(h);
          R.queue === null
            ? Wh(h, 'setState')
            : (R.queue.push(p), _ != null && Zi(_, 'setState'));
        },
        enqueueReplaceState: function (h, p, _) {
          var R = Al(h);
          (R.replace = !0), (R.queue = [p]), _ != null && Zi(_, 'setState');
        },
        enqueueForceUpdate: function (h, p) {
          var _ = Al(h);
          _.queue === null
            ? Wh(h, 'forceUpdate')
            : p != null && Zi(p, 'setState');
        },
      };
      function r0(h, p, _, R, l) {
        var f = _(l, R);
        Dl(p, f);
        var y = f == null ? R : Ir({}, R, f);
        return y;
      }
      function n0(h, p, _) {
        var R = Cl,
          l = h.contextType;
        if ('contextType' in h) {
          var f =
            l === null ||
            (l !== void 0 && l.$$typeof === sa && l._context === void 0);
          if (!f && !Fl.has(h)) {
            Fl.add(h);
            var y = '';
            l === void 0
              ? (y =
                  ' However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.')
              : typeof l != 'object'
                ? (y = ' However, it is set to a ' + typeof l + '.')
                : l.$$typeof === na
                  ? (y =
                      ' Did you accidentally pass the Context.Provider instead?')
                  : l._context !== void 0
                    ? (y =
                        ' Did you accidentally pass the Context.Consumer instead?')
                    : (y =
                        ' However, it is set to an object with keys {' +
                        Object.keys(l).join(', ') +
                        '}.'),
              s(
                '%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s',
                at(h) || 'Component',
                y,
              );
          }
        }
        typeof l == 'object' && l !== null ? (R = ha(l)) : (R = _);
        var b = new h(p, R);
        {
          if (
            typeof h.getDerivedStateFromProps == 'function' &&
            (b.state === null || b.state === void 0)
          ) {
            var P = at(h) || 'Component';
            pa.has(P) ||
              (pa.add(P),
              s(
                '`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',
                P,
                b.state === null ? 'null' : 'undefined',
                P,
              ));
          }
          if (
            typeof h.getDerivedStateFromProps == 'function' ||
            typeof b.getSnapshotBeforeUpdate == 'function'
          ) {
            var A = null,
              N = null,
              M = null;
            if (
              (typeof b.componentWillMount == 'function' &&
              b.componentWillMount.__suppressDeprecationWarning !== !0
                ? (A = 'componentWillMount')
                : typeof b.UNSAFE_componentWillMount == 'function' &&
                  (A = 'UNSAFE_componentWillMount'),
              typeof b.componentWillReceiveProps == 'function' &&
              b.componentWillReceiveProps.__suppressDeprecationWarning !== !0
                ? (N = 'componentWillReceiveProps')
                : typeof b.UNSAFE_componentWillReceiveProps == 'function' &&
                  (N = 'UNSAFE_componentWillReceiveProps'),
              typeof b.componentWillUpdate == 'function' &&
              b.componentWillUpdate.__suppressDeprecationWarning !== !0
                ? (M = 'componentWillUpdate')
                : typeof b.UNSAFE_componentWillUpdate == 'function' &&
                  (M = 'UNSAFE_componentWillUpdate'),
              A !== null || N !== null || M !== null)
            ) {
              var B = at(h) || 'Component',
                ee =
                  typeof h.getDerivedStateFromProps == 'function'
                    ? 'getDerivedStateFromProps()'
                    : 'getSnapshotBeforeUpdate()';
              Ll.has(B) ||
                (Ll.add(B),
                s(
                  `Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`,
                  B,
                  ee,
                  A !== null
                    ? `
  ` + A
                    : '',
                  N !== null
                    ? `
  ` + N
                    : '',
                  M !== null
                    ? `
  ` + M
                    : '',
                ));
            }
          }
        }
        return b;
      }
      function s0(h, p, _) {
        {
          var R = at(p) || 'Component',
            l = h.render;
          l ||
            (p.prototype && typeof p.prototype.render == 'function'
              ? s(
                  '%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?',
                  R,
                )
              : s(
                  '%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.',
                  R,
                )),
            h.getInitialState &&
              !h.getInitialState.isReactClassApproved &&
              !h.state &&
              s(
                'getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?',
                R,
              ),
            h.getDefaultProps &&
              !h.getDefaultProps.isReactClassApproved &&
              s(
                'getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.',
                R,
              ),
            h.propTypes &&
              s(
                'propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.',
                R,
              ),
            h.contextType &&
              s(
                'contextType was defined as an instance property on %s. Use a static property to define contextType instead.',
                R,
              ),
            h.contextTypes &&
              s(
                'contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.',
                R,
              ),
            p.contextType &&
              p.contextTypes &&
              !jl.has(p) &&
              (jl.add(p),
              s(
                '%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.',
                R,
              )),
            typeof h.componentShouldUpdate == 'function' &&
              s(
                '%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.',
                R,
              ),
            p.prototype &&
              p.prototype.isPureReactComponent &&
              typeof h.shouldComponentUpdate < 'u' &&
              s(
                '%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.',
                at(p) || 'A pure component',
              ),
            typeof h.componentDidUnmount == 'function' &&
              s(
                '%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?',
                R,
              ),
            typeof h.componentDidReceiveProps == 'function' &&
              s(
                '%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().',
                R,
              ),
            typeof h.componentWillRecieveProps == 'function' &&
              s(
                '%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                R,
              ),
            typeof h.UNSAFE_componentWillRecieveProps == 'function' &&
              s(
                '%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',
                R,
              );
          var f = h.props !== _;
          h.props !== void 0 &&
            f &&
            s(
              "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.",
              R,
              R,
            ),
            h.defaultProps &&
              s(
                'Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.',
                R,
                R,
              ),
            typeof h.getSnapshotBeforeUpdate == 'function' &&
              typeof h.componentDidUpdate != 'function' &&
              !ma.has(p) &&
              (ma.add(p),
              s(
                '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.',
                at(p),
              )),
            typeof h.getDerivedStateFromProps == 'function' &&
              s(
                '%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                R,
              ),
            typeof h.getDerivedStateFromError == 'function' &&
              s(
                '%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.',
                R,
              ),
            typeof p.getSnapshotBeforeUpdate == 'function' &&
              s(
                '%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.',
                R,
              );
          var y = h.state;
          y &&
            (typeof y != 'object' || Hs(y)) &&
            s('%s.state: must be set to an object or null', R),
            typeof h.getChildContext == 'function' &&
              typeof p.childContextTypes != 'object' &&
              s(
                '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().',
                R,
              );
        }
      }
      function Yh(h, p) {
        var _ = p.state;
        if (typeof p.componentWillMount == 'function') {
          if (p.componentWillMount.__suppressDeprecationWarning !== !0) {
            var R = at(h) || 'Unknown';
            Nl[R] ||
              (i(
                `componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.

Please update the following components: %s`,
                R,
              ),
              (Nl[R] = !0));
          }
          p.componentWillMount();
        }
        typeof p.UNSAFE_componentWillMount == 'function' &&
          p.UNSAFE_componentWillMount(),
          _ !== p.state &&
            (s(
              "%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.",
              at(h) || 'Component',
            ),
            Gh.enqueueReplaceState(p, p.state, null));
      }
      function i0(h, p, _, R) {
        if (h.queue !== null && h.queue.length > 0) {
          var l = h.queue,
            f = h.replace;
          if (((h.queue = null), (h.replace = !1), f && l.length === 1))
            p.state = l[0];
          else {
            for (
              var y = f ? l[0] : p.state, b = !0, P = f ? 1 : 0;
              P < l.length;
              P++
            ) {
              var A = l[P],
                N = typeof A == 'function' ? A.call(p, y, _, R) : A;
              N != null && (b ? ((b = !1), (y = Ir({}, y, N))) : Ir(y, N));
            }
            p.state = y;
          }
        } else h.queue = null;
      }
      function Jh(h, p, _, R) {
        s0(h, p, _);
        var l = h.state !== void 0 ? h.state : null;
        (h.updater = Gh), (h.props = _), (h.state = l);
        var f = { queue: [], replace: !1 };
        Bh(h, f);
        var y = p.contextType;
        if (
          (typeof y == 'object' && y !== null
            ? (h.context = ha(y))
            : (h.context = R),
          h.state === _)
        ) {
          var b = at(p) || 'Component';
          ya.has(b) ||
            (ya.add(b),
            s(
              "%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.",
              b,
            ));
        }
        var P = p.getDerivedStateFromProps;
        typeof P == 'function' && (h.state = r0(h, p, P, l, _)),
          typeof p.getDerivedStateFromProps != 'function' &&
            typeof h.getSnapshotBeforeUpdate != 'function' &&
            (typeof h.UNSAFE_componentWillMount == 'function' ||
              typeof h.componentWillMount == 'function') &&
            (Yh(p, h), i0(f, h, _, R));
      }
      var lf = { id: 1, overflow: '' };
      function ql(h) {
        var p = h.overflow,
          _ = h.id,
          R = _ & ~o0(_);
        return R.toString(32) + p;
      }
      function uf(h, p, _) {
        var R = h.id,
          l = h.overflow,
          f = Ml(R) - 1,
          y = R & ~(1 << f),
          b = _ + 1,
          P = Ml(p) + f;
        if (P > 30) {
          var A = f - (f % 5),
            N = (1 << A) - 1,
            M = (y & N).toString(32),
            B = y >> A,
            ee = f - A,
            oe = Ml(p) + ee,
            _e = b << ee,
            et = _e | B,
            Rt = M + l;
          return { id: (1 << oe) | et, overflow: Rt };
        } else {
          var Lt = b << f,
            eu = Lt | y,
            tu = l;
          return { id: (1 << P) | eu, overflow: tu };
        }
      }
      function Ml(h) {
        return 32 - a0(h);
      }
      function o0(h) {
        return 1 << (Ml(h) - 1);
      }
      var a0 = Math.clz32 ? Math.clz32 : c0,
        l0 = Math.log,
        u0 = Math.LN2;
      function c0(h) {
        var p = h >>> 0;
        return p === 0 ? 32 : (31 - ((l0(p) / u0) | 0)) | 0;
      }
      function Gn(h, p) {
        return (
          (h === p && (h !== 0 || 1 / h === 1 / p)) || (h !== h && p !== p)
        );
      }
      var cf = typeof Object.is == 'function' ? Object.is : Gn,
        Xr = null,
        Qe = null,
        ds = null,
        Je = null,
        hs = !1,
        dn = !1,
        Xs = 0,
        ps = null,
        Ar = 0,
        Qi = 25,
        tr = !1,
        eo;
      function ms() {
        if (Xr === null)
          throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
        return (
          tr &&
            s(
              'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks',
            ),
          Xr
        );
      }
      function ff(h, p) {
        if (p === null)
          return (
            s(
              '%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.',
              eo,
            ),
            !1
          );
        h.length !== p.length &&
          s(
            `The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`,
            eo,
            '[' + h.join(', ') + ']',
            '[' + p.join(', ') + ']',
          );
        for (var _ = 0; _ < p.length && _ < h.length; _++)
          if (!cf(h[_], p[_])) return !1;
        return !0;
      }
      function Kh() {
        if (Ar > 0)
          throw new Error(
            'Rendered more hooks than during the previous render',
          );
        return { memoizedState: null, queue: null, next: null };
      }
      function df() {
        return (
          Je === null
            ? ds === null
              ? ((hs = !1), (ds = Je = Kh()))
              : ((hs = !0), (Je = ds))
            : Je.next === null
              ? ((hs = !1), (Je = Je.next = Kh()))
              : ((hs = !0), (Je = Je.next)),
          Je
        );
      }
      function Xh(h, p) {
        (Xr = p), (Qe = h), (tr = !1), (Xs = 0);
      }
      function hf(h, p, _, R) {
        for (; dn; ) (dn = !1), (Xs = 0), (Ar += 1), (Je = null), (_ = h(p, R));
        return pf(), _;
      }
      function Zh() {
        var h = Xs !== 0;
        return h;
      }
      function pf() {
        (tr = !1),
          (Xr = null),
          (Qe = null),
          (dn = !1),
          (ds = null),
          (Ar = 0),
          (ps = null),
          (Je = null);
      }
      function mf(h) {
        return (
          tr &&
            s(
              'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().',
            ),
          ha(h)
        );
      }
      function f0(h) {
        return (eo = 'useContext'), ms(), ha(h);
      }
      function Hl(h, p) {
        return typeof p == 'function' ? p(h) : p;
      }
      function Qh(h) {
        return (eo = 'useState'), ep(Hl, h);
      }
      function ep(h, p, _) {
        if ((h !== Hl && (eo = 'useReducer'), (Xr = ms()), (Je = df()), hs)) {
          var R = Je.queue,
            l = R.dispatch;
          if (ps !== null) {
            var f = ps.get(R);
            if (f !== void 0) {
              ps.delete(R);
              var y = Je.memoizedState,
                b = f;
              do {
                var P = b.action;
                (tr = !0), (y = h(y, P)), (tr = !1), (b = b.next);
              } while (b !== null);
              return (Je.memoizedState = y), [y, l];
            }
          }
          return [Je.memoizedState, l];
        } else {
          tr = !0;
          var A;
          h === Hl
            ? (A = typeof p == 'function' ? p() : p)
            : (A = _ !== void 0 ? _(p) : p),
            (tr = !1),
            (Je.memoizedState = A);
          var N = (Je.queue = { last: null, dispatch: null }),
            M = (N.dispatch = p0.bind(null, Xr, N));
          return [Je.memoizedState, M];
        }
      }
      function tp(h, p) {
        (Xr = ms()), (Je = df());
        var _ = p === void 0 ? null : p;
        if (Je !== null) {
          var R = Je.memoizedState;
          if (R !== null && _ !== null) {
            var l = R[1];
            if (ff(_, l)) return R[0];
          }
        }
        tr = !0;
        var f = h();
        return (tr = !1), (Je.memoizedState = [f, _]), f;
      }
      function d0(h) {
        (Xr = ms()), (Je = df());
        var p = Je.memoizedState;
        if (p === null) {
          var _ = { current: h };
          return Object.seal(_), (Je.memoizedState = _), _;
        } else return p;
      }
      function h0(h, p) {
        (eo = 'useLayoutEffect'),
          s(
            "useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.",
          );
      }
      function p0(h, p, _) {
        if (Ar >= Qi)
          throw new Error(
            'Too many re-renders. React limits the number of renders to prevent an infinite loop.',
          );
        if (h === Xr) {
          dn = !0;
          var R = { action: _, next: null };
          ps === null && (ps = new Map());
          var l = ps.get(p);
          if (l === void 0) ps.set(p, R);
          else {
            for (var f = l; f.next !== null; ) f = f.next;
            f.next = R;
          }
        }
      }
      function m0(h, p) {
        return tp(function () {
          return h;
        }, p);
      }
      function y0(h, p, _) {
        return ms(), p(h._source);
      }
      function g0(h, p, _) {
        if (_ === void 0)
          throw new Error(
            'Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.',
          );
        return _();
      }
      function v0(h) {
        return ms(), h;
      }
      function b0() {
        throw new Error(
          'startTransition cannot be called during server rendering.',
        );
      }
      function zl() {
        return ms(), [!1, b0];
      }
      function rp() {
        var h = Qe,
          p = ql(h.treeContext),
          _ = gf;
        if (_ === null)
          throw new Error(
            'Invalid hook call. Hooks can only be called inside of the body of a function component.',
          );
        var R = Xs++;
        return ml(_, p, R);
      }
      function to() {}
      var yf = {
          readContext: mf,
          useContext: f0,
          useMemo: tp,
          useReducer: ep,
          useRef: d0,
          useState: Qh,
          useInsertionEffect: to,
          useLayoutEffect: h0,
          useCallback: m0,
          useImperativeHandle: to,
          useEffect: to,
          useDebugValue: to,
          useDeferredValue: v0,
          useTransition: zl,
          useId: rp,
          useMutableSource: y0,
          useSyncExternalStore: g0,
        },
        gf = null;
      function Ul(h) {
        gf = h;
      }
      function vf(h) {
        try {
          var p = '',
            _ = h;
          do {
            switch (_.tag) {
              case 0:
                p += fs(_.type, null, null);
                break;
              case 1:
                p += Pl(_.type, null, null);
                break;
              case 2:
                p += Qv(_.type, null, null);
                break;
            }
            _ = _.parent;
          } while (_);
          return p;
        } catch (R) {
          return (
            `
Error generating stack: ` +
            R.message +
            `
` +
            R.stack
          );
        }
      }
      var ga = n.ReactCurrentDispatcher,
        ys = n.ReactDebugCurrentFrame,
        Vl = 0,
        Zs = 1,
        bf = 2,
        np = 3,
        Sf = 4,
        ro = 0,
        sp = 1,
        no = 2,
        va = 12800;
      function ip(h) {
        return console.error(h), null;
      }
      function ba() {}
      function S0(h, p, _, R, l, f, y, b, P) {
        var A = [],
          N = new Set(),
          M = {
            destination: null,
            responseState: p,
            progressiveChunkSize: R === void 0 ? va : R,
            status: ro,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: N,
            pingedTasks: A,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: l === void 0 ? ip : l,
            onAllReady: f === void 0 ? ba : f,
            onShellReady: y === void 0 ? ba : y,
            onShellError: b === void 0 ? ba : b,
            onFatalError: P === void 0 ? ba : P,
          },
          B = so(M, 0, null, _, !1, !1);
        B.parentFlushed = !0;
        var ee = hn(M, h, null, B, N, Cl, rf, lf);
        return A.push(ee), M;
      }
      function _f(h, p) {
        var _ = h.pingedTasks;
        _.push(p),
          _.length === 1 &&
            a(function () {
              return Ra(h);
            });
      }
      function Bl(h, p) {
        return {
          id: ji,
          rootSegmentID: -1,
          parentFlushed: !1,
          pendingTasks: 0,
          forceClientRender: !1,
          completedSegments: [],
          byteSize: 0,
          fallbackAbortableTasks: p,
          errorDigest: null,
        };
      }
      function hn(h, p, _, R, l, f, y, b) {
        h.allPendingTasks++,
          _ === null ? h.pendingRootTasks++ : _.pendingTasks++;
        var P = {
          node: p,
          ping: function () {
            return _f(h, P);
          },
          blockedBoundary: _,
          blockedSegment: R,
          abortSet: l,
          legacyContext: f,
          context: y,
          treeContext: b,
        };
        return (P.componentStack = null), l.add(P), P;
      }
      function so(h, p, _, R, l, f) {
        return {
          status: Vl,
          id: -1,
          index: p,
          parentFlushed: !1,
          chunks: [],
          children: [],
          formatContext: R,
          boundary: _,
          lastPushedText: l,
          textEmbedded: f,
        };
      }
      var $r = null;
      function Wl() {
        return $r === null || $r.componentStack === null
          ? ''
          : vf($r.componentStack);
      }
      function Sa(h, p) {
        h.componentStack = { tag: 0, parent: h.componentStack, type: p };
      }
      function Yn(h, p) {
        h.componentStack = { tag: 1, parent: h.componentStack, type: p };
      }
      function _a(h, p) {
        h.componentStack = { tag: 2, parent: h.componentStack, type: p };
      }
      function En(h) {
        h.componentStack === null
          ? s(
              'Unexpectedly popped too many stack frames. This is a bug in React.',
            )
          : (h.componentStack = h.componentStack.parent);
      }
      var Jn = null;
      function io(h, p) {
        {
          var _;
          typeof p == 'string'
            ? (_ = p)
            : p && typeof p.message == 'string'
              ? (_ = p.message)
              : (_ = String(p));
          var R = Jn || Wl();
          (Jn = null), (h.errorMessage = _), (h.errorComponentStack = R);
        }
      }
      function wa(h, p) {
        var _ = h.onError(p);
        if (_ != null && typeof _ != 'string')
          throw new Error(
            'onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' +
              typeof _ +
              '" instead',
          );
        return _;
      }
      function Gl(h, p) {
        var _ = h.onShellError;
        _(p);
        var R = h.onFatalError;
        R(p),
          h.destination !== null
            ? ((h.status = no), F(h.destination, p))
            : ((h.status = sp), (h.fatalError = p));
      }
      function _0(h, p, _) {
        Sa(p, 'Suspense');
        var R = p.blockedBoundary,
          l = p.blockedSegment,
          f = _.fallback,
          y = _.children,
          b = new Set(),
          P = Bl(h, b),
          A = l.chunks.length,
          N = so(h, A, P, l.formatContext, !1, !1);
        l.children.push(N), (l.lastPushedText = !1);
        var M = so(h, 0, null, l.formatContext, !1, !1);
        (M.parentFlushed = !0), (p.blockedBoundary = P), (p.blockedSegment = M);
        try {
          if (
            (Of(h, p, y),
            cs(M.chunks, h.responseState, M.lastPushedText, M.textEmbedded),
            (M.status = Zs),
            Xl(P, M),
            P.pendingTasks === 0)
          ) {
            En(p);
            return;
          }
        } catch (ee) {
          (M.status = Sf),
            (P.forceClientRender = !0),
            (P.errorDigest = wa(h, ee)),
            io(P, ee);
        } finally {
          (p.blockedBoundary = R), (p.blockedSegment = l);
        }
        var B = hn(h, f, R, N, b, p.legacyContext, p.context, p.treeContext);
        (B.componentStack = p.componentStack), h.pingedTasks.push(B), En(p);
      }
      function op(h, p, _, R) {
        Sa(p, _);
        var l = p.blockedSegment,
          f = Se(l.chunks, _, R, h.responseState, l.formatContext);
        l.lastPushedText = !1;
        var y = l.formatContext;
        (l.formatContext = Di(y, _, R)),
          Of(h, p, f),
          (l.formatContext = y),
          $e(l.chunks, _),
          (l.lastPushedText = !1),
          En(p);
      }
      function ap(h) {
        return h.prototype && h.prototype.isReactComponent;
      }
      function lp(h, p, _, R, l) {
        var f = {};
        Xh(p, f);
        var y = _(R, l);
        return hf(_, R, y, l);
      }
      function wf(h, p, _, R, l) {
        var f = _.render();
        _.props !== l &&
          (Pf ||
            s(
              'It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.',
              at(R) || 'a component',
            ),
          (Pf = !0));
        {
          var y = R.childContextTypes;
          if (y != null) {
            var b = p.legacyContext,
              P = e0(_, R, b, y);
            (p.legacyContext = P), vr(h, p, f), (p.legacyContext = b);
            return;
          }
        }
        vr(h, p, f);
      }
      function Yl(h, p, _, R) {
        _a(p, _);
        var l = Ji(_, p.legacyContext),
          f = n0(_, R, l);
        Jh(f, _, R, l), wf(h, p, f, _, R), En(p);
      }
      var Ef = {},
        Ea = {},
        Rf = {},
        Tf = {},
        Pf = !1,
        kf = {},
        xf = !1,
        up = !1,
        cp = !1;
      function fp(h, p, _, R) {
        var l;
        if (
          ((l = Ji(_, p.legacyContext)),
          Yn(p, _),
          _.prototype && typeof _.prototype.render == 'function')
        ) {
          var f = at(_) || 'Unknown';
          Ef[f] ||
            (s(
              "The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.",
              f,
              f,
            ),
            (Ef[f] = !0));
        }
        var y = lp(h, p, _, R, l),
          b = Zh();
        if (
          typeof y == 'object' &&
          y !== null &&
          typeof y.render == 'function' &&
          y.$$typeof === void 0
        ) {
          var P = at(_) || 'Unknown';
          Ea[P] ||
            (s(
              "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
              P,
              P,
              P,
            ),
            (Ea[P] = !0));
        }
        if (
          typeof y == 'object' &&
          y !== null &&
          typeof y.render == 'function' &&
          y.$$typeof === void 0
        ) {
          {
            var A = at(_) || 'Unknown';
            Ea[A] ||
              (s(
                "The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.",
                A,
                A,
                A,
              ),
              (Ea[A] = !0));
          }
          Jh(y, _, R, l), wf(h, p, y, _, R);
        } else if ((w0(_), b)) {
          var N = p.treeContext,
            M = 1,
            B = 0;
          p.treeContext = uf(N, M, B);
          try {
            vr(h, p, y);
          } finally {
            p.treeContext = N;
          }
        } else vr(h, p, y);
        En(p);
      }
      function w0(h) {
        {
          if (
            (h &&
              h.childContextTypes &&
              s(
                '%s(...): childContextTypes cannot be defined on a function component.',
                h.displayName || h.name || 'Component',
              ),
            h.defaultProps !== void 0)
          ) {
            var p = at(h) || 'Unknown';
            kf[p] ||
              (s(
                '%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.',
                p,
              ),
              (kf[p] = !0));
          }
          if (typeof h.getDerivedStateFromProps == 'function') {
            var _ = at(h) || 'Unknown';
            Tf[_] ||
              (s(
                '%s: Function components do not support getDerivedStateFromProps.',
                _,
              ),
              (Tf[_] = !0));
          }
          if (typeof h.contextType == 'object' && h.contextType !== null) {
            var R = at(h) || 'Unknown';
            Rf[R] ||
              (s('%s: Function components do not support contextType.', R),
              (Rf[R] = !0));
          }
        }
      }
      function dp(h, p) {
        if (h && h.defaultProps) {
          var _ = Ir({}, p),
            R = h.defaultProps;
          for (var l in R) _[l] === void 0 && (_[l] = R[l]);
          return _;
        }
        return p;
      }
      function E0(h, p, _, R, l) {
        Yn(p, _.render);
        var f = lp(h, p, _.render, R, l),
          y = Zh();
        if (y) {
          var b = p.treeContext,
            P = 1,
            A = 0;
          p.treeContext = uf(b, P, A);
          try {
            vr(h, p, f);
          } finally {
            p.treeContext = b;
          }
        } else vr(h, p, f);
        En(p);
      }
      function R0(h, p, _, R, l) {
        var f = _.type,
          y = dp(f, R);
        ir(h, p, f, y, l);
      }
      function T0(h, p, _, R) {
        _._context === void 0
          ? _ !== _.Consumer &&
            (cp ||
              ((cp = !0),
              s(
                'Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?',
              )))
          : (_ = _._context);
        var l = R.children;
        typeof l != 'function' &&
          s(
            "A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.",
          );
        var f = ha(_),
          y = l(f);
        vr(h, p, y);
      }
      function Cf(h, p, _, R) {
        var l = _._context,
          f = R.value,
          y = R.children,
          b;
        (b = p.context),
          (p.context = t0(l, f)),
          vr(h, p, y),
          (p.context = da(l)),
          b !== p.context &&
            s(
              'Popping the context provider did not return back to the original snapshot. This is a bug in React.',
            );
      }
      function P0(h, p, _, R, l) {
        Sa(p, 'Lazy');
        var f = _._payload,
          y = _._init,
          b = y(f),
          P = dp(b, R);
        ir(h, p, b, P, l), En(p);
      }
      function ir(h, p, _, R, l) {
        if (typeof _ == 'function')
          if (ap(_)) {
            Yl(h, p, _, R);
            return;
          } else {
            fp(h, p, _, R);
            return;
          }
        if (typeof _ == 'string') {
          op(h, p, _, R);
          return;
        }
        switch (_) {
          case Fh:
          case Jv:
          case wl:
          case El:
          case Vc: {
            vr(h, p, R.children);
            return;
          }
          case Vi: {
            Sa(p, 'SuspenseList'), vr(h, p, R.children), En(p);
            return;
          }
          case Yv:
            throw new Error(
              'ReactDOMServer does not yet support scope components.',
            );
          case oa: {
            _0(h, p, R);
            return;
          }
        }
        if (typeof _ == 'object' && _ !== null)
          switch (_.$$typeof) {
            case ia: {
              E0(h, p, _, R, l);
              return;
            }
            case Bc: {
              R0(h, p, _, R, l);
              return;
            }
            case na: {
              Cf(h, p, _, R);
              return;
            }
            case sa: {
              T0(h, p, _, R);
              return;
            }
            case Rl: {
              P0(h, p, _, R);
              return;
            }
          }
        var f = '';
        throw (
          ((_ === void 0 ||
            (typeof _ == 'object' &&
              _ !== null &&
              Object.keys(_).length === 0)) &&
            (f +=
              " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."),
          new Error(
            'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) ' +
              ('but got: ' + (_ == null ? _ : typeof _) + '.' + f),
          ))
        );
      }
      function k0(h, p) {
        typeof Symbol == 'function' &&
          h[Symbol.toStringTag] === 'Generator' &&
          (xf ||
            s(
              'Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.',
            ),
          (xf = !0)),
          h.entries === p &&
            (up ||
              s(
                'Using Maps as children is not supported. Use an array of keyed ReactElements instead.',
              ),
            (up = !0));
      }
      function vr(h, p, _) {
        try {
          return x0(h, p, _);
        } catch (R) {
          throw (
            ((typeof R == 'object' &&
              R !== null &&
              typeof R.then == 'function') ||
              (Jn = Jn !== null ? Jn : Wl()),
            R)
          );
        }
      }
      function x0(h, p, _) {
        if (((p.node = _), typeof _ == 'object' && _ !== null)) {
          switch (_.$$typeof) {
            case jh: {
              var R = _,
                l = R.type,
                f = R.props,
                y = R.ref;
              ir(h, p, l, f, y);
              return;
            }
            case Uc:
              throw new Error(
                'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.',
              );
            case Rl: {
              var b = _,
                P = b._payload,
                A = b._init,
                N;
              try {
                N = A(P);
              } catch (Lt) {
                throw (
                  (typeof Lt == 'object' &&
                    Lt !== null &&
                    typeof Lt.then == 'function' &&
                    Sa(p, 'Lazy'),
                  Lt)
                );
              }
              vr(h, p, N);
              return;
            }
          }
          if (Hs(_)) {
            Jl(h, p, _);
            return;
          }
          var M = Mh(_);
          if (M) {
            k0(_, M);
            var B = M.call(_);
            if (B) {
              var ee = B.next();
              if (!ee.done) {
                var oe = [];
                do oe.push(ee.value), (ee = B.next());
                while (!ee.done);
                Jl(h, p, oe);
                return;
              }
              return;
            }
          }
          var _e = Object.prototype.toString.call(_);
          throw new Error(
            'Objects are not valid as a React child (found: ' +
              (_e === '[object Object]'
                ? 'object with keys {' + Object.keys(_).join(', ') + '}'
                : _e) +
              '). If you meant to render a collection of children, use an array instead.',
          );
        }
        if (typeof _ == 'string') {
          var et = p.blockedSegment;
          et.lastPushedText = Sn(
            p.blockedSegment.chunks,
            _,
            h.responseState,
            et.lastPushedText,
          );
          return;
        }
        if (typeof _ == 'number') {
          var Rt = p.blockedSegment;
          Rt.lastPushedText = Sn(
            p.blockedSegment.chunks,
            '' + _,
            h.responseState,
            Rt.lastPushedText,
          );
          return;
        }
        typeof _ == 'function' &&
          s(
            'Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.',
          );
      }
      function Jl(h, p, _) {
        for (var R = _.length, l = 0; l < R; l++) {
          var f = p.treeContext;
          p.treeContext = uf(f, R, l);
          try {
            Of(h, p, _[l]);
          } finally {
            p.treeContext = f;
          }
        }
      }
      function C0(h, p, _) {
        var R = p.blockedSegment,
          l = R.chunks.length,
          f = so(h, l, null, R.formatContext, R.lastPushedText, !0);
        R.children.push(f), (R.lastPushedText = !1);
        var y = hn(
          h,
          p.node,
          p.blockedBoundary,
          f,
          p.abortSet,
          p.legacyContext,
          p.context,
          p.treeContext,
        );
        p.componentStack !== null &&
          (y.componentStack = p.componentStack.parent);
        var b = y.ping;
        _.then(b, b);
      }
      function Of(h, p, _) {
        var R = p.blockedSegment.formatContext,
          l = p.legacyContext,
          f = p.context,
          y = null;
        y = p.componentStack;
        try {
          return vr(h, p, _);
        } catch (b) {
          if (
            (pf(),
            typeof b == 'object' && b !== null && typeof b.then == 'function')
          ) {
            C0(h, p, b),
              (p.blockedSegment.formatContext = R),
              (p.legacyContext = l),
              (p.context = f),
              Il(f),
              (p.componentStack = y);
            return;
          } else
            throw (
              ((p.blockedSegment.formatContext = R),
              (p.legacyContext = l),
              (p.context = f),
              Il(f),
              (p.componentStack = y),
              b)
            );
        }
      }
      function hp(h, p, _, R) {
        var l = wa(h, R);
        if (
          (p === null
            ? Gl(h, R)
            : (p.pendingTasks--,
              p.forceClientRender ||
                ((p.forceClientRender = !0),
                (p.errorDigest = l),
                io(p, R),
                p.parentFlushed && h.clientRenderedBoundaries.push(p))),
          h.allPendingTasks--,
          h.allPendingTasks === 0)
        ) {
          var f = h.onAllReady;
          f();
        }
      }
      function Kl(h) {
        var p = this,
          _ = h.blockedBoundary,
          R = h.blockedSegment;
        (R.status = np), Af(p, _, R);
      }
      function If(h, p, _) {
        var R = h.blockedBoundary,
          l = h.blockedSegment;
        if (((l.status = np), R === null))
          p.allPendingTasks--,
            p.status !== no &&
              ((p.status = no), p.destination !== null && E(p.destination));
        else {
          if ((R.pendingTasks--, !R.forceClientRender)) {
            R.forceClientRender = !0;
            var f =
              _ === void 0
                ? new Error(
                    'The render was aborted by the server without a reason.',
                  )
                : _;
            R.errorDigest = p.onError(f);
            {
              var y = 'The server did not finish this Suspense boundary: ';
              f && typeof f.message == 'string'
                ? (f = y + f.message)
                : (f = y + String(f));
              var b = $r;
              $r = h;
              try {
                io(R, f);
              } finally {
                $r = b;
              }
            }
            R.parentFlushed && p.clientRenderedBoundaries.push(R);
          }
          if (
            (R.fallbackAbortableTasks.forEach(function (A) {
              return If(A, p, _);
            }),
            R.fallbackAbortableTasks.clear(),
            p.allPendingTasks--,
            p.allPendingTasks === 0)
          ) {
            var P = p.onAllReady;
            P();
          }
        }
      }
      function Xl(h, p) {
        if (
          p.chunks.length === 0 &&
          p.children.length === 1 &&
          p.children[0].boundary === null
        ) {
          var _ = p.children[0];
          (_.id = p.id), (_.parentFlushed = !0), _.status === Zs && Xl(h, _);
        } else {
          var R = h.completedSegments;
          R.push(p);
        }
      }
      function Af(h, p, _) {
        if (p === null) {
          if (_.parentFlushed) {
            if (h.completedRootSegment !== null)
              throw new Error(
                'There can only be one root segment. This is a bug in React.',
              );
            h.completedRootSegment = _;
          }
          if ((h.pendingRootTasks--, h.pendingRootTasks === 0)) {
            h.onShellError = ba;
            var R = h.onShellReady;
            R();
          }
        } else if ((p.pendingTasks--, !p.forceClientRender)) {
          if (p.pendingTasks === 0)
            _.parentFlushed && _.status === Zs && Xl(p, _),
              p.parentFlushed && h.completedBoundaries.push(p),
              p.fallbackAbortableTasks.forEach(Kl, h),
              p.fallbackAbortableTasks.clear();
          else if (_.parentFlushed && _.status === Zs) {
            Xl(p, _);
            var l = p.completedSegments;
            l.length === 1 && p.parentFlushed && h.partialBoundaries.push(p);
          }
        }
        if ((h.allPendingTasks--, h.allPendingTasks === 0)) {
          var f = h.onAllReady;
          f();
        }
      }
      function Zl(h, p) {
        var _ = p.blockedSegment;
        if (_.status === Vl) {
          Il(p.context);
          var R = null;
          (R = $r), ($r = p);
          try {
            vr(h, p, p.node),
              cs(_.chunks, h.responseState, _.lastPushedText, _.textEmbedded),
              p.abortSet.delete(p),
              (_.status = Zs),
              Af(h, p.blockedBoundary, _);
          } catch (f) {
            if (
              (pf(),
              typeof f == 'object' && f !== null && typeof f.then == 'function')
            ) {
              var l = p.ping;
              f.then(l, l);
            } else
              p.abortSet.delete(p),
                (_.status = Sf),
                hp(h, p.blockedBoundary, _, f);
          } finally {
            $r = R;
          }
        }
      }
      function Ra(h) {
        if (h.status !== no) {
          var p = of(),
            _ = ga.current;
          ga.current = yf;
          var R;
          (R = ys.getCurrentStack), (ys.getCurrentStack = Wl);
          var l = gf;
          Ul(h.responseState);
          try {
            var f = h.pingedTasks,
              y;
            for (y = 0; y < f.length; y++) {
              var b = f[y];
              Zl(h, b);
            }
            f.splice(0, y), h.destination !== null && Pa(h, h.destination);
          } catch (P) {
            wa(h, P), Gl(h, P);
          } finally {
            Ul(l),
              (ga.current = _),
              (ys.getCurrentStack = R),
              _ === yf && Il(p);
          }
        }
      }
      function Ql(h, p, _) {
        switch (((_.parentFlushed = !0), _.status)) {
          case Vl: {
            var R = (_.id = h.nextSegmentId++);
            return (
              (_.lastPushedText = !1),
              (_.textEmbedded = !1),
              ot(p, h.responseState, R)
            );
          }
          case Zs: {
            _.status = bf;
            for (
              var l = !0, f = _.chunks, y = 0, b = _.children, P = 0;
              P < b.length;
              P++
            ) {
              for (var A = b[P]; y < A.index; y++) T(p, f[y]);
              l = Ta(h, p, A);
            }
            for (; y < f.length - 1; y++) T(p, f[y]);
            return y < f.length && (l = I(p, f[y])), l;
          }
          default:
            throw new Error(
              'Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.',
            );
        }
      }
      function Ta(h, p, _) {
        var R = _.boundary;
        if (R === null) return Ql(h, p, _);
        if (((R.parentFlushed = !0), R.forceClientRender))
          return (
            cv(
              p,
              h.responseState,
              R.errorDigest,
              R.errorMessage,
              R.errorComponentStack,
            ),
            Ql(h, p, _),
            dv(p, h.responseState)
          );
        if (R.pendingTasks > 0) {
          (R.rootSegmentID = h.nextSegmentId++),
            R.completedSegments.length > 0 && h.partialBoundaries.push(R);
          var l = (R.id = Fi(h.responseState));
          return Ih(p, h.responseState, l), Ql(h, p, _), Ah(p, h.responseState);
        } else {
          if (R.byteSize > h.progressiveChunkSize)
            return (
              (R.rootSegmentID = h.nextSegmentId++),
              h.completedBoundaries.push(R),
              Ih(p, h.responseState, R.id),
              Ql(h, p, _),
              Ah(p, h.responseState)
            );
          uv(p, h.responseState);
          var f = R.completedSegments;
          if (f.length !== 1)
            throw new Error(
              'A previously unvisited boundary must have exactly one root segment. This is a bug in React.',
            );
          var y = f[0];
          return Ta(h, p, y), fv(p, h.responseState);
        }
      }
      function pp(h, p, _) {
        return Gv(
          p,
          h.responseState,
          _.id,
          _.errorDigest,
          _.errorMessage,
          _.errorComponentStack,
        );
      }
      function mp(h, p, _) {
        return (
          Nv(p, h.responseState, _.formatContext, _.id),
          Ta(h, p, _),
          Lv(p, _.formatContext)
        );
      }
      function $f(h, p, _) {
        for (var R = _.completedSegments, l = 0; l < R.length; l++) {
          var f = R[l];
          Lf(h, p, _, f);
        }
        return (R.length = 0), Nh(p, h.responseState, _.id, _.rootSegmentID);
      }
      function Nf(h, p, _) {
        for (var R = _.completedSegments, l = 0; l < R.length; l++) {
          var f = R[l];
          if (!Lf(h, p, _, f)) return l++, R.splice(0, l), !1;
        }
        return R.splice(0, l), !0;
      }
      function Lf(h, p, _, R) {
        if (R.status === bf) return !0;
        var l = R.id;
        if (l === -1) {
          var f = (R.id = _.rootSegmentID);
          if (f === -1)
            throw new Error(
              'A root segment ID must have been assigned by now. This is a bug in React.',
            );
          return mp(h, p, R);
        } else return mp(h, p, R), qc(p, h.responseState, l);
      }
      function Pa(h, p) {
        v();
        try {
          var _ = h.completedRootSegment;
          _ !== null &&
            h.pendingRootTasks === 0 &&
            (Ta(h, p, _),
            (h.completedRootSegment = null),
            Be(p, h.responseState));
          var R = h.clientRenderedBoundaries,
            l;
          for (l = 0; l < R.length; l++) {
            var f = R[l];
            if (!pp(h, p, f)) {
              (h.destination = null), l++, R.splice(0, l);
              return;
            }
          }
          R.splice(0, l);
          var y = h.completedBoundaries;
          for (l = 0; l < y.length; l++) {
            var b = y[l];
            if (!$f(h, p, b)) {
              (h.destination = null), l++, y.splice(0, l);
              return;
            }
          }
          y.splice(0, l), x(p), v(p);
          var P = h.partialBoundaries;
          for (l = 0; l < P.length; l++) {
            var A = P[l];
            if (!Nf(h, p, A)) {
              (h.destination = null), l++, P.splice(0, l);
              return;
            }
          }
          P.splice(0, l);
          var N = h.completedBoundaries;
          for (l = 0; l < N.length; l++) {
            var M = N[l];
            if (!$f(h, p, M)) {
              (h.destination = null), l++, N.splice(0, l);
              return;
            }
          }
          N.splice(0, l);
        } finally {
          x(p),
            u(p),
            h.allPendingTasks === 0 &&
              h.pingedTasks.length === 0 &&
              h.clientRenderedBoundaries.length === 0 &&
              h.completedBoundaries.length === 0 &&
              (h.abortableTasks.size !== 0 &&
                s(
                  'There was still abortable task at the root when we closed. This is a bug in React.',
                ),
              E(p));
        }
      }
      function yp(h) {
        a(function () {
          return Ra(h);
        });
      }
      function gp(h, p) {
        if (h.status === sp) {
          (h.status = no), F(p, h.fatalError);
          return;
        }
        if (h.status !== no && h.destination === null) {
          h.destination = p;
          try {
            Pa(h, p);
          } catch (_) {
            wa(h, _), Gl(h, _);
          }
        }
      }
      function Df(h, p) {
        try {
          var _ = h.abortableTasks;
          _.forEach(function (R) {
            return If(R, h, p);
          }),
            _.clear(),
            h.destination !== null && Pa(h, h.destination);
        } catch (R) {
          wa(h, R), Gl(h, R);
        }
      }
      function O0(h, p) {
        return function () {
          return gp(p, h);
        };
      }
      function vp(h, p) {
        return function () {
          return Df(h, p);
        };
      }
      function I0(h, p) {
        return S0(
          h,
          Cr(
            p ? p.identifierPrefix : void 0,
            p ? p.nonce : void 0,
            p ? p.bootstrapScriptContent : void 0,
            p ? p.bootstrapScripts : void 0,
            p ? p.bootstrapModules : void 0,
          ),
          Go(p ? p.namespaceURI : void 0),
          p ? p.progressiveChunkSize : void 0,
          p ? p.onError : void 0,
          p ? p.onAllReady : void 0,
          p ? p.onShellReady : void 0,
          p ? p.onShellError : void 0,
          void 0,
        );
      }
      function bp(h, p) {
        var _ = I0(h, p),
          R = !1;
        return (
          yp(_),
          {
            pipe: function (l) {
              if (R)
                throw new Error(
                  'React currently only supports piping to one writable stream.',
                );
              return (
                (R = !0),
                gp(_, l),
                l.on('drain', O0(l, _)),
                l.on(
                  'error',
                  vp(
                    _,
                    new Error(
                      'The destination stream errored while writing data.',
                    ),
                  ),
                ),
                l.on(
                  'close',
                  vp(_, new Error('The destination stream closed early.')),
                ),
                l
              );
            },
            abort: function (l) {
              Df(_, l);
            },
          }
        );
      }
      (MT.renderToPipeableStream = bp), (MT.version = r);
    })();
});
var aH = $((ol) => {
  'use strict';
  var il, HT;
  process.env.NODE_ENV === 'production'
    ? ((il = o2()), (HT = sH()))
    : ((il = iH()), (HT = oH()));
  ol.version = il.version;
  ol.renderToString = il.renderToString;
  ol.renderToStaticMarkup = il.renderToStaticMarkup;
  ol.renderToNodeStream = il.renderToNodeStream;
  ol.renderToStaticNodeStream = il.renderToStaticNodeStream;
  ol.renderToPipeableStream = HT.renderToPipeableStream;
});
var pz = $((kr) => {
  'use strict';
  Object.defineProperty(kr, '__esModule', { value: !0 });
  kr.pathToRegexp =
    kr.tokensToRegexp =
    kr.regexpToFunction =
    kr.match =
    kr.tokensToFunction =
    kr.compile =
    kr.parse =
      void 0;
  function Sde(e) {
    for (var t = [], r = 0; r < e.length; ) {
      var n = e[r];
      if (n === '*' || n === '+' || n === '?') {
        t.push({ type: 'MODIFIER', index: r, value: e[r++] });
        continue;
      }
      if (n === '\\') {
        t.push({ type: 'ESCAPED_CHAR', index: r++, value: e[r++] });
        continue;
      }
      if (n === '{') {
        t.push({ type: 'OPEN', index: r, value: e[r++] });
        continue;
      }
      if (n === '}') {
        t.push({ type: 'CLOSE', index: r, value: e[r++] });
        continue;
      }
      if (n === ':') {
        for (var i = '', s = r + 1; s < e.length; ) {
          var o = e.charCodeAt(s);
          if (
            (o >= 48 && o <= 57) ||
            (o >= 65 && o <= 90) ||
            (o >= 97 && o <= 122) ||
            o === 95
          ) {
            i += e[s++];
            continue;
          }
          break;
        }
        if (!i) throw new TypeError('Missing parameter name at '.concat(r));
        t.push({ type: 'NAME', index: r, value: i }), (r = s);
        continue;
      }
      if (n === '(') {
        var a = 1,
          u = '',
          s = r + 1;
        if (e[s] === '?')
          throw new TypeError('Pattern cannot start with "?" at '.concat(s));
        for (; s < e.length; ) {
          if (e[s] === '\\') {
            u += e[s++] + e[s++];
            continue;
          }
          if (e[s] === ')') {
            if ((a--, a === 0)) {
              s++;
              break;
            }
          } else if (e[s] === '(' && (a++, e[s + 1] !== '?'))
            throw new TypeError(
              'Capturing groups are not allowed at '.concat(s),
            );
          u += e[s++];
        }
        if (a) throw new TypeError('Unbalanced pattern at '.concat(r));
        if (!u) throw new TypeError('Missing pattern at '.concat(r));
        t.push({ type: 'PATTERN', index: r, value: u }), (r = s);
        continue;
      }
      t.push({ type: 'CHAR', index: r, value: e[r++] });
    }
    return t.push({ type: 'END', index: r, value: '' }), t;
  }
  function sP(e, t) {
    t === void 0 && (t = {});
    for (
      var r = Sde(e),
        n = t.prefixes,
        i = n === void 0 ? './' : n,
        s = '[^'.concat(Sc(t.delimiter || '/#?'), ']+?'),
        o = [],
        a = 0,
        u = 0,
        c = '',
        d = function (q) {
          if (u < r.length && r[u].type === q) return r[u++].value;
        },
        m = function (q) {
          var O = d(q);
          if (O !== void 0) return O;
          var F = r[u],
            U = F.type,
            D = F.index;
          throw new TypeError(
            'Unexpected '.concat(U, ' at ').concat(D, ', expected ').concat(q),
          );
        },
        g = function () {
          for (var q = '', O; (O = d('CHAR') || d('ESCAPED_CHAR')); ) q += O;
          return q;
        };
      u < r.length;

    ) {
      var v = d('CHAR'),
        S = d('NAME'),
        w = d('PATTERN');
      if (S || w) {
        var T = v || '';
        i.indexOf(T) === -1 && ((c += T), (T = '')),
          c && (o.push(c), (c = '')),
          o.push({
            name: S || a++,
            prefix: T,
            suffix: '',
            pattern: w || s,
            modifier: d('MODIFIER') || '',
          });
        continue;
      }
      var C = v || d('ESCAPED_CHAR');
      if (C) {
        c += C;
        continue;
      }
      c && (o.push(c), (c = ''));
      var I = d('OPEN');
      if (I) {
        var T = g(),
          x = d('NAME') || '',
          E = d('PATTERN') || '',
          j = g();
        m('CLOSE'),
          o.push({
            name: x || (E ? a++ : ''),
            pattern: x && !E ? s : E,
            prefix: T,
            suffix: j,
            modifier: d('MODIFIER') || '',
          });
        continue;
      }
      m('END');
    }
    return o;
  }
  kr.parse = sP;
  function _de(e, t) {
    return fz(sP(e, t), t);
  }
  kr.compile = _de;
  function fz(e, t) {
    t === void 0 && (t = {});
    var r = iP(t),
      n = t.encode,
      i =
        n === void 0
          ? function (u) {
              return u;
            }
          : n,
      s = t.validate,
      o = s === void 0 ? !0 : s,
      a = e.map(function (u) {
        if (typeof u == 'object')
          return new RegExp('^(?:'.concat(u.pattern, ')$'), r);
      });
    return function (u) {
      for (var c = '', d = 0; d < e.length; d++) {
        var m = e[d];
        if (typeof m == 'string') {
          c += m;
          continue;
        }
        var g = u ? u[m.name] : void 0,
          v = m.modifier === '?' || m.modifier === '*',
          S = m.modifier === '*' || m.modifier === '+';
        if (Array.isArray(g)) {
          if (!S)
            throw new TypeError(
              'Expected "'.concat(m.name, '" to not repeat, but got an array'),
            );
          if (g.length === 0) {
            if (v) continue;
            throw new TypeError(
              'Expected "'.concat(m.name, '" to not be empty'),
            );
          }
          for (var w = 0; w < g.length; w++) {
            var T = i(g[w], m);
            if (o && !a[d].test(T))
              throw new TypeError(
                'Expected all "'
                  .concat(m.name, '" to match "')
                  .concat(m.pattern, '", but got "')
                  .concat(T, '"'),
              );
            c += m.prefix + T + m.suffix;
          }
          continue;
        }
        if (typeof g == 'string' || typeof g == 'number') {
          var T = i(String(g), m);
          if (o && !a[d].test(T))
            throw new TypeError(
              'Expected "'
                .concat(m.name, '" to match "')
                .concat(m.pattern, '", but got "')
                .concat(T, '"'),
            );
          c += m.prefix + T + m.suffix;
          continue;
        }
        if (!v) {
          var C = S ? 'an array' : 'a string';
          throw new TypeError(
            'Expected "'.concat(m.name, '" to be ').concat(C),
          );
        }
      }
      return c;
    };
  }
  kr.tokensToFunction = fz;
  function wde(e, t) {
    var r = [],
      n = oP(e, r, t);
    return dz(n, r, t);
  }
  kr.match = wde;
  function dz(e, t, r) {
    r === void 0 && (r = {});
    var n = r.decode,
      i =
        n === void 0
          ? function (s) {
              return s;
            }
          : n;
    return function (s) {
      var o = e.exec(s);
      if (!o) return !1;
      for (
        var a = o[0],
          u = o.index,
          c = Object.create(null),
          d = function (g) {
            if (o[g] === void 0) return 'continue';
            var v = t[g - 1];
            v.modifier === '*' || v.modifier === '+'
              ? (c[v.name] = o[g].split(v.prefix + v.suffix).map(function (S) {
                  return i(S, v);
                }))
              : (c[v.name] = i(o[g], v));
          },
          m = 1;
        m < o.length;
        m++
      )
        d(m);
      return { path: a, index: u, params: c };
    };
  }
  kr.regexpToFunction = dz;
  function Sc(e) {
    return e.replace(/([.+*?=^!:${}()[\]|/\\])/g, '\\$1');
  }
  function iP(e) {
    return e && e.sensitive ? '' : 'i';
  }
  function Ede(e, t) {
    if (!t) return e;
    for (var r = /\((?:\?<(.*?)>)?(?!\?)/g, n = 0, i = r.exec(e.source); i; )
      t.push({
        name: i[1] || n++,
        prefix: '',
        suffix: '',
        modifier: '',
        pattern: '',
      }),
        (i = r.exec(e.source));
    return e;
  }
  function Rde(e, t, r) {
    var n = e.map(function (i) {
      return oP(i, t, r).source;
    });
    return new RegExp('(?:'.concat(n.join('|'), ')'), iP(r));
  }
  function Tde(e, t, r) {
    return hz(sP(e, r), t, r);
  }
  function hz(e, t, r) {
    r === void 0 && (r = {});
    for (
      var n = r.strict,
        i = n === void 0 ? !1 : n,
        s = r.start,
        o = s === void 0 ? !0 : s,
        a = r.end,
        u = a === void 0 ? !0 : a,
        c = r.encode,
        d =
          c === void 0
            ? function (D) {
                return D;
              }
            : c,
        m = r.delimiter,
        g = m === void 0 ? '/#?' : m,
        v = r.endsWith,
        S = v === void 0 ? '' : v,
        w = '['.concat(Sc(S), ']|$'),
        T = '['.concat(Sc(g), ']'),
        C = o ? '^' : '',
        I = 0,
        x = e;
      I < x.length;
      I++
    ) {
      var E = x[I];
      if (typeof E == 'string') C += Sc(d(E));
      else {
        var j = Sc(d(E.prefix)),
          q = Sc(d(E.suffix));
        if (E.pattern)
          if ((t && t.push(E), j || q))
            if (E.modifier === '+' || E.modifier === '*') {
              var O = E.modifier === '*' ? '?' : '';
              C += '(?:'
                .concat(j, '((?:')
                .concat(E.pattern, ')(?:')
                .concat(q)
                .concat(j, '(?:')
                .concat(E.pattern, '))*)')
                .concat(q, ')')
                .concat(O);
            } else
              C += '(?:'
                .concat(j, '(')
                .concat(E.pattern, ')')
                .concat(q, ')')
                .concat(E.modifier);
          else
            E.modifier === '+' || E.modifier === '*'
              ? (C += '((?:'.concat(E.pattern, ')').concat(E.modifier, ')'))
              : (C += '('.concat(E.pattern, ')').concat(E.modifier));
        else C += '(?:'.concat(j).concat(q, ')').concat(E.modifier);
      }
    }
    if (u)
      i || (C += ''.concat(T, '?')),
        (C += r.endsWith ? '(?='.concat(w, ')') : '$');
    else {
      var F = e[e.length - 1],
        U =
          typeof F == 'string' ? T.indexOf(F[F.length - 1]) > -1 : F === void 0;
      i || (C += '(?:'.concat(T, '(?=').concat(w, '))?')),
        U || (C += '(?='.concat(T, '|').concat(w, ')'));
    }
    return new RegExp(C, iP(r));
  }
  kr.tokensToRegexp = hz;
  function oP(e, t, r) {
    return e instanceof RegExp
      ? Ede(e, t)
      : Array.isArray(e)
        ? Rde(e, t, r)
        : Tde(e, t, r);
  }
  kr.pathToRegexp = oP;
});
var Hz = Kn(Vq());
var Qae = ([e, t], r = !0) => `<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>People Directory</title>
</head>
    <body>
        ${t ? `<script>window.__INITIAL_DATA__ = '${t}'</script>` : ''}
        <div id="app">${e}</div>
        ${r ? '<script src="/client.js"></script>' : ''}
    </body>
</html>`,
  lg = Qae;
var oc = Kn(Ns());
var nc = Kn(Ns()),
  $o = {},
  sc = (e) => {
    let [t, r] = (0, nc.useState)(!0),
      [n, i] = (0, nc.useState)(null),
      [s, o] = (0, nc.useState)(null);
    return (
      (0, nc.useEffect)(() => {
        if ($o[e]) {
          i($o[e]), r(!1);
          return;
        }
        r(!0),
          fetch(e)
            .then((a) => a.json())
            .then((a) => {
              ($o[e] = a), i(a), r(!1);
            })
            .catch((a) => {
              o(a), r(!1);
            });
      }, [e]),
      { isLoading: t, data: n, error: s }
    );
  },
  sM = async (e) => {
    if ($o[e]) return;
    let r = await (await fetch(e)).json();
    $o[e] = r;
  },
  iM = () => JSON.stringify($o);
var JR = () => {
  for (let e in $o) delete $o[e];
};
var vi = Kn(Ns());
var mle = class extends Error {
    issues;
    constructor(e) {
      super(e[0].message), (this.name = 'ValiError'), (this.issues = e);
    }
  },
  yve = Symbol('brand');
function pg(e, t) {
  return Array.isArray(e) ? [void 0, e] : [e, t];
}
var hg;
function yle(e) {
  return {
    lang: e?.lang ?? hg?.lang,
    message: e?.message,
    abortEarly: e?.abortEarly ?? hg?.abortEarly,
    abortPipeEarly: e?.abortPipeEarly ?? hg?.abortPipeEarly,
    skipPipe: e?.skipPipe ?? hg?.skipPipe,
  };
}
var gle;
function vle(e) {
  return gle?.get(e);
}
var ble;
function Sle(e) {
  return ble?.get(e);
}
var _le;
function wle(e, t) {
  return _le?.get(e)?.get(t);
}
function oM(e, t, r, n, i) {
  let s =
    t.message ??
    wle(r, i.lang) ??
    (e ? Sle(i.lang) : null) ??
    n?.message ??
    vle(i.lang) ??
    i.message;
  return typeof s == 'function' ? s(i) : s;
}
function KR(e, t, r) {
  return { typed: e, output: t, issues: r };
}
function aM(e) {
  let t = typeof e;
  return (
    t === 'object' &&
      (t = e ? Object.getPrototypeOf(e).constructor.name : 'null'),
    t === 'string'
      ? `"${e}"`
      : t === 'number' || t === 'bigint' || t === 'boolean'
        ? `${e}`
        : t
  );
}
function Ele(e, t, r) {
  let n = r.received ?? aM(r.input),
    i = {
      reason: e.type,
      context: r.context.type,
      expected: r.context.expects,
      received: n,
      message: `Invalid ${r.label}: ${r.context.expects ? `Expected ${r.context.expects} but r` : 'R'}eceived ${n}`,
      input: r.input,
      requirement: r.context.requirement,
      path: r.path,
      lang: t?.lang,
      abortEarly: t?.abortEarly,
      abortPipeEarly: t?.abortPipeEarly,
      skipPipe: t?.skipPipe,
    };
  return (i.message = oM(!1, r.context, r.reference, t, i)), i;
}
function XR(e, t, r, n) {
  if (e.pipe && !r?.skipPipe)
    for (let i of e.pipe) {
      let s = i._parse(t);
      if (s.issues) {
        for (let o of s.issues) {
          let a = Ele(e, r, o);
          n ? n.push(a) : (n = [a]);
        }
        if (r?.abortEarly || r?.abortPipeEarly) break;
      } else t = s.output;
    }
  return KR(!0, t, n);
}
function Rle(e, t, r) {
  if (!e || (typeof e == 'object' && !Array.isArray(e))) {
    let [s, o] = pg(t, r);
    return [e, s, o];
  }
  let [n, i] = pg(e, t);
  return [void 0, n, i];
}
function ZR(e, t, r, n, i) {
  let s = aM(r),
    o = i?.expected ?? e.expects,
    a = {
      reason: i?.reason ?? 'type',
      context: e.type,
      expected: o,
      received: s,
      message: `Invalid type: Expected ${o} but received ${s}`,
      input: r,
      path: i?.path,
      issues: i?.issues,
      lang: n?.lang,
      abortEarly: n?.abortEarly,
      abortPipeEarly: n?.abortPipeEarly,
      skipPipe: n?.skipPipe,
    };
  return (
    (a.message = oM(!0, e, t, n, a)), { typed: !1, output: r, issues: [a] }
  );
}
function QR(e, t, r) {
  let [n, i] = pg(t, r);
  return {
    type: 'array',
    expects: 'Array',
    async: !1,
    item: e,
    message: n,
    pipe: i,
    _parse(s, o) {
      if (Array.isArray(s)) {
        let a = !0,
          u,
          c = [];
        for (let d = 0; d < s.length; d++) {
          let m = s[d],
            g = this.item._parse(m, o);
          if (g.issues) {
            let v = {
              type: 'array',
              origin: 'value',
              input: s,
              key: d,
              value: m,
            };
            for (let S of g.issues)
              S.path ? S.path.unshift(v) : (S.path = [v]), u?.push(S);
            if ((u || (u = g.issues), o?.abortEarly)) {
              a = !1;
              break;
            }
          }
          g.typed || (a = !1), c.push(g.output);
        }
        return a ? XR(this, c, o, u) : KR(!1, c, u);
      }
      return ZR(this, QR, s, o);
    },
  };
}
function eT(e, t, r, n) {
  let [i, s, o] = Rle(t, r, n),
    a;
  return {
    type: 'object',
    expects: 'Object',
    async: !1,
    entries: e,
    rest: i,
    message: s,
    pipe: o,
    _parse(u, c) {
      if (u && typeof u == 'object') {
        a = a ?? Object.entries(this.entries);
        let d = !0,
          m,
          g = {};
        for (let [v, S] of a) {
          let w = u[v],
            T = S._parse(w, c);
          if (T.issues) {
            let C = {
              type: 'object',
              origin: 'value',
              input: u,
              key: v,
              value: w,
            };
            for (let I of T.issues)
              I.path ? I.path.unshift(C) : (I.path = [C]), m?.push(I);
            if ((m || (m = T.issues), c?.abortEarly)) {
              d = !1;
              break;
            }
          }
          T.typed || (d = !1),
            (T.output !== void 0 || v in u) && (g[v] = T.output);
        }
        if (this.rest && !(c?.abortEarly && m)) {
          for (let v in u)
            if (!(v in this.entries)) {
              let S = u[v],
                w = this.rest._parse(S, c);
              if (w.issues) {
                let T = {
                  type: 'object',
                  origin: 'value',
                  input: u,
                  key: v,
                  value: S,
                };
                for (let C of w.issues)
                  C.path ? C.path.unshift(T) : (C.path = [T]), m?.push(C);
                if ((m || (m = w.issues), c?.abortEarly)) {
                  d = !1;
                  break;
                }
              }
              w.typed || (d = !1), (g[v] = w.output);
            }
        }
        return d ? XR(this, g, c, m) : KR(!1, g, m);
      }
      return ZR(this, eT, u, c);
    },
  };
}
function No(e, t) {
  let [r, n] = pg(e, t);
  return {
    type: 'string',
    expects: 'string',
    async: !1,
    message: r,
    pipe: n,
    _parse(i, s) {
      return typeof i == 'string' ? XR(this, i, s) : ZR(this, No, i, s);
    },
  };
}
function lM(e, t, r) {
  let n = e._parse(t, yle(r));
  if (n.issues) throw new mle(n.issues);
  return n.output;
}
var Ple = QR(
    eT({
      first: No(),
      last: No(),
      email: No(),
      address: No(),
      created: No(),
      balance: No(),
    }),
  ),
  ic = (e) => lM(Ple, e);
var hh = Kn(Ns());
var kle = ({ index: e }) => {
    let {
      data: t,
      isLoading: r,
      error: n,
    } = sc(
      'https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole&seed=123',
    );
    if (r) return hh.default.createElement('div', null, 'Loading...');
    if (n || t === null)
      return hh.default.createElement('div', null, 'Error: ', n?.message);
    let s = ic(t)[e];
    return hh.default.createElement(
      'div',
      null,
      hh.default.createElement('h2', null, s.first, ' ', s.last),
    );
  },
  uM = kle;
var xle = ({ index: e }) => {
    let {
      data: t,
      isLoading: r,
      error: n,
    } = sc(
      'https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole&seed=123',
    );
    if (r) return vi.default.createElement('div', null, 'Loading...');
    if (n || t === null)
      return vi.default.createElement('div', null, 'Error: ', n?.message);
    let s = ic(t)[e];
    return vi.default.createElement(
      'div',
      null,
      vi.default.createElement(uM, { index: e }),
      vi.default.createElement('p', null, s.email),
      vi.default.createElement('p', null, s.address),
      vi.default.createElement('p', null, s.balance),
      vi.default.createElement('p', null, s.created),
    );
  },
  cM = xle;
var fM = () => {
  let {
    data: e,
    isLoading: t,
    error: r,
  } = sc(
    'https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole&seed=123',
  );
  if (t) return oc.default.createElement('div', null, 'Loading...');
  if (r || e === null)
    return oc.default.createElement('div', null, 'Error: ', r?.message);
  let n = ic(e);
  return oc.default.createElement(
    'div',
    null,
    oc.default.createElement('h1', null, 'Welcome to the People Directory'),
    n.map((i, s) => oc.default.createElement(cM, { key: i.email, index: s })),
  );
};
fM.preLoadServerData = async () => {
  await sM(
    'https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole&seed=123',
  );
};
var mg = fM;
var lH = Kn(Ns()),
  uH = Kn(aH());
var Mce = async (e) => {
    let t;
    return (
      e &&
        typeof mg.preLoadServerData == 'function' &&
        (await mg.preLoadServerData(), (t = iM())),
      [uH.default.renderToString(lH.default.createElement(mg, null)), t]
    );
  },
  zT = Mce;
var fP = Kn(require('fs'));
var ZH = require('node:async_hooks');
var Hce = /(%?)(%([sdijo]))/g;
function zce(e, t) {
  switch (t) {
    case 's':
      return e;
    case 'd':
    case 'i':
      return Number(e);
    case 'j':
      return JSON.stringify(e);
    case 'o': {
      if (typeof e == 'string') return e;
      let r = JSON.stringify(e);
      return r === '{}' || r === '[]' || /^\[object .+?\]$/.test(r) ? e : r;
    }
  }
}
function qo(e, ...t) {
  if (t.length === 0) return e;
  let r = 0,
    n = e.replace(Hce, (i, s, o, a) => {
      let u = t[r],
        c = zce(u, a);
      return s ? i : (r++, c);
    });
  return (
    r < t.length && (n += ` ${t.slice(r).join(' ')}`),
    (n = n.replace(/%{2,2}/g, '%')),
    n
  );
}
var Uce = 2;
function Vce(e) {
  if (!e.stack) return;
  let t = e.stack.split(`
`);
  t.splice(1, Uce),
    (e.stack = t.join(`
`));
}
var Bce = class extends Error {
    constructor(e, ...t) {
      super(e),
        (this.message = e),
        (this.name = 'Invariant Violation'),
        (this.message = qo(e, ...t)),
        Vce(this);
    }
  },
  Xt = (e, t, ...r) => {
    if (!e) throw new Bce(t, ...r);
  };
Xt.as = (e, t, r, ...n) => {
  if (!t) {
    let i = n.length === 0 ? r : qo(r, ...n),
      s;
    try {
      s = Reflect.construct(e, [i]);
    } catch {
      s = e(i);
    }
    throw s;
  }
};
function Wce() {
  let e = (t, r) => {
    (e.state = 'pending'),
      (e.resolve = (n) => {
        if (e.state !== 'pending') return;
        e.result = n;
        let i = (s) => ((e.state = 'fulfilled'), s);
        return t(n instanceof Promise ? n : Promise.resolve(n).then(i));
      }),
      (e.reject = (n) => {
        if (e.state === 'pending')
          return (
            queueMicrotask(() => {
              e.state = 'rejected';
            }),
            r((e.rejectionReason = n))
          );
      });
  };
  return e;
}
var al = class extends Promise {
  #e;
  resolve;
  reject;
  constructor(e = null) {
    let t = Wce();
    super((r, n) => {
      t(r, n), e?.(t.resolve, t.reject);
    }),
      (this.#e = t),
      (this.resolve = this.#e.resolve),
      (this.reject = this.#e.reject);
  }
  get state() {
    return this.#e.state;
  }
  get rejectionReason() {
    return this.#e.rejectionReason;
  }
  then(e, t) {
    return this.#t(super.then(e, t));
  }
  catch(e) {
    return this.#t(super.catch(e));
  }
  finally(e) {
    return this.#t(super.finally(e));
  }
  #t(e) {
    return Object.defineProperties(e, {
      resolve: { configurable: !0, value: this.resolve },
      reject: { configurable: !0, value: this.reject },
    });
  }
};
var Gce = class {
  constructor(e) {
    (this.request = e), (this.responsePromise = new al());
  }
  respondWith(e) {
    Xt(
      this.responsePromise.state === 'pending',
      'Failed to respond to "%s %s" request: the "request" event has already been responded to.',
      this.request.method,
      this.request.url,
    ),
      this.responsePromise.resolve(e);
  }
};
function fc(e) {
  let t = new Gce(e);
  return (
    Reflect.set(e, 'respondWith', t.respondWith.bind(t)),
    { interactiveRequest: e, requestController: t }
  );
}
async function Ei(e, t, ...r) {
  let n = e.listeners(t);
  if (n.length !== 0) for (let i of n) await i.apply(e, r);
}
function dc() {
  if (typeof navigator < 'u' && navigator.product === 'ReactNative') return !0;
  if (typeof process < 'u') {
    let e = process.type;
    return e === 'renderer' || e === 'worker'
      ? !1
      : !!(process.versions && process.versions.node);
  }
  return !1;
}
var Yce = Object.defineProperty,
  Jce = (e, t) => {
    for (var r in t) Yce(e, r, { get: t[r], enumerable: !0 });
  },
  UT = {};
Jce(UT, {
  blue: () => Xce,
  gray: () => VT,
  green: () => Qce,
  red: () => Zce,
  yellow: () => Kce,
});
function Kce(e) {
  return `\x1B[33m${e}\x1B[0m`;
}
function Xce(e) {
  return `\x1B[34m${e}\x1B[0m`;
}
function VT(e) {
  return `\x1B[90m${e}\x1B[0m`;
}
function Zce(e) {
  return `\x1B[31m${e}\x1B[0m`;
}
function Qce(e) {
  return `\x1B[32m${e}\x1B[0m`;
}
var Gg = dc(),
  Ur = class {
    constructor(e) {
      (this.name = e), (this.prefix = `[${this.name}]`);
      let t = cH('DEBUG'),
        r = cH('LOG_LEVEL');
      t === '1' || t === 'true' || (typeof t < 'u' && this.name.startsWith(t))
        ? ((this.debug = Rh(r, 'debug') ? Fs : this.debug),
          (this.info = Rh(r, 'info') ? Fs : this.info),
          (this.success = Rh(r, 'success') ? Fs : this.success),
          (this.warning = Rh(r, 'warning') ? Fs : this.warning),
          (this.error = Rh(r, 'error') ? Fs : this.error))
        : ((this.info = Fs),
          (this.success = Fs),
          (this.warning = Fs),
          (this.error = Fs),
          (this.only = Fs));
    }
    prefix;
    extend(e) {
      return new Ur(`${this.name}:${e}`);
    }
    debug(e, ...t) {
      this.logEntry({
        level: 'debug',
        message: VT(e),
        positionals: t,
        prefix: this.prefix,
        colors: { prefix: 'gray' },
      });
    }
    info(e, ...t) {
      this.logEntry({
        level: 'info',
        message: e,
        positionals: t,
        prefix: this.prefix,
        colors: { prefix: 'blue' },
      });
      let r = new efe();
      return (n, ...i) => {
        r.measure(),
          this.logEntry({
            level: 'info',
            message: `${n} ${VT(`${r.deltaTime}ms`)}`,
            positionals: i,
            prefix: this.prefix,
            colors: { prefix: 'blue' },
          });
      };
    }
    success(e, ...t) {
      this.logEntry({
        level: 'info',
        message: e,
        positionals: t,
        prefix: `\u2714 ${this.prefix}`,
        colors: { timestamp: 'green', prefix: 'green' },
      });
    }
    warning(e, ...t) {
      this.logEntry({
        level: 'warning',
        message: e,
        positionals: t,
        prefix: `\u26A0 ${this.prefix}`,
        colors: { timestamp: 'yellow', prefix: 'yellow' },
      });
    }
    error(e, ...t) {
      this.logEntry({
        level: 'error',
        message: e,
        positionals: t,
        prefix: `\u2716 ${this.prefix}`,
        colors: { timestamp: 'red', prefix: 'red' },
      });
    }
    only(e) {
      e();
    }
    createEntry(e, t) {
      return { timestamp: new Date(), level: e, message: t };
    }
    logEntry(e) {
      let {
          level: t,
          message: r,
          prefix: n,
          colors: i,
          positionals: s = [],
        } = e,
        o = this.createEntry(t, r),
        a = i?.timestamp || 'gray',
        u = i?.prefix || 'gray',
        c = { timestamp: UT[a], prefix: UT[u] };
      this.getWriter(t)(
        [c.timestamp(this.formatTimestamp(o.timestamp))]
          .concat(n != null ? c.prefix(n) : [])
          .concat(fH(r))
          .join(' '),
        ...s.map(fH),
      );
    }
    formatTimestamp(e) {
      return `${e.toLocaleTimeString('en-GB')}:${e.getMilliseconds()}`;
    }
    getWriter(e) {
      switch (e) {
        case 'debug':
        case 'success':
        case 'info':
          return tfe;
        case 'warning':
          return rfe;
        case 'error':
          return nfe;
      }
    }
  },
  efe = class {
    startTime;
    endTime;
    deltaTime;
    constructor() {
      this.startTime = performance.now();
    }
    measure() {
      this.endTime = performance.now();
      let e = this.endTime - this.startTime;
      this.deltaTime = e.toFixed(2);
    }
  },
  Fs = () => {};
function tfe(e, ...t) {
  if (Gg) {
    process.stdout.write(
      qo(e, ...t) +
        `
`,
    );
    return;
  }
  console.log(e, ...t);
}
function rfe(e, ...t) {
  if (Gg) {
    process.stderr.write(
      qo(e, ...t) +
        `
`,
    );
    return;
  }
  console.warn(e, ...t);
}
function nfe(e, ...t) {
  if (Gg) {
    process.stderr.write(
      qo(e, ...t) +
        `
`,
    );
    return;
  }
  console.error(e, ...t);
}
function cH(e) {
  return Gg ? process.env[e] : globalThis[e]?.toString();
}
function Rh(e, t) {
  return e !== void 0 && e !== t;
}
function fH(e) {
  return typeof e > 'u'
    ? 'undefined'
    : e === null
      ? 'null'
      : typeof e == 'string'
        ? e
        : typeof e == 'object'
          ? JSON.stringify(e)
          : e.toString();
}
var sfe = class extends Error {
    constructor(e, t, r) {
      super(
        `Possible EventEmitter memory leak detected. ${r} ${t.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`,
      ),
        (this.emitter = e),
        (this.type = t),
        (this.count = r),
        (this.name = 'MaxListenersExceededWarning');
    }
  },
  dH = class {
    static listenerCount(e, t) {
      return e.listenerCount(t);
    }
    constructor() {
      (this.events = new Map()),
        (this.maxListeners = dH.defaultMaxListeners),
        (this.hasWarnedAboutPotentialMemoryLeak = !1);
    }
    _emitInternalEvent(e, t, r) {
      this.emit(e, t, r);
    }
    _getListeners(e) {
      return Array.prototype.concat.apply([], this.events.get(e)) || [];
    }
    _removeListener(e, t) {
      let r = e.indexOf(t);
      return r > -1 && e.splice(r, 1), [];
    }
    _wrapOnceListener(e, t) {
      let r = (...n) => (this.removeListener(e, r), t.apply(this, n));
      return Object.defineProperty(r, 'name', { value: t.name }), r;
    }
    setMaxListeners(e) {
      return (this.maxListeners = e), this;
    }
    getMaxListeners() {
      return this.maxListeners;
    }
    eventNames() {
      return Array.from(this.events.keys());
    }
    emit(e, ...t) {
      let r = this._getListeners(e);
      return (
        r.forEach((n) => {
          n.apply(this, t);
        }),
        r.length > 0
      );
    }
    addListener(e, t) {
      this._emitInternalEvent('newListener', e, t);
      let r = this._getListeners(e).concat(t);
      if (
        (this.events.set(e, r),
        this.maxListeners > 0 &&
          this.listenerCount(e) > this.maxListeners &&
          !this.hasWarnedAboutPotentialMemoryLeak)
      ) {
        this.hasWarnedAboutPotentialMemoryLeak = !0;
        let n = new sfe(this, e, this.listenerCount(e));
        console.warn(n);
      }
      return this;
    }
    on(e, t) {
      return this.addListener(e, t);
    }
    once(e, t) {
      return this.addListener(e, this._wrapOnceListener(e, t));
    }
    prependListener(e, t) {
      let r = this._getListeners(e);
      if (r.length > 0) {
        let n = [t].concat(r);
        this.events.set(e, n);
      } else this.events.set(e, r.concat(t));
      return this;
    }
    prependOnceListener(e, t) {
      return this.prependListener(e, this._wrapOnceListener(e, t));
    }
    removeListener(e, t) {
      let r = this._getListeners(e);
      return (
        r.length > 0 &&
          (this._removeListener(r, t),
          this.events.set(e, r),
          this._emitInternalEvent('removeListener', e, t)),
        this
      );
    }
    off(e, t) {
      return this.removeListener(e, t);
    }
    removeAllListeners(e) {
      return e ? this.events.delete(e) : this.events.clear(), this;
    }
    listeners(e) {
      return Array.from(this._getListeners(e));
    }
    listenerCount(e) {
      return this._getListeners(e).length;
    }
    rawListeners(e) {
      return this.listeners(e);
    }
  },
  hc = dH;
hc.defaultMaxListeners = 10;
var pc = 'x-interceptors-internal-request-id';
function BT(e) {
  return globalThis[e] || void 0;
}
function ife(e, t) {
  globalThis[e] = t;
}
function hH(e) {
  delete globalThis[e];
}
var Th = ((e) => (
    (e.INACTIVE = 'INACTIVE'),
    (e.APPLYING = 'APPLYING'),
    (e.APPLIED = 'APPLIED'),
    (e.DISPOSING = 'DISPOSING'),
    (e.DISPOSED = 'DISPOSED'),
    e
  ))(Th || {}),
  Ri = class {
    constructor(e) {
      (this.symbol = e),
        (this.readyState = 'INACTIVE'),
        (this.emitter = new hc()),
        (this.subscriptions = []),
        (this.logger = new Ur(e.description)),
        this.emitter.setMaxListeners(0),
        this.logger.info('constructing the interceptor...');
    }
    checkEnvironment() {
      return !0;
    }
    apply() {
      let e = this.logger.extend('apply');
      if (
        (e.info('applying the interceptor...'), this.readyState === 'APPLIED')
      ) {
        e.info('intercepted already applied!');
        return;
      }
      if (!this.checkEnvironment()) {
        e.info('the interceptor cannot be applied in this environment!');
        return;
      }
      this.readyState = 'APPLYING';
      let r = this.getInstance();
      if (r) {
        e.info('found a running instance, reusing...'),
          (this.on = (n, i) => (
            e.info('proxying the "%s" listener', n),
            r.emitter.addListener(n, i),
            this.subscriptions.push(() => {
              r.emitter.removeListener(n, i),
                e.info('removed proxied "%s" listener!', n);
            }),
            this
          )),
          (this.readyState = 'APPLIED');
        return;
      }
      e.info('no running instance found, setting up a new instance...'),
        this.setup(),
        this.setInstance(),
        (this.readyState = 'APPLIED');
    }
    setup() {}
    on(e, t) {
      let r = this.logger.extend('on');
      return this.readyState === 'DISPOSING' || this.readyState === 'DISPOSED'
        ? (r.info('cannot listen to events, already disposed!'), this)
        : (r.info('adding "%s" event listener:', e, t),
          this.emitter.on(e, t),
          this);
    }
    once(e, t) {
      return this.emitter.once(e, t), this;
    }
    off(e, t) {
      return this.emitter.off(e, t), this;
    }
    removeAllListeners(e) {
      return this.emitter.removeAllListeners(e), this;
    }
    dispose() {
      let e = this.logger.extend('dispose');
      if (this.readyState === 'DISPOSED') {
        e.info('cannot dispose, already disposed!');
        return;
      }
      if (
        (e.info('disposing the interceptor...'),
        (this.readyState = 'DISPOSING'),
        !this.getInstance())
      ) {
        e.info('no interceptors running, skipping dispose...');
        return;
      }
      if (
        (this.clearInstance(),
        e.info('global symbol deleted:', BT(this.symbol)),
        this.subscriptions.length > 0)
      ) {
        e.info('disposing of %d subscriptions...', this.subscriptions.length);
        for (let t of this.subscriptions) t();
        (this.subscriptions = []),
          e.info('disposed of all subscriptions!', this.subscriptions.length);
      }
      this.emitter.removeAllListeners(),
        e.info('destroyed the listener!'),
        (this.readyState = 'DISPOSED');
    }
    getInstance() {
      var e;
      let t = BT(this.symbol);
      return (
        this.logger.info(
          'retrieved global instance:',
          (e = t?.constructor) == null ? void 0 : e.name,
        ),
        t
      );
    }
    setInstance() {
      ife(this.symbol, this),
        this.logger.info('set global instance!', this.symbol.description);
    }
    clearInstance() {
      hH(this.symbol),
        this.logger.info('cleared global instance!', this.symbol.description);
    }
  };
function ll() {
  return Math.random().toString(16).slice(2);
}
function ofe(e, t) {
  try {
    return e[t], !0;
  } catch {
    return !1;
  }
}
var afe = new Set([101, 103, 204, 205, 304]);
function Ph(e) {
  return afe.has(e);
}
function mc(e) {
  return new Response(
    JSON.stringify(
      e instanceof Error
        ? { name: e.name, message: e.message, stack: e.stack }
        : e,
    ),
    {
      status: 500,
      statusText: 'Unhandled Exception',
      headers: { 'Content-Type': 'application/json' },
    },
  );
}
function Ti(e) {
  return ofe(e, 'type') && e.type === 'error';
}
var SH = Kn(require('http'), 1),
  _H = Kn(require('https'), 1),
  yc = require('http');
var Pi = async (e) => {
  try {
    return {
      error: null,
      data: await e().catch((r) => {
        throw r;
      }),
    };
  } catch (t) {
    return { error: t, data: null };
  }
};
var wH = require('http'),
  EH = require('stream'),
  Jg = require('http'),
  Kg = require('https'),
  TH = require('url');
var PH = require('http');
var pH = new Ur('utils getUrlByRequestOptions');
function lfe(...e) {
  pH.info('arguments', e);
  let t = new Array(3).fill(null).map((r, n) => e[n] || r);
  return (
    t.sort((r, n) =>
      typeof r == 'function'
        ? 1
        : typeof n == 'function'
          ? -1
          : typeof r == 'string' && typeof n == 'string'
            ? t.indexOf(r) - t.indexOf(n)
            : 0,
    ),
    pH.info('normalized args', t),
    t
  );
}
var mH = new Ur('http normalizeWriteArgs');
function ufe(e) {
  mH.info('normalizing ClientRequest.write arguments...', e);
  let t = e[0],
    r = typeof e[1] == 'string' ? e[1] : void 0,
    n = typeof e[1] == 'function' ? e[1] : e[2],
    i = [t, r, n];
  return (
    mH.info('successfully normalized ClientRequest.write arguments:', i), i
  );
}
var cfe = Symbol('isClone');
function yH(e) {
  let t = e.pipe(new EH.PassThrough());
  gH(e, t);
  let r = Object.create(wH.IncomingMessage.prototype);
  return (
    ffe(t).forEach((n) => {
      gH(n, r);
    }),
    Object.setPrototypeOf(t, r),
    Object.defineProperty(t, cfe, { enumerable: !0, value: !0 }),
    t
  );
}
function ffe(e) {
  let t = [],
    r = e;
  for (; (r = Object.getPrototypeOf(r)); ) t.push(r);
  return t;
}
function gH(e, t) {
  let r = [
    ...Object.getOwnPropertyNames(e),
    ...Object.getOwnPropertySymbols(e),
  ];
  for (let n of r) {
    if (t.hasOwnProperty(n)) continue;
    let i = Object.getOwnPropertyDescriptor(e, n);
    i && Object.defineProperty(t, n, i);
  }
}
function dfe(e) {
  let t = Ph(e.statusCode || 200)
    ? null
    : new ReadableStream({
        start(r) {
          e.on('data', (n) => r.enqueue(n)), e.on('end', () => r.close());
        },
      });
  return new Response(t, {
    status: e.statusCode,
    statusText: e.statusMessage,
    headers: hfe(e.headers),
  });
}
function hfe(e) {
  let t = new Headers();
  for (let r in e) {
    let n = e[r];
    if (!(typeof n > 'u')) {
      if (Array.isArray(n)) {
        n.forEach((i) => {
          t.append(r, i);
        });
        continue;
      }
      t.set(r, n);
    }
  }
  return t;
}
function pfe(e) {
  let t = new Headers(),
    r = e.getHeaders();
  for (let i in r) {
    let s = r[i];
    if (typeof s > 'u') continue;
    let o = Array.prototype.concat([], s);
    for (let a of o) t.append(i, a.toString());
  }
  if (e.url.username || e.url.password) {
    let i = decodeURIComponent(e.url.username || ''),
      s = decodeURIComponent(e.url.password || ''),
      o = `${i}:${s}`;
    t.set('Authorization', `Basic ${btoa(o)}`),
      (e.url.username = ''),
      (e.url.password = '');
  }
  let n = e.method || 'GET';
  return new Request(e.url, {
    method: n,
    headers: t,
    credentials: 'same-origin',
    body: n === 'HEAD' || n === 'GET' ? null : e.requestBuffer,
  });
}
function vH(e, t) {
  let n = Object.getOwnPropertySymbols(t).find((i) => i.description === e);
  if (n) return Reflect.get(t, n);
}
function Yg(e, t = !1) {
  return t
    ? Object.prototype.toString.call(e).startsWith('[object ')
    : Object.prototype.toString.call(e) === '[object Object]';
}
function mfe(e) {
  let t = vH('headers list', e);
  if (!t) return;
  let r = vH('headers map', t);
  if (!r || !yfe(r)) return;
  let n = new Map();
  return (
    r.forEach(({ name: i, value: s }) => {
      n.set(i, s);
    }),
    n
  );
}
function yfe(e) {
  return Array.from(e.values()).every((t) => Yg(t) && 'name' in t);
}
function gfe(e) {
  return e == null || !(e instanceof Error) ? !1 : 'code' in e && 'errno' in e;
}
var RH = class extends yc.ClientRequest {
    constructor([e, t, r], n) {
      super(t, r),
        (this.chunks = []),
        (this.logger = n.logger.extend(`request ${t.method} ${e.href}`)),
        this.logger.info('constructing ClientRequest using options:', {
          url: e,
          requestOptions: t,
          callback: r,
        }),
        (this.state = 0),
        (this.url = e),
        (this.emitter = n.emitter),
        (this.requestBuffer = null),
        (this.response = new yc.IncomingMessage(this.socket));
    }
    writeRequestBodyChunk(e, t) {
      if (e == null) return;
      this.requestBuffer == null && (this.requestBuffer = Buffer.from([]));
      let r = Buffer.isBuffer(e) ? e : Buffer.from(e, t);
      this.requestBuffer = Buffer.concat([this.requestBuffer, r]);
    }
    write(...e) {
      var t;
      let [r, n, i] = ufe(e);
      return (
        this.logger.info('write:', { chunk: r, encoding: n, callback: i }),
        this.chunks.push({ chunk: r, encoding: n }),
        this.writeRequestBodyChunk(r, n),
        this.logger.info(
          'chunk successfully stored!',
          (t = this.requestBuffer) == null ? void 0 : t.byteLength,
        ),
        !r || r.length === 0
          ? this.logger.info('written chunk is empty, skipping callback...')
          : i?.(),
        !0
      );
    }
    end(...e) {
      this.logger.info('end', e);
      let t = ll(),
        [r, n, i] = lfe(...e);
      this.logger.info('normalized arguments:', {
        chunk: r,
        encoding: n,
        callback: i,
      }),
        this.writeRequestBodyChunk(r, n || void 0),
        (this.state = 2);
      let s = pfe(this),
        { interactiveRequest: o, requestController: a } = fc(s);
      return (
        Object.defineProperty(s, 'respondWith', {
          value: a.respondWith.bind(a),
        }),
        this.hasHeader(pc)
          ? (this.removeHeader(pc), this.passthrough(r, n, i))
          : (this.emitter.once('request', ({ requestId: u }) => {
              u === t &&
                a.responsePromise.state === 'pending' &&
                (this.logger.info(
                  'request has not been handled in listeners, executing fail-safe listener...',
                ),
                a.responsePromise.resolve(void 0));
            }),
            Pi(async () => {
              this.logger.info(
                'emitting the "request" event for %d listener(s)...',
                this.emitter.listenerCount('request'),
              ),
                (this.state = 3),
                await Ei(this.emitter, 'request', { request: o, requestId: t }),
                this.logger.info('all "request" listeners done!');
              let u = await a.responsePromise;
              return this.logger.info('event.respondWith called with:', u), u;
            }).then((u) => {
              if (
                (this.logger.info('the listeners promise awaited!'),
                (this.state = 4),
                !this.headersSent)
              )
                for (let [d, m] of s.headers) this.setHeader(d, m);
              if (u.error) {
                if (
                  (this.logger.info(
                    'unhandled resolver exception, coercing to an error response...',
                    u.error,
                  ),
                  u.error instanceof Response)
                ) {
                  Ti(u.error)
                    ? (this.logger.info(
                        'received network error response, erroring request...',
                      ),
                      this.errorWith(new TypeError('Network error')))
                    : this.respondWith(u.error);
                  return;
                }
                return gfe(u.error)
                  ? (this.errorWith(u.error), this)
                  : (Pi(async () => {
                      (this.emitter.listenerCount('unhandledException') > 0 &&
                        (await Ei(this.emitter, 'unhandledException', {
                          error: u.error,
                          request: s,
                          requestId: t,
                          controller: {
                            respondWith: this.respondWith.bind(this),
                            errorWith: this.errorWith.bind(this),
                          },
                        }),
                        this.writableEnded || this.destroyed)) ||
                        this.respondWith(mc(u.error));
                    }),
                    this);
              }
              let c = u.data;
              if (c) {
                if (
                  (this.logger.info(
                    'received mocked response:',
                    c.status,
                    c.statusText,
                  ),
                  (this.destroyed = !1),
                  Ti(c))
                )
                  return (
                    this.logger.info(
                      'received network error response, erroring request...',
                    ),
                    this.errorWith(new TypeError('Network error')),
                    this
                  );
                let d = c.clone();
                return (
                  this.respondWith(c),
                  this.logger.info(c.status, c.statusText, '(MOCKED)'),
                  i?.(),
                  this.logger.info('emitting the custom "response" event...'),
                  this.emitter.emit('response', {
                    response: d,
                    isMockedResponse: !0,
                    request: s,
                    requestId: t,
                  }),
                  this.logger.info('request (mock) is completed'),
                  this
                );
              }
              return (
                this.logger.info('no mocked response received!'),
                this.once('response-internal', (d) => {
                  this.logger.info(d.statusCode, d.statusMessage),
                    this.logger.info('original response headers:', d.headers),
                    this.logger.info('emitting the custom "response" event...'),
                    this.emitter.emit('response', {
                      response: dfe(d),
                      isMockedResponse: !1,
                      request: s,
                      requestId: t,
                    });
                }),
                this.passthrough(r, n, i)
              );
            }),
            this)
      );
    }
    emit(e, ...t) {
      if ((this.logger.info('emit: %s', e), e === 'response')) {
        this.logger.info('found "response" event, cloning the response...');
        try {
          let r = t[0],
            n = yH(r),
            i = yH(r);
          return (
            this.emit('response-internal', i),
            this.logger.info(
              'response successfully cloned, emitting "response" event...',
            ),
            super.emit(e, n, ...t.slice(1))
          );
        } catch (r) {
          return (
            this.logger.info('error when cloning response:', r),
            super.emit(e, ...t)
          );
        }
      }
      if (e === 'error') {
        let r = t[0],
          n = r.code || '';
        if (
          (this.logger.info(
            `error:
`,
            r,
          ),
          RH.suppressErrorCodes.includes(n))
        ) {
          if (this.state < 4)
            return (
              this.capturedError ||
                ((this.capturedError = r),
                this.logger.info(
                  'captured the first error:',
                  this.capturedError,
                )),
              !1
            );
          if (this.state === 5 && this.responseType === 'mock') return !1;
        }
      }
      return super.emit(e, ...t);
    }
    passthrough(e, t, r) {
      if (
        ((this.state = 5),
        (this.responseType = 'passthrough'),
        this.capturedError)
      )
        return this.emit('error', this.capturedError), this;
      this.logger.info('writing request chunks...', this.chunks);
      for (let { chunk: n, encoding: i } of this.chunks)
        i ? super.write(n, i) : super.write(n);
      return (
        this.once('error', (n) => {
          this.logger.info('original request error:', n);
        }),
        this.once('abort', () => {
          this.logger.info('original request aborted!');
        }),
        this.once('response-internal', (n) => {
          this.logger.info(n.statusCode, n.statusMessage),
            this.logger.info('original response headers:', n.headers);
        }),
        this.logger.info('performing original request...'),
        super.end(...[e, t, r].filter(Boolean))
      );
    }
    respondWith(e) {
      this.logger.info('responding with a mocked response...', e),
        (this.state = 5),
        (this.responseType = 'mock'),
        Object.defineProperties(this, {
          writableFinished: { value: !0 },
          writableEnded: { value: !0 },
        }),
        this.emit('finish');
      let { status: t, statusText: r, headers: n, body: i } = e;
      (this.response.statusCode = t),
        (this.response.statusMessage = r || yc.STATUS_CODES[t]);
      let s = mfe(n) || n;
      s &&
        ((this.response.headers = {}),
        s.forEach((u, c) => {
          this.response.rawHeaders.push(c, u);
          let d = c.toLowerCase(),
            m = this.response.headers[d];
          this.response.headers[d] = m ? Array.prototype.concat([], m, u) : u;
        })),
        this.logger.info('mocked response headers ready:', n),
        (this.res = this.response),
        this.emit('response', this.response);
      let o = new al(),
        a = () => {
          this.logger.info('finished response stream!'),
            this.response.push(null),
            (this.response.complete = !0),
            o.resolve();
        };
      if (i) {
        let u = i.getReader(),
          c = async () => {
            let { done: d, value: m } = await u.read();
            if (d) {
              a();
              return;
            }
            return this.response.emit('data', m), c();
          };
        c();
      } else a();
      o.then(() => {
        this.logger.info('finalizing response...'),
          this.response.emit('end'),
          this.terminate(),
          this.logger.info('request complete!');
      });
    }
    errorWith(e) {
      (this.destroyed = !0), this.emit('error', e), this.terminate();
    }
    terminate() {
      var e;
      (e = this.agent) == null || e.destroy();
    }
  },
  JT = RH;
JT.suppressErrorCodes = [
  'ENOTFOUND',
  'ECONNREFUSED',
  'ECONNRESET',
  'EAI_AGAIN',
  'ENETUNREACH',
  'EHOSTUNREACH',
];
function YT(e) {
  let t = {
    method: 'GET',
    protocol: e.protocol,
    hostname:
      typeof e.hostname == 'string' && e.hostname.startsWith('[')
        ? e.hostname.slice(1, -1)
        : e.hostname,
    host: e.host,
    path: `${e.pathname}${e.search || ''}`,
  };
  return (
    e.port && (t.port = Number(e.port)),
    (e.username || e.password) && (t.auth = `${e.username}:${e.password}`),
    t
  );
}
var qs = new Ur('utils getUrlByRequestOptions'),
  vfe = '/',
  bfe = 'http:',
  Sfe = 'localhost',
  _fe = 443;
function kH(e) {
  return e.agent instanceof PH.Agent ? e.agent : void 0;
}
function wfe(e) {
  var t;
  if (e.protocol) return e.protocol;
  let r = kH(e),
    n = r?.protocol;
  if (n) return n;
  let i = xH(e);
  return e.cert || i === _fe
    ? 'https:'
    : ((t = e.uri) == null ? void 0 : t.protocol) || bfe;
}
function xH(e) {
  if (e.port) return Number(e.port);
  let t = kH(e);
  if (t?.options.port) return Number(t.options.port);
  if (t?.defaultPort) return Number(t.defaultPort);
}
function Efe(e) {
  if (e.auth) {
    let [t, r] = e.auth.split(':');
    return { username: t, password: r };
  }
}
function Rfe(e) {
  return e.includes(':') && !e.startsWith('[') && !e.endsWith(']');
}
function Tfe(e) {
  let t = e.hostname || e.host;
  return t ? (Rfe(t) && (t = `[${t}]`), new URL(`http://${t}`).hostname) : Sfe;
}
function Pfe(e) {
  if ((qs.info('request options', e), e.uri))
    return (
      qs.info(
        'constructing url from explicitly provided "options.uri": %s',
        e.uri,
      ),
      new URL(e.uri.href)
    );
  qs.info('figuring out url from request options...');
  let t = wfe(e);
  qs.info('protocol', t);
  let r = xH(e);
  qs.info('port', r);
  let n = Tfe(e);
  qs.info('hostname', n);
  let i = e.path || vfe;
  qs.info('path', i);
  let s = Efe(e);
  qs.info('credentials', s);
  let o = s ? `${s.username}:${s.password}@` : '';
  qs.info('auth string:', o);
  let a = typeof r < 'u' ? `:${r}` : '',
    u = new URL(`${t}//${n}${a}${i}`);
  return (
    (u.username = s?.username || ''),
    (u.password = s?.password || ''),
    qs.info('created url:', u),
    u
  );
}
var kh = new Ur('cloneObject');
function bH(e) {
  var t;
  return (
    kh.info('is plain object?', e),
    e == null || !((t = e.constructor) != null && t.name)
      ? (kh.info('given object is undefined, not a plain object...'), !1)
      : (kh.info('checking the object constructor:', e.constructor.name),
        e.constructor.name === 'Object')
  );
}
function CH(e) {
  kh.info('cloning object:', e);
  let t = Object.entries(e).reduce(
    (r, [n, i]) => (
      kh.info('analyzing key-value pair:', n, i), (r[n] = bH(i) ? CH(i) : i), r
    ),
    {},
  );
  return bH(e) ? t : Object.assign(Object.getPrototypeOf(e), t);
}
var _t = new Ur('http normalizeClientRequestArgs');
function WT(e, t) {
  if (typeof e[1] > 'u' || typeof e[1] == 'function')
    return (
      _t.info('request options not provided, deriving from the url', t), YT(t)
    );
  if (e[1]) {
    _t.info('has custom RequestOptions!', e[1]);
    let r = YT(t);
    _t.info('derived RequestOptions from the URL:', r),
      _t.info('cloning RequestOptions...');
    let n = CH(e[1]);
    return _t.info('successfully cloned RequestOptions!', n), { ...r, ...n };
  }
  return _t.info('using an empty object as request options'), {};
}
function kfe(e, t) {
  if (
    ((e.host = t.host || e.host),
    (e.hostname = t.hostname || e.hostname),
    (e.port = t.port ? t.port.toString() : e.port),
    t.path)
  ) {
    let r = (0, TH.parse)(t.path, !1);
    (e.pathname = r.pathname || ''), (e.search = r.search || '');
  }
  return e;
}
function GT(e) {
  return typeof e[1] == 'function' ? e[1] : e[2];
}
function ul(e, ...t) {
  let r, n, i;
  if (
    (_t.info('arguments', t),
    _t.info('using default protocol:', e),
    t.length === 0)
  ) {
    let s = new URL('http://localhost'),
      o = WT(t, s);
    return [s, o];
  }
  if (typeof t[0] == 'string') {
    _t.info('first argument is a location string:', t[0]),
      (r = new URL(t[0])),
      _t.info('created a url:', r);
    let s = YT(r);
    _t.info('request options from url:', s),
      (n = WT(t, r)),
      _t.info('resolved request options:', n),
      (i = GT(t));
  } else if (t[0] instanceof URL)
    (r = t[0]),
      _t.info('first argument is a URL:', r),
      typeof t[1] < 'u' && Yg(t[1]) && (r = kfe(r, t[1])),
      (n = WT(t, r)),
      _t.info('derived request options:', n),
      (i = GT(t));
  else if ('hash' in t[0] && !('method' in t[0])) {
    let [s] = t;
    if ((_t.info('first argument is a legacy URL:', s), s.hostname === null))
      return (
        _t.info('given legacy URL is relative (no hostname)'),
        Yg(t[1])
          ? ul(e, { path: s.path, ...t[1] }, t[2])
          : ul(e, { path: s.path }, t[1])
      );
    _t.info('given legacy url is absolute');
    let o = new URL(s.href);
    return t[1] === void 0
      ? ul(e, o)
      : typeof t[1] == 'function'
        ? ul(e, o, t[1])
        : ul(e, o, t[1], t[2]);
  } else if (Yg(t[0]))
    (n = t[0]),
      _t.info('first argument is RequestOptions:', n),
      (n.protocol = n.protocol || e),
      _t.info('normalized request options:', n),
      (r = Pfe(n)),
      _t.info('created a URL from RequestOptions:', r.href),
      (i = GT(t));
  else
    throw new Error(
      `Failed to construct ClientRequest with these parameters: ${t}`,
    );
  if (
    ((n.protocol = n.protocol || r.protocol),
    (n.method = n.method || 'GET'),
    typeof n.agent > 'u')
  ) {
    let s =
      n.protocol === 'https:'
        ? new Kg.Agent({ rejectUnauthorized: n.rejectUnauthorized })
        : new Jg.Agent();
    (n.agent = s), _t.info('resolved fallback agent:', s);
  }
  return (
    n._defaultAgent ||
      (_t.info(
        'has no default agent, setting the default agent for "%s"',
        n.protocol,
      ),
      (n._defaultAgent =
        n.protocol === 'https:' ? Kg.globalAgent : Jg.globalAgent)),
    _t.info('successfully resolved url:', r.href),
    _t.info('successfully resolved options:', n),
    _t.info('successfully resolved callback:', i),
    [r, n, i]
  );
}
function xfe(e, t) {
  return function (...n) {
    let i = ul(`${e}:`, ...n),
      s = new JT(i, t);
    return s.end(), s;
  };
}
var Cfe = new Ur('http request');
function Ofe(e, t) {
  return function (...n) {
    Cfe.info('request call (protocol "%s"):', e, n);
    let i = ul(`${e}:`, ...n);
    return new JT(i, t);
  };
}
var OH = class extends Ri {
    constructor() {
      super(OH.interceptorSymbol),
        (this.modules = new Map()),
        this.modules.set('http', SH.default),
        this.modules.set('https', _H.default);
    }
    setup() {
      let e = this.logger.extend('setup');
      for (let [t, r] of this.modules) {
        let { request: n, get: i } = r;
        this.subscriptions.push(() => {
          (r.request = n),
            (r.get = i),
            e.info('native "%s" module restored!', t);
        });
        let s = { emitter: this.emitter, logger: this.logger };
        (r.request = Ofe(t, s)),
          (r.get = xfe(t, s)),
          e.info('native "%s" module patched!', t);
      }
    }
  },
  Xg = OH;
Xg.interceptorSymbol = Symbol('http');
var Ife = new TextEncoder();
function KT(e) {
  return Ife.encode(e);
}
function XT(e, t) {
  return new TextDecoder(t).decode(e);
}
function IH(e) {
  return e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
}
var ki = Symbol('isPatchedModule');
function Afe(e, t) {
  let r = new Uint8Array(e.byteLength + t.byteLength);
  return r.set(e, 0), r.set(t, e.byteLength), r;
}
var LH = class {
    constructor(e, t) {
      (this.AT_TARGET = 0),
        (this.BUBBLING_PHASE = 0),
        (this.CAPTURING_PHASE = 0),
        (this.NONE = 0),
        (this.type = ''),
        (this.srcElement = null),
        (this.currentTarget = null),
        (this.eventPhase = 0),
        (this.isTrusted = !0),
        (this.composed = !1),
        (this.cancelable = !0),
        (this.defaultPrevented = !1),
        (this.bubbles = !0),
        (this.lengthComputable = !0),
        (this.loaded = 0),
        (this.total = 0),
        (this.cancelBubble = !1),
        (this.returnValue = !0),
        (this.type = e),
        (this.target = t?.target || null),
        (this.currentTarget = t?.currentTarget || null),
        (this.timeStamp = Date.now());
    }
    composedPath() {
      return [];
    }
    initEvent(e, t, r) {
      (this.type = e), (this.bubbles = !!t), (this.cancelable = !!r);
    }
    preventDefault() {
      this.defaultPrevented = !0;
    }
    stopPropagation() {}
    stopImmediatePropagation() {}
  },
  $fe = class extends LH {
    constructor(e, t) {
      super(e),
        (this.lengthComputable = t?.lengthComputable || !1),
        (this.composed = t?.composed || !1),
        (this.loaded = t?.loaded || 0),
        (this.total = t?.total || 0);
    }
  },
  Nfe = typeof ProgressEvent < 'u';
function Lfe(e, t, r) {
  let n = [
      'error',
      'progress',
      'loadstart',
      'loadend',
      'load',
      'timeout',
      'abort',
    ],
    i = Nfe ? ProgressEvent : $fe;
  return n.includes(t)
    ? new i(t, {
        lengthComputable: !0,
        loaded: r?.loaded || 0,
        total: r?.total || 0,
      })
    : new LH(t, { target: e, currentTarget: e });
}
function DH(e, t) {
  if (!(t in e)) return null;
  if (Object.prototype.hasOwnProperty.call(e, t)) return e;
  let n = Reflect.getPrototypeOf(e);
  return n ? DH(n, t) : null;
}
function AH(e, t) {
  return new Proxy(e, Dfe(t));
}
function Dfe(e) {
  let { constructorCall: t, methodCall: r, getProperty: n, setProperty: i } = e,
    s = {};
  return (
    typeof t < 'u' &&
      (s.construct = function (o, a, u) {
        let c = Reflect.construct.bind(null, o, a, u);
        return t.call(u, a, c);
      }),
    (s.set = function (o, a, u) {
      let c = () => {
        let d = DH(o, a) || o,
          m = Reflect.getOwnPropertyDescriptor(d, a);
        return typeof m?.set < 'u'
          ? (m.set.apply(o, [u]), !0)
          : Reflect.defineProperty(d, a, {
              writable: !0,
              enumerable: !0,
              configurable: !0,
              value: u,
            });
      };
      return typeof i < 'u' ? i.call(o, [a, u], c) : c();
    }),
    (s.get = function (o, a, u) {
      let c = () => o[a],
        d = typeof n < 'u' ? n.call(o, [a, u], c) : c();
      return typeof d == 'function'
        ? (...m) => {
            let g = d.bind(o, ...m);
            return typeof r < 'u' ? r.call(o, [a, m], g) : g();
          }
        : d;
    }),
    s
  );
}
function jfe(e) {
  return [
    'application/xhtml+xml',
    'application/xml',
    'image/svg+xml',
    'text/html',
    'text/xml',
  ].some((r) => e.startsWith(r));
}
function Ffe(e) {
  try {
    return JSON.parse(e);
  } catch {
    return null;
  }
}
function qfe(e, t) {
  let r = Ph(e.status) ? null : t;
  return new Response(r, {
    status: e.status,
    statusText: e.statusText,
    headers: Mfe(e.getAllResponseHeaders()),
  });
}
function Mfe(e) {
  let t = new Headers(),
    r = e.split(/[\r\n]+/);
  for (let n of r) {
    if (n.trim() === '') continue;
    let [i, ...s] = n.split(': '),
      o = s.join(': ');
    t.append(i, o);
  }
  return t;
}
var $H = Symbol('isMockedResponse'),
  Hfe = dc(),
  zfe = class {
    constructor(e, t) {
      (this.initialRequest = e),
        (this.logger = t),
        (this.method = 'GET'),
        (this.url = null),
        (this.events = new Map()),
        (this.requestId = ll()),
        (this.requestHeaders = new Headers()),
        (this.responseBuffer = new Uint8Array()),
        (this.request = AH(e, {
          setProperty: ([r, n], i) => {
            switch (r) {
              case 'ontimeout': {
                let s = r.slice(2);
                return this.request.addEventListener(s, n), i();
              }
              default:
                return i();
            }
          },
          methodCall: ([r, n], i) => {
            var s;
            switch (r) {
              case 'open': {
                let [o, a] = n;
                return (
                  typeof a > 'u'
                    ? ((this.method = 'GET'), (this.url = NH(o)))
                    : ((this.method = o), (this.url = NH(a))),
                  (this.logger = this.logger.extend(
                    `${this.method} ${this.url.href}`,
                  )),
                  this.logger.info('open', this.method, this.url.href),
                  i()
                );
              }
              case 'addEventListener': {
                let [o, a] = n;
                return (
                  this.registerEvent(o, a),
                  this.logger.info('addEventListener', o, a),
                  i()
                );
              }
              case 'setRequestHeader': {
                let [o, a] = n;
                return (
                  this.requestHeaders.set(o, a),
                  this.logger.info('setRequestHeader', o, a),
                  i()
                );
              }
              case 'send': {
                let [o] = n;
                o != null &&
                  (this.requestBody = typeof o == 'string' ? KT(o) : o),
                  this.request.addEventListener('load', () => {
                    if (typeof this.onResponse < 'u') {
                      let c = qfe(this.request, this.request.response);
                      this.onResponse.call(this, {
                        response: c,
                        isMockedResponse: $H in this.request,
                        request: a,
                        requestId: this.requestId,
                      });
                    }
                  });
                let a = this.toFetchApiRequest();
                (
                  ((s = this.onRequest) == null
                    ? void 0
                    : s.call(this, {
                        request: a,
                        requestId: this.requestId,
                      })) || Promise.resolve()
                ).finally(() => {
                  if (this.request.readyState < this.request.LOADING)
                    return (
                      this.logger.info(
                        'request callback settled but request has not been handled (readystate %d), performing as-is...',
                        this.request.readyState,
                      ),
                      Hfe && this.request.setRequestHeader(pc, this.requestId),
                      i()
                    );
                });
                break;
              }
              default:
                return i();
            }
          },
        }));
    }
    registerEvent(e, t) {
      let n = (this.events.get(e) || []).concat(t);
      this.events.set(e, n), this.logger.info('registered event "%s"', e, t);
    }
    respondWith(e) {
      this.logger.info(
        'responding with a mocked response: %d %s',
        e.status,
        e.statusText,
      ),
        gc(this.request, $H, !0),
        gc(this.request, 'status', e.status),
        gc(this.request, 'statusText', e.statusText),
        gc(this.request, 'responseURL', this.url.href),
        (this.request.getResponseHeader = new Proxy(
          this.request.getResponseHeader,
          {
            apply: (n, i, s) => {
              if (
                (this.logger.info('getResponseHeader', s[0]),
                this.request.readyState < this.request.HEADERS_RECEIVED)
              )
                return (
                  this.logger.info('headers not received yet, returning null'),
                  null
                );
              let o = e.headers.get(s[0]);
              return (
                this.logger.info('resolved response header "%s" to', s[0], o), o
              );
            },
          },
        )),
        (this.request.getAllResponseHeaders = new Proxy(
          this.request.getAllResponseHeaders,
          {
            apply: () => {
              if (
                (this.logger.info('getAllResponseHeaders'),
                this.request.readyState < this.request.HEADERS_RECEIVED)
              )
                return (
                  this.logger.info(
                    'headers not received yet, returning empty string',
                  ),
                  ''
                );
              let i = Array.from(e.headers.entries()).map(
                ([s, o]) => `${s}: ${o}`,
              ).join(`\r
`);
              return this.logger.info('resolved all response headers to', i), i;
            },
          },
        )),
        Object.defineProperties(this.request, {
          response: {
            enumerable: !0,
            configurable: !1,
            get: () => this.response,
          },
          responseText: {
            enumerable: !0,
            configurable: !1,
            get: () => this.responseText,
          },
          responseXML: {
            enumerable: !0,
            configurable: !1,
            get: () => this.responseXML,
          },
        });
      let t = e.headers.has('Content-Length')
        ? Number(e.headers.get('Content-Length'))
        : void 0;
      this.logger.info('calculated response body length', t),
        this.trigger('loadstart', { loaded: 0, total: t }),
        this.setReadyState(this.request.HEADERS_RECEIVED),
        this.setReadyState(this.request.LOADING);
      let r = () => {
        this.logger.info('finalizing the mocked response...'),
          this.setReadyState(this.request.DONE),
          this.trigger('load', {
            loaded: this.responseBuffer.byteLength,
            total: t,
          }),
          this.trigger('loadend', {
            loaded: this.responseBuffer.byteLength,
            total: t,
          });
      };
      if (e.body) {
        this.logger.info('mocked response has body, streaming...');
        let n = e.body.getReader(),
          i = async () => {
            let { value: s, done: o } = await n.read();
            if (o) {
              this.logger.info('response body stream done!'), r();
              return;
            }
            s &&
              (this.logger.info('read response body chunk:', s),
              (this.responseBuffer = Afe(this.responseBuffer, s)),
              this.trigger('progress', {
                loaded: this.responseBuffer.byteLength,
                total: t,
              })),
              i();
          };
        i();
      } else r();
    }
    responseBufferToText() {
      return XT(this.responseBuffer);
    }
    get response() {
      if (
        (this.logger.info(
          'getResponse (responseType: %s)',
          this.request.responseType,
        ),
        this.request.readyState !== this.request.DONE)
      )
        return null;
      switch (this.request.responseType) {
        case 'json': {
          let e = Ffe(this.responseBufferToText());
          return this.logger.info('resolved response JSON', e), e;
        }
        case 'arraybuffer': {
          let e = IH(this.responseBuffer);
          return this.logger.info('resolved response ArrayBuffer', e), e;
        }
        case 'blob': {
          let e =
              this.request.getResponseHeader('Content-Type') || 'text/plain',
            t = new Blob([this.responseBufferToText()], { type: e });
          return (
            this.logger.info('resolved response Blob (mime type: %s)', t, e), t
          );
        }
        default: {
          let e = this.responseBufferToText();
          return (
            this.logger.info(
              'resolving "%s" response type as text',
              this.request.responseType,
              e,
            ),
            e
          );
        }
      }
    }
    get responseText() {
      if (
        (Xt(
          this.request.responseType === '' ||
            this.request.responseType === 'text',
          'InvalidStateError: The object is in invalid state.',
        ),
        this.request.readyState !== this.request.LOADING &&
          this.request.readyState !== this.request.DONE)
      )
        return '';
      let e = this.responseBufferToText();
      return this.logger.info('getResponseText: "%s"', e), e;
    }
    get responseXML() {
      if (
        (Xt(
          this.request.responseType === '' ||
            this.request.responseType === 'document',
          'InvalidStateError: The object is in invalid state.',
        ),
        this.request.readyState !== this.request.DONE)
      )
        return null;
      let e = this.request.getResponseHeader('Content-Type') || '';
      return typeof DOMParser > 'u'
        ? (console.warn(
            'Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.',
          ),
          null)
        : jfe(e)
          ? new DOMParser().parseFromString(this.responseBufferToText(), e)
          : null;
    }
    errorWith(e) {
      this.logger.info('responding with an error'),
        this.setReadyState(this.request.DONE),
        this.trigger('error'),
        this.trigger('loadend');
    }
    setReadyState(e) {
      if (
        (this.logger.info(
          'setReadyState: %d -> %d',
          this.request.readyState,
          e,
        ),
        this.request.readyState === e)
      ) {
        this.logger.info('ready state identical, skipping transition...');
        return;
      }
      gc(this.request, 'readyState', e),
        this.logger.info('set readyState to: %d', e),
        e !== this.request.UNSENT &&
          (this.logger.info('triggerring "readystatechange" event...'),
          this.trigger('readystatechange'));
    }
    trigger(e, t) {
      let r = this.request[`on${e}`],
        n = Lfe(this.request, e, t);
      this.logger.info('trigger "%s"', e, t || ''),
        typeof r == 'function' &&
          (this.logger.info('found a direct "%s" callback, calling...', e),
          r.call(this.request, n));
      for (let [i, s] of this.events)
        i === e &&
          (this.logger.info(
            'found %d listener(s) for "%s" event, calling...',
            s.length,
            e,
          ),
          s.forEach((o) => o.call(this.request, n)));
    }
    toFetchApiRequest() {
      this.logger.info('converting request to a Fetch API Request...');
      let e = new Request(this.url.href, {
          method: this.method,
          headers: this.requestHeaders,
          credentials: this.request.withCredentials ? 'include' : 'same-origin',
          body: ['GET', 'HEAD'].includes(this.method) ? null : this.requestBody,
        }),
        t = AH(e.headers, {
          methodCall: ([r, n], i) => {
            switch (r) {
              case 'append':
              case 'set': {
                let [s, o] = n;
                this.request.setRequestHeader(s, o);
                break;
              }
              case 'delete': {
                let [s] = n;
                console.warn(
                  `XMLHttpRequest: Cannot remove a "${s}" header from the Fetch API representation of the "${e.method} ${e.url}" request. XMLHttpRequest headers cannot be removed.`,
                );
                break;
              }
            }
            return i();
          },
        });
      return (
        gc(e, 'headers', t),
        this.logger.info('converted request to a Fetch API Request!', e),
        e
      );
    }
  };
function NH(e) {
  return typeof location > 'u'
    ? new URL(e)
    : new URL(e.toString(), location.href);
}
function gc(e, t, r) {
  Reflect.defineProperty(e, t, { writable: !0, enumerable: !0, value: r });
}
function Ufe({ emitter: e, logger: t }) {
  return new Proxy(globalThis.XMLHttpRequest, {
    construct(n, i, s) {
      t.info('constructed new XMLHttpRequest');
      let o = Reflect.construct(n, i, s),
        a = Object.getOwnPropertyDescriptors(n.prototype);
      for (let c in a) Reflect.defineProperty(o, c, a[c]);
      let u = new zfe(o, t);
      return (
        (u.onRequest = async function ({ request: c, requestId: d }) {
          let { interactiveRequest: m, requestController: g } = fc(c);
          this.logger.info('awaiting mocked response...'),
            e.once('request', ({ requestId: w }) => {
              w === d &&
                g.responsePromise.state === 'pending' &&
                g.respondWith(void 0);
            });
          let v = await Pi(async () => {
            this.logger.info(
              'emitting the "request" event for %s listener(s)...',
              e.listenerCount('request'),
            ),
              await Ei(e, 'request', { request: m, requestId: d }),
              this.logger.info('all "request" listeners settled!');
            let w = await g.responsePromise;
            return this.logger.info('event.respondWith called with:', w), w;
          });
          if (v.error) {
            if (
              (this.logger.info(
                'request listener threw an exception, aborting request...',
                v.error,
              ),
              v.error instanceof Response)
            ) {
              Ti(v.error)
                ? u.errorWith(new TypeError('Network error'))
                : this.respondWith(v.error);
              return;
            }
            if (
              e.listenerCount('unhandledException') > 0 &&
              (await Ei(e, 'unhandledException', {
                error: v.error,
                request: c,
                requestId: d,
                controller: {
                  respondWith: u.respondWith.bind(u),
                  errorWith: u.errorWith.bind(u),
                },
              }),
              o.readyState > XMLHttpRequest.OPENED)
            )
              return;
            u.respondWith(mc(v.error));
            return;
          }
          let S = v.data;
          if (typeof S < 'u') {
            if (
              (this.logger.info(
                'received mocked response: %d %s',
                S.status,
                S.statusText,
              ),
              Ti(S))
            ) {
              this.logger.info(
                'received a network error response, rejecting the request promise...',
              ),
                u.errorWith(new TypeError('Network error'));
              return;
            }
            return u.respondWith(S);
          }
          this.logger.info(
            'no mocked response received, performing request as-is...',
          );
        }),
        (u.onResponse = async function ({
          response: c,
          isMockedResponse: d,
          request: m,
          requestId: g,
        }) {
          this.logger.info(
            'emitting the "response" event for %s listener(s)...',
            e.listenerCount('response'),
          ),
            e.emit('response', {
              response: c,
              isMockedResponse: d,
              request: m,
              requestId: g,
            });
        }),
        u.request
      );
    },
  });
}
var jH = class extends Ri {
    constructor() {
      super(jH.interceptorSymbol);
    }
    checkEnvironment() {
      return typeof globalThis.XMLHttpRequest < 'u';
    }
    setup() {
      let e = this.logger.extend('setup');
      e.info('patching "XMLHttpRequest" module...');
      let t = globalThis.XMLHttpRequest;
      Xt(
        !t[ki],
        'Failed to patch the "XMLHttpRequest" module: already patched.',
      ),
        (globalThis.XMLHttpRequest = Ufe({
          emitter: this.emitter,
          logger: this.logger,
        })),
        e.info(
          'native "XMLHttpRequest" module patched!',
          globalThis.XMLHttpRequest.name,
        ),
        Object.defineProperty(globalThis.XMLHttpRequest, ki, {
          enumerable: !0,
          configurable: !0,
          value: !0,
        }),
        this.subscriptions.push(() => {
          Object.defineProperty(globalThis.XMLHttpRequest, ki, {
            value: void 0,
          }),
            (globalThis.XMLHttpRequest = t),
            e.info(
              'native "XMLHttpRequest" module restored!',
              globalThis.XMLHttpRequest.name,
            );
        });
    }
  },
  Zg = jH;
Zg.interceptorSymbol = Symbol('xhr');
function Vfe(e) {
  try {
    return new URL(e), !0;
  } catch {
    return !1;
  }
}
var qH = class extends Ri {
    constructor() {
      super(qH.symbol);
    }
    checkEnvironment() {
      return typeof globalThis < 'u' && typeof globalThis.fetch < 'u';
    }
    async setup() {
      let e = globalThis.fetch;
      Xt(!e[ki], 'Failed to patch the "fetch" module: already patched.'),
        (globalThis.fetch = async (t, r) => {
          var n;
          let i = ll(),
            s =
              typeof t == 'string' && typeof location < 'u' && !Vfe(t)
                ? new URL(t, location.origin)
                : t,
            o = new Request(s, r);
          this.logger.info('[%s] %s', o.method, o.url);
          let { interactiveRequest: a, requestController: u } = fc(o);
          this.logger.info(
            'emitting the "request" event for %d listener(s)...',
            this.emitter.listenerCount('request'),
          ),
            this.emitter.once('request', ({ requestId: T }) => {
              T === i &&
                u.responsePromise.state === 'pending' &&
                u.responsePromise.resolve(void 0);
            }),
            this.logger.info('awaiting for the mocked response...');
          let c = a.signal,
            d = new al();
          c &&
            c.addEventListener(
              'abort',
              () => {
                d.reject(c.reason);
              },
              { once: !0 },
            );
          let m = new al(),
            g = (T) => {
              if (
                (this.logger.info('responding with a mock response:', T),
                this.emitter.listenerCount('response') > 0)
              ) {
                this.logger.info('emitting the "response" event...');
                let C = T.clone();
                this.emitter.emit('response', {
                  response: C,
                  isMockedResponse: !0,
                  request: a,
                  requestId: i,
                });
              }
              Object.defineProperty(T, 'url', {
                writable: !1,
                enumerable: !0,
                configurable: !1,
                value: o.url,
              }),
                m.resolve(T);
            },
            v = (T) => {
              m.reject(T);
            },
            S = await Pi(async () => {
              let T = Ei(this.emitter, 'request', { request: a, requestId: i });
              await Promise.race([d, T, u.responsePromise]),
                this.logger.info('all request listeners have been resolved!');
              let C = await u.responsePromise;
              return this.logger.info('event.respondWith called with:', C), C;
            });
          if (d.state === 'rejected')
            return (
              this.logger.info('request has been aborted:', d.rejectionReason),
              m.reject(d.rejectionReason),
              m
            );
          if (S.error)
            return (
              this.logger.info('request listerner threw an error:', S.error),
              S.error instanceof Response &&
                (Ti(S.error) ? v(FH(S.error)) : g(S.error)),
              (this.emitter.listenerCount('unhandledException') > 0 &&
                (await Ei(this.emitter, 'unhandledException', {
                  error: S.error,
                  request: o,
                  requestId: i,
                  controller: { respondWith: g, errorWith: v },
                }),
                m.state !== 'pending')) ||
                g(mc(S.error)),
              m
            );
          let w = S.data;
          return w && !((n = o.signal) != null && n.aborted)
            ? (this.logger.info('received mocked response:', w),
              Ti(w)
                ? (this.logger.info(
                    'received a network error response, rejecting the request promise...',
                  ),
                  v(FH(w)))
                : g(w),
              m)
            : (this.logger.info('no mocked response received!'),
              e(o).then((T) => {
                if (
                  (this.logger.info('original fetch performed', T),
                  this.emitter.listenerCount('response') > 0)
                ) {
                  this.logger.info('emitting the "response" event...');
                  let C = T.clone();
                  this.emitter.emit('response', {
                    response: C,
                    isMockedResponse: !1,
                    request: a,
                    requestId: i,
                  });
                }
                return T;
              }));
        }),
        Object.defineProperty(globalThis.fetch, ki, {
          enumerable: !0,
          configurable: !0,
          value: !0,
        }),
        this.subscriptions.push(() => {
          Object.defineProperty(globalThis.fetch, ki, { value: void 0 }),
            (globalThis.fetch = e),
            this.logger.info(
              'restored native "globalThis.fetch"!',
              globalThis.fetch.name,
            );
        });
    }
  },
  ZT = qH;
ZT.symbol = Symbol('fetch');
function FH(e) {
  return Object.assign(new TypeError('Failed to fetch'), { cause: e });
}
var xh = class extends Ri {
  constructor(e) {
    (xh.symbol = Symbol(e.name)),
      super(xh.symbol),
      (this.interceptors = e.interceptors);
  }
  setup() {
    let e = this.logger.extend('setup');
    e.info('applying all %d interceptors...', this.interceptors.length);
    for (let t of this.interceptors)
      e.info('applying "%s" interceptor...', t.constructor.name),
        t.apply(),
        e.info('adding interceptor dispose subscription'),
        this.subscriptions.push(() => t.dispose());
  }
  on(e, t) {
    for (let r of this.interceptors) r.on(e, t);
    return this;
  }
  once(e, t) {
    for (let r of this.interceptors) r.once(e, t);
    return this;
  }
  off(e, t) {
    for (let r of this.interceptors) r.off(e, t);
    return this;
  }
  removeAllListeners(e) {
    for (let t of this.interceptors) t.removeAllListeners(e);
    return this;
  }
};
function MH(e, t = !0) {
  return [t && e.origin, e.pathname].filter(Boolean).join('');
}
var Bfe = '[MSW]';
function QT(e, ...t) {
  let r = qo(e, ...t);
  return `${Bfe} ${r}`;
}
function Wfe(e, ...t) {
  console.warn(QT(e, ...t));
}
function Gfe(e, ...t) {
  console.error(QT(e, ...t));
}
var Vr = { formatMessage: QT, warn: Wfe, error: Gfe },
  cl = class extends Error {
    constructor(t) {
      super(t), (this.name = 'InternalError');
    }
  };
function HH(e, t) {
  let r = e.emit;
  if (r._isPiped) return;
  let n = function (s, ...o) {
    return t.emit(s, ...o), r.call(this, s, ...o);
  };
  (n._isPiped = !0), (e.emit = n);
}
function zH(e) {
  let t = [...e];
  return Object.freeze(t), t;
}
var Qg = class {
  subscriptions = [];
  dispose() {
    let t;
    for (; (t = this.subscriptions.shift()); ) t();
  }
};
var eP = class {
    constructor(t) {
      (this.initialHandlers = t), (this.handlers = [...t]);
    }
    handlers;
    prepend(t) {
      this.handlers.unshift(...t);
    }
    reset(t) {
      this.handlers = t.length > 0 ? [...t] : [...this.initialHandlers];
    }
    currentHandlers() {
      return this.handlers;
    }
  },
  ev = class extends Qg {
    handlersController;
    emitter;
    publicEmitter;
    events;
    constructor(...t) {
      super(),
        Xt(
          this.validateHandlers(t),
          Vr.formatMessage(
            'Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?',
          ),
        ),
        (this.handlersController = new eP(t)),
        (this.emitter = new hc()),
        (this.publicEmitter = new hc()),
        HH(this.emitter, this.publicEmitter),
        (this.events = this.createLifeCycleEvents()),
        this.subscriptions.push(() => {
          this.emitter.removeAllListeners(),
            this.publicEmitter.removeAllListeners();
        });
    }
    validateHandlers(t) {
      return t.every((r) => !Array.isArray(r));
    }
    use(...t) {
      Xt(
        this.validateHandlers(t),
        Vr.formatMessage(
          'Failed to call "use()" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?',
        ),
      ),
        this.handlersController.prepend(t);
    }
    restoreHandlers() {
      this.handlersController.currentHandlers().forEach((t) => {
        t.isUsed = !1;
      });
    }
    resetHandlers(...t) {
      this.handlersController.reset(t);
    }
    listHandlers() {
      return zH(this.handlersController.currentHandlers());
    }
    createLifeCycleEvents() {
      return {
        on: (...t) => this.publicEmitter.on(...t),
        removeListener: (...t) => this.publicEmitter.removeListener(...t),
        removeAllListeners: (...t) =>
          this.publicEmitter.removeAllListeners(...t),
      };
    }
  };
var UH = async ({
  request: e,
  requestId: t,
  handlers: r,
  resolutionContext: n,
}) => {
  let i = null,
    s = null;
  for (let o of r)
    if (
      ((s = await o.run({ request: e, requestId: t, resolutionContext: n })),
      s !== null && (i = o),
      s?.response)
    )
      break;
  return i
    ? { handler: i, parsedResult: s?.parsedResult, response: s?.response }
    : null;
};
function tv(e) {
  if (typeof location > 'u') return e.toString();
  let t = e instanceof URL ? e : new URL(e);
  return t.origin === location.origin ? t.pathname : t.origin + t.pathname;
}
async function VH(e, t = 'warn') {
  let r = new URL(e.url),
    n = tv(r) + r.search,
    i = `intercepted a request without a matching request handler:

  \u2022 ${e.method} ${n}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/getting-started/mocks`;
  function s(o) {
    switch (o) {
      case 'error':
        throw (
          (Vr.error('Error: %s', i),
          new cl(
            Vr.formatMessage(
              'Cannot bypass a request when using the "error" strategy for the "onUnhandledRequest" option.',
            ),
          ))
        );
      case 'warn': {
        Vr.warn('Warning: %s', i);
        break;
      }
      case 'bypass':
        break;
      default:
        throw new cl(
          Vr.formatMessage(
            'Failed to react to an unhandled request: unknown strategy "%s". Please provide one of the supported strategies ("bypass", "warn", "error") or a custom callback function as the value of the "onUnhandledRequest" option.',
            o,
          ),
        );
    }
  }
  if (typeof t == 'function') {
    t(e, { warning: s.bind(null, 'warn'), error: s.bind(null, 'error') });
    return;
  }
  r.protocol !== 'file:' && s(t);
}
var Yfe = Object.create,
  YH = Object.defineProperty,
  Jfe = Object.getOwnPropertyDescriptor,
  JH = Object.getOwnPropertyNames,
  Kfe = Object.getPrototypeOf,
  Xfe = Object.prototype.hasOwnProperty,
  Zfe = (e, t) =>
    function () {
      return t || (0, e[JH(e)[0]])((t = { exports: {} }).exports, t), t.exports;
    },
  Qfe = (e, t, r, n) => {
    if ((t && typeof t == 'object') || typeof t == 'function')
      for (let i of JH(t))
        !Xfe.call(e, i) &&
          i !== r &&
          YH(e, i, {
            get: () => t[i],
            enumerable: !(n = Jfe(t, i)) || n.enumerable,
          });
    return e;
  },
  ede = (e, t, r) => (
    (r = e != null ? Yfe(Kfe(e)) : {}),
    Qfe(
      t || !e || !e.__esModule
        ? YH(r, 'default', { value: e, enumerable: !0 })
        : r,
      e,
    )
  ),
  tde = Zfe({
    'node_modules/set-cookie-parser/lib/set-cookie.js'(e, t) {
      'use strict';
      var r = { decodeValues: !0, map: !1, silent: !1 };
      function n(u) {
        return typeof u == 'string' && !!u.trim();
      }
      function i(u, c) {
        var d = u.split(';').filter(n),
          m = d.shift(),
          g = s(m),
          v = g.name,
          S = g.value;
        c = c ? Object.assign({}, r, c) : r;
        try {
          S = c.decodeValues ? decodeURIComponent(S) : S;
        } catch (T) {
          console.error(
            "set-cookie-parser encountered an error while decoding a cookie with value '" +
              S +
              "'. Set options.decodeValues to false to disable this feature.",
            T,
          );
        }
        var w = { name: v, value: S };
        return (
          d.forEach(function (T) {
            var C = T.split('='),
              I = C.shift().trimLeft().toLowerCase(),
              x = C.join('=');
            I === 'expires'
              ? (w.expires = new Date(x))
              : I === 'max-age'
                ? (w.maxAge = parseInt(x, 10))
                : I === 'secure'
                  ? (w.secure = !0)
                  : I === 'httponly'
                    ? (w.httpOnly = !0)
                    : I === 'samesite'
                      ? (w.sameSite = x)
                      : (w[I] = x);
          }),
          w
        );
      }
      function s(u) {
        var c = '',
          d = '',
          m = u.split('=');
        return (
          m.length > 1 ? ((c = m.shift()), (d = m.join('='))) : (d = u),
          { name: c, value: d }
        );
      }
      function o(u, c) {
        if (((c = c ? Object.assign({}, r, c) : r), !u)) return c.map ? {} : [];
        if (u.headers)
          if (typeof u.headers.getSetCookie == 'function')
            u = u.headers.getSetCookie();
          else if (u.headers['set-cookie']) u = u.headers['set-cookie'];
          else {
            var d =
              u.headers[
                Object.keys(u.headers).find(function (g) {
                  return g.toLowerCase() === 'set-cookie';
                })
              ];
            !d &&
              u.headers.cookie &&
              !c.silent &&
              console.warn(
                'Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.',
              ),
              (u = d);
          }
        if (
          (Array.isArray(u) || (u = [u]),
          (c = c ? Object.assign({}, r, c) : r),
          c.map)
        ) {
          var m = {};
          return u.filter(n).reduce(function (g, v) {
            var S = i(v, c);
            return (g[S.name] = S), g;
          }, m);
        } else
          return u.filter(n).map(function (g) {
            return i(g, c);
          });
      }
      function a(u) {
        if (Array.isArray(u)) return u;
        if (typeof u != 'string') return [];
        var c = [],
          d = 0,
          m,
          g,
          v,
          S,
          w;
        function T() {
          for (; d < u.length && /\s/.test(u.charAt(d)); ) d += 1;
          return d < u.length;
        }
        function C() {
          return (g = u.charAt(d)), g !== '=' && g !== ';' && g !== ',';
        }
        for (; d < u.length; ) {
          for (m = d, w = !1; T(); )
            if (((g = u.charAt(d)), g === ',')) {
              for (v = d, d += 1, T(), S = d; d < u.length && C(); ) d += 1;
              d < u.length && u.charAt(d) === '='
                ? ((w = !0), (d = S), c.push(u.substring(m, v)), (m = d))
                : (d = v + 1);
            } else d += 1;
          (!w || d >= u.length) && c.push(u.substring(m, u.length));
        }
        return c;
      }
      (t.exports = o),
        (t.exports.parse = o),
        (t.exports.parseString = i),
        (t.exports.splitCookiesString = a);
    },
  }),
  BH = ede(tde()),
  vc = 'MSW_COOKIE_STORE';
function rde() {
  try {
    if (localStorage == null) return !1;
    let e = vc + '_test';
    return (
      localStorage.setItem(e, 'test'),
      localStorage.getItem(e),
      localStorage.removeItem(e),
      !0
    );
  } catch {
    return !1;
  }
}
var WH = rde();
function GH(e, t) {
  try {
    return e[t], !0;
  } catch {
    return !1;
  }
}
var nde = class {
    constructor() {
      this.store = new Map();
    }
    add(e, t) {
      if (GH(e, 'credentials') && e.credentials === 'omit') return;
      let r = new URL(e.url),
        n = t.headers.get('set-cookie');
      if (!n) return;
      let i = Date.now(),
        s = (0, BH.parse)(n).map(({ maxAge: a, ...u }) => ({
          ...u,
          expires: a === void 0 ? u.expires : new Date(i + a * 1e3),
          maxAge: a,
        })),
        o = this.store.get(r.origin) || new Map();
      s.forEach((a) => {
        this.store.set(r.origin, o.set(a.name, a));
      });
    }
    get(e) {
      this.deleteExpiredCookies();
      let t = new URL(e.url),
        r = this.store.get(t.origin) || new Map();
      if (!GH(e, 'credentials')) return r;
      switch (e.credentials) {
        case 'include':
          return (
            typeof document > 'u' ||
              (0, BH.parse)(document.cookie).forEach((i) => {
                r.set(i.name, i);
              }),
            r
          );
        case 'same-origin':
          return r;
        default:
          return new Map();
      }
    }
    getAll() {
      return this.deleteExpiredCookies(), this.store;
    }
    deleteAll(e) {
      let t = new URL(e.url);
      this.store.delete(t.origin);
    }
    clear() {
      this.store.clear();
    }
    hydrate() {
      if (!WH) return;
      let e = localStorage.getItem(vc);
      if (e)
        try {
          JSON.parse(e).forEach(([r, n]) => {
            this.store.set(
              r,
              new Map(
                n.map(([i, { expires: s, ...o }]) => [
                  i,
                  s === void 0 ? o : { ...o, expires: new Date(s) },
                ]),
              ),
            );
          });
        } catch (t) {
          console.warn(`
[virtual-cookie] Failed to parse a stored cookie from the localStorage (key "${vc}").

Stored value:
${localStorage.getItem(vc)}

Thrown exception:
${t}

Invalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`),
            localStorage.removeItem(vc);
        }
    }
    persist() {
      if (!WH) return;
      let e = Array.from(this.store.entries()).map(([t, r]) => [
        t,
        Array.from(r.entries()),
      ]);
      localStorage.setItem(vc, JSON.stringify(e));
    }
    deleteExpiredCookies() {
      let e = Date.now();
      this.store.forEach((t, r) => {
        t.forEach(({ expires: n, name: i }) => {
          n !== void 0 && n.getTime() <= e && t.delete(i);
        }),
          t.size === 0 && this.store.delete(r);
      });
    }
  },
  bc = new nde();
function KH(e, t) {
  bc.add({ ...e, url: e.url.toString() }, t), bc.persist();
}
async function XH(e, t, r, n, i, s) {
  if (
    (i.emit('request:start', { request: e, requestId: t }),
    e.headers.get('x-msw-intention') === 'bypass')
  ) {
    i.emit('request:end', { request: e, requestId: t }),
      s?.onPassthroughResponse?.(e);
    return;
  }
  let o = await Pi(() =>
    UH({
      request: e,
      requestId: t,
      handlers: r,
      resolutionContext: s?.resolutionContext,
    }),
  );
  if (o.error)
    throw (
      (i.emit('unhandledException', {
        error: o.error,
        request: e,
        requestId: t,
      }),
      o.error)
    );
  if (!o.data) {
    await VH(e, n.onUnhandledRequest),
      i.emit('request:unhandled', { request: e, requestId: t }),
      i.emit('request:end', { request: e, requestId: t }),
      s?.onPassthroughResponse?.(e);
    return;
  }
  let { response: a } = o.data;
  if (!a) {
    i.emit('request:end', { request: e, requestId: t }),
      s?.onPassthroughResponse?.(e);
    return;
  }
  if (a.status === 302 && a.headers.get('x-msw-intention') === 'passthrough') {
    i.emit('request:end', { request: e, requestId: t }),
      s?.onPassthroughResponse?.(e);
    return;
  }
  KH(e, a), i.emit('request:match', { request: e, requestId: t });
  let u = o.data,
    c = s?.transformResponse?.(a) || a;
  return (
    s?.onMockedResponse?.(c, u),
    i.emit('request:end', { request: e, requestId: t }),
    c
  );
}
function tP(e) {
  return e != null && typeof e == 'object' && !Array.isArray(e);
}
function rP(e, t) {
  return Object.entries(t).reduce(
    (r, [n, i]) => {
      let s = r[n];
      return Array.isArray(s) && Array.isArray(i)
        ? ((r[n] = s.concat(i)), r)
        : tP(s) && tP(i)
          ? ((r[n] = rP(s, i)), r)
          : ((r[n] = i), r);
    },
    Object.assign({}, e),
  );
}
var sde = { onUnhandledRequest: 'warn' },
  ide = class extends ev {
    interceptor;
    resolvedOptions;
    constructor(e, t) {
      super(...t),
        (this.interceptor = new xh({
          name: 'setup-server',
          interceptors: e.map((r) => new r()),
        })),
        (this.resolvedOptions = {}),
        this.init();
    }
    init() {
      this.interceptor.on('request', async ({ request: e, requestId: t }) => {
        let r = await XH(
          e,
          t,
          this.handlersController.currentHandlers(),
          this.resolvedOptions,
          this.emitter,
        );
        r && e.respondWith(r);
      }),
        this.interceptor.on('unhandledException', ({ error: e }) => {
          if (e instanceof cl) throw e;
        }),
        this.interceptor.on(
          'response',
          ({ response: e, isMockedResponse: t, request: r, requestId: n }) => {
            this.emitter.emit(t ? 'response:mocked' : 'response:bypass', {
              response: e,
              request: r,
              requestId: n,
            });
          },
        );
    }
    listen(e = {}) {
      (this.resolvedOptions = rP(sde, e)),
        this.interceptor.apply(),
        this.subscriptions.push(() => {
          this.interceptor.dispose();
        }),
        Xt(
          [Th.APPLYING, Th.APPLIED].includes(this.interceptor.readyState),
          Vr.formatMessage(
            'Failed to start "setupServer": the interceptor failed to apply. This is likely an issue with the library and you should report it at "%s".',
          ),
          'https://github.com/mswjs/msw/issues/new/choose',
        );
    }
    close() {
      this.dispose();
    }
  },
  nP = new ZH.AsyncLocalStorage(),
  ode = class {
    rootContext;
    constructor(e) {
      this.rootContext = { initialHandlers: e, handlers: [] };
    }
    get context() {
      return nP.getStore() || this.rootContext;
    }
    prepend(e) {
      this.context.handlers.unshift(...e);
    }
    reset(e) {
      let t = this.context;
      (t.handlers = []),
        (t.initialHandlers = e.length > 0 ? e : t.initialHandlers);
    }
    currentHandlers() {
      let { initialHandlers: e, handlers: t } = this.context;
      return t.concat(e);
    }
  },
  ade = class extends ide {
    constructor(e) {
      super([Xg, Zg, ZT], e), (this.handlersController = new ode(e));
    }
    boundary(e) {
      return (...t) =>
        nP.run(
          {
            initialHandlers: this.handlersController.currentHandlers(),
            handlers: [],
          },
          e,
          ...t,
        );
    }
    close() {
      super.close(), nP.disable();
    }
  },
  QH = (...e) => new ade(e);
function ez() {
  Xt(
    typeof URL < 'u',
    Vr.formatMessage(
      `Global "URL" class is not defined. This likely means that you're running MSW in an environment that doesn't support all Node.js standard API (e.g. React Native). If that's the case, please use an appropriate polyfill for the "URL" class, like "react-native-url-polyfill".`,
    ),
  );
}
var lde = /[\/\\]msw[\/\\]src[\/\\](.+)/,
  ude =
    /(node_modules)?[\/\\]lib[\/\\](core|browser|node|native|iife)[\/\\]|^[^\/\\]*$/;
function tz(e) {
  let t = e.stack;
  if (!t) return;
  let n = t
    .split(
      `
`,
    )
    .slice(1)
    .find((s) => !(lde.test(s) || ude.test(s)));
  return n
    ? n.replace(/\s*at [^()]*\(([^)]+)\)/, '$1').replace(/^@/, '')
    : void 0;
}
function rz(e) {
  return e ? typeof e[Symbol.iterator] == 'function' : !1;
}
var rv = class e {
  static cache = new WeakMap();
  info;
  isUsed;
  resolver;
  resolverGenerator;
  resolverGeneratorResult;
  options;
  constructor(t) {
    (this.resolver = t.resolver), (this.options = t.options);
    let r = tz(new Error());
    (this.info = { ...t.info, callFrame: r }), (this.isUsed = !1);
  }
  async parse(t) {
    return {};
  }
  async test(t) {
    let r = await this.parse({
      request: t.request,
      resolutionContext: t.resolutionContext,
    });
    return this.predicate({
      request: t.request,
      parsedResult: r,
      resolutionContext: t.resolutionContext,
    });
  }
  extendResolverArgs(t) {
    return {};
  }
  cloneRequestOrGetFromCache(t) {
    let r = e.cache.get(t);
    if (typeof r < 'u') return r;
    let n = t.clone();
    return e.cache.set(t, n), n;
  }
  async run(t) {
    if (this.isUsed && this.options?.once) return null;
    let r = this.cloneRequestOrGetFromCache(t.request),
      n = await this.parse({
        request: t.request,
        resolutionContext: t.resolutionContext,
      });
    if (
      !this.predicate({
        request: t.request,
        parsedResult: n,
        resolutionContext: t.resolutionContext,
      }) ||
      (this.isUsed && this.options?.once)
    )
      return null;
    this.isUsed = !0;
    let s = this.wrapResolver(this.resolver),
      o = this.extendResolverArgs({ request: t.request, parsedResult: n }),
      u = await s({ ...o, requestId: t.requestId, request: t.request }).catch(
        (d) => {
          if (d instanceof Response) return d;
          throw d;
        },
      );
    return this.createExecutionResult({
      request: r,
      requestId: t.requestId,
      response: u,
      parsedResult: n,
    });
  }
  wrapResolver(t) {
    return async (r) => {
      let n = this.resolverGenerator || (await t(r));
      if (rz(n)) {
        this.isUsed = !1;
        let { value: i, done: s } = n[Symbol.iterator]().next(),
          o = await i;
        return (
          s && (this.isUsed = !0),
          !o && s
            ? (Xt(
                this.resolverGeneratorResult,
                'Failed to returned a previously stored generator response: the value is not a valid Response.',
              ),
              this.resolverGeneratorResult.clone())
            : (this.resolverGenerator || (this.resolverGenerator = n),
              o && (this.resolverGeneratorResult = o?.clone()),
              o)
        );
      }
      return n;
    };
  }
  createExecutionResult(t) {
    return {
      handler: this,
      request: t.request,
      requestId: t.requestId,
      response: t.response,
      parsedResult: t.parsedResult,
    };
  }
};
function nz(e, t) {
  return e.toLowerCase() === t.toLowerCase();
}
function sz(e) {
  return e < 300 ? '#69AB32' : e < 400 ? '#F0BB4B' : '#E95F5D';
}
function iz() {
  let e = new Date();
  return [e.getHours(), e.getMinutes(), e.getSeconds()]
    .map(String)
    .map((t) => t.slice(0, 2))
    .map((t) => t.padStart(2, '0'))
    .join(':');
}
async function oz(e) {
  let r = await e.clone().text();
  return {
    url: new URL(e.url),
    method: e.method,
    headers: Object.fromEntries(e.headers.entries()),
    body: r,
  };
}
var cde = Object.create,
  az = Object.defineProperty,
  fde = Object.getOwnPropertyDescriptor,
  lz = Object.getOwnPropertyNames,
  dde = Object.getPrototypeOf,
  hde = Object.prototype.hasOwnProperty,
  uz = (e, t) =>
    function () {
      return t || (0, e[lz(e)[0]])((t = { exports: {} }).exports, t), t.exports;
    },
  pde = (e, t, r, n) => {
    if ((t && typeof t == 'object') || typeof t == 'function')
      for (let i of lz(t))
        !hde.call(e, i) &&
          i !== r &&
          az(e, i, {
            get: () => t[i],
            enumerable: !(n = fde(t, i)) || n.enumerable,
          });
    return e;
  },
  mde = (e, t, r) => (
    (r = e != null ? cde(dde(e)) : {}),
    pde(
      t || !e || !e.__esModule
        ? az(r, 'default', { value: e, enumerable: !0 })
        : r,
      e,
    )
  ),
  yde = uz({
    'node_modules/statuses/codes.json'(e, t) {
      t.exports = {
        100: 'Continue',
        101: 'Switching Protocols',
        102: 'Processing',
        103: 'Early Hints',
        200: 'OK',
        201: 'Created',
        202: 'Accepted',
        203: 'Non-Authoritative Information',
        204: 'No Content',
        205: 'Reset Content',
        206: 'Partial Content',
        207: 'Multi-Status',
        208: 'Already Reported',
        226: 'IM Used',
        300: 'Multiple Choices',
        301: 'Moved Permanently',
        302: 'Found',
        303: 'See Other',
        304: 'Not Modified',
        305: 'Use Proxy',
        307: 'Temporary Redirect',
        308: 'Permanent Redirect',
        400: 'Bad Request',
        401: 'Unauthorized',
        402: 'Payment Required',
        403: 'Forbidden',
        404: 'Not Found',
        405: 'Method Not Allowed',
        406: 'Not Acceptable',
        407: 'Proxy Authentication Required',
        408: 'Request Timeout',
        409: 'Conflict',
        410: 'Gone',
        411: 'Length Required',
        412: 'Precondition Failed',
        413: 'Payload Too Large',
        414: 'URI Too Long',
        415: 'Unsupported Media Type',
        416: 'Range Not Satisfiable',
        417: 'Expectation Failed',
        418: "I'm a Teapot",
        421: 'Misdirected Request',
        422: 'Unprocessable Entity',
        423: 'Locked',
        424: 'Failed Dependency',
        425: 'Too Early',
        426: 'Upgrade Required',
        428: 'Precondition Required',
        429: 'Too Many Requests',
        431: 'Request Header Fields Too Large',
        451: 'Unavailable For Legal Reasons',
        500: 'Internal Server Error',
        501: 'Not Implemented',
        502: 'Bad Gateway',
        503: 'Service Unavailable',
        504: 'Gateway Timeout',
        505: 'HTTP Version Not Supported',
        506: 'Variant Also Negotiates',
        507: 'Insufficient Storage',
        508: 'Loop Detected',
        509: 'Bandwidth Limit Exceeded',
        510: 'Not Extended',
        511: 'Network Authentication Required',
      };
    },
  }),
  gde = uz({
    'node_modules/statuses/index.js'(e, t) {
      'use strict';
      var r = yde();
      (t.exports = a),
        (a.message = r),
        (a.code = n(r)),
        (a.codes = i(r)),
        (a.redirect = {
          300: !0,
          301: !0,
          302: !0,
          303: !0,
          305: !0,
          307: !0,
          308: !0,
        }),
        (a.empty = { 204: !0, 205: !0, 304: !0 }),
        (a.retry = { 502: !0, 503: !0, 504: !0 });
      function n(u) {
        var c = {};
        return (
          Object.keys(u).forEach(function (m) {
            var g = u[m],
              v = Number(m);
            c[g.toLowerCase()] = v;
          }),
          c
        );
      }
      function i(u) {
        return Object.keys(u).map(function (d) {
          return Number(d);
        });
      }
      function s(u) {
        var c = u.toLowerCase();
        if (!Object.prototype.hasOwnProperty.call(a.code, c))
          throw new Error('invalid status message: "' + u + '"');
        return a.code[c];
      }
      function o(u) {
        if (!Object.prototype.hasOwnProperty.call(a.message, u))
          throw new Error('invalid status code: ' + u);
        return a.message[u];
      }
      function a(u) {
        if (typeof u == 'number') return o(u);
        if (typeof u != 'string')
          throw new TypeError('code must be a number or string');
        var c = parseInt(u, 10);
        return isNaN(c) ? s(u) : o(c);
      }
    },
  }),
  vde = mde(gde(), 1),
  nv = vde.default;
var { message: bde } = nv;
async function cz(e) {
  let t = e.clone(),
    r = await t.text(),
    n = t.status || 200,
    i = t.statusText || bde[n] || 'OK';
  return {
    status: n,
    statusText: i,
    headers: Object.fromEntries(t.headers.entries()),
    body: r,
  };
}
var bz = Kn(pz(), 1);
var Pde = /[\?|#].*$/g;
function mz(e) {
  return new URL(`/${e}`, 'http://localhost').searchParams;
}
function sv(e) {
  return e.endsWith('?') ? e : e.replace(Pde, '');
}
function yz(e) {
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e);
}
function gz(e, t) {
  if (yz(e) || e.startsWith('*')) return e;
  let r = t || (typeof document < 'u' && document.baseURI);
  return r ? decodeURI(new URL(encodeURI(e), r).href) : e;
}
function vz(e, t) {
  if (e instanceof RegExp) return e;
  let r = gz(e, t);
  return sv(r);
}
function kde(e) {
  return e
    .replace(/([:a-zA-Z_-]*)(\*{1,2})+/g, (t, r, n) => {
      let i = '(.*)';
      return r ? (r.startsWith(':') ? `${r}${n}` : `${r}${i}`) : i;
    })
    .replace(/([^\/])(:)(?=\d+)/, '$1\\$2')
    .replace(/^([^\/]+)(:)(?=\/\/)/, '$1\\$2');
}
function Sz(e, t, r) {
  let n = vz(t, r),
    i = typeof n == 'string' ? kde(n) : n,
    s = MH(e),
    o = (0, bz.match)(i, { decode: decodeURIComponent })(s),
    a = (o && o.params) || {};
  return { matches: o !== !1, params: a };
}
var xde = Object.create,
  _z = Object.defineProperty,
  Cde = Object.getOwnPropertyDescriptor,
  wz = Object.getOwnPropertyNames,
  Ode = Object.getPrototypeOf,
  Ide = Object.prototype.hasOwnProperty,
  Ade = (e, t) =>
    function () {
      return t || (0, e[wz(e)[0]])((t = { exports: {} }).exports, t), t.exports;
    },
  $de = (e, t, r, n) => {
    if ((t && typeof t == 'object') || typeof t == 'function')
      for (let i of wz(t))
        !Ide.call(e, i) &&
          i !== r &&
          _z(e, i, {
            get: () => t[i],
            enumerable: !(n = Cde(t, i)) || n.enumerable,
          });
    return e;
  },
  Nde = (e, t, r) => (
    (r = e != null ? xde(Ode(e)) : {}),
    $de(
      t || !e || !e.__esModule
        ? _z(r, 'default', { value: e, enumerable: !0 })
        : r,
      e,
    )
  ),
  Lde = Ade({
    'node_modules/cookie/index.js'(e) {
      'use strict';
      (e.parse = n), (e.serialize = i);
      var t = Object.prototype.toString,
        r = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
      function n(c, d) {
        if (typeof c != 'string')
          throw new TypeError('argument str must be a string');
        for (
          var m = {}, g = d || {}, v = g.decode || s, S = 0;
          S < c.length;

        ) {
          var w = c.indexOf('=', S);
          if (w === -1) break;
          var T = c.indexOf(';', S);
          if (T === -1) T = c.length;
          else if (T < w) {
            S = c.lastIndexOf(';', w - 1) + 1;
            continue;
          }
          var C = c.slice(S, w).trim();
          if (m[C] === void 0) {
            var I = c.slice(w + 1, T).trim();
            I.charCodeAt(0) === 34 && (I = I.slice(1, -1)), (m[C] = u(I, v));
          }
          S = T + 1;
        }
        return m;
      }
      function i(c, d, m) {
        var g = m || {},
          v = g.encode || o;
        if (typeof v != 'function')
          throw new TypeError('option encode is invalid');
        if (!r.test(c)) throw new TypeError('argument name is invalid');
        var S = v(d);
        if (S && !r.test(S)) throw new TypeError('argument val is invalid');
        var w = c + '=' + S;
        if (g.maxAge != null) {
          var T = g.maxAge - 0;
          if (isNaN(T) || !isFinite(T))
            throw new TypeError('option maxAge is invalid');
          w += '; Max-Age=' + Math.floor(T);
        }
        if (g.domain) {
          if (!r.test(g.domain))
            throw new TypeError('option domain is invalid');
          w += '; Domain=' + g.domain;
        }
        if (g.path) {
          if (!r.test(g.path)) throw new TypeError('option path is invalid');
          w += '; Path=' + g.path;
        }
        if (g.expires) {
          var C = g.expires;
          if (!a(C) || isNaN(C.valueOf()))
            throw new TypeError('option expires is invalid');
          w += '; Expires=' + C.toUTCString();
        }
        if (
          (g.httpOnly && (w += '; HttpOnly'),
          g.secure && (w += '; Secure'),
          g.priority)
        ) {
          var I =
            typeof g.priority == 'string'
              ? g.priority.toLowerCase()
              : g.priority;
          switch (I) {
            case 'low':
              w += '; Priority=Low';
              break;
            case 'medium':
              w += '; Priority=Medium';
              break;
            case 'high':
              w += '; Priority=High';
              break;
            default:
              throw new TypeError('option priority is invalid');
          }
        }
        if (g.sameSite) {
          var x =
            typeof g.sameSite == 'string'
              ? g.sameSite.toLowerCase()
              : g.sameSite;
          switch (x) {
            case !0:
              w += '; SameSite=Strict';
              break;
            case 'lax':
              w += '; SameSite=Lax';
              break;
            case 'strict':
              w += '; SameSite=Strict';
              break;
            case 'none':
              w += '; SameSite=None';
              break;
            default:
              throw new TypeError('option sameSite is invalid');
          }
        }
        return w;
      }
      function s(c) {
        return c.indexOf('%') !== -1 ? decodeURIComponent(c) : c;
      }
      function o(c) {
        return encodeURIComponent(c);
      }
      function a(c) {
        return t.call(c) === '[object Date]' || c instanceof Date;
      }
      function u(c, d) {
        try {
          return d(c);
        } catch {
          return c;
        }
      }
    },
  }),
  Dde = Nde(Lde(), 1),
  iv = Dde.default;
function Ez() {
  return iv.parse(document.cookie);
}
function jde(e) {
  if (typeof document > 'u' || typeof location > 'u') return {};
  switch (e.credentials) {
    case 'same-origin': {
      let t = new URL(e.url);
      return location.origin === t.origin ? Ez() : {};
    }
    case 'include':
      return Ez();
    default:
      return {};
  }
}
function Rz(e) {
  let t = e.headers.get('cookie'),
    r = t ? iv.parse(t) : {};
  bc.hydrate();
  let n = Array.from(bc.get(e)?.entries()).reduce(
      (o, [a, { value: u }]) => Object.assign(o, { [a.trim()]: u }),
      {},
    ),
    s = { ...jde(e), ...n };
  for (let [o, a] of Object.entries(s))
    e.headers.append('cookie', iv.serialize(o, a));
  return { ...s, ...r };
}
var xi = ((e) => (
    (e.HEAD = 'HEAD'),
    (e.GET = 'GET'),
    (e.POST = 'POST'),
    (e.PUT = 'PUT'),
    (e.PATCH = 'PATCH'),
    (e.OPTIONS = 'OPTIONS'),
    (e.DELETE = 'DELETE'),
    e
  ))(xi || {}),
  ov = class extends rv {
    constructor(t, r, n, i) {
      super({
        info: { header: `${t} ${r}`, path: r, method: t },
        resolver: n,
        options: i,
      }),
        this.checkRedundantQueryParameters();
    }
    checkRedundantQueryParameters() {
      let { method: t, path: r } = this.info;
      if (r instanceof RegExp || sv(r) === r) return;
      let i = mz(r),
        s = [];
      i.forEach((o, a) => {
        s.push(a);
      }),
        Vr.warn(
          `Found a redundant usage of query parameters in the request handler URL for "${t} ${r}". Please match against a path instead and access query parameters using "new URL(request.url).searchParams" instead. Learn more: https://mswjs.io/docs/recipes/query-parameters`,
        );
    }
    async parse(t) {
      let r = new URL(t.request.url),
        n = Sz(r, this.info.path, t.resolutionContext?.baseUrl),
        i = Rz(t.request);
      return { match: n, cookies: i };
    }
    predicate(t) {
      let r = this.matchMethod(t.request.method),
        n = t.parsedResult.match.matches;
      return r && n;
    }
    matchMethod(t) {
      return this.info.method instanceof RegExp
        ? this.info.method.test(t)
        : nz(this.info.method, t);
    }
    extendResolverArgs(t) {
      return {
        params: t.parsedResult.match?.params || {},
        cookies: t.parsedResult.cookies,
      };
    }
    async log(t) {
      let r = tv(t.request.url),
        n = await oz(t.request),
        i = await cz(t.response),
        s = sz(i.status);
      console.groupCollapsed(
        Vr.formatMessage(
          `${iz()} ${t.request.method} ${r} (%c${i.status} ${i.statusText}%c)`,
        ),
        `color:${s}`,
        'color:inherit',
      ),
        console.log('Request', n),
        console.log('Handler:', this),
        console.log('Response', i),
        console.groupEnd();
    }
  };
function Mo(e) {
  return (t, r, n = {}) => new ov(e, t, r, n);
}
var aP = {
  all: Mo(/.+/),
  head: Mo(xi.HEAD),
  get: Mo(xi.GET),
  post: Mo(xi.POST),
  put: Mo(xi.PUT),
  delete: Mo(xi.DELETE),
  patch: Mo(xi.PATCH),
  options: Mo(xi.OPTIONS),
};
var Fde = Object.create,
  Iz = Object.defineProperty,
  qde = Object.getOwnPropertyDescriptor,
  Az = Object.getOwnPropertyNames,
  Mde = Object.getPrototypeOf,
  Hde = Object.prototype.hasOwnProperty,
  zde = (e, t) =>
    function () {
      return t || (0, e[Az(e)[0]])((t = { exports: {} }).exports, t), t.exports;
    },
  Ude = (e, t, r, n) => {
    if ((t && typeof t == 'object') || typeof t == 'function')
      for (let i of Az(t))
        !Hde.call(e, i) &&
          i !== r &&
          Iz(e, i, {
            get: () => t[i],
            enumerable: !(n = qde(t, i)) || n.enumerable,
          });
    return e;
  },
  Vde = (e, t, r) => (
    (r = e != null ? Fde(Mde(e)) : {}),
    Ude(
      t || !e || !e.__esModule
        ? Iz(r, 'default', { value: e, enumerable: !0 })
        : r,
      e,
    )
  ),
  Bde = zde({
    'node_modules/set-cookie-parser/lib/set-cookie.js'(e, t) {
      'use strict';
      var r = { decodeValues: !0, map: !1, silent: !1 };
      function n(u) {
        return typeof u == 'string' && !!u.trim();
      }
      function i(u, c) {
        var d = u.split(';').filter(n),
          m = d.shift(),
          g = s(m),
          v = g.name,
          S = g.value;
        c = c ? Object.assign({}, r, c) : r;
        try {
          S = c.decodeValues ? decodeURIComponent(S) : S;
        } catch (T) {
          console.error(
            "set-cookie-parser encountered an error while decoding a cookie with value '" +
              S +
              "'. Set options.decodeValues to false to disable this feature.",
            T,
          );
        }
        var w = { name: v, value: S };
        return (
          d.forEach(function (T) {
            var C = T.split('='),
              I = C.shift().trimLeft().toLowerCase(),
              x = C.join('=');
            I === 'expires'
              ? (w.expires = new Date(x))
              : I === 'max-age'
                ? (w.maxAge = parseInt(x, 10))
                : I === 'secure'
                  ? (w.secure = !0)
                  : I === 'httponly'
                    ? (w.httpOnly = !0)
                    : I === 'samesite'
                      ? (w.sameSite = x)
                      : (w[I] = x);
          }),
          w
        );
      }
      function s(u) {
        var c = '',
          d = '',
          m = u.split('=');
        return (
          m.length > 1 ? ((c = m.shift()), (d = m.join('='))) : (d = u),
          { name: c, value: d }
        );
      }
      function o(u, c) {
        if (((c = c ? Object.assign({}, r, c) : r), !u)) return c.map ? {} : [];
        if (u.headers)
          if (typeof u.headers.getSetCookie == 'function')
            u = u.headers.getSetCookie();
          else if (u.headers['set-cookie']) u = u.headers['set-cookie'];
          else {
            var d =
              u.headers[
                Object.keys(u.headers).find(function (g) {
                  return g.toLowerCase() === 'set-cookie';
                })
              ];
            !d &&
              u.headers.cookie &&
              !c.silent &&
              console.warn(
                'Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.',
              ),
              (u = d);
          }
        if (
          (Array.isArray(u) || (u = [u]),
          (c = c ? Object.assign({}, r, c) : r),
          c.map)
        ) {
          var m = {};
          return u.filter(n).reduce(function (g, v) {
            var S = i(v, c);
            return (g[S.name] = S), g;
          }, m);
        } else
          return u.filter(n).map(function (g) {
            return i(g, c);
          });
      }
      function a(u) {
        if (Array.isArray(u)) return u;
        if (typeof u != 'string') return [];
        var c = [],
          d = 0,
          m,
          g,
          v,
          S,
          w;
        function T() {
          for (; d < u.length && /\s/.test(u.charAt(d)); ) d += 1;
          return d < u.length;
        }
        function C() {
          return (g = u.charAt(d)), g !== '=' && g !== ';' && g !== ',';
        }
        for (; d < u.length; ) {
          for (m = d, w = !1; T(); )
            if (((g = u.charAt(d)), g === ',')) {
              for (v = d, d += 1, T(), S = d; d < u.length && C(); ) d += 1;
              d < u.length && u.charAt(d) === '='
                ? ((w = !0), (d = S), c.push(u.substring(m, v)), (m = d))
                : (d = v + 1);
            } else d += 1;
          (!w || d >= u.length) && c.push(u.substring(m, u.length));
        }
        return c;
      }
      (t.exports = o),
        (t.exports.parse = o),
        (t.exports.parseString = i),
        (t.exports.splitCookiesString = a);
    },
  }),
  Wde = Vde(Bde()),
  Gde = /[^a-z0-9\-#$%&'*+.^_`|~]/i;
function Ch(e) {
  if (Gde.test(e) || e.trim() === '')
    throw new TypeError('Invalid character in header field name');
  return e.trim().toLowerCase();
}
var Tz = [
    `
`,
    '\r',
    '	',
    ' ',
  ],
  Yde = new RegExp(`(^[${Tz.join('')}]|$[${Tz.join('')}])`, 'g');
function lP(e) {
  return e.replace(Yde, '');
}
function Oh(e) {
  if (typeof e != 'string' || e.length === 0) return !1;
  for (let t = 0; t < e.length; t++) {
    let r = e.charCodeAt(t);
    if (r > 127 || !Jde(r)) return !1;
  }
  return !0;
}
function Jde(e) {
  return ![
    127,
    32,
    '(',
    ')',
    '<',
    '>',
    '@',
    ',',
    ';',
    ':',
    '\\',
    '"',
    '/',
    '[',
    ']',
    '?',
    '=',
    '{',
    '}',
  ].includes(e);
}
function Pz(e) {
  if (typeof e != 'string' || e.trim() !== e) return !1;
  for (let t = 0; t < e.length; t++) {
    let r = e.charCodeAt(t);
    if (r === 0 || r === 10 || r === 13) return !1;
  }
  return !0;
}
var _c = Symbol('normalizedHeaders'),
  uP = Symbol('rawHeaderNames'),
  kz = ', ',
  xz,
  Cz,
  Oz,
  $z = class Nz {
    constructor(t) {
      (this[xz] = {}),
        (this[Cz] = new Map()),
        (this[Oz] = 'Headers'),
        ['Headers', 'HeadersPolyfill'].includes(t?.constructor.name) ||
        t instanceof Nz ||
        (typeof globalThis.Headers < 'u' && t instanceof globalThis.Headers)
          ? t.forEach((n, i) => {
              this.append(i, n);
            }, this)
          : Array.isArray(t)
            ? t.forEach(([r, n]) => {
                this.append(r, Array.isArray(n) ? n.join(kz) : n);
              })
            : t &&
              Object.getOwnPropertyNames(t).forEach((r) => {
                let n = t[r];
                this.append(r, Array.isArray(n) ? n.join(kz) : n);
              });
    }
    [((xz = _c), (Cz = uP), (Oz = Symbol.toStringTag), Symbol.iterator)]() {
      return this.entries();
    }
    *keys() {
      for (let [t] of this.entries()) yield t;
    }
    *values() {
      for (let [, t] of this.entries()) yield t;
    }
    *entries() {
      let t = Object.keys(this[_c]).sort((r, n) => r.localeCompare(n));
      for (let r of t)
        if (r === 'set-cookie') for (let n of this.getSetCookie()) yield [r, n];
        else yield [r, this.get(r)];
    }
    has(t) {
      if (!Oh(t)) throw new TypeError(`Invalid header name "${t}"`);
      return this[_c].hasOwnProperty(Ch(t));
    }
    get(t) {
      if (!Oh(t)) throw TypeError(`Invalid header name "${t}"`);
      return this[_c][Ch(t)] ?? null;
    }
    set(t, r) {
      if (!Oh(t) || !Pz(r)) return;
      let n = Ch(t),
        i = lP(r);
      (this[_c][n] = lP(i)), this[uP].set(n, t);
    }
    append(t, r) {
      if (!Oh(t) || !Pz(r)) return;
      let n = Ch(t),
        i = lP(r),
        s = this.has(n) ? `${this.get(n)}, ${i}` : i;
      this.set(t, s);
    }
    delete(t) {
      if (!Oh(t) || !this.has(t)) return;
      let r = Ch(t);
      delete this[_c][r], this[uP].delete(r);
    }
    forEach(t, r) {
      for (let [n, i] of this.entries()) t.call(r, i, n, this);
    }
    getSetCookie() {
      let t = this.get('set-cookie');
      return t === null ? [] : t === '' ? [''] : (0, Wde.splitCookiesString)(t);
    }
  };
var { message: Kde } = nv;
function fl(e = {}) {
  let t = e?.status || 200,
    r = e?.statusText || Kde[t] || '',
    n = new Headers(e?.headers);
  return { ...e, headers: n, status: t, statusText: r };
}
function Lz(e, t) {
  if (
    (t.type &&
      Object.defineProperty(e, 'type', {
        value: t.type,
        enumerable: !0,
        writable: !1,
      }),
    typeof document < 'u')
  ) {
    let r = $z.prototype.getSetCookie.call(t.headers);
    for (let n of r) document.cookie = n;
  }
  return e;
}
var av = class e extends Response {
  constructor(t, r) {
    let n = fl(r);
    super(t, n), Lz(this, n);
  }
  static text(t, r) {
    let n = fl(r);
    return (
      n.headers.has('Content-Type') ||
        n.headers.set('Content-Type', 'text/plain'),
      n.headers.has('Content-Length') ||
        n.headers.set(
          'Content-Length',
          t ? new Blob([t]).size.toString() : '0',
        ),
      new e(t, n)
    );
  }
  static json(t, r) {
    let n = fl(r);
    n.headers.has('Content-Type') ||
      n.headers.set('Content-Type', 'application/json');
    let i = JSON.stringify(t);
    return (
      n.headers.has('Content-Length') ||
        n.headers.set(
          'Content-Length',
          i ? new Blob([i]).size.toString() : '0',
        ),
      new e(i, n)
    );
  }
  static xml(t, r) {
    let n = fl(r);
    return (
      n.headers.has('Content-Type') ||
        n.headers.set('Content-Type', 'text/xml'),
      new e(t, n)
    );
  }
  static arrayBuffer(t, r) {
    let n = fl(r);
    return (
      t && n.headers.set('Content-Length', t.byteLength.toString()), new e(t, n)
    );
  }
  static formData(t, r) {
    return new e(t, fl(r));
  }
};
var cP = 2147483647,
  Dz = 100,
  Xde = 400,
  Zde = 5;
function jz() {
  return dc() ? Zde : Math.floor(Math.random() * (Xde - Dz) + Dz);
}
async function Fz(e) {
  let t;
  if (typeof e == 'string')
    switch (e) {
      case 'infinite': {
        t = cP;
        break;
      }
      case 'real': {
        t = jz();
        break;
      }
      default:
        throw new Error(
          `Failed to delay a response: unknown delay mode "${e}". Please make sure you provide one of the supported modes ("real", "infinite") or a number.`,
        );
    }
  else if (typeof e > 'u') t = jz();
  else {
    if (e > cP)
      throw new Error(
        `Failed to delay a response: provided delay duration (${e}) exceeds the maximum allowed duration for "setTimeout" (${cP}). This will cause the response to be returned immediately. Please use a number within the allowed range to delay the response by exact duration, or consider the "infinite" delay mode to delay the response indefinitely.`,
      );
    t = e;
  }
  return new Promise((r) => setTimeout(r, t));
}
ez();
var qz = aP.get(
  'https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb',
  async () => (
    await Fz(),
    av.json(
      JSON.parse(
        '[{"first":"Arturo","last":"Harber","email":"Arturo.Harber@gwendolyn.biz","address":"4505 Bell Isle","created":"September 17, 2021","balance":"$9,632.11"},{"first":"Sibyl","last":"Ritchie","email":"ivorywolf07@gmail.com","address":"05962 Kameron Estate","created":"July 27, 2014","balance":"$5,338.09"},{"first":"Osvaldo","last":"Schaefer","email":"plumsquirrel94@gmail.com","address":"199 Mya Path","created":"July 20, 2015","balance":"$6,308.49"},{"first":"Mike","last":"Connelly","email":"Mike.Connelly@janie.com","address":"42296 Botsford Vista","created":"November 25, 2022","balance":"$8,372.14"},{"first":"Diana","last":"Schultz","email":"Diana.Schultz@tomas.net","address":"60016 Lazaro Tunnel","created":"March 21, 2020","balance":"$5,413.06"},{"first":"Alexanne","last":"Hilpert","email":"Alexanne.Hilpert@dana.biz","address":"1893 Torrey Corners","created":"January 21, 2019","balance":"$6,140.66"},{"first":"Mellie","last":"Powlowski","email":"Mellie.Powlowski@hollis.net","address":"90123 Trever Estate","created":"April 5, 2018","balance":"$2,703.02"},{"first":"Loraine","last":"Dickens","email":"Loraine.Dickens@keven.info","address":"891 Karina Turnpike","created":"May 14, 2018","balance":"$3,787.90"},{"first":"Glen","last":"Schultz","email":"orangewolf28@gmail.com","address":"2706 Braun Junctions","created":"April 28, 2022","balance":"$6,798.42"},{"first":"Blake","last":"Morar","email":"Blake.Morar@anita.biz","address":"511 Simonis Rest","created":"August 30, 2022","balance":"$4,934.01"},{"first":"Paul","last":"Wolf","email":"bluewolf71@gmail.com","address":"750 Waters Drive","created":"September 14, 2022","balance":"$6,258.11"},{"first":"Elmer","last":"Bernier","email":"Elmer.Bernier@shaun.name","address":"875 Dayna Village","created":"January 30, 2015","balance":"$4,903.81"},{"first":"Annabelle","last":"Abshire","email":"mintgreenfrog66@gmail.com","address":"92365 Crooks Ways","created":"January 13, 2020","balance":"$6,568.50"},{"first":"Lavern","last":"Schuster","email":"Lavern.Schuster@emilia.info","address":"6174 Langosh Skyway","created":"October 19, 2021","balance":"$929.11"},{"first":"Frank","last":"Lehner","email":"whitewolf50@gmail.com","address":"51002 Jody Lake","created":"August 1, 2020","balance":"$769.91"},{"first":"Rigoberto","last":"Nikolaus","email":"Rigoberto.Nikolaus@nicolas.name","address":"396 Leonel Harbor","created":"February 19, 2022","balance":"$2,073.85"},{"first":"Oleta","last":"Bailey","email":"Oleta.Bailey@jeramie.info","address":"39516 Schroeder Manor","created":"April 9, 2021","balance":"$9,567.10"},{"first":"Esteban","last":"Kling","email":"purplegiraffe32@gmail.com","address":"2220 Viva Village","created":"July 13, 2020","balance":"$3,714.90"},{"first":"Enoch","last":"Stark","email":"Enoch.Stark@pete.com","address":"06914 Waino Avenue","created":"October 5, 2017","balance":"$9,582.71"},{"first":"Geovanni","last":"Ortiz","email":"tealwolf51@gmail.com","address":"3392 Alexandria Locks","created":"January 4, 2019","balance":"$7,568.33"},{"first":"Arne","last":"Graham","email":"Arne.Graham@celia.com","address":"23069 Daisha Ports","created":"December 29, 2022","balance":"$8,755.32"},{"first":"Sunny","last":"Ullrich","email":"violetsquirrel45@gmail.com","address":"136 Jesse Turnpike","created":"October 7, 2017","balance":"$1,650.83"},{"first":"Jeanie","last":"Frami","email":"purplefrog00@gmail.com","address":"79062 Zetta Brooks","created":"March 6, 2024","balance":"$9,630.05"},{"first":"Lola","last":"Blick","email":"goldturtle16@gmail.com","address":"285 Yadira Turnpike","created":"June 6, 2015","balance":"$8,757.65"},{"first":"Ottis","last":"Powlowski","email":"Ottis.Powlowski@felipa.info","address":"564 Ruecker Harbors","created":"February 26, 2016","balance":"$7,316.92"},{"first":"Ilene","last":"Wiza","email":"Ilene.Wiza@art.biz","address":"176 Nitzsche Isle","created":"March 1, 2023","balance":"$1,551.53"},{"first":"Mikayla","last":"Smitham","email":"Mikayla.Smitham@toney.biz","address":"765 Alessia Rapids","created":"December 27, 2020","balance":"$8,065.87"},{"first":"Don","last":"Smith","email":"magentarabbit27@gmail.com","address":"09634 Langworth Burgs","created":"April 21, 2018","balance":"$179.04"},{"first":"Sonya","last":"Smith","email":"Sonya.Smith@sammy.info","address":"584 Samanta Drive","created":"July 7, 2023","balance":"$5,993.75"},{"first":"Berta","last":"Mraz","email":"ivoryfrog65@gmail.com","address":"153 Trever Flats","created":"November 16, 2021","balance":"$2,659.58"},{"first":"Emie","last":"Rempel","email":"Emie.Rempel@julien.net","address":"841 Aleen Dale","created":"January 26, 2016","balance":"$5,934.47"},{"first":"Henry","last":"Blanda","email":"blacksquirrel87@gmail.com","address":"601 Borer Flats","created":"April 20, 2016","balance":"$1,509.67"},{"first":"Adela","last":"Larkin","email":"turquoiseturtle44@gmail.com","address":"476 Alysson Keys","created":"May 2, 2016","balance":"$5,291.01"},{"first":"Theo","last":"Klein","email":"Theo.Klein@esther.com","address":"2529 Coty Extensions","created":"August 20, 2022","balance":"$290.39"},{"first":"Jefferey","last":"Streich","email":"orchidrabbit30@gmail.com","address":"87592 Bayer Junctions","created":"October 20, 2016","balance":"$9,518.01"},{"first":"Kailey","last":"Prosacco","email":"Kailey.Prosacco@keyon.name","address":"560 Adell Manor","created":"May 21, 2020","balance":"$7,433.87"},{"first":"Alfreda","last":"Pollich","email":"Alfreda.Pollich@katharina.com","address":"8984 Jazlyn Tunnel","created":"September 14, 2023","balance":"$8,582.11"},{"first":"Camylle","last":"Pagac","email":"Camylle.Pagac@adrien.biz","address":"58830 Kohler Valley","created":"September 22, 2017","balance":"$2,035.91"},{"first":"Fernando","last":"OKon","email":"Fernando.OKon@ansel.net","address":"36053 Makenna Knolls","created":"January 16, 2023","balance":"$7,496.45"},{"first":"Eladio","last":"Emard","email":"Eladio.Emard@sammy.org","address":"2416 Consuelo Brooks","created":"July 15, 2016","balance":"$1,673.86"},{"first":"Clifford","last":"Hamill","email":"bluewolf30@gmail.com","address":"582 Quitzon Rapids","created":"July 13, 2021","balance":"$6,798.27"},{"first":"Lura","last":"Schuppe","email":"bluefrog51@gmail.com","address":"74857 Gutmann Point","created":"November 29, 2020","balance":"$7,828.34"},{"first":"Alexys","last":"Collier","email":"Alexys.Collier@floyd.biz","address":"7079 Katrina Islands","created":"November 15, 2014","balance":"$1,671.28"},{"first":"Beau","last":"Stark","email":"Beau.Stark@dane.net","address":"594 Raymond Bridge","created":"December 23, 2021","balance":"$1,545.88"},{"first":"Davin","last":"Heaney","email":"tanrabbit28@gmail.com","address":"72745 Mariane Route","created":"June 5, 2017","balance":"$8,366.03"},{"first":"Lisandro","last":"DAmore","email":"Lisandro.DAmore@ibrahim.org","address":"8348 Felipe Ways","created":"September 10, 2018","balance":"$9,191.20"},{"first":"Dedric","last":"Gislason","email":"Dedric.Gislason@dante.org","address":"5882 Goldner Prairie","created":"August 14, 2018","balance":"$2,129.40"},{"first":"Elva","last":"Ferry","email":"Elva.Ferry@oda.biz","address":"096 Oberbrunner Ports","created":"June 14, 2021","balance":"$3,377.42"},{"first":"Calista","last":"Flatley","email":"Calista.Flatley@abner.net","address":"745 Wunsch Roads","created":"September 24, 2023","balance":"$3,269.18"},{"first":"Nia","last":"Hegmann","email":"Nia.Hegmann@loraine.com","address":"1113 Easton Valley","created":"January 3, 2015","balance":"$58.25"},{"first":"Dawn","last":"Quitzon","email":"fuchsiagiraffe40@gmail.com","address":"807 Reichert Stravenue","created":"July 6, 2016","balance":"$6,934.06"},{"first":"Camylle","last":"Streich","email":"Camylle.Streich@irma.net","address":"091 Effertz Radial","created":"March 9, 2019","balance":"$5,115.30"},{"first":"Lorna","last":"Erdman","email":"Lorna.Erdman@phoebe.com","address":"96606 Lydia Fork","created":"November 16, 2019","balance":"$8,347.33"},{"first":"Abner","last":"Gleason","email":"greenturtle03@gmail.com","address":"37976 Gail Trail","created":"April 11, 2021","balance":"$3,318.92"},{"first":"Audreanne","last":"Haag","email":"Audreanne.Haag@dora.info","address":"759 Luettgen Valleys","created":"November 10, 2016","balance":"$7,854.83"},{"first":"Elinore","last":"Pfeffer","email":"Elinore.Pfeffer@amanda.name","address":"310 Swift Trail","created":"November 29, 2020","balance":"$4,575.51"},{"first":"Jean","last":"Von","email":"Jean.Von@jarrell.name","address":"2282 Casimer Throughway","created":"October 31, 2016","balance":"$7,233.36"},{"first":"Jamie","last":"Harris","email":"cyanturtle05@gmail.com","address":"993 Shanahan Land","created":"August 5, 2023","balance":"$4,004.01"},{"first":"Green","last":"Murray","email":"Green.Murray@marlen.net","address":"926 VonRueden Loop","created":"December 28, 2015","balance":"$3,090.61"},{"first":"Lucious","last":"White","email":"maroonwolf90@gmail.com","address":"295 Delfina Square","created":"December 3, 2017","balance":"$4,794.50"},{"first":"Emmie","last":"Ratke","email":"yellowturtle38@gmail.com","address":"9824 Carroll Trail","created":"October 18, 2019","balance":"$7,052.59"},{"first":"Halle","last":"Grady","email":"bluewolf54@gmail.com","address":"4610 Miller Plaza","created":"December 15, 2017","balance":"$3,607.09"},{"first":"Rylan","last":"Pouros","email":"Rylan.Pouros@royce.com","address":"8369 Schuppe Extensions","created":"February 15, 2023","balance":"$6,908.00"},{"first":"Irma","last":"Spinka","email":"plumrabbit76@gmail.com","address":"2132 Daphney Fort","created":"July 2, 2021","balance":"$2,113.22"},{"first":"Torrey","last":"Tillman","email":"Torrey.Tillman@jairo.com","address":"30870 Leffler Motorway","created":"October 31, 2015","balance":"$8,437.88"},{"first":"Lawson","last":"Quitzon","email":"Lawson.Quitzon@amelia.org","address":"558 Bogisich Causeway","created":"December 11, 2023","balance":"$5,487.51"},{"first":"Cary","last":"Glover","email":"silvergiraffe54@gmail.com","address":"388 Dereck Cliff","created":"June 7, 2015","balance":"$1,597.34"},{"first":"Arvel","last":"Kohler","email":"tangiraffe45@gmail.com","address":"443 Stanton Pines","created":"July 31, 2016","balance":"$5,857.68"},{"first":"Herbert","last":"Johns","email":"Herbert.Johns@zachariah.name","address":"33862 Wuckert Shores","created":"February 6, 2015","balance":"$7,296.36"},{"first":"Kathryne","last":"Bartoletti","email":"plumsquirrel01@gmail.com","address":"69886 Durgan Tunnel","created":"March 12, 2016","balance":"$2,219.68"},{"first":"Vilma","last":"Hayes","email":"Vilma.Hayes@mohammed.biz","address":"35155 Adriel Highway","created":"May 3, 2020","balance":"$486.59"},{"first":"Meredith","last":"Pouros","email":"skyblueturtle73@gmail.com","address":"9972 Lakin Squares","created":"October 3, 2017","balance":"$9,315.14"},{"first":"Missouri","last":"Doyle","email":"Missouri.Doyle@josephine.name","address":"929 Alvera Wells","created":"December 14, 2016","balance":"$1,745.77"},{"first":"Giovanny","last":"Fay","email":"Giovanny.Fay@isabella.com","address":"333 Oliver Mall","created":"August 4, 2020","balance":"$502.66"},{"first":"Kara","last":"Schulist","email":"indigofrog64@gmail.com","address":"201 Durgan Bypass","created":"March 27, 2022","balance":"$8,503.72"}]',
      ),
      { status: 202, statusText: 'Mocked status' },
    )
  ),
);
var Mz = async () => QH(qz).listen();
var Qde = async () => {
  await Mz();
  let e = (0, Hz.default)({ logger: !0 }),
    t = fP.readFileSync('./dist/client.js');
  e.get('/client.js', async (n, i) => {
    i.header('content-type', 'text/javascript').send(t);
  });
  let r = fP.readFileSync('./dist/mockServiceWorker.js');
  e.get('/mockServiceWorker.js', async (n, i) => {
    i.header('content-type', 'text/javascript').send(r);
  }),
    e.get('/', async (n, i) => {
      i.header('content-type', 'text/html').send(
        lg(
          [
            '<h1>Welcome to the People Directory</h1><p>Visit <a href="/appWithSSRData">/appWithSSRData</a> to see data loaded on the server</p><p>Visit <a href="/appWithoutSSRData">/appWithoutSSRData</a> to see data loaded on the client</p>',
          ],
          !1,
        ),
      );
    }),
    e.get('/appWithSSRData', async (n, i) => {
      JR(), i.header('content-type', 'text/html').send(lg(await zT(!0)));
    }),
    e.get('/appWithoutSSRData', async (n, i) => {
      JR(), i.header('content-type', 'text/html').send(lg(await zT(!1)));
    }),
    e.listen({ port: 3e3 }, (n, i) => {
      n && (e.log.error(n), process.exit(1)),
        console.log(`Server is now listening on ${i}`);
    });
};
Qde();
/*! Bundled license information:

forwarded/index.js:
  (*!
   * forwarded
   * Copyright(c) 2014-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

proxy-addr/index.js:
  (*!
   * proxy-addr
   * Copyright(c) 2014-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)

toad-cache/dist/toad-cache.cjs:
  (**
   * toad-cache
   *
   * @copyright 2024 Igor Savin <kibertoad@gmail.com>
   * @license MIT
   * @version 3.7.0
   *)

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

light-my-request/lib/form-data.js:
  (*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)

react/cjs/react.production.min.js:
  (**
   * @license React
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.node.production.min.js:
  (**
   * @license React
   * react-dom-server-legacy.node.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.node.production.min.js:
  (**
   * @license React
   * react-dom-server.node.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.node.development.js:
  (**
   * @license React
   * react-dom-server-legacy.node.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.node.development.js:
  (**
   * @license React
   * react-dom-server.node.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@bundled-es-modules/statuses/index-esm.js:
  (*! Bundled license information:
  
  statuses/index.js:
    (*!
     * statuses
     * Copyright(c) 2014 Jonathan Ong
     * Copyright(c) 2016 Douglas Christopher Wilson
     * MIT Licensed
     *)
  *)

@bundled-es-modules/cookie/index-esm.js:
  (*! Bundled license information:
  
  cookie/index.js:
    (*!
     * cookie
     * Copyright(c) 2012-2014 Roman Shtylman
     * Copyright(c) 2015 Douglas Christopher Wilson
     * MIT Licensed
     *)
  *)
*/
